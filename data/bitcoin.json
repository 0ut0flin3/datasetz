{"mining setup - What open source miner applications are there?": "\nThe official list is on The Wiki and is constantly being modified since new software shows up fairly often, but here's the quick breakdown:\n\nPoclbm - Python/OpenCL GPU miner (GUI)\nDiabloMiner - Java/OpenCL GPU miner (MAC OS X GUI)\nRPC Miner - remote RPC miner (MAC OS X GUI)\nPhoenix miner - miner\nCpu Miner - miner\nUfasoft miner - miner\nPyminer - Python miner, reference implementation\nRemote miner - mining pool software\nOpen Source FGPA Bitcoin Miner - a miner that makes use of an FPGA Board\n\nPoclbm and Phoenix are probably the most popular (links go to the sources) though that's based more on my opinion than any facts or studies. In either case, both should shed some light on the mining process.\n", "Best GPUs for Mining": "\nAccording to https://en.bitcoin.it/wiki/Mining_hardware_comparison the best GPU in regards to power consumption is the 5970, the tricky part is finding one of those for sale.\n", "Is mining still profitable?": "\nThere are two factors that define the profitability of mining, and they tend to change somewhat independently of one another or at least lag one another quite significantly.\nThe first factor is difficulty. Blocks should be generated every 10 minutes on average, regardless of the amount of processing power available to the network, so difficulty adjusts how hard it is to find the solution to a block. This factor is based solely on the total hashrate of the bitcoin network.\nThe second factor is price. Assuming we're speaking of profitability in terms of US Dollars or other fiat currencies, we have to account for our earnings in the same currency that was used to pay for our costs. To my knowledge there is not (yet) a power company that will allow you to pay your electric bill in bitcoins.\nFrom personal experience I can say that my dedicated rigs consume about $4 worth of electricity to produce 1 BTC and if I'm lucky enough to be average my hardware will have a long enough MTBF (mean time between failures) that its cost amortized over the life of the machine will perhaps bring that up to $4.50 or $5 per coin. At today's rate of $8.69 per BTC, it is still profitable though just barely.\nCPU mining cannot produce at a high enough efficiency to be worth the electricity cost, and the same can likely be said for less efficient GPUs. Of course some folks don't pay per kilowatt-hour for electricity usage and for these folks ANY kind of mining is still profitable.\nThere are also a few folks on the forums selling FPGA boards which, though quite expensive up front, consume only 10-15% of the electricity of a comparable GPU. A single Xilinx Spartan6 board, for example, produces 100 MH/s at a little under 7 watts, compared to a Radeon HD 5830 which produces around 200 MH/s (without overclocking) at about 108 watts (54 watts per 100 MH/s).\n", "development - How do I develop mobile applications for Bitcoin?": "\nCurrently there are only a few mobile apps that use the bitcoin protocol itself. Most communicate with a bitcoin client on a remote machine using the JSON API.\nThose few that do, rely on BitcoinJ which is a \"selfish\" implementation of bitcoin that runs in Java (handily the native language for Android apps). It's got a few key modifications that bring its overhead low enough to run on embedded devices, most notably it does not download all blocks in the block-chain, only those blocks which relate to addresses in its own wallet (hence \"selfish\" client).\nEither method works, and either is as valid a starting point as the other, given the current state of bitcoin's mobile development.\n", "transactions - What happens when someone sends bitcoin to my wallet?": "\nIt's actually quite simple. Your wallet is a collection of private keys, each identified by an ID. When someone sends you bitcoins, those are just assigned to one of those private keys. \nThe information about which key has how many bitcoins is stored in the bitcoin network itself, ie in the database each client has.\nNow if you want to use the bitcoins which belong to one specific key, you need this key to sign the transaction.\nSo no, you don't need to be online to receive a transaction. You can also restore an older backup, as long as you haven't created any new keys in the meantime. If you have created new keys, it all depends on your luck - was the transaction sent to a new or an old key?\nAnd if it gets corrupted before you make a backup you are SOL - nobody has the correct private key then.\n", "adoption - Effect on economy if Bitcoin was widely adopted": "\nGDP would accelerate because of less transactional friction.\n", "What are some good resources for understanding Bitcoin?": "\nI wrote the \"New to Bitcoin? Start here!\" post at bitcointalk.org.\nOrigamiRobot, I highly recommend that you read that introduction before proceeding on to anything else, especially the original whitepaper, which is incredibly unapproachable for the average person.  After you finish it, come here and ask about the things that still confuse you--Bitcoin is very complicated, and it can take a while to wrap your head around it!\n", "mining pools - How can one embed custom data in block headers?": "\nWhen you generate a block, the generation transaction (the one that creates new coins) has an attribute called coinbase. It's a special value you can put anything you want in to make the block unpredictable to others (and this is good).\nSo, naturally, you can put text in this attribute, although most just put mining-related information that is not human-readable (nonce and extra-nonce).\nYou can read this coinbase by using a patched bitcoin node that can dump blocks, for example with the \"dumpblock\" or \"getblockbyhash\" patches.\nOr you can just print every string in the blockchain database directly :\nstrings -n 20 blk0001.dat\nExample for the 1st block:\nCoinbase: 04ffff001d0104455468652054696d65732030332f4a616e2f32303039204368616e63656c6c6f72206f6e206272696e6b206f66207365636f6e64206261696c6f757420666f722062616e6b73\nASCII-translation:\n\u1763\u1763\u1763\u1763\u1763\u1763\u1763EThe Times 03/Jan/2009 Chancellor on brink of second bailout for banks\nThis is what is used by the Eligius pool ; it puts prayers in this field.\n", "security - Is it possible to brute force bitcoin address creation in order to steal money?": "\nIt may be \"theoretically\" possible, but in reality it's unlikely to be achieved - As in counting the number of atoms in an office building unlikely.\nBitcoin addresses are actually the 256-bit SHA hash of an ECDSA public key, so any vulnerabilities in those algorithms would constitute a vulnerability in bitcoin itself. Realistically, however, breaking this level of encryption requires a huge amount of processing power. Coincidentally it requires precisely the same kind of processing power that bitcoin mining requires and in almost every scenario it would be massively more profitable to mine than to hack.\nEdit: It's actually RIPEMD-160(SHA-256(public key)) as opposed to just SHA-256(public key) as I originally mentioned, so it's a 160-bit hash of a 256-bit hash of a public key. While the target keyspace (160 bits) is smaller thanks to this final step, it's also an additional computation that a would-be hacker must make. While the additional computational complexity doesn't even come close to canceling out the removal of 96 bits of keyspace, it should be noted that finding a collision in a 160-bit keyspace is still incredibly difficult and time consuming. More importantly, it is more difficult and time consuming than actually mining the same number of coins would be, thus making it highly unlikely anyone would even attempt such an attack - even if the equipment to make such an attack plausible in a meaningfully small span of time existed.\n", "backup - How can I keep my wallet secure?": "\nThe \"offline wallet\" method described by David Perry is a good way to securely generate a bitcoin address/wallet.dat but in order to be secure from both loss and theft the first thing you will want to do is encrypt that wallet, and then make many different copies of it.\nOne easy way to do this is using the program TrueCrypt as explained here.  To summarise the contents of the link, you will use the default options in the software to create an encrypted volume, then move your \"wallet.dat\" file into it as soon as you create it on the trusted, offline computer.  This will create an encrypted copy that can be placed on a thumbdrive and then saved in multiple locations such as gmail, dropbox, a physical safe, etc.\nI would also highly recommend testing the file once with a small amount before copying any substantial sum of bitcoins to your newly created address.  If you are satisfied with both the test and all the precautions you have taken, then transfer the rest.  You can keep your wallet secure by not accessing it frequently, so this should be used as a savings wallet and not for regular transactions.  Hope this helps!  Also, you can find an excellent overview of good wallet practices and security methods at https://en.bitcoin.it/wiki/Securing_your_wallet\n", "fraud - Is Bitcoin a scam?": "\nIt's important to differentiate between a scam, where a person or entity stands to profit fraudulently from others, and a high-risk investing decision, where there is potential for a person to lose significant amounts of money without being defrauded by anyone.  With that clarification, Bitcoin is clearly not a scam.  Like any other currency, Bitcoin is designed to be used as money, not as an investment.\nA Ponzi scheme is a type of confidence scam where people who think they are earning unusually high returns on an investment are actually being paid from their own money and that of later investors.   If investors try and withdraw their original investment from the Ponzi operator, the scheme collapses because no actual profits exist and there is not enough money to return the deposited amounts.  Alternatively the Ponzi operator may simply leave and take the investors' money with them.\nSimilarly, a pyramid scheme is a type of confidence scam where people who \"enroll\" by paying a certain amount of money are made to believe they can make a large return on their investment by recruiting other people and receiving some portion of their enrollment fee.  The scheme collapses because it requires exponential growth, so it quickly runs out of new people to enroll.  The person starting the pyramid scam, who didn't have to pay an enrollment fee, makes money off of all their referrals; while the people at the bottom parts of the pyramid, who cannot find anyone new to refer, are left with no return.\nUnlike either of these situations, Bitcoin has no person \"at the top\" who collects money paid for bitcoins, or has to pay out when bitcoins are sold.  Neither is there any kind of scheme in Bitcoin to harvest money off of unsuspecting people in complicated ways.  Instead, bitcoins are bought and sold on public exchanges amongst members of the general public who must all obey the same rules.  If someone has told you that Bitcoin is a moneymaking scheme, they have misconstrued it--bitcoins follow the same economic model as any other finite commodity and over time will tend to approach a price that reflects the value people ascribe to being able to use them.  People who have made money off of buying and/or selling bitcoins are either lucky or have correctly predicted an increase in demand for them.  People who earn bitcoins through \"mining\" are being paid for verifying and securing network transactions in a highly competitive market.  In neither case is any kind of fraudulent activity or confidence scam happening.\nDespite the fact that Bitcoin itself is not a scam, caution is strongly advised when entering into transactions with untrusted entities.  As with any other valuable commodity, there are many people willing to separate your bitcoins from you in sneaky or fraudulent ways.  Remember that for all practical purposes Bitcoin works just like cash.  Bitcoin Ponzi and pyramid schemes do exist and if you fall prey to them you will suffer the consequences.\nIn addition, bitcoins are a very new and unproven type of money.  Because their value depends on how widely they are accepted, they are susceptible to the same types of economic bubbles as any other commodity that is surging in popularity. The Bitcoin software is still in beta, and bitcoins should be considered \"high-risk\" from a financial perspective.  You should not invest money into bitcoins or Bitcoin-related technologies unless you can afford to lose it!  Even firm believers in Bitcoin tend to think it will take a while for the value of bitcoins to stabilise, and no one knows at what value that stabilisation might occur.  Trade and transact safely!\n", "academic research - Can bitcoin transaction data be used to study markets?": "\nThere are no academic papers on Bitcoin market behavior.\nIf Bitcoin or another peer-to-peer currency ever develops a significant closed economy, then it would be a rich source of information on the behavior of markets and economies, as the transaction timing, value and locations (for both the sender and receiver in a transaction) of Bitcoin transactions is publicly broadcasted -and in the case of timing and value, already being recorded in the block chain. \nFurthermore, information about the full Bitcoin transaction history of each pseudonymous individual can be deduced through network analysis techniques.\nWhile Bitcoin is reserved for niche use and doesn't form a closed economy though, the data from the transaction history is of limited use for studying real world market and economic behavior.\nAlso, in the future the visibility of Bitcoin transaction data could be reduced if many participants in the Bitcoin economy begin to rely on private layers built on top of the Bitcoin network to conduct their transactions through, which is likely to happen given the implications for privacy that visible transactions create.\n", "privacy - How anonymous are Bitcoin transactions?": "\nTechnically the appropriate term is \"pseudonymous\" - imagine that your bitcoin address is like an email address or an online alias: how hard it is to trace to your actions depend largely on what you do with it.\nThere is, for example, a bitcoin address in my forum signature that would obviously be VERY traceable back to me. On the other hand if I install the client on a separate system which only connects to the internet through TOR and obtain my bitcoins by mining them from a pool like Eligius (no accounts/email necessary, they only ask for a bitcoin address) then it would be very difficult indeed to trace those funds to me.\nAnd of course there are shades of gray in-between. As I said, think of it as being an email address and then consider how your actions with that bitcoin address can be tied to you. It's difficult but possible to make truly anonymous bitcoin transactions.\n", "blockchain - Is there a way to use the block chain as entropy in random number generator?": "\nThe Bitcoin Lottery used an SHA256 hash of the two most recent blocks to generate random data and to my recollection there were not too many complaints about that method they chose. In any case it's only good for 256 bits of questionably random data every 10 minutes (20 if you don't reuse blocks) so there are probably better entropy sources, such as the setup they've built over at random.org\n", "linux - Is CPU mining even worth it?": "\nFor the amount of time you would spend setting up a CPU miner, at minimum wage in the US you would be at a loss.\nEven GPU mining is barely profitable for most people right now. It would definitely be more profitable to speculate, and even more profitable to operate a Bitcoin business. There are a great deal of people who want to use their Bitcoins for purchases.\nAt the current exchange of under $10:1BTC, the most efficient graphics cards are taking months to pay off their initial investment (with free electricity).\n", "Can the price of Bitcoin ever be stable to the USD?": "\nNo currencies are stable unless they have a central bank making it artificially stabile. When that is said, the stability will largely be depending on the size of the economy. I do not, however know exactly how to measure the size of the Bitcoin economy, but I assume it should be measured in terms of the total amount sent between people or companies over a period of time (which would be similar to the measurement of GDP). \n", "weaknesses - Will deflation destroy Bitcoin?": "\nThere are two potential ways in which monetary deflation can impact a currency:\n1.  Usability\nMost modern currencies have a minimum unit, such as the penny in the United States, or the yen in Japan.  If these currencies existed in only finite quantities, then as the economy grew and/or physical money was lost, there might eventually be too few of these units in circulation to allow normal commerce.  Imagine if, for example, the U.S. dollar became so rare that you could buy a car with a single U.S. penny.  How would you buy a loaf of bread?\nBitcoin, however, does not have this problem because unlike the physical currencies of most countries, bitcoins are infinitely divisible.  Even if only one bitcoin remained, it would be sufficient to run a substantial economy on, based on the ability to use tiny fractions of it like the Satoshi.  If even the Satoshi were to become too highly valued/unavailable for commerce, the Bitcoin protocol could be updated to allow even smaller denominations.  So the usability of bitcoins is safe from the effects of deflation.\n2. Broader economic consequences from deflation\nMany economists believe that deflation is bad for an economy because people will be less likely to invest their money if they can \"earn\" increased value simply by holding on to it.  Why buy something today, the argument goes, if you could buy it for half as much in a few months time?  Also, taking out loans becomes very difficult, because to be practical they have to have negative interest rates and then why would anyone loan out money in the first place?\nHowever, there is good reason to believe that deflation might not have such a negative effect on Bitcoin.  For one, Bitcoin is unlikely to become the only currency in the world economy, so investments, loans, etc. can simply be denominated in another currency.  But even more importantly there are several concrete examples from history of strictly deflationary currencies.\nFor example, the Iraqi \"Swiss\" dinar was a currency that ceased being printed after the first Gulf War, and was left in use only by the Kurdish regions of the country.  With a finite number of \"Swiss\" dinars in existence, and some being lost or damaged over time, this left the currency in precisely the same state as Bitcoin.  Since it was no longer backed by a government, many economists expected the currency and its economy to collapse.  Instead, the Kurdish economy continued largely as normal for 13 years, and the \"Swiss\" dinar even appreciated against the \"Saddam\" dinar that was meant to replace it.\nRick Falkvinge also raises another excellent point regarding deflationary economies.  If, as economists expect, people would decline to buy something today as opposed to next year for half price, then it should be the case that no one ever buys computers, right?  But in fact, the computer industry thrives despite this continued trend of \"whatever something costs today, it will cost a fraction of that within a few years\".\nUltimately, this is a question for economists to duke out, and you can find more information about how different economic schools approach the problem here.  Suffice it to say, this cannot be considered a crippling fault in Bitcoin as a technology.\n", "transactions - How is it possible to launder bitcoins?": "\nSay I received 10 bitcoins on a Bitcoin address I publicly advertise for donations. Anyone looking at the blockchain can put that address in a search engine and find me. Now say I want to use those 10 bitcoins to buy drugs. If the drug dealer's bitcoins are traced, they'll point right back to me.\nNow I can create a lot of accounts if I want. And I can pass the 10 bitcoins I received through those accounts and then to the drug dealer. But likely because those accounts aren't used anywhere else, the trail would still lead right from the drug dealer to me.\nNow suppose I put my 10 bitcoins in an account created just for me by a Bitcoin laundering service. And you and Fred do the same thing. Then the service sends my coins to Fred and your coins to me. Then I spend the coins I got on drugs. Now the trail looks exactly the same as in the non-laundering example, except the  trail leads straight to you instead of me -- a pretty good deal for me, not so much for you.\n", "What are the differences between Bitcoin and other crypto-currencies?": "\nUntil a careful analysis is performed, I think most crypto currencies are very similar in all properties except one - adoption.\nBitcoin has the largest hash rate, participating nodes, accepting sites, and people going over the code and protocol.\nWhile alternative currencies can gain more hash rate, especially if effective forms of merged mining are developed and adopted, it remains to be seen if they gain the same adoption (sites accepting them), and developer base (strong developer community).\n(See this post about merged Namecoin/Bitcoin mining)\nEdit - One notable exception to this is Namecoin, which does offer unique features making it suitable to use as a DNS or general name registrar.\n", "economic theory - Is it possible to estimate the Gini coefficient for Bitcoins and if the trend is increasing or decreasing?": "\nThe owner of the Bitcoinica site has released some data from his site which may reflect the wider bitcoin economy. He gives a value for the Gini coefficient of:\n\nGini Coefficient = 0.87709\n\nThe Bitcoin Report site also releases a regular report on the number of bitcoins in the top 100 wallets. Although one person can own multiple wallets or a wallet of a exchange (e.g. MtGox) may contain coins with multiple owners so it is impossible to know for certain the real wealth distribution but it may have some correlation.\nThe Bitcoin Trader blog used the Bitcoin report data on the top 100 wallets and compared the data from May 1st and Oct. 29th 2011.\n.\nFrom the Bitcoin Trader:\n\nThe distribution of coins among the top 100 has evened out, as can be seen in the chart.\nEven though 1,310,000 Bitcoins have been mined since May 1st, the top 100 have still managed to increase their relative wealth, and now hold 29.8% of all the Bitcoins ever created!\n\nWhile  certainly not perfect these type of statistics may be give some indication of the trends in the wealth distribution in the bitcoin economy.\n", "security - Is Bitcoin future-proof?": "\nBitCoin is futureproof, because in the event that processing power (or more relevantly, mathematical advances) make its algorithms weak or obsolete, the protocol can simply be upgraded.\nCopied from Stack Overflow:\nUpgrades to the Bitcoin protocol that break compatibility are implementable by social mechanisms but not by any technical process, which is by design.  In order to change the hashing or signing algorithms in the event that new techniques weaken them, the following process could be followed:\n\nAs soon as the existing algorithms are discovered to be weakened, have a trusted entity sign a copy of the existing blockchain, marking it as authoritative via a non-weakened algorithm.\nCreate a new protocol that 'respects' the existing blockchain (which contains all records of bitcoin ownership), and allows for an upgrade path to exist indefinitely.\nImplement the new protocol dormantly in one or more clients, with a designated block number to switch over, and the trusted version of the blockchain hardcoded in.\nConvince the vast majority of Bitcoin users that your trusted entity is trustworthy, and to switch to the new client(s) before the designated block is mined.  There really is no equilibrium allowing both versions to coexist, since people who own bitcoins will be able to spend them in both communities.  Unless the modified client achieves near-universal adoption before the designated block is mined, users will switch back before the change goes live.\n\n", "mining reward - How do you obtain bitcoins?": "\nExchanges\nYou can use an online exchange such as BitStamp for US dollars, as well as many others for dollars, and other currencies.\nSee the wiki for a full list of ways to buy bitcoins.\nBrokerage Services\nBrokerage services allow you to buy or sell directly from them instead of relying on a third party to offer the trade with the exchange just taking a cut. One such service is Coinbase.\nLocal / In Person\nYou can use tools such as localbitcoins.com to find people near you who will trade cash for bitcoins. (Note, however, that localbitcoins strongly encourages you to use their service despite the fact bitcoin does not require using a 3rd party to do in person transactions)\nIRC and Remote Trades\nYou can use bitcoin-otc's web of trust system to improve the likelihood of a successful long distance trade.  This could help you do trades with people you find on IRC channels or Bitcoin Forum.\nHardware Mining\nMining bitcoins is very technical, and not for many people.  Unless you already have the hardware and technical skill to set it up I would not recommend mining as a way to get bitcoins.\nAccept Bitcoin\nI believe by far the best way to get bitcoins is to provide goods and services for bitcoin.  This stimulates the bitcoin economy which in turn makes the bitcoins you receive more valuable.\n", "bitcoin economy - Will forks and alternative block chains cause hyper-inflation of decentralized digital money?": "\nIt depends entirely how much those alternate block-chains get utilized. In the recent examples of ixcoin and i0coin, a small portion of btc miners and users switched over, sold their stash and went right back to bitcoin. It's essentially a case of network effect - whichever block-chain has the most users will be the most attractive to new users, and those new users themselves contribute to that effect. Bitcoin is by no means beyond the \"tipping point\" where forks can no longer threaten it, but short of a fork with some superior feature or another it remains the preferred fork and probably will for some time. Even namecoin hasn't touched bitcoin's user-base much despite having a definitive use built into the protocol.\n", "What's the difference between an ASIC and an FPGA? Which is better for mining?": "\nAn FPGA is cheap in quantity one ($100-$300) but expensive in quantity 1,000 ($50,000-$3,000,000). They can mine decently (200MHash/s or so), but are not cost effective yet. (They do, however, consume much less power than GPUs.)\nAn ASIC is expensive in quantity one ($2,000,000) but cheap in quantity 100,000 ($5,000,000). They can mine unbelievably well (perhaps 1GHash/s), but nobody (as far as we know) has gone to the expense of making one for bitcoin mining yet.\n", "money supply - Will all 21 million units be completely mined one day?": "\nTheoretically yes, but that moment is so far in the future it is likely that some other events such as new currency technology will surpass bitcoins.\nHowever, mining will not stop.  Mining is the security backbone of bitcoin, and it will continue because it will still be profitable to mine.  Miners will be paid fees from existing bitcoins with every transaction instead of a reward of newly created bitcoins.\n", "terminology - What is a 'Satoshi'?": "\nA Satoshi is the smallest fraction of a Bitcoin that can currently be sent: 0.00000001 BTC, that is, a hundredth of a millionth BTC. In the future, however, the protocol may be updated to allow further subdivisions, should they be needed.\nFurther examples of units\n\n1 BTC = 1,000 mBTC (millibitcoin)\n1 BTC = 1,000,000 \u03bcBTC (microbitcoin)\n1 BTC = 100,000,000 Satoshis\n1 mBTC = 100,000 Satoshis\n1 \u03bcBTC (microbitcoin) = 100 Satoshis\n\n", "alternatives - Is there an easy way to diversify your Bitcoin holding among the other popular forks?": "\nSidestepping the comments about whether or not Namecoin is a fork or a separate project or whether bitcoin is an investment or a currency, I'll address the direct question asked: Is there a way to easily and automatically purchase several crypto-currencies at once? Not at present time, no.\nBitcoin (and its forks) is a very young project, though, and I'm sure there was a stock exchange before DJIA or S&P existed. Give us time and it's very likely that something of the sort will be created - especially now that the demand has been made publicly known.\n", "shrinking money supply - What happens to my bitcoins if lose my wallet file e.g. I suffer data loss and my computer is unrecoverable?": "\nIf a wallet file is truly lost with zero ability to recover it, then the coins it contained are lost forever.  Think of it as cash left in a burning house.  \nBe sure to periodically backup your wallet.dat file.  It is best to also encrypt those backups lest they be compromised giving someone else access to your wallet.\n", "mining profitability - How much Bitcoin will I mine right now with hardware X?": "\nGo to http://bitminter.com/test and click the \"test start\" button. If you have Java installed the miner should launch. Click \"engine start\" on your GPU(s) to start mining and the GUI will show how many bitcoins per day you will make (on average).\nNote that you are actively mining in a pool without getting paid. This test page launches a version of the miner which is only meant to be used for a short time for testing.\nUpdate for 2015: CPU and GPU mining are both long dead. When you buy ASIC mining hardware you will know its hashrate before you buy. Don't buy if you don't. Google \"bitcoin mining calculator\", input your hashrate, and it will tell you how much you can earn right now, on average. Note that the difficulty will change in the future so your earnings will not stay the same. Also note that with most pools actual earnings vary with luck. Finally, avoid the typical newbie mistake of confusing TH/s and GH/s. 1 TH/s = 1000 GH/s.\n", "Is there an efficient way to exploit arbitrages between the different exchanges?": "\nYes.  Simply hold accounts on multiple exchanges.  In the account you should try to keep your holdings at 50% bitcoin and 50% other currency.  \nWhen there is an arbitrage opportunity you can execute \"complimentary\" transactions on both exchanges.  On one you buy the difference, and the other you sell the difference.  You can then equalize the accounts by transferring bitcoins between them, or withdrawing profits.  Don't forget to account for transaction fees on each exchange.\nIf you are so skilled most exchanges have APIs that would allow you to script interfaces for doing this automatically.  I recommend against accepting other people's scripts to do this since it gives the script access to your funds and it would be trivial for them to write the script to transfer your funds to them.\n", "divisibility - Will we ever need smaller amounts of Bitcoin than a Satoshi?": "\nIt is very unlikely that anything smaller than a Satoshi will be needed. See the math below.\nAfter a little math provoked by a comment... it's unlikely to ever need a smaller than a satoshi (1/100,000,00 of a BTC).  I calculated about 52500 satoshi's to $1 if all bitcoins have been mined and they are worth about $1900 each.\nSo even up to $9975000 per bitcoin still puts 1 satoshi at 1 cent.\n", "mining setup - How to mine in Ubuntu?": "\nGUIminer can be run on linux, although the process (described in the official thread) is somewhat complicated.  To summarise that post, you will need to:\n\nGet the source code from GitHub:\ngit clone https://github.com/Kiv/poclbm\nInstall OpenCL drivers and PyOpenCL.\nInstall wxPython:\nsudo apt-get install python-wxtools\nRun guiminer.py:\npython guiminer.py\n\nNote that (at least to use the poclbm backend) no compiling is necessary since GUIminer is written in python.  But I can still understand if you find that process a little daunting, since I don't know your level of technological familiarity with these sorts of tasks.\n", "transactions - How can I accept bitcoins on my website?": "\nThere are a number of ways one can go about accepting Bitcoin on a web interface. Keep in mind as you review these options that Bitcoin is still a young technology and many of these options aren't what you'd call \"friendly\" just yet. That said you do have quite a few options depending on your level of expertise and technical requirements:\n\nUse a service like:\n\n\nBitcoinPayFlow\nBitPay\n\nUse an existing shopping cart interface\n\nThere are existing plugins for Ubercart, Magento and many other popular e-commerce platforms. If you are looking to modify an existing site that happens to run on one of these platforms, this may be your best bet. If you've yet to start a site and don't want to write code yourself this may still be your best bet since you can choose your platform prior to implementation.\n\nRoll your own using existing libraries\n\n\nThis is your best bet if you're using a platform that isn't currently supported or if you have difficult integration requirements that cannot be satisfied by existing e-commerce platforms like Magento or Ubercart.\nLanguages:\n\n\nASP.NET/C#\nPHP\nPython\nMany others\n\n\nRoll your own using the JSON API directly\n\n\nThis is only necessary if you are not using one of the half-dozen or so languages that already have pre-written libraries for interfacing with bitcoind. The list of languages may be short, but all of the major industry standards have been covered, so it's unlikely you will have to go this far.\n\n\n", "What is a Mining Pool, what is it good for?": "\nA Mining Pool is a protocol for a group of miners to work together, in order to smooth out their mined coins. A miner working alone would generate a block (= 50 Bitcoin) whenever he is the first to find a correct hash. In practice, this happens quite rarely for a single miner.\nWhen several miners are working together in a pool, their earnings are split among all miners (with the pool usually taking some commission). This guarantees an even spread of earnings over time instead of \"all or nothing\" in solo mining.\nOne disadvantage of a mining pool is its centralicity - most pools today have central nodes that can be DDOSed, and if not configured accordingly when a DDOS happens the miner will just sit idly instead of reverting to a different pool or to solo mining.\n", "When did merged Namecoin-Bitcoin mining start?": "\nThe switch to merged mining is scheduled for Namecoin block 19200.  At the time of this writing, the Namecoin network is on block 18805, so 395 more blocks need to be solved.\nThe last 29 blocks on the Namecoin block explorer were solved in an average of 108.79 minutes each.  Extrapolating from this, 395 blocks should be solved in just under 30 days, so sometime around September 29th.\n", "charts - Where can I find graphs the values of alternative crypto currencies?": "\nat http://www.ltc-charts.com you can see long term charts for litecoin\n", "What is the current legal status of Bitcoin around the world?": "\nAt this point, the legality of bitcoin remains largely untested. To date, there have been no legal actions brought against any bitcoin exchanges (which would likely be the first place for the legality of bitcoin to be tested, rather than end users) and multiple bitcoin exchanges are seeking legal clarification regarding the jurisdictions they are operating in.\nSome non-profits including the EFF have chosen not to accept bitcoin at this point in time because of untested legal issues.\n", "charts - Where can I find a graph of Bitcoin value vs USD for over 60 days?": "\nBitcoin Charts currently have charts of up to a year in length, as well as \"all data\" charts.\nExample 360 days:\nhttp://bitcoincharts.com/charts/mtgoxUSD#rg360zvztgSzm1g10zm2g25\n", "transactions - What are bitcoin \"confirmations\"?": "\nBitcoin confirmations represent the number of blocks in the block chain that have been accepted by the network since the block that includes the transaction.\nIn simpler terms it represents the difficulty of a double spend attack. With zero confirmations no proof of work has been done, so you can't tell if anyone considers the transaction valid.  Even with a single transaction it is possible for an attacker to pre compute a single block. \nWith zero or even one confirmation a double spend is very possible since the next block that is solved may confirm a different block instead of the one that has the transaction.  That different block my show the coins being spent elsewhere.  The odds that a double spend has occurred gets exponentially smaller with each confirmation.\nAn attacker must match the power of the entire bitcoin network to keep up with block creation so as time goes by it becomes increasingly difficult to forge a transaction.\nIt is generally accepted for most transactions that 6 confirmations represent enough security to assure the transition is valid.\n", "proof of work - What exactly is Mining?": "\nDavid Schwartz's answer is entirely accurate, but all that \"bitspeak\" might be a little intimidating to the average user.  Let me try and put it into more plain language:\nThe way Bitcoin works is that instead of having one central authority who secures and controls the money supply (like most governments do for their national currencies), this work is spread out all across the network.  Most of the heavy lifting for Bitcoin is done by \"miners\".\nMiners collect the transactions on the network (like \"Alice pays Karim 10 bitcoins\" and \"Liam pays Sofia 8.3 bitcoins\") into large bundles called blocks.  These blocks are strung together into one continuous, authoritative record called the block chain, which doesn't permit any conflicting transactions.  This is necessary because without it people would be able to sign the same bitcoins over to two different recipients, like writing cheques for more money than you have in your account.  The block chain lets you know for sure exactly which transactions count and can be trusted (so no bad cheques!).\nThe way Bitcoin makes sure there is only one block chain is by making blocks really hard to produce.  So instead of just being able to make blocks at will, miners have to compute a cryptographic hash of the block that meets certain criteria.  Bitcoiners refer to this process as \"hashing\".  The only way to find a cryptographic hash that's \"good enough to count\" is to try computing a whole bunch of them until you get lucky and find one that works.  This is the \"lottery\" that David Schwartz refers to, because miners who successfully create a block are rewarded some bitcoins according to a preset schedule.  The difficulty of the criteria for the hash is continually adjusted based on how frequently blocks are appearing, so more competition equals more work needed to find a block.  Modern dedicated mining hardware (e.g. ASIC miners) can try trillions of hashes per second, so to be competitive in this race to find hashes miners need specialised hardware, otherwise they will tend to spend more on electricity than they make in the \"lottery\".\nIn addition to the hash criteria, a block needs to contain only valid, non-conflicting transactions.  So the other main task for miners is to carefully validate all the transactions that go into their blocks, otherwise they won't get any reward for their work!\nBecause of all this work, when a Bitcoin client signs on to the network it can trust the block chain that was most difficult to produce (since this is evidently the one that was being worked on by the most miners).  If there was a \"fake\" blockchain competing with the real ones (say, where someone pretends that they didn't actually give Sofia those 8.4 bitcoins and they still have them), the fraudster would have to do as much work as the whole rest of the network to make their block chain look as trustworthy.  So essentially, the intense work that goes into finding blocks through hashing secures the network against fraud.  There is also, of course, some nifty code that figures out how to choose between conflicting transactions; and what to do if two people find valid blocks at the same time.\nOne last thing:  why is it called mining?  In the original analogy, people who performed this essential work were compared to gold miners digging the gold out of the ground so that everyone could use it.  But in reality, Bitcoin \"miners\" are just running computer programs on very specialised hardware that automates the process of securing the network.  To sum up, this software\n\nCollects transactions from the network\nValidates them, and doesn't allow conflicting ones\nPuts them into large bundles called blocks\nComputes cryptographic hashes over and over until if finds one \"good enough to count\"\nThen submits the block to the network, adding it to the block chain and earning a reward in return.\n\nThat's mining in a nutshell!\n", "websites - Is there a solid \"Bitcoin Bank\" yet?": "\nCurrently, the most secure place to store bitcoins online appears to be the exchanges. There is some evidence that Mt. Gox is also hoping to become the default bitcoin bank as they are developing mobile payment applications for instant payment.\nhttp://mtgoxlive.com/mobile/\nThey have also reimbursed the losses of another bitcoin exchange.\nhttps://www.mtgox.com/press_release_20110811.html\nIt is worth pointing out that while Mt Gox was hacked, no one lost any bitcoins that were not reimbursed.\n", "alternatives - What are the perceived advantages of bitcoin as a means of exchange?": "\nThe primary advantages are:\n\nSpeed and price. You can transfer money anywhere in the world within minutes with negligible fees.\nNo central authority. Bitcoin is not dependent on any company or government to maintain its value. \nYou can start accepting bitcoins instantaneously, without setting up merchant accounts, buying credit card processing hardware, etc.\nBitcoins are less traceable than many types of monetary transactions (though not anonymous).\nBitcoins cannot be counterfeited and transactions cannot be reversed.\nNo transaction blocking or account freezing. We have seen governments freeze bank accounts of dissidents and payment processors refuse to process certain types of transactions (wikileaks, online gambling in the US, etc). With bitcoin this is impossible.\nA known amount of inflation. Bitcoin is seen as a store of value because the total number of bitcoins that will ever be created is known in advance and it is impossible to create more than that.\n\n", "reward schedule - How many bitcoins will there eventually be?": "\nEvery block introduces 50 new coins in the system. This quantity (50) halves every 210,000 blocks. So, getting the limit of coins it is possible to generate is quite easy : it's the sum of a geometric series.\n\nAlso, note that this is an upper bound ; the actual quantity will probably be a bit lower due to rounding issues (BTC has a finite number of decimals, 8).\n", "mtgox - Were all funds stolen from Mt. Gox finally returned to all users?": "\nAll the funds that were frozen have been returned. There are two types of funds that were not returned:\n\nSome people claim funds of theirs were transferred out well before the freeze. They claim it must have been by the same person who got the account/password list, but before the big attack. They claim these funds have not been returned.\nPeople who profited unfairly during the flash crash had their transactions undone. Some of them claim they are entitled to their profits. (Some people bought thousands of bitcoins at absurdly low rates.)\n\nI think that people in the second category don't deserve to profit from the theft. As for the people in the first category, there are only two people that I know of who claim this and the amounts involved are quite small. So I think the true answer to your question is most probably \"yes\".\n", "backup - How to configure the official bitcoin client to conveniently use offline wallets?": "\nYou can use symbolic links to your bitcoin data folder or wallet.dat to the usb device location.  You will still have to run bitcoin -rescan when you start the bitcoin client, and you will have to remove the link if you want to run bitcoin without the usb devices.  \nNote, however that you do not need to have an offline wallet online at anytime ever unless you are spending the money out of it.  If you are only sending money to it then it can remain offline.\n", "What is the \"blockchain\"?": "\nThe bitcoin block chain is the record of every bitcoin ever generated and every transfer of bitcoins from one party to another. Each crypto-currency that is based on the same type of technology as bitcoins has its own block chain. When people talk about other blockchains, they mean other currencies based on the same distributed currency / published transaction model (namecoin, Ixcoin, and so on).\nThe phrase \"blockchain technology\" is a reference to this model of published transactions to implement currencies with no central authority.\n", "Are the capabilities of Namecoin a strict superset of Bitcoin?": "\nThe amount of NMC required in order to register a domain name is fixed by the protocol.\nHaving NMC and BTC be separate currencies ensures that the number of BTC needed to register a domain name is set by market pricing mechanisms, not by the hardwired protocol.\nIf we used NMC for buying and selling things other than BTC, it would be like denominating all of our economic activities in terms of domain name registrations (\"this pizza will cost you 0.012 domain name registrations\").  This is a bad idea because the demand for domain names would indirectly influence the price of everything else in the economy.  It's the same reason why the precious metal with the fewest industrial uses is the best one to use as money.\nThis is why I think that any non-Nakamoto-blockchain currency with a significant use other than currency doesn't detract from the value or usefulness of the Nakamoto chain.  The fact that they can be used as something other than a currency makes them really poor currencies.  The fact that it's easier to exchange them for BTC than for fiat actually slightly increases the usefulness of the Nakamoto chain.  But of course all of this applies only if the alternate chain has a credible non-currency use.  So far I don't know of any other than NMC.\n", "windows - Why does poclbm acquire 100% CPU?": "\nThis is a common problem whose cause is not well known. You can try switching miners, switching flags, or switching OpenCL versions. Usually you can find a combination that resolves the problem. I've seen this question asked several times and I've not yet seen a solid answer.\n", "client - What wallet / e-wallet is the most convenient for new casual Bitcoin users?": "\nUpdate: I ceased to be affiliated with the MultiBit project in May 2016. MultiBit is now wholly owned by KeepKey LLC and only the MultiBit HD wallet is supported.\nThe comment below from 2011 refers to the old MultiBit Classic wallet which nobody should be using any more. \nMultiBit HD is its direct replacement and remains a viable Bitcoin wallet (subject to regular updates). You can find migration instructions here.\nFurther, any Bitcoin wallet should only be used in conjunction with an external hardware wallet (KeepKey, Trezor, Ledger etc) due to malware attacks.\n\nMultiBit\nI'm biased since I'm a contributor, but MultiBit provides the following features (at the time of writing):\n\nmultiple platform installers (Windows, MacOS, Linux) \nmanages multiple wallets (current account, savings account, business account etc)\nlocal install (no private keys held on a server somewhere)\n13 languages (more to come)\neasy to use for a beginner (has a YouTube channel)\nbulk public key export to support a merchant solution\nfree and open source under the (very permissive) MIT license\n\nThere is also a wide suite of complimentary products in the pipeline to offer a complete range of supporting products (such as a merchant solution).\n", "governance - Is there a list of core Bitcoin committers?": "\nHere is a list of people who have had commit access to Bitcoin Core. This list can also be found on Bitcointalk and on Reddit (it's the same list just in two different places). All lists are kept up to date and in sync.\nThis list contains the names and usernames of everyone who I can find evidence for ever having commit access to Bitcoin Core, the dates during which they had commit access, sources for all of this information, and reasoning for the access. Those who currently have commit access are in bold.\n\nSatoshi Nakamoto (satoshi, s_nakamoto): 2009-01-03 - 2011-09-13^[1] Creator, first Lead Maintainer\nMartii Malmi (Sirius, sirius_m): 2009-08-30 - 2011-09-13^[1][2]    Creator of first SVN repo\nLaszlo (laszloh) 2010-08-04 - 2011-09-13^[1]    Original OSX Builds and support\nGavin Andresen (gavinandresen): 2010-10-11 - 2016-05-02^[3]    Frequent contributor; later Lead Maintainer\nChris Moore (dooglus): 2011-01-21 - 2011-03-31    Frequent contributor for some time; Still contributes occasionally\nPieter Wuille (sipa): 2011-05-01 - 2022-07-07    Frequent contributor\nJeff Garzik (jgarzik): 2011-05-06 - July/Aug 2016^[4]   Frequent Contributor\nWladimir J van der Laan (laanwj, wumpus): 2011-06-05 - present^[5]    Frequent contributor; later Lead Maintainer\nNils Schneider (tcatm): 2011-09-19 - 2012-05-31    Frequent contributor for some time\nGreg Maxwell (gmaxwell): 2012-02-11 - 2015-12-17    Frequent contributor; Gave up commit access due to toxicity and drama from the community\nJonas Schnelli (jonasschnelli): 2015-11-13 - 2021-10-21^[6]    Frequent contributor; given access after becoming GUI Maintainer; Stepped down for personal reasons.\nMarco Falke (MarcoFalke): 2016-04-13 - present^[7]    Frequent Contributor; given access after becoming QA/Testing Maintainer\nSamuel Dobson (meshcollider): 2018-12-06 - 2021-12-09^[8]    Frequent Contributor: given access after volunteering to be the Wallet Maintainer; Stepped down to focus on his PhD\nMichael Ford (fanquake): 2019-06-08 - present^[9]    Frequent Contributor; given access after being nominated by several other frequent contributors and maintainers to become a maintainer.\nHennadii Stepanov (hebasto): 2021-04-19 - present  Frequent Contributor; given access after volunteering to help maintain the GUI\nAndrew Chow (achow101): 2021-12-20 - present^[10]  Frequent Contributor; given access after volunteering to be the wallet maintainer.\nGloria Zhao (glozow): 2022-07-07 - presentt^[11]    Frequent contributor, given access after being nominated by several frequent contributors and maintainers to become a maintainer.\n\nFootnotes:\n\n[1] The move to Github occurred before the last SourceForge commit, but the last SourceForge commit declares sourceforge as dead. Presumably those who only committed to SourceForge no longer had commit access after the move\n[2] Sirius was the one who created the original SVN repo on SourceForge.\n[3] gavinandresen was the Lead Maintainer from 2011-02-23 until 2014-04-07\n[4] I was informed via IRC PM by some of the Core devs that jgarzik was removed around August 2016 after he had been inactive for several months.\n[5] laanwj is the current Lead Maintainer. After participating in that role for a long time, he was officially given the position by gavinandresen on 2014-04-07\n[6] jonasschnelli was the GUI Maintainer. After participating in that role for a long time, he was officially given the position by laanwj on 2015-11-13. He stepped down for personal reasons.\n[7] MarcoFalke is currently the QA/Testing Maintainer. After participating in that role for a long time, he was officially given the position by laanwj on 2016-04-13\n[8] meshcollider was the Wallet Maintainer. He had been contributing for a while, particularly to wallet related things. When laanwj asked if anyone would like to be the role of Wallet Maintainer, meshcollider volunteered. He stepped down to focus on his PhD.\n[9] fanquake is currently the Build System Maintainer as well as a general maintainer. He had been contributing for a while, particularly with updating dependency versions and build system related things. He also had been doing a lot of janitorial things in the repo such as tagging issues, closing old issues and PRs, nominating things to be merged, etc. At the CoreDev event in Amsterdam which several maintainers and contributors attended, he was nominated to be a maintainer by the entire group.\n[10] achow101 has contributed to the project for many years, especially in wallet and PSBT-related areas. After meshcollider stepped down from the Wallet Maintainer role, achow101 volunteered to take up the role.\n[11] glozow has contributed to the project for a few years, particularly in the mempool and node policy areas. She was nominated by fanquake to be a maintainer with focus in those areas.\n\nOther Notes:\n\nDates are Year-Month-Day\nThere may be people missing and dates may be slightly incorrect. These are all that I can determine by looking at old emails and the commit history. Please let me know if anything is incorrect\nThe start date is determined by the first merge commit made by that person. The end date is determined by the date of the last merge commit made by that person or other announcements of commit access revocation.\n\n\nAfter scrolling through nearly the entire git merges history, I have found a couple of interesting things.\nSatoshi did not use a Version Control System originally. The releases and source code were originally in a rar file that was uploaded to bitcoin.org. Sirius had to setup the original SVN repository on SourceForge for him. This was then later migrated to GitHub by gavinandresen. Originally patches were authored by developers and then emailed to Satoshi, Sirius, or gavinandresen who then committed the changes to the source tree with the commit message containing the attribution, but not the actual commit itself.\nAnother interesting fact is that the giving out of commit access has become more strict. It is now a privilege held by those given maintainer positions and those whose privilege was grandfathered in (i.e. they had it previously and kept it, until otherwise revoked). Previously it was simply given out to those who contributed frequently and revoked after they stopped contributing. This appears to be no longer the case, although there are still multiple people who can commit to the repository so that there is not any reliance on one person. The maintainers are still given to frequent contributors as the maintainers are frequent contributors to the set of functionality for which they are maintainers of. They received the positions because of frequent contributions to those functionalities. Of those whose commit access was grandfathered, only Pieter Wuille remains - the rest were revoked eventually primarily for the lack of contributions (see each individual for their specific reason).\nLastly, I could not find any evidence for Satoshi ever publicly announcing that gavinandresen was to be the Lead Maintainer after him. It seems that Gavin was already a frequent contributor and already had commit access for a while before Satoshi disappeared. After Satoshi disappeared and Sirius stopped contributing as much, gavinandresen simply took over the role as lead maintainer as he was the only frequent contributor with commit access.\n", "How did transaction fees work in the version 0.3.24?": "\nThe minimum transaction fee is zero.\nTransaction fees are enforced in two places. First, a client can be configured not to accept or relay a transaction that doesn't include a sufficient fee. Second, a miner can choose which transactions to include in any blocks they mine and will typically try to include transactions with the highest fees.\nMost normal transactions will have a required fee of zero. The three most common exceptions are:\n\nIf a transaction uses coins that were very recently received, a fee of .005 bitcoins may be imposed.\nIf a transaction \"gathers\" bitcoins from a large number of other transactions, a fee of about .0002 bitcoins per input source may be imposed.\nIf a transaction \"spreads\" bitcoins to a large number of destinations, a fee of about .0002 bitcoins per output may be imposed.\n\nThis is because these types of transactions tend to look a lot like spam transactions used to maliciously load the network. Currently, there are still clients and miners that will accept any valid transaction regardless of the transaction fee. So if you're willing to go to the trouble, you can get any transaction into the public chain eventually with no fee. (Just manually configure your client to connect to them and be patient.)\n", "Apart from the official bitcoin client what other clients are there?": "\nThere is a current list of clients here\nhttp://en.bitcoin.it/wiki/Category:Clients\nThere is development discussion around alternative clients here\nhttp://bitcointalk.org/index.php?board=37.0\nCurrently the \"Official Client\" (more specifically, the Satoshi client) is the most widely used and has implementations that run on Windows, OS X, and Linux. However, multiple alternative clients have been developed, including ones that run on Android, and this is currently a high priority for the bitcoin community.\nThe current most popular alternative clients are BitcoinJ, written in java\nhttp://code.google.com/p/bitcoinj/\nand BitDroid, which runs on Android\nhttps://github.com/cdecker/BitDroid-Network\n", "security - Can bitcoins be counterfeited?": "\nThere is no such thing as a \"bitcoin\" that can be copied. Rather, there is a list of all the transactions that have taken place on the bitcoin network and the order they have taken place. Every client has a copy of this list. Essentially, the only way to counterfeit bitcoins would be to spend them in more than one place. This is called a double-spend attack. However, because of the design of the bitcoin block chain (the list of all the transactions) and the way that list is secured by mining, this requires a tremendous amount of computer power.\nhttp://en.bitcoin.it/wiki/How_bitcoin_works#Double_spending\nSee also the question about how mining works\nWhat exactly is Mining?\n", "mining theory - Where do bitcoins come from and what gives them their value?": "\nAlthough individual bitcoins enter the Bitcoin economy as miners are rewarded for processing transactions, it's much more helpful to think of all 21 million bitcoins as having been created when Satoshi Nakamoto defined the Bitcoin protocol and launched the Bitcoin network in 2009.\nThe reason for this is that the Bitcoin protocol specifically defines and controls when and how a limited total number of coins are rewarded to miners for the job of securing the Bitcoin network.  These \"bitcoins\" are really just mathematical tokens which are very carefully controlled by the network protocol to prevent counterfeiting, theft, etc.\nBy agreeing to use these mathematical tokens as money, the larger Bitcoin community is essentially \"backing\" their value and turning them into a currency in the same way traditional African and Asian societies used the money cowry despite the absence of any central bank.  Unlike the money cowry:\n\nthere will never be more bitcoins\nthey are impossible to counterfeit\nthey can be divided into as small of pieces as you want\nand they can be transferred instantly across great distances via a digital\nconnection such as the internet.\n\nPresumably, the members of the Bitcoin community who choose to accept them as money consider these features to be worth something, and value the bitcoin accordingly based on supply and demand on open currency exchanges.\nBecause bitcoins are given their value by the community, they don't need to be accepted by anyone else or backed by any authority to succeed.  They are like a local currency except much, much more effective and local to the whole world.\nSo to sum up, bitcoins come from the Bitcoin community's agreement to follow a set protocol, and are backed by everyone who uses them as money.\n", "transactions - Can I send bitcoins with my mobile phone?": "\nDon't use Bitcoin by Bitcoin Android. It is unmaintained, it starts crashing and doesn't load anymore, and there is no way to get your bitcoins out. Someone should really get the developer to take it down. I'm emailing him again now.\nUse Bitcoin Wallet. It is maintained by the same team that creates the bitcoinj android library. It is the most reliable app.\nUse the MtGox mobile app. This is the best way to ensure that you do not lose coins if the app crashes, since your coins are held at mtgox.\nBlockchain has a mobile wallet now as well. Looks very promising.\n", "privacy - Is there an easy way to search all the transactions?": "\nTry BlockExplorer, it can search by block, public address, and a few other ways. It also has some cool analysis and statistics abilities.\n", "privacy - How do I see the IP address of a bitcoin transaction?": "\nNo, IP addresses are not stored in the blockchain.\nBut Gavin Andreson indeed notes that\n\nUnless you are very careful in the way you use Bitcoin (and you have\n  the technical know-how to use it with other anonymizing technologies\n  like Tor or i2p), you should assume that a persistent, motivated\n  attacker will be able to associate your IP address with your bitcoin\n  transactions.\n\nOne way to do this is to simply run bitcoin peer-to-peer clients that connect to a large fraction of the active nodes.  It's not as hard as you might think.  See Dan Kaminsky's Black Hat 2011 talk, starting at slide 21, for more.  (Thanks to kirian for reminding me of the link).  Then see An Analysis of Anonymity in the Bitcoin System 2011-07-22 by Fergal Reid, Martin Harrigan for how to link together the various bitcoin addresses that each user uses.\nSome related background is outlined by Craig Reading:\nBitcoin Theft \u2013 The Top Ten Threats | Genesys Guru Blog\n", "transactions - What happens if I mistype the address when making a payment?": "\nBitcoin is very resistant to typos because the addresses contain a built-in check code.  So if you had simply mistyped a few of the letters or numbers in the address, it's unlikely the client would have let you send them.  If, however, you pasted in a different and valid address, the coins are already transferred to it permanently.  In this scenario, Bitcoin works pretty much like cash--there is no way to get it back after giving it away.\n", "chargeback - Can a bitcoin transaction be reversed?": "\nNo, a bitcoin transaction which has already been included in a block on the longest chain cannot be reversed.  This is by design as Bitcoin is intended to behave much like cash, with recipients being assured that the money is now permanently in their possession after a transaction has been included in a block.\n", "transactions - Eligius pool and 'generated' bitcoins": "\nThe special \u2018coinbase\u2019 transaction, which begins every block of the main chain, usually contains a single output with a single address (owned by the person or the pool that generated the transaction).\nHowever, the fact that this transaction usually contains a single output is not enforced by the system. You may have a look at what an Eligius block looks like. The Eligius pool uses this to credit its users directly.\nIt's not possible\u00b9 to include inputs in these transactions (the block would be invalid otherwise). The only special input is the 25BTC one (currently, every 4 years this value will decrease) granted to the block founder.\n\u2014\n1. In main.h, function IsCoinBase(): return (vin.size() == 1 && vin[0].prevout.IsNull());\n", "marketplace - What is the \"silk road\" and what does it have to do with bitcoin?": "\nSilkroad is an anonymous online marketplace inside the Tor network which became famous for selling illegal drugs.\nThey don't have anything to do with the Bitcoin project, except for the fact that they accept bitcoins as a payment method.\n", "Is there a list of news articles related to bitcoin?": "\nThe most up-to-date list is the Bitcoin press hits thread. However, if you want a shorter list with more quality content, I recommend Press page on wiki.\n", "security - Do wallet stealing viruses exist?": "\nMoney can now be stored in a single file inside your hard drive. This is a natural target for criminals so yes, there are virus that steal bitcoins.\nIf you trust a third party (like an ewallet) to hold your coins, you will not have to worry about wallet stealing virus nor about wallet security. Instead, you should protect your login credentials and/or use a two-factor authentication mechanism. Treat your e-wallet account the same way you treat your e-banking account.\nI don't know of any dangerous websites, but there was a report of a bitcoin trojan by Symantec on June 2011.  \n", "Are there alternatives to Bitcoin which take a different approach?": "\nThere are \"digital bearer certificate\" systems, which are an older concept.  They require a centralized issuer in order to prevent double-spending.  You can think of the certificates as electronic IOUs for a commodity (such as gold) held by the issuer.\nSome DBC systems implement Chaumian blinding to anonymize transactions.\nOpen Transactions is a recent DBC system that has gained some interest.  It could be used with Bitcoin as a backing commodity, taking advantage of the properties of both systems.\n", "speculation - What factors affect the value of a Bitcoin?": "\nThe price for a bitcoin, e.g. for trading with other currencies, derives as usual from the interaction of supply and demand.\nThe supply of bitcoins increases over time, as determined by the rules in the software which is run by the majority of miners, and increases regularly over time, in decreasing increments.  It can also decrease when people lose access to the private keys which are needed to spend bitcoins.\nThe demand is driven by a variety of factors:\n\nBitcoin's utility as a flexible medium of exchange, with low transaction costs, efficient micropayments, little effective regulation, ease of becoming a merchant, pseudonymous accounts, and a worldwide market.\nImpediments to the bitcoin economy caused by the friction and inconvenience of using bitcoins due to idiosyncratic software, difficulties obtaining bitcoins, relative lack of people who have bitcoins to spend, the risks of a new experimental currency, lack of understanding, etc.\nDemand from new users, derived from recent publicity or new uses.\nSpeculation as to the future of bitcoins as an investment, over the long-term as well as the short term\nCompetition from related transactional or investment options such as Paypal, gold, etc.\n\nUpdate Note that as long at the overall exchange market is relatively small, the market price can be manipulated by sufficiently well-funded investors who can expand the supply of available bitcoins, or increase demand, to meet their own goals.\nSee also the question and answers at What economics/finance methods and tools can be used to analyze and predict the Bitcoin market?.  (Previously I linked to this, which is now deleted:\nWhat technical indicators might be appropriate for analyzing Bitcoin currency trading? - Personal Finance and Money - Stack Exchange)\n", "development - How can I contribute to the open source Bitcoin project?": "\nAs a Programmer\nYou can contribute by acquiring the bitcoin source code at github.  Fixing bugs, adding features and creating a \"pull request\".  Here are guidelines for creating pull requests.\nGavin Andresen, currently the lead developer of bitcoin, has suggested that testing is a bottleneck, so it would be helpful to compile the existing pull requests on github and test them.\nIt should be noted that it is possible to safely test bitcoin transactions without using real bitcoins by using the testnet (see the -testnet command line option).  You can even create your own self-contained testnet-in-a-box.\nAs a Non-Programmer\nLearn more about bitcoin. Try using them. Learn proper ways to secure them. When you become better versed in bitcoin technology help by explaining it to others.  If you have a business, experiment with accepting bitcoin. If you are a customer, ask if a business accepts bitcoin. Help to dispel the myths and misunderstandings of bitcoin whenever you talk about them. However, be careful to get your facts straight.\nIf you have talents in other areas such as design, business, or blogging, etc. then look for ways to contribute using those skills. It has been suggested that the client needs better interface designs, businesses have expressed interest in advice on bitcoins, blogging can help address all the misinformation and rhetoric.\nEveryone has something they could contribute, so give it a try.\n", "history - Who is Satoshi Nakamoto?": "\nSatoshi Nakamoto is the elusive and private creator of bitcoin. In October 2008 he published the paper Bitcoin: A Peer-to-Peer Electronic Cash System (pdf warning) which is the basis of the bitcoin client/protocol. He has stated his nationality as Japanese and published a PGP key, has a sourceforge page and aside from that not much is known. It sort of follows that someone interested in creating a distributed pseudonymous online currency would be a very private person.\nIt is also suspected that Satoshi may be a pseudonym for any of a number of people involved in the original development - a mask used for safety and protection against legal persecution for the creation of such a potentially disruptive product. To that end, Satoshi may still be involved in bitcoin, although as you stated, not publicly. As with everything else about Satoshi, the reason for his lack of current involvement is unknown.\n", "currencies - Does the bitcoin design make bitcoins suitable as a medium of exchange, a store of value, or both?": "\nToday, it primarily serves as a store of value. It is inherently more useful as a medium of exchange, its intended purpose. Perhaps a bit ironically, its expected future usefulness as a medium of exchange is what is driving its present usefulness as a store of value. The thinking is that if you get them now when they're cheap, in the future when they're used as a medium of exchange (and thus there's much more demand) they'll be worth more.\n", "chargeback - Which Bitcoin escrow services are available - and reliable?": "\nBTCrow.com, operator made quite a few posts about the service, Bitcoin Escrow Service - For safer bitcoin transactions\n", "exchanges - Can bitcoins be \"sold short\"?  Or are there \"put\" options?": "\nNot only will Bitcoins soon be able to be sold short through several exchanges, but once that service is available, Bitcoin banks that pay interest will be possible.\nA Bitcoin bank could pay interest on Bitcoin deposits by converting the Bitcoins into the least inflationary national currency available, investing those funds in loans or businesses, and using the profits to buy back more Bitcoins later to pay back depositors.\nHowever, this plan has one flaw -- what if the price of Bitcoins goes way up, beyond the interest you can collect. You would then take a loss when you purchased back Bitcoins to pay back your depositors.\nNormally, you would offset this risk by holding Bitcoins. But that would defeat the entire point of investing them. So you need some way to make money and risk money as if you were holding Bitcoins without actually holding any bitcoins. How can you do that?\nAnd the answer is, you offset the risk that Bitcoins will go up in value by selling shorts. Selling shorts is like holding Bitcoins without having to actually hold them, allowing you to make money if they go up and lose money if they go down just like someone holding Bitcoins would. If Bitcoins go down, you lose on the shorts but make it up by making extra profits when you buy back Bitcoins to pay depositors. If Bitcoins go up, you lose when you buy back Bitcoins, but make it up on the shorts.\nWith the right combination of shorts, currencies, and investments, this should make the risk associated with interest-bearing bank accounts denominated in Bitcoins no greater than the risk with other currencies. (And if you sell the shorts directly to investors, you can make a profit on them as well, taking the commissions.)\nIt is entirely possible that this is part of the reason the exchanges are considering selling shorts. Not only would they pocket the commissions, but they could safely convert a fraction of the many, many Bitcoins they're holding into interest-bearing accounts denominated in national currencies, pocketing the interest.\n", "exchanges - How are MtGox options going to affect Bitcoin price volatility?": "\nProbably both, though the effect may be pretty small.\nArguably, the most prudent use of options is reducing risk.  For example, a merchant with accounts receivable in Bitcoins would want to protect the value of the fixed amount of BTC he will receive.  Options can limit his downside risk.  At present the price volatility of Bitcoins hampers its use for commerce, since the value of an asking price in BTC varies so much from day to day.  With options to reduce risk, more businesses will be willing to accept Bitcoins, bringing more liquidity to the Bitcoin \"ecosystem\".  \nIncreased acceptance of Bitcoins and increased \"money supply\" are more likely than options to stabilize prices.  They would reduce price fluctuations caused by thin trading.  The same effect is seen in the stock market where relatively unknown stocks undergo drastic price swings due to somewhat small trades.  Conversely, a widely traded stock exhibits much less volatility.\n", "mining pools - How can P2Pool charge a fee?": "\nSince November 17, 2011 no fee is charged.  Instead an optional donation of 0.5% is sent to the author of P2Pool to support future development.\nIf you don't want to donate to the author you can run P2Pool like this:\npython2 run_p2pool.py --give-author 0.0 [USERNAME] [PASSWORD]\n\nThe 0.0 is a percentage of your earnings and can be set to whatever percentage you like.\n", "mining pools - How do I find the hash \"market share\" of P2Pool?": "\nIn concept, P2Pool is much stronger than centralized pools. Unfortunately, most centralized pools still hold a high hash-rate.\nYou can see the global hash rate, and its distribution at http://bitcoinwatch.com/ \nMy opinion is that miners are used to using slush, deep bit, and btcguild - and are either unaware of the incentives of P2Pool, or don't care.\n", "banks - What would a country adopting Bitcoins as official currency have to reinvent?": "\nTL;DR:\n\nIn the first instance, my belief is that a government would have to\n  create their own brand of Bitcoin (i.e. a new version of the\n  blockchain) and use that to trade against other currencies. This is a\n  useful move because the government retains control over their currency\n  (they set the mining rules) and they don't suffer a wealth drain in\n  the process.\n\nIn more detail, once a country (our mythical Seashell Island from the earlier draft) has decided that it wants to adopt Bitcoin as it's local currency the following timeline is likely to come into play:\nResearch into Bitcoin\nAt this time the government will need to look into what benefits and drawbacks Bitcoin is likely to bring to their economy. Assuming that they currently have a weak currency, then adopting Bitcoin early could be seen as a smart move since it gives them lower cost of entry into the Bitcoin marketplace. \nAmong the obvious advantages that Bitcoin brings with it are:\n\nresistance to counterfeiting\nresistance to inflation\neasier to track than cash for traditional transactions types (i.e. not including private sales of high value private keys)\n\nSome of the drawbacks are:\n\neconomy becomes vulnerable to loss of electricity/networking (true of all electronic transactions at present)\nbanks have a reduced regulatory role since transactions become largely anonymous \nincreased potential for anonymous transactions to take place in large amounts\n\nThis last drawback is perhaps the most serious since it allows for a vast amount of money to be moved in and out of the country without the knowledge of the government. Admittedly, this happens in the present system although due to the large physical size of cash it usually requires laundering of some kind (conversion to something precious). \nHowever, government resources are significant and it is very hard to remain anonymous for long. Over time detailed statistics analysing transactions could be used by the police to pinpoint individuals reusing Bitcoin addresses. This process is made much easier by the existence of tools like blockexplorer.com and should be seen as an improvement over the existing traceability processes.\nSetting up the necessary processes/contracts to obtain some form of Bitcoin\nBy this stage the government researchers will likely have determined that there are only a few feasible options to get hold of bitcoins (note the lowercase here):\n\nset up their own mining pool (initially paying for it in their own currency) - unlikely\ncreate a suitable contract with a mining pool to buy a large quantity of bitcoins (without including their own soon to be worthless currency - unlikely \nencourage their citizens to go forth and buy bitcoins themselves and slowly drain the local currency into foreign hands then pull the plug on it (not exactly above board) - unlikely\n\nUsing any of the above approaches at this stage requires a significant transfer of wealth from the country into bitcoins and is probably the hardest part to get right. The problem is that there is no central authority who can control the supply of bitcoins exposing the country to the influence of the market. In the case of Euros, the exchange rate of the participating currencies was fixed well in advance after significant negotiation. When the time came to switch over nobody lost out because all the old currency was replaced with the new, which could be printed at will by the central bank. \nIt could be argued (by @David Perry for one) that some kind of intermediate value-store could be used, such as gold or silver. However, this still requires all of the country's wealth to be slowly converted to this value-store which will raise eyebrows among those folks selling it in exchange for a soon to be worthless currency. I'd welcome further discussion on this.\nThere is a significant danger that the country could be declared bankrupt in it's own currency before it is able to complete the operation.\nEDIT to cover the most likely path by a government:\n\nif a government made their own blockchain (e.g. SeashellCoin) then they could in theory use scripts to manage trades with Bitcoin. \n\nThis would permit a staged transition and essentially solves the value-store problem. The value of a Seashell would be fixed against their SeashellCoin equivalent (probably as 1:1). In my opinion, this is probably the most likely mechanism that a government could take. The government could decide upon their own inflation model, select a Version entry and then throw a supercomputer on the job for 5 minutes to generate a few million coins. Once that's done then they can take advantage of the blockchain approach and off they go.\nSetting up the necessary legislation to make them legal tender locally\nOnce an adequate number of Bitcoins are, somehow, in the government coffers they can then make the announcement that all local debts can be paid in bitcoins and will be accepted by a court of law. This ratifies Bitcoins around the world (assuming the country is a recognised state) leading to a huge increase in the value of Bitcoins. It also opens the door to taxation in bitcoins which would largely operate in the same way as it did before. \n\nValue Added Tax (VAT) (aka sales tax) would continue to be added to Bitcoin transactions by merchants who would then transfer the money to the government at regular intervals, overseen by accountants\nIncome tax would also stay the same \nAccounts would have to be returned along with their transaction IDs to allow verification of truth\nStandard statistical methods to detect fraud would remain (relies on most folks behaving themselves)\n\nManaging the transition among the general population\nSince it is the government driving this then they are likely to provide all necessary equipment to facilitate the transfer. This would include:\n\nrecommendations for mobile phone applications (probably not likely to make their own due to \"backdoor\" privacy concerns)\nprovision of Bitcoin Wallet Devices that offer tamperproof private keys and are essentially like smartphones for those that don't have mobile phones (see the original Fred)\nprovision of EPOS systems that are Bitcoin enabled \n\nAll of the above would probably occur via contracts with private companies. \nHandled well, the transition to Bitcoin would be like introducing a new contactless payment system. They would still want to maintain a secure location for their bitcoins (most likely a government backed bank) and after a while it would just fade into the background. \nReaping the benefits to the economy afterwards\nMuch of the long term benefits would stem from\n\nthe decreased transaction friction within the existing legal and banking system\nbetter fiscal policy since supply is limited leading to improved standards of living and quality of life\nincreased long term wealth as an early adopter to a global currency\ngreater transparency in accounting that can be easily verified\nimmunity to global currency crises\n\nJust my 2 BTCs.\n", "trading - Are there immediate plans to make Bitcoin more accessible to Forex traders?": "\nAs far as I'm aware most bitcoin exchanges don't adopt fiat currency as it requires them to be licenced with the money markets.\nThe same goes for the forex markets which exist such as IG Index or Capital Markets. The situation which would allow them to trade bitcoins for money is not suitable as it's not recognised as legal tender and organisations such as the IMF would not accept trading on licenced exchanges.\nIt's rather safe to assume for major players in the money markets would be unable to adopt bitcoins due to the red tape involved.\nA small quote from the best exchange I am on\n\"Financial Regulation \nOur business and services are buying, selling and trading virtual goods and commodities. We are not currently regulated as a financial institution.\"\n", "development - Where can I find a roadmap of the main bitcoin client?": "\nCurrently, they are working on:\n - wallet encryption\n - private key import/export\n - test suite for testing bitcoin clients/libraries\n - m-of-n signature \"standard transaction\"\nSource: mailing list\n", "How can I view the current blockchain size?": "\nIf you have the bitcoin client running in server mode, you can pass it the getblockchaininfo command. This is the current output:\n{\n  \"chain\": \"main\",\n  \"blocks\": 525329,\n  \"headers\": 525329,\n  \"bestblockhash\": \"000000000000000000192cf4d557fb2265855713b0fd208a6490bca81137bce4\",\n  \"difficulty\": 4306949573981.513,\n  \"mediantime\": 1527792344,\n  \"verificationprogress\": 0.9999976722383654,\n  \"chainwork\": \"000000000000000000000000000000000000000001e6cf0d64537cc800fc54f8\",\n  \"pruned\": false,\n  \"softforks\": [\n    {\n      \"id\": \"bip34\",\n      \"version\": 2,\n      \"reject\": {\n        \"status\": true\n      }\n    },\n    {\n      \"id\": \"bip66\",\n      \"version\": 3,\n      \"reject\": {\n        \"status\": true\n      }\n    },\n    {\n      \"id\": \"bip65\",\n      \"version\": 4,\n      \"reject\": {\n        \"status\": true\n      }\n    }\n  ],\n  \"bip9_softforks\": {\n    \"csv\": {\n      \"status\": \"active\",\n      \"startTime\": 1462060800,\n      \"timeout\": 1493596800,\n      \"since\": 419328\n    },\n    \"segwit\": {\n      \"status\": \"active\",\n      \"startTime\": 1479168000,\n      \"timeout\": 1510704000,\n      \"since\": 481824\n    }\n  }\n}\n\nThe blocks field is the current number of blocks in the block chain. You can also get this information from BlockExplorer or use the Direct Link to the block count.\nIf you want the size in bytes, look at the size of your blk0001.dat file, currently 528Mb.\n", "trading - What happened to Bitoption.org?": "\nLast I heard, they were down to rewrite their code. Apparently too much was being done manually and they're trying to automate as much of the process as possible. There was a landing page for a time and I've not heard anything new on the subject so I'm assuming they've simply taken their web server offline for some reason.\n", "development - How can a programmer contribute to the Bitcoin project?": "\nGavin Andresen, the Bitcoin client technical lead, has expressed a desire that effort be focused on closing bug reports in the client. You can find the current list of open issues on GitHub. You can also find some documentation about how to create your own fork of the project source and how to suggest that changes from your fork be pulled (imported) into the main release in Gavin's post here.\n", "hashpower - How does merged mining work?": "\nMerged mining allows a miner to mine for more than one block chain at the same time. The benefit is that every hash the miner does contributes to the total hash rate of both (all) currencies, and as a result they are all more secure.\nStarting with a high-level explanation: The miner (or mining controller in the case of pooled mining) actually builds a block for both hash chains in such a way that the same hash calculation secures both blocks. Work units based on this block are then assigned to miners. If a miner solves a block (at the difficulty level of either or both block chains) the block is re-assembled with the completed proof of work and submitted to the correct block chain (or both blocks are separately reassembled and each submitted to the corresponding network if it met both of their difficulty requirements).\nThe only confusing detail is how the same hash can secure both block chains. I'll use the example of Bitcoin and Namecoin, where Namecoin supports merged mining and Bitcoin doesn't:\nFirst, the miner must assemble a transaction set for both block chains. He then assembles the final Namecoin block and hashes it. He then creates a transaction containing this hash that is valid in the Bitcoin chain and inserts it in the Bitcoin transaction set at the tip of the tree. He then assembles the final Bitcoin header with this transaction in it and sends out the work units.\nIf a miner solves the hash at the Bitcoin difficulty level, the Bitcoin block is assembled and sent to the Bitcoin network. The Namecoin hash does nothing and the Bitcoin network ignores it.\nIf a miner solves the hash at the Namecoin difficulty level, the Namecoin block is assembled. It includes the Namecoin transaction set, the Namecoin block header, the Bitcoin block header, and the hash of the rest of the transactions in the Bitcoin block. This entire \"mess\" is then submitted to the Namecoin system. The Namecoin system, supporting merged mining, accepts this as proof of work because it contains work that must have been done after the block header and Namecoin transaction set was built. (Because you can't build the Bitcoin transaction set containing that hash, and therefore the Bitcoin header that secures it, without that information. So it proves the work was done.)\nNote that a miner can solve both chains simultaneously, and they will if they solve at the higher difficulty. One block can \"win\" in the public chain and not the other. They are fully independent -- only the mining is merged.\nThree key points to remember:\n\nThe Bitcoin chain doesn't get junked up with Namecoin stuff due to merged mining. At most, one tiny hash is inserted in the transaction tree.\nThe two hash chains remain fully independent. The \"Bitcoin stuff\" that goes in the Namecoin tree is basically ignored and only used to validate the proof of work. (It will bloat the Namecoin chain a bit as it means some blocks will have an extra header and an extra hash.)\nLastly, no special support is needed from Bitcoin.\n\nThe benefit for Namecoin is obvious. A lot of Bitcoin miners will probably do merged mining, since it costs them basically nothing and gives them a greater return than mining Bitcoins alone. As a result, their block generation timing will be more predictable and their transactions more secure against a 51% attack.\n", "Will merged mining mine each chain as efficiently as non-merged mining?": "\nEvery hash you do will contribute fully to the hashing power of both block chains. You will have to do a tiny bit of extra work when you generate a work unit, but that's almost insignificant, and you only need to generate a work unit once for every few billion hashes you do. \nYou will generate just as many Bitcoins as if you only mined Bitcoins and just as many Namecoins as if you only mined Namecoins. There are only two downsides of any significance. First, your Namecoin blocks will be a bit larger than they would otherwise be, since they include Bitcoin headers. Second, you will have to generate new work units every time a new block is discovered on either hash chain, so about twice as often. (This can be a big deal for a large mining pool.)\nSee my answer to this question for details on merged mining.\n", "Are there any bitcoin banks (online services) and what are the benefits and pitfalls of using them?": "\nThere are such services. But there's a good reason not to use them -- if one day the service is gone, so are all your Bitcoins. This has already happened once and will almost certainly happen again. As of yet, there are no companies I would consider sufficiently reputable in this business.\nYou can, however, keep both Bitcoins and other currencies in a TradeHill or Mt. Gox account. You can fairly easily transfer Bitcoins into and out of those accounts and they're run by well-financed companies that can reasonably be trusted. And both TradeHill and Mt. Gox have made noises about making their accounts more like online wallets.\n", "currencies - Could Bitcoin work as a world currency?": "\nIt all boils down to the amount of people who adopt it as a stanard as measurement of wealth. if around 10% of the country were to use it as a form of payment (requesting it for wages, using it in shops and so forth) the likelyhood of it taking of would be signifcantly higher, below this it would never happen.\n[EDIT - Found it] http://pre.aps.org/abstract/PRE/v84/i1/e011130\nThe other issue is government buying into the idea of a currency they could not control, although this would be relevantly null if they were to hold a substantial amount of any given currency, there is little reason they couldnt \"mint\" their own chain and distribute the funds.\nBoth ideas are entirely possible with widespread adoption but until the magic 10% figure is hit it will never happen.\n", "Where can I find people willing to pay me in bitcoin for services?": "\nCoinWorker pays Bitcoins for repetitive jobs such as identifying images that contain adult content, or rating search engine results.  It acts as a Bitcoin interface to the CrowdFlower network.\n", "difficulty - What happens if hash rate decreases rapidly?": "\nYes, it could. It's not very likely, but it could happen.\nHowever, one thing to keep in mind is that Bitcoin is incredibly resistant to these kinds of problems. Everyone who participates in the Bitcoin network has an incentive to keep that network useful. So a new client with a different difficulty algorithm could be released in a few days and the network transitioned in less than a week if needed. The difficulty adjustment could be changed if it needed to be.\nFor one thing, the \"6 confirmations\" rule is way overkill. People could compensate just by accepting 4 confirmations for transactions under $10,000 or the equivalent.\nIdeally, people would see this risk coming several months away and could deploy a fix before it was needed. If circumstances in any way suggested that this was a realistic possibility, even in the absence of an actual attack a community consensus and transition plan could be developed and implemented. Alternative difficulty algorithms have already been proposed and even implemented (in other block chains) that don't have this issue.\nRight now, I think such a change would be a bad idea. The problem is very unlikely, and any mass change in the logic of Bitcoin could undermine confidence in the long-term stability of the system. People might think \"if they change the difficulty algorithm today, maybe they'll change the Bitcoin generation rate tomorrow\".\n", "alternatives - Decentralized transactions between two decentralized currencies": "\nI have actually been working on this exact problem. My motivation is to achieve a slightly different effect than what you're asking about.\nI'd like to be able to \"move\" some Bitcoins to a different hash chain, allow them to be exchanged in that hash chain (as Bitcoins), and then I'd like the final holder to be able to \"re-import\" the Bitcoins back into the regular hash chain. The goal would be to create \"side-chains\" with faster block generation times useful for smaller transactions. (They could also 'expire' after a few months and be forgotten, reducing the size of the permanent hash chain.)\nBut the basic problem is the same. You need the legitimate holder of some Bitcoins to depend on a fact verifiable only outside the Bitcoin hash chain. In both cases, the existence of a transaction in another hash chain. (In my case, a Bitcoin hash chain but not the Bitcoin hash chain. In your case, another currency's hash chain. But the principle is the same.)\nThe problem is that the Bitcoin design requires every client to be able to validate every transaction, as they must track coins all the way back to their origin to confirm their validity. This means a transaction must be verifiable with only information every client should have -- and that means only information in the Bitcoin block chain.\nA third party could put this information into the Bitcoin hash chain. But you'd have to trust that third party, defeating the point.\nI have thus concluded that no solution is possible, unless someone has an idea that breaks my assumptions. I hope that will happen, but I am not clever enough to think of it.\n", "network - Should I leave the Bitcoin client open?": "\nBitcoin is a peer-to-peer network, which means that the clients not only receive the blocks from other clients, but send out the blocks to other clients. (You may notice the \"connections\" number in the bottom right of the original client. You can think of this as \"peers\" in a torrent client). So yes, by having your client open you are technically helping relay the recent blocks out across the network faster than they would get their otherwise, but there is really no reason to keep a client running all the time.\nAt one point, the client also doubled as a CPU miner, but we are far past the point where that is useful from a security point of view.\n", "Is there an easy way to give people a Bitcoin address?": "\nHere are a few tips to help you distribute your addresses on a more readable form:\n\nFirstbits.net shortens your address to (usually) less than 7 characters. To get the full address just enter the firstbits at the website (ex: http://firstbits.net/?a=1kk5k)\nUse vanity generator to create a more customized address. You can try to create an address that has your name on it or any other word that you like. Bear in mind that this will still be a long address with many 'strange' characters (ex: 1stDownqyMHHqnDPRSfiZ5GXJ8Gk9dbjL)\nIf you use an e-wallet service, there are usually shortcodes that allow users to transfer bitcoins instantaneously between users. You can only use this if the other person uses the same e-wallet as you (ex: check Flexcoin, TradeHill or CampBX)\nIf you want to print your address into a business card, I suggest using QR Codes. They can easily be scanned with a smart phone.\n\n", "Are there any feasible methods of maliciously reversing transactions?": "\nThere are multiple attack vectors for this.\nIf the merchant accepts on 0/unconfirmed then there is a race attack in which an attacker (scammer) will send one transaction to the \"merchant\" (or to a node closer to the merchant) and a separate transaction that double spends those same coins to other nodes, such as mining nodes.  Depending on the merchant's configuration the success ratio of this will vary.  The range where the attacker is successful ranges from near 0% to near 100%, but simple steps taken by the merchant (turn off listener, explicitly connect to well connected nodes) will prevent most of the risks of this attack. \n\nhttp://bitcointalk.org/index.php?topic=79090.0\n\nIf the merchant accepts on 0/unconfirmed, regardless of protections from a race attack then the Finney attack is possible.  In this, the attacker also has control of a miner that has successfully mined but not yet announced a block with a special transaction that also has not been announced.  As soon as the block is mined, the attacker spends the coin from that special transaction with a merchant, secures delivery of the goods purchased, then broadcasts the block which contains the special transaction which invalidates the payment the merchant already accepted.  A disincentive to this is that for every couple seconds that the block is held, costs the attacker, on average, about $1 so even with this vulnerability there are tools available to a merchant to manage the risk so payment on 0/unconfirmed can still be recognized.\nAs the number of confirmations required increases the success of a double spend attack drop, and a merchant that requires 6/unconfirmed is essentially secure (based on probability of success) against double spends where the miner attempts to rewrite blocks.  Essentially this is only success for an attacker once 51% majority of network hashing is attained.  The consensus is that while this technically is possible, it doesn't make economic sense (no profit from doing so).  So if \"feasible\" means it must bring a profit, then this 51% attack method wouldn't be one of the methods you ask about.\n", "security - Do mining pools centralize the Bitcoin network and make it less secure?": "\nThe short answer to your question is \"yes\".\nEfforts are underway to develop schemes that allow pooled mining without the pool manager being able to control what transactions go into the pool's blocks, leaving that decision (as well as which chain to extend, so long as it is reasonable) to the individual miners. All the pool really needs is proof that the miner is mining for the pool.\n", "history - What was the last life sign of Satoshi Nakamoto?": "\nThis was his last post on the Bitcoin Forums, December 12th, 2010. The day after he wrote this to the mailing list. As far as I know he did not (publicly) announce his retirement.\n", "gpu mining - Why is DiabloMiner using so much CPU now?": "\nI'm surprised you just didn't ask me directly.\nIt sounds a lot like you're suffering from one of two CPU use bugs in the driver. Catalyst 11.7 through 11.11 (using any SDK) use 100% CPU time on one or more cores because of a faulty sleep, and SDK 2.2 and 2.3 (using any Catalyst) also have the same exact issue.\nHowever, Windows has a third variation of the bug, if you set -f too low (ie, kernel work size or kernel execution time exceeds a predefined amount), it can also trigger Windows into stating the CPU is being used 100%, however this does not seem to be a driver bug and is a bug in Windows itself.\nEdit: My answer was strictly for AMD hardware. If you're on Nvidia, Nvidia is aware of the bug (it happens on any OpenCL app), but they have not yet fixed it.\n", "bitcoin core - How can I restore my wallet?": "\nYou need to put the old wallet.dat in your bitcoin data directory.\nThe default for Windows is:\nC:\\Documents and Settings\\YourUserName\\Application data\\Bitcoin (XP)\n\nC:\\Users\\YourUserName\\Appdata\\Roaming\\Bitcoin (Vista and 7)\n\nThen run the bitcoin client with the -rescan option.\nAlternatively you can run the bitcoin client with the -datadir=<location of backup wallet.dat> as well as the -rescan option if you do not want to move/backup the new wallet.dat.\nThe default for Mac OS X is:\n~/Library/Application\\Support\\Bitcoin\n\n\nThe default for Linux is:\n~/.bitcoin\n\n", "transactions - How do I accept bitcoin payments at a real world store?": "\nGreen address technique from Instawallet. System sends bitcoins from well known address called Green Address and if recipient trusts Instawallet or any other major organization that uses same technique, then he or she can accept payment without waiting for confirmations. This is what already implemented but it solves only the third problem.\nInstant TX for established business relationships is in early development stage but it can solve all three of the problems, with an exception that only retailer needs to have internet access. For example, transaction could be printed by customer on a piece of paper, handed over and accepted instantly by retailer, and it still would be secure. The idea is very promising because such transaction could be sent over internet or by any other way directly from buyer to seller and won't use any of Bitcoin Network resources, and it would be economically fisible to make automatic payments for a service that costs several micro bitcoins. \n", "transactions - How do I safely accept bitcoins without waiting for confirmations?": "\nThere are no such arbitrators currently, as far as I know. There have been plans discussed to create trusted sources of Bitcoins. The idea would be that I'd hold my Bitcoins with an e-wallet service and ask them to transfer my coins to you. The e-wallet service would confirm (outside the Bitcoin network) that it was going to send you so many coins.\nIn one plan, the e-wallet service would send you a signed email containing the transaction ID and a copy of the transaction. If a conflicting transaction ever appears in the public block chain, you would have proof that the e-wallet service had cheated you, destroying its reputation.\nThere is another method that doesn't require the sender to use an e-wallet service. In this method, a verifier connects to as many Bitcoin clients as possible over as much of the network as possible. He monitors the transactions appearing. If he sees a transaction on all points and doesn't see a conflicting transaction anywhere, the only possible double-spend attack would be to conspire with a miner who happens to mine the next block by luck.\nFor most transactions, just seeing the transaction posted is sufficient. But if you add in making sure the transaction is seen over most of the network, the risk is low enough to be worth taking for all but the highest-value transactions (say $5,000 or more). For transactions higher than that, it's hard to see how a 10 minute delay is a big deal. But if it is, you'll need to develop a method to handle it.\nThere have also been proposals for \"side chains\" that generate blocks more quickly and permit transactions to be confirmed faster. However, they're really not suitable for large transactions as they are unlikely to ever see enough hashing power to ensure they're resistant to a 51% attack.\nNote that if you are ever ripped off in this way, you can always prove it. If you see the unconfirmed transaction, you can save it. If no conflicting transaction gets in the block chain, you can still post that unconfirmed transaction. If a conflicting transaction does get in, you'll have both transactions. So you can at least name and shame.\n", "alternatives - Is there a way to set up proof-of-work systems so they would be even more useful?": "\nI think the premise of the question is not correct. The work is not useless, it secures the transactions. The public hash chain ensures that Bitcoins can only be spent once. The mechanism piles computations on top of legitimate transactions so that the recipient knows that an attacker would need at least as much computing ability to \"undo\" the transaction.\nThere is currently no known way to make the work more useful. The problem is that the primary purpose of securing transactions imposes a number of requirements on the work done:\n\nThe work must be much, much easier to verify than to do. So it pretty much has to consist of searching for something rare, doing billions of searches to test if an input has a particular characteristic. That way the verification simply requires confirming that the input you found has that characteristic.\nThe work must in fact secure the transactions and not be severable from them. If I see that you sent me 10 Bitcoins and then billions of computations are piled on top of that, it must not be possible to remove that transaction and then pile those same computations on top of a conflicting transaction. So you can't use the result of an arbitrary chunk of work to prove work on the Bitcoin chain.\n\nIt's hard to imagine any additional useful work that could be accomplished while still meeting these requirements.\n", "architecture - What is a good way to concisely explain Bitcoin?": "\nBitcoin is a new kind of money. It's the first decentralized electronic currency not controlled by a single organization or government. It's an open source project, and it is used by more than 100,000 people. All over the world people are trading hundreds of thousands of dollars worth of bitcoin every day with no middle man and no credit card companies. It's a startup currency which has never happened before.\nBitcoin is the first digital currency that is completely distributed. The network is made up of users like yourself so no bank or payment processor is required between you and whoever you're trading with. This decentralization is the basis for Bitcoin's security and freedom.\nEmail let us send letters for free, anywhere in the world. Skype lets us make phone and video calls for free, anywhere in the world. Now there's bitcoin. Bitcoin lets you send money to anyone online, anywhere in the world for less than a cent per transaction!\nBitcoin is a community run system not controlled by any bank or government. There's no wallstreet banker getting rich by standing between you and the people you want to send and receive money from.\nBitcoin is more efficient than all competing currencies. This will drive its adoption in the same way computers were adopted, in that computers made people more efficient in competing in the marketplace. A currency has value by it being widely used. Bitcoin is a startup currency with a deflationary bootstrapping economy. Its use spreads by providing the speculator incentive. \nBitcoin is going to be the biggest opportunity for innovation that the world has seen since the industrial revolution. An idea whose time has come.\n", "What are the legal processes that someone would have to go through in order to get a Bitcoin exchange operational?": "\nAt the present moment, no country recognizes bitcoin as actual \"currency\" so the laws for exchanging, buying, selling or trading in bitcoin are exactly as they would be for simply setting up a shop. For legal purposes, pretend bitcoins are any other object, let's say a chair...\nIf you set up a web site that exchanges chairs for USD and you sell enough chairs, you'll probably need a business license, it would probably be smart to incorporate your chair-selling business at some point as well. If you \"mine\" (assemble?) chairs then you have a cost of production and you make a profit. If the profit exceeds some amount which your state/country has established then you must pay taxes on those profits. Transactions which take place using bitcoin are essentially barter transactions: whatever laws would apply if you traded an equally-valued number of chairs for that XBox 360 apply to purchasing it with bitcoins as well.\nI qualify all of this with \"at the present moment\" because it's all quite likely to change at some point. Bitcoin is only unregulated at the present time because lawmakers are, for the most part, unaware of its presence. Once they become aware, wheels turn slowly but eventually new legalities will inevitably spring up around the bitcoin community. If you intend for your exchange to last for more than a few years it may be worthwhile to set up shop offshore in a country like Panama, where the laws are more favorable to exchanging currency.\nEdit: I must also mention that bitcoins may be recognized as a \"value store\" without being recognized as a currency. I am not a lawyer so this should not be taken as legal advice. If you have concerns about the legality of any service you wish to run, you should contact a lawyer - though even this is of questionably little help since at present there is not (to my knowledge) any precedent for just about anything we do with Bitcoin. As with all young technologies, expect legislation to spring up around it and expect things to change soon and often.\n", "transactions - How can I send Bitcoins via SMS?": "\nJust an account on http://phoneco.in/  because thats exactly what the service does.  [Update: Phoneco.in is defunct.]\nUpdate: A new service as well to check out. http://dialcoin.com/ [DialCoin's site is up yet but has suspending service.]\n", "currencies - Are Bitcoins destined to forever increase in value?": "\nIn theory yes. If demand grows at a steady rate this will certainly be the case, as less coins will be produced making what is available more desirable.\nIn reality there are other factors which could affect the value of bitcoins.\n\nAlternate chain could supersede bitcoins (unlikely at this time)\nVulnerabilities like what has appeared (with hacking) already in the main markets\nOverspeculation of market trends\n\nThink of it more like gold than a fiat currency in the likelihood of behaviour (nb. my opinion, may not be the case)\nIf the value does keep increasing it can split into eight decimal places to make a very large number of potential units of currency.\n", "transactions - Is the authentication system of the Bitcoin <-> SMS service PHONECO.IN adequate?": "\nI think it is probably adequate for its intended purpose but not adequate for managing large balances.\nThe biggest problem is the risk of compromise or theft of your phone or phone number. Anyone who obtains physical access to your phone while it's unlocked (or who is able to unlock it) can look through your text messages and can transfer your Bitcoins to themselves. The Bitcoins are effectively completely untraceable and permanently lost at this point.\nThe lack of a way to secure your account with PhoneCo.in without your phone is, in my opinion, a serious problem. What if I can't find my phone but might just have left it a friend's house? Am I supposed to disable my phone with my provider only to re-enable it in twenty minutes when I find it? Or am I supposed to have a 20 minute window in which someone can break into my phone and steal my Bitcoins? (Will a mobile company shut off your phone immediately even at 3AM?)\nIf your phone is lost or stolen, you have to have it disabled immediately -- even if it's locked, even if you might find it in a few minutes.\nAnother problem with the accounts only being associated with a phone number is that I have to trust my mobile provider. If I lose my mobile account for any reason, I lose my coins too. If my phone number is erroneously transferred to someone else, they get my Bitcoins or at the very least, I cannot get them. If my mobile provider suddenly decides I broke some rule and they cancel my contract \"for security reasons\", how can I prove to PhoneCo.in that it's my account?\nSo, the service is simple. It's convenient. And its security is about comparable to a physical wallet (that can also be lost or stolen).\n", "academic research - Are there scientific studies related to the Bitcoin technology?": "\nBitcoin is a relatively new phenomenon and the peer-review process takes a while, so there is not much out there yet.\nThe most notable is a network analysis of bitcoin transactions done around the alleged \"allinvain\" theft earlier this year.\nhttp://arxiv.org/abs/1107.4524\nOther than that, there are currently a few articles published in academic journals that focus on bitcoin (as well as pop-sci and pop-compsci articles in various places)\nFor example\nGrinberg, Reuben, Bitcoin: An Innovative Alternative Digital Currency (April 21, 2011). Available at SSRN: http://ssrn.com/abstract=1817857\nThe best answer may be to do this in the form of a community wiki where articles published in academic journals can be posted by subject, as if bitcoin survives it will obviously start to receive a lot of attention.\n", "What are the bandwidth requirements of a mining rig?": "\nWith pooled mining, at 900Mhash/s, you'll need a new work unit every 3 seconds or so. Each work unit requires about 256 bytes out and about 768 bytes back. So that's 700 bits per second out and about 2,000 bits per second back. Essentially, zero.\nSolo mining is a bit harder to estimate. You will need to receive and relay all new blocks as they are discovered, you will need to receive all transactions that are relayed by nodes you connect to. You can heavily limit the number of other nodes you are willing to connect to, but this will impact your stale shares level and may reduce your transaction fee income.\nI measured the bandwidth usage of the client with 60 connections (you can drop down to 8 if you want) and made sure my sample included discovering a block. The inbound average bandwidth was 12Kbps (1.50 KB/s) and the average outbound bandwidth was 9Kbps (1.04 KB/s). So that should give you an idea what solo mining would be like.\nNotice that the bandwidth usage is basically insignificant in both cases.\nFor multiple rigs, there is no adjustment in the solo mining cases. All the rigs can be configured to query the single client. The client's bandwidth requirements will be the same.\nHowever, there is a change in the pool mining case. When a new block is discovered, each miner will need a new work unit immediately since its existing unit is stale. This happens on average about every 10 minutes. Effectively, increase the bandwidth requirements by .5% for every additional mining rig. Note that if you run more than one instance of the mining program on a rig, count it as more than one rig. (This still assumes the rigs total 900Mhash/s.)\n", "security - What methods could a government use to shutdown Bitcoin?": "\nI think the best way of analyzing your question would be to break the destruction of the Bitcoin into categories. There is the notion of a hard destruction meaning an attempt is made to physically compromise the Bitcoin network either by a 51% attack or international legislation. And there is the notion of a soft destruction, where attempts are made to De-legitimize the currency through media manipulation and also persistent DDOS attacks on the infrastructure supporting the Bitcoin.\nIn terms of Hard Destruction, I can identify the following scenarios:\n\nThe NSA or some other entity with both the budget and experience create a VLSI project to both develop and deploy an ASIC design that would result in a 51% attack\nInternational regulation is developed that significantly inhibits one's ability to exchange Bitcoins for local currencies. Essentially forcing the Bitcoin underground like a drug cartel \nA mathematician discovers how to break ECDSA (very unlikely)\nInnovation results in the Bitcoin being replaced with another currency\n\nIn terms of Soft Destruction, I can identify the following scenarios:\n\nThe media alongside a covert multi-government effort conduct several propaganda campaigns to sway public opinion that the Bitcoin is either a massive scam or somehow bad\nCumbersome regulations are adopted to monitor and control Bitcoin exchange\nPersistent DDOS attacks occur on the major exchanges like Mtgox and also the supporting infrastructure   \nOne way to attack Bitcoin would be to have large amounts of money alternately pushed into Bitcoin and pulled out of Bitcoin, thereby massively increasing volatility. These market fluctuations could be aggravated by a covert government programme of destructive funding and public dis-information. This would make doing business in Bitcoin more difficult.\n\nIn all honesty, the Bitcoin is an experiment. We have no idea what will happen and who will oppose it. \n", "security - Have any cryptography experts vetted the bitcoin source code?": "\n\"It looks good to me\" tends to make for a pretty boring paper.\nSecurity expert Dan Kaminsky has given talks and written articles about the Bitcoin system. His two main points are that it cannot scale to the number of transactions a payment processing system needs and that it is not as anonymous as many people think.\nHe also wrote, \"As a note, I have a tremendous amount of respect for BitCoin; I count it in the top five most interesting security projects of the decade.  Entire classes of bugs are missing.  But it's just not an anonymous solution, and the devs will say as much.\"\n", "What is a good mining pool/payout model for infrequent mining?": "\nThere are multiple approaches to pooled mining, each with its own benefits and detriments. Assuming you are a dedicated miner who does not pool hop then the scenario you describe should be an \"edge case\" that should rarely if ever occur. That said, common payout schemes include:\n\nPPS - Pay Per Share. Each submitted share is worth certain amount of BTC. Since finding a block requires  shares on average, a PPS method with 0% fee would be 50 BTC divided by . It is risky for pool operators, hence the fee is highest.\nSMPPS - Shared Maximum Pay Per Share. Like Pay Per Share, but never pays more than the pool earns.\nESMPPS - Equalized Shared Maximum Pay Per Share. Like SMPPS, but equalizes payments fairly among all those who are owed.\nCPPSRB - Capped Pay Per Share with Recent Backpay.\nProp. - Proportional. When block is found, the reward is distributed among all workers proportionally to how much shares each of them has found.\nPPLNS - Pay Per Last N Shares. Similar to proportional, but instead of looking at the number of shares in the round, instead looks at the last N shares, regardless of round boundaries.\nScore - Score based system: a proportional reward, but weighed by time submitted. Each submitted share is worth more in the function of time t since start of current round. For each share score is updated by: score += exp(t/C). This makes later shares worth much more than earlier shares, thus the miner's score quickly diminishes when they stop mining on the pool. Rewards are calculated proportionally to scores (and not to shares). (at slush's pool C=300 seconds, and every hour scores are normalized)\n\nThe important factor is that you avoid Proportional payout systems as they are vulnerable to pool-hopping so you will probably lose some portion of your revenues to hoppers on those pools. For your concerns, SMPPS, ESMPPS or PPLNS would be good choices, but there are other factors to consider and it is ultimately up to you to choose a payout scheme and pool that best fits your needs.\n", "miner configuration - Are there any Mining OS to be started from USB?": "\nLinuxCoin is probably the closest thing to what you're looking for. According to the wiki, Linuxcoin is:\n\nA lightweight Debian-based OS which includes in the image everything\n  that is necessary to run as a Bitcoin client and everything needed to\n  get started mining on ATI hardware.\n\nEdit: It may also be worth looking into BAMT if your operation is of significant size\nUpdate: How things change... BAMT is now the de facto mining distro. I'm now having a difficult time even finding a live link to download LinuxCoin from and BAMT has gone from experimental to a full-fledged mining distro usable for nearly any scale. I highly recommend BAMT over LinuxCoin.\n", "weaknesses - Which Bitcoin weakness most hinder Bitcoins ability to gain market and mind share?": "\nIf the credit card industry has taught us anything it's that merchants will accept whatever form of payment there is adequate demand for. Merchants have been perfectly willing to absorb some percent of loss from credit card chargebacks, bounced checks etc. for quite some time and will likely accept some percent of loss from 0/unconfirmed transactions (once we actually know what percent loss that is, anyway).\nThe real \"sell\" is with consumers. If enough consumers use bitcoins, merchants will begin accepting them - and even if they don't they still hold value as a means of long-distance funds transfer and perhaps as a store of value. Consumers also don't care about technical limitations, that's for us geeks to figure out on their behalf, so points 2, 5 and 6 are basically \"our problems\" to fix. What consumers will care about most, in my opinion, is #4: \"The client is difficult to use and its operation difficult to understand.\"\nWhen there's \"an app for that\" that just works and doesn't need whitepapers, wikis etc. to comprehend, the biggest hurdle has been jumped.\n", "security - Do any of the Bitcoin exchanges implement trading curbs?": "\nMt. Gox has stated that they now use \"circuit breakers\" to disable trading pending manual intervention if trading appears suspicious or unreasonable. They reported a few minor incidents where the breakers did trip in the initial implementation due to unusually high, but normal and innocuous, volatility.\nMy recollection is that TradeHill only has breakers on the movement of Bitcoins out of the exchange. So far as I know, they have no breakers on trading -- at least not that they've announced.\n", "commerce - What percentage of Bitcoin transactions never complete?": "\nAn orphaned transaction is formally a transaction that depends on a prior transaction that is not yet in the block chain or pool.  See the Protocol Rules.  These types of transactions are held back from the transaction pool until the prerequisite is met.  However, these types of transactions are very difficult to generate, the client won't generate such transaction, so you'd have to construct it manually.\nThe purpose of allowing them is because the protocol must allow for the possibility that it receives transactions in the wrong order.  Accidentally generating transactions in the wrong order is not possible as far as I know.\nIf you are referring to orphaned blocks, then you should not see transactions get orphaned in this way, the blocks that are accepted instead of the orphaned ones should also contain all of the same transactions.\nEdit: The question has been rephrased.  The percentage of general transactions that never complete should be zero.  I've never heard of it and I've never seen it.  The two exceptions, as mentioned elsewhere are coin generation on orphaned blocks, and intentional double spend attempts (in which case the answer is \"as many times as people try to double spend\"). As I mention above, the reason for this is because general transactions do not become orphaned if a block chain branch becomes orphaned.\n", "charts - Where can I find a graph of the current size of mining pools?": "\nThe http://bitcoinwatch.com/ site gives a pie-chart of the hasrate distribution by mining pool.\n", "commerce - Are there any hosted online store solutions (a la Shopify.com) that are compatible with bitcoins?": "\nAFAIK there are no publicly available out of the box solutions for setting up a store that uses Bitcoin. Although; there are many viable solutions using Bit-pay, their system integrates well with most platforms. If there is a platform you want to use their system for, their sales team can surely help you do that.\nI have no affiliation to Bit-pay but spoke with one of their founders in length at the Bitcoin conference.\nI would recommend looking into setting up a wordpress site (hosted, not wordpress.com), using ecwid shopping cart, and asking bit-pay to integrate the store into ecwid for you. \nThis setup is a 99% one size fits all, and you would be pioneering the way for others to follow. Bit-Pay may have an alternative solution, but I have developed several online stores (10+) for clients - and use wordpress/ecwid for both of my personal stores (after trying many others).\n", "investing - What are some of the risks of speculating on bitcoin value?": "\nVolatility: The price of Bitcoins is fairly unpredictable. A speculator is basically trying to predict the future price of Bitcoins.\nSecurity: A speculator generally has to trust his Bitcoins and currencies to an exchange, at least some of the time. That exchange could disappear or claim he transferred out his Bitcoins. When his Bitcoins are not in an exchange he has to store them in a wallet which is vulnerable to compromise.\nTechnology: Bitcoins could become obsolete overnight if some new, superior crypto-currency came out. This could start as a sharp drop faster than a speculator can react. He would then have to either take a big loss or risk a total loss.\nUnknown Defect: There has already been one case where a software defect in the client forced the unwinding of many transactions. What other problems might pop up one day and negatively impact the speculator either directly (by causing him to lose Bitcoins) or indirectly (by causing his coins to lose value)?\nKnown Defect: A 51% attack, double-spend attack, or similar problem could cause the Bitcoin system to become unstable or could impact the speculator's transactions directly.\nLegal: The legal status of Bitcoin trades and the tax implications are in many cases unknown and in all cases subject to change, particularly if Bitcoins become popular.\nPhysical: Since Bitcoins can be easily moved halfway around the world and are untraceable, if someone knows you hold a lot of Bitcoins, he could kidnap/rob you and physically compel you to transfer your entire stash of Bitcoins to him. This is much less traceable than currencies, and you may have a very hard time getting police to take you seriously. (You couldn't even prove that you had lost the coins as opposed to having transferred them to another wallet you control.)\nMistake: A speculator could make a typing mistake, especially while making a large number of transactions of different kinds, that results in a loss. A price or quantity could be entered incorrectly or someone else's Bitcoin address could be given as a destination for a withdrawal.\n", "money supply - Does hoarding really hurt Bitcoin?": "\n\nTL;DR: No. The argument is basically that hoarding will make Bitcoins so valuable that nobody will be willing to offer people enough to part with them. Does that pass the giggle test? Another way of stating the argument is this, \"If gold is $2,000/oz today but people think it will be $5,000/oz next year, nobody will trade any gold today.\" Again, think about it. Does that pass the giggle test either?\n\nHoarding increases the value of Bitcoins, increasing the profits from mining. This encourages more people to mine, increasing the total hashing power and thus the security of the system. \nIt also makes holding Bitcoins more profitable. This helps to encourage people to accept them in trade because they are less worried about them decreasing in value while they are holding them. Using Bitcoins as a currency inevitably means people sometimes have to hold them and having them drop in value while you hold them is a risk. Hoarding reduces this risk. But it also makes it harder to price things in Bitcoins because the value will tend to change more. Merchants don't like to change their prices twice a day.\nContrary to claims, it should not affect the trading volume or the willingness of people to use Bitcoins to pay for things.\nThe argument that increasing value means people would prefer to hold Bitcoins rather than spend them is specious. While it will make people want to have Bitcoins more, it will also make people want to convince others to give them Bitcoins more so they can have them.\nThink about it, do people prefer to pay for goods in dollars or garbage? By the reasoning of this argument, they should prefer to pay for goods in garbage, since they'd rather hold their dollars and get rid of their garbage. But, of course, people don't like paying in garbage because nobody wants garbage. If you can pay with the currency others want, you can get a better deal. So you actually prefer to spend the currencies sellers most want.\nIf Bitcoins are valuable because inflation doesn't deprive them of value, then a merchant would rather get my Bitcoins than my dollars, so he'll accept fewer of them. This will cancel out the effect of me preferring to pay in dollars rather than Bitcoins. So it should be a wash.\nOr, put another way, whatever the present and future prospects, there should always be some equivalence between dollars and Bitcoins that people roughly agree on. So whether I pay X dollars or Y bitcoins, where X and Y are in this ratio, will purely depend on whether I prefer the characteristics of dollars or Bitcoins for the transaction.\nA consequence of this is that hoarding won't negatively affect the trading volume either because that's only dependent on people's use of Bitcoins to buy and sell things. If hoarding makes Bitcoins worth twice as much, only half as many will be used to buy and sell things and the volume (the total value traded) will be the same.\nI don't believe it's lost opportunity either. It's not like people who want to trade Bitcoins can't get them because they're all being hoarded. (Nor will it ever be likely to be an issue, since that would just raise the price and thus fewer would be needed. Bitcoins have effectively unlimited divisibility.)\nSo why do so many people think currency hoarding is bad? Because it usually is, and empiric studies even show that it is. But the logic of why currency hoarding is bad doesn't apply to Bitcoins, especially when it's a minority currency.\nBitcoins are different enough from physical fiat currencies that empirical studies don't apply unless the suspected mechanisms for the observed effects are believed to apply to Bitcoins too. For example, if a penny were enough money to buy a car, how useful would dollars be?\n", "ubuntu - How do I build Bitcoin from source in Linux?": "\nBasically, you do this:\n\nDownload the distribution tarball or repository. You can use the link on the project's GitHub page.\nIf you used the distribution tarball, unpack it.\nObtain any needed prerequisites. Things you may need include the development packages or source builds of: OpenSSL, Boost, libZ, GLib2, and BerkeleyDB. You should be able to use your distribution's development packages for everything with the possible exception of OpenSSL. I don't know offhand if Ubuntu ships a version that will work with the Bitcoin client (including ECDSA support). If not, rebuild OpenSSL from the source with default options.\nMake a copy of the supplied UNIX makefile (called makefile.unix) and call it Makefile.\nAdjust the Makefile you created as needed. You may need to: Add include/library paths for the prerequisites if they're not in the usual places. Localize the name of the BerkeleyDB distribution, for example 'db_cxx-5.1' instead of 'db_cxx'. Localize the name of some Boost libraries (on some distributions, most will need '-mt' added to the end).\nType 'make' and hope for the best.\nIf it didn't work, figure out why and fix it.\n\nOne caution: If two builds of the Bitcoin client are linked against different versions of the BerkeleyDB package, they may not be able to read each other's database files (including the wallet.dat file). There is a process to convert the files (dump to text on one version, build from text on another) but it's cumbersome and perilous.\nUpdate: To your two specific issues, the fix is to remove (or comment out) lines 476 and 479 in the net.h file, the extern declarations of pnodeLocalHost and hListenSocket. (Be careful, when you remove one, the line number of the other may change. Identify both changes before you make either.)\n", "exchange rate - Is there empirical data about a relationship between bitcoin price and difficulty?": "\nIf you look at the network hash rate, you'll notice that it fell off after the Bitcoin exchange rate dropped.\nThis leads to the conclusion that price drives difficulty. A drop in price caused a drop in difficulty. I have noticed this same correlation on another occasion; about two months ago.\nAlso, the reverse is probably true. When the price soared to $30+; the network hash rate accelerated greatly. The higher prices clearly attracted miners.\n", "fraud - Are there any fundamental security vulnerabilities in Bitcoin?": "\nAs David Schwartz said in 367; Dan Kaminsky has spent some time auditing the Bitcoin core . He is a respected security professional, and his opinion on these matters is highly regarded.\nHe came to the conclusion that there weren't any concerning security vulnerabilities, but scalability is something that will have to be tackled as the project grows. Essentially; nothing the developers didn't already know about.\n", "alternatives - Does flattr complement or compete with bitcoin?": "\nRegarding the specific questions about your website, it is up to you to decide which payment methods to accept. If you want to accept small payments, Paypal and credit cards may not interest you because of their high fees. So both Flattr and Bitcoins can replace Paypal as an alternative for cheaper micro-payments.\nAs for advantages/disadvantages:\n\nFlatter charges 10% of your income\nBitcoins are not limited to small payments (you can accept any amount of them without fees)\nBitcoin price fluctuates a lot right now - you might want to consider using bit-pay if you want a steady income.\n\nLike other answers stated, you must understand that these are different systems. One is a currency and the other is a service. They can complement each other and you don't lose anything by accepting both.\n", "exchanges - If I convert my US Dollars to Bitcoins, will its value likely depreciate?": "\nThere are certainly people doing it. Anyone who holds Bitcoins who isn't moving them around is speculating in this sense. And even if you move Bitcoins around, if you don't move them sooner, you're speculating at least a bit.\nAs for whether it makes sense, that's a tricky question. There's always a risk Bitcoins could take a nose dive in value and never recover, say because they were made obsolete by a superior crypto-currency or impractical through governmental action.\nIn my personal opinion, it's a pretty good risk for money you can afford to lose. (Higher than average risk, but much higher than average possible rate of return.) But you may have to make some tough decisions when the price drops: Do I sell now, take a small loss but at least cut my losses? Or do I risk losing everything if the price never goes up? And if I do sell, and then price starts going up, when do I buy? What if I buy and then it nosedives\nSee What are some of the risks of speculating on Bitcoin value? for a discussion of some of the risks involved. It's a bit more focused on active trading than just holding, but there's a lot of overlap.\n", "commerce - How can I find out the address my payment will come from?": "\nThe current client does not allow you to select a specific address to pay from, and this would be ambiguous anyway because the payment may come from multiple addresses. So you don't know what addresses you are sending from until you make the payment.  It does, however, allow you to generate addresses to pay to.\nThe way a merchant usually associates transactions with a specific user or order is to generate a new unique payment address. Using the client, or the json api, the merchant can easily see when the unique address receives the payment and then credit the users account appropriately.\nIf you want to see what addresses you where paid from in the past then one way is to look up the transaction (most likely using the receiving address) at block explorer.\n", "privacy - How can one remain relatively anonymous while using Bitcoin?": "\n\nDon't publicly disclose any address in your wallet, or associate any address with your true identity.\nUse currency exchanges to break the 'money trail' of bitcoin addresses associated with you.*\nUse anonymizing services such as TOR when conducting business.\nBreak up your transactions between online and offline (person to person) transactions.\nBuy bitcoins for cash.\nMine bitcoins yourself either directly (solo), or with pools such as Eligius that do not require registration.\n\n*If you transfer bitcoins into a large currency exchange or other large private repository of bitcoins, then pay bitcoin back out to a new address that is not associated with you it is difficult (without a warrant) to track the bitcoins.\n", "development - IPv6 support status": "\nThe standard Bitcoin client does not at this time support IPv6. Bitcoins.lc is a mining pool, and mining pools work by having an interface (such as PushPool) visible to the public which handles all the getwork stuff and various internals, miner tracking etc. This interface operates as a proxy to the actual bitcoin client and so the client itself can bind to an IPv4 address which is local relative to the mining interface which can have full IPv6 support.\nIn short, it is not the bitcoin client which bitcoins.lc is claiming IPv6 support for, but the proxy to which pooled miners connect.\nEdit: It looks like sipa has submitted the necessary code. According to TheBlueMatt, there is \"some alternate connection logic and anti-DDoS stuff wrt filling addr.dat on IRC\" that needs to be done first. In any case the code is out there so it shouldn't be long now until it finds its way into the official client.\nUpdate: IPv6 support was merged into the mainstream client and should be available in the 0.7.0 build.\n", "How can I start my own mining pool?": "\nThere is P2Pool and Pushpool being the two options to get your own pool running.\nThese provide the backend services, the GUI must be built by yourself with any features you may wish to include.\nThe former is almost unused at this time, although considered to be more resilent to attacks (such as DDOS)\nIf you were to consider running a pool the requirement of a very high bandwidth server is needed as it consists of using a LOT of traffic (depending where your located this may be VERY difficult to find)\nBuilding a user base may be difficult but with merged mining it may increase profit for running such an enterprise.\n", "transactions - Is there some way to merge two wallets or to import/export addresses?": "\nPywallet is a python script that (among a number of other things) can export and import key pairs. It's not as complicated to use as it might sound, some python stuff has to be installed but that's almost automatic and once it is done the tasks can be performed using a web interface. From the linked forum post (updated 8/23/11):\n\nCurrently you can:\n\nDump your wallet, see your pubkeys, privkeys, their labels, etc\nDump your transactions to a json file\nImport a key/address into your wallet, with a label, or as a\n  reserve key\nImport a transaction into your wallet\nImport transactions from a json file\nDelete addresses from your wallet\nDelete transactions from your wallet\nGet info about a privkey, i.e. see address, base58 privkey,\n  hexprivkey, pubkey and hash160, using the network you want\nSign and verify string, files, and binary string\nRead a device to find deleted keys (CLI only)\nPrint the balance of a bitcoin address, read from blockexplorer\n\n\n", "transactions - Is there any way to track an individual bitcoin (or satoshi)?": "\nHere is a possible schema describing transactions from two addresses A and B that contain initially 50 BTC each:\n     (A) 50 btc --tx1-----------------------> 25 btc (C)\n                   \\\n                    `-> 25 btc (D) --.\n                                      \\\n                                       tx3--> 50 btc (*)\n                                      /\n                    .-> 25 btc (E) --'\n                   /\n     (B) 50 btc --tx2-----------------------> 25 btc (F)\n\nThere are three transactions here, and they mention only values: those transactions are stored in the block chain like:\n\ntx1: (input on A: 50BTC; output on D: 25BTC, output on C: 25BTC)\ntx2: (input on B: 50BTC; output on E: 25BTC, output on F: 25BTC)\ntx3: (input on D: 25BTC, \u00a0input on E: 25BTC; output on *: 50BTC)\n\nOnly global amounts are involved, not individual satoshis. Could you tell where each of the satoshis in * came from? A or B? Just impossible.\nConclusion: There is no such thing as individual satoshis, they don't have identities in the Bitcoin framework.\n(And it's the same, or even worse, for bitcoins. An individual bitcoin is not well defined. It might be a grouping of smaller amounts in the same place (wallet), or at the same address, or in the same transaction, but at a given point in time.)\nIt is however possible to track money flows between addresses, which may \u201cdilute\u201d into other flows, as illustrated in this answer.\n", "ecommerce - Is there a Drupal shopping cart interface for Bitcoin?": "\nYou could have a look at uc_bitcoin by Mike Gogulski that seems be what you are looking for. A word of caution though: The GitHub code has not been updated since November 2010, it is for Drupal 6.x (has not been tried on D7) and Mike states that \"There\u2019s probably not going to be an update for a long while, either, so fork and code away\". Anyway, here's some info about it:\n\nA Bitcoin payment method for the Ubercart shopping cart for Drupal.\nFeatures\n\nGenerates a new bitcoin address for every order\nProvides payment address to customer on site at checkout, plus in a\n  subsequent email\nConfigurable timeout after which unpaid transactions will be\n  canceled automatically\nConfigurable number of Bitcoin network confirmations after which an\n  order is considered paid\nHTTP or HTTPS access to bitcoind\n\n\nThere is also a project by Darrell Duane that is based on Mike's project. There is no download available yet and the project page was updated in June 2011.\n", "What are the problems with naive pool sharing mechanisms?": "\nThe primary problem is an \"attack\" of sorts referred to as \"Pool Hopping.\" Pool hopping was first described in a paper by Bitcoin forum member Raulo and between the paper and the ensuing discussion, it was determined that there is a strategy by which pools utilizing a proportional payout method can be exploited to maximize the miner's payout at the expense of other miners in the pool.\nThe attack works something like this:\n\nIf the number of shares submitted to a pool are less than or equal to 43% of the current difficulty, the miner mines at this pool.\nIf another pool has a lower share count, the miner switches to that pool instead\nIf no pools in the miner's list are at or below the 43% mark, the miner switches to a pool with a fair payout system as backup.\n\nThe math for why this works is well described in the paper I've linked, but the basic concept is this: If I submit one share and it's the only share in the pool so far and it just so happens to be the share that solves the block, my share was worth 50 BTC to me. If my share is one of two, it was worth 25 BTC and so on. Shares submitted in \"short rounds\" (i.e. rounds that take n < difficulty shares to solve) are worth more each than those in \"long rounds\" (n > difficulty shares). If a miner stays at a pool for a long time, the long and short rounds even out. Pool hopping ensures that you're always part of those \"short rounds.\"\nThe full explanation is somewhat more complex, but that's a fairly basic explanation. 43% was chosen due to the math explained in Raulo's paper and there are a few scripts and applications to automate the pool hopping process, some free and some commercial.\nThere is rampant argument about the ethics of pool hopping, but there is little argument as to its effectiveness. Even hopping between a single proportional pool and a fair-scored backup pool sees substantial earnings increases. Hopping between multiple vulnerable pools increases gains dramatically.\n", "terminology - What is the difference between BitCoin, Bitcoin, and bitcoin?": "\nThe following answer seems to be the consensus judging from this question on the meta site.\n\n\nUse Bitcoin (with a capital \"B\") when talking about the\n  concept/technology.\nUse bitcoins (no capitalization) when talking about the unit of\n  currency (4 dollars - 4 bitcoins).\nNever use BitCoin or BitCoins\n\n\n", "network - Why can't I get over 8 connections on my client?": "\nTypically connection counts of 10 or lower usually indicate that you are behind a router or firewall that is not configured properly. Try enabling UPnP from within the Bitcoin client's options dialog. If that doesn't work, try manually forwarding port 8333 to the computer which is running the Bitcoin client/daemon.\n", "Why do I get `bitcoind: command not found` in Ubuntu?": "\nGo to the directory with the bitcoind binary.\nMake sure it's executable:\nchmod +x bitcoind\nNow run it:\n./bitcoind -daemon\n", "installation - Why is my client software not receiving bitcoins?": "\nThere are a few things that you should check:\n\nYour client is connected (it shows N connections in the status bar). If it doesn't, you have connectivity problems.\nYou have downloaded the whole blockchain (the N blocks in the status bar is not increasing rapidly). You need to wait until you have downloaded all blocks.\nBlockexplorer can tell you if the payment has been sent to your address. Just type your address in the search box. If it doesn't show up in there, it's because it wasn't sent yet.\n\nThese websites give very small amounts of money for free so they usually group transactions (instead of making many small ones). You probably need to wait a while before the payment is sent.\n", "blockchain - How do I reduce the size of the block chain data on my machine?": "\nFor portable devices there are variants of the Bitcoin client often dubbed \"selfish clients\" in that they do not download any portion of the block chain other than what pertains to their own specific addresses and transactions. To my knowledge, none of these variants has been fully developed into a desktop client, but it is likely that such projects are underway. Unless your system is literally lacking the hardware to accommodate these files, however, it is recommended that you use a non-selfish client version. The lightweight versions are called \"selfish\" for a reason - by only holding block chain data which pertains to your own transactions, you cannot pass anything but that data to other nodes and as such your client is of minimal (if any) use to the network.\n", "protocol - Why doesn't Bitcoin return lost coins back into the block reward?": "\nAs Stephen points out it would force people to spend coins. Age is not a proper measure of lostness. A common recommendation for savings accounts is to put them on physical backups such as printed QR codes that you add to while the account itself remains offline. People may even will their Bitcoin savings to their children. To force people to shuffle these coins around from time to time to keep them from being taken undoes one of the major safety features of Bitcoin. Namely that transactions can not be reversed, and your accounts can not be frozen or taken from you by any mechanism.\nAlso there is no reason. The entire Bitcoin economy could be run on a single bitcoin because of its divisibility. There simply is no reason to break other important Bitcoin features to regain those coins. It wouldn't even actually increase the miners' rewards because for every extra coin brought back the wealth is distributed over more coins reducing the value of each coin with inflation. A million dollars of value spread over 1000 bitcoins if there are 1000 bitcoins in circulation, is the same one million dollars of value spread over 1 bitcoin if there is only 1 bitcoin in circulation. \n", "How can I compute mining profitability?": "\nThere are several mining profitability calculators available.  In order to obtain useful data from these, you'll need to predict how the price of bitcoins and the mining difficulty factor will change.  Price charts are available at bitcoincharts.com, and difficulty charts are available at bitcoin.sipa.be.  There are also charts of the price to difficulty ratio available at bitcoinx.com.\n", "Can I use my wallet on different computers?": "\nIt is, with three provisos.\n\nNever run the same wallet on more than one computer at a time.\nNever run an older copy of a wallet when a newer version exists. If you send any funds, make sure to keep the newer copy of the wallet.\nMake sure all client programs are linked to the same version of BerkeleyDB.\n\nOverall, I think it's just not a good idea. The client software wasn't designed to cleanly handle the many things that can go wrong.\n", "community - Who runs www.bitcoin.org?": "\nCollecting some of the publicly available information that I found.\nMartti Malmi (aka Sirius), a student of Aalto University in Finland, was one of the core developers early on in the project. Satoshi attributed some of the new features of version 0.2 to him here and he was the one making the first commits to the Sourceforge repository back in August 2009. He was removed from the list of project developers on bitcoin.org in June 2011.\nAs Andrew points out in his answer, both bitcoin.org and bitcointalk.org is owned by Martti. He is the administrator of the bitcointalk.org forums, still active there, and could most likely be contacted using the PM feature on the forums. Both Martti and Gavin Andresen (lead developer) have access to the bitcoin.org website.\n\nEdit September 25th, 2011: The code for the bitcoin.org website is now hosted under the Bitcoin project on GitHub. This means that you can post issues/suggestions there or make a pull request if you wanna add or change something.\n", "mining profitability - Exactly how does one calculate how many BTC they will get a certain hashrate?": "\nThe answer of D.H. assumes the hashrate of the network never changes between difficulty jumps. But it can in fact evolve quite a bit, so it can be inaccurate sometimes. Your proportion in the network may change but, until the difficulty adjusts, this will not change your rewards.\nYour average reward will be :\n\nSo, in your case, with 600 MH/s and a time period of 1 day, the result is, in average, 0.3394412542813765 BTC a day (with current difficulty).\nExplanations: the first term is the average reward per difficulty-1 share, and a difficulty-1 share is found in average every 2^32 hashes.\nNow, if you're going to be pooled mining, adjust the 50 in the formula to take fees into account (use 48.5 for example for a 3% fee). Same goes when blocks start generating 25 BTC only.\n", "bitcoind - How do I configure the Bitcoin client for SSL on Windows?": "\nYou can not connect with PuTTY as bitcoind only listens to RPC-JSON commands.\nAnything that can send over the HTTP(S) protocol is fine. See the JSON-RPC class for PHP.\nAssuming that you want bitcoind to accept remote RPC-JSON calls, you would need to setup your bitcoin.conf file like so:\nrpcuser     = randomUsername\nrpcpassword = strongRandomPassword\nrpcallowip  = ipOfAllowedHost\nrpcssl      = 1\n\nThen, navigate to your data directory .bitcoin and generate a self-signed certificate. Do not enter a password when it prompts you for one.\nopenssl genrsa -out server.pem 2048\nopenssl req -new -x509 -nodes -sha1 -days 3650 -key server.pem > server.cert\n\nRestart bitcoind and test the SSL functionality. You should see the certificate details, pressing enter twice will return a HTTP/1.0 401 Authorization Required.\nopenssl s_client -connect localhost:8332\n\nThat's it, bitcoind will now accept RPC-JSON commands through through HTTPS.\n", "websites - What is GLBSE? How does one use it?": "\nGLBSE is a website where companies and individuals can issue and sell stocks, bonds, and options via Bitcoin. Anyone can create an account and issue any contracts he wants - a contract is just some text, signed by him (For example I created this bond as a proof of concept where I promised I will pay X amount of Bitcoin in the future for a loan of Y amount of Bitcoin today).\nYou can use GLBSE as an investor, transferring Bitcoins there and placing BUY and SELL orders on the various assets, or you can use it to sell parts of your company. It is a small scale version of a stock exchange (e.g. Nasdaq), with much lower fees and (almost?) no regulation. To create an IPO at an official stock exchange would probablly cost you at least a few thousand dollars, on GLBSE you can do it for half a bitcoin.\nAlthough GLBSE has a command line client and an API, the easiest way to use it would be the javascript client. You can see a list of assets here, and follow this blog for posts about new assets. An updated list of transactions is available via Twitter, and you can find graphs of the assets prices here.\n", "transactions - What protection does Bitcoin have against Denial of Service (DoS) attacks?": "\nThe network has a moderate amount of protection against DoS attacks. If you flooded a single node with data from a single source, it would just drop you. You could reconnect, of course. You would need a lot of resources and effort to knock out a node, but it's possible to knock out a single node by overloading it.\nThe owner of an attacked node could simply stop accepting incoming connections and he could still operate. He still might, by sheer bad luck, make some outgoing connections to malicious nodes. But he'd quickly close all such connections and be left only with connections to non-malicious nodes.\nTransaction flooding is perhaps the DoS attack for which the network is currently best defended. Trying to flood the network with legitimate, but nonsense transactions won't work very well. To form such a transaction, you have to claim some coins. The network will only maintain one transaction that claims a given output. And to claim newer output generally requires a transaction fee.\nIt's hard to imagine any scenario in which an attacker could maintain a significant number of concurrently valid transactions without paying large transaction fees. And even if he could, as soon as those were accepted, he'd need to be able to claim additional transaction outputs to keep up the flood. The outputs of the transaction from earlier in the flood would be too new to spend without fees.\nIn any event, the harm would be minimal. If this were working to cause harm, that would mean legitimate transactions wouldn't be going through. This means their coins would be getting older and older while the attack had to consist of newer and newer transaction outputs. Soon, the legitimate transactions would win.\n", "What are the minimum security expectations of an online wallet service?": "\nIt would be impractical to list every single expectation here, but the TradeHill exchange sets themselves up for PCI compliance. I think being PCI compliant is a great set of standards to keep your data safe and secure.\nPCI compliance is basically security standards setup by the PCI Security Standards Concil for merchants who accept credit cards, online or offline. They have 4 sets of levels of PCI compliance, which I believe TradeHill to abide to the first level (at the bottom).\nCommon sense comes into play when storing Bitcoins. Keep a small percentage of them online for immediate usage, when your hot storage gets empty, fill it back up with funds stored offline. Keep multiple secure backups of your wallet files, so a 'bitomat' doesn't happen.\nI don't think there is anything to protect a staff member from rubber hose attacks, but limiting the access of your staff members so that the information is accessed on a need-to-know basis through someone like you would help prevent sensitive data leaking. If they're attacking you, then you're fucked.\n", "mobile - What are the risks of exchanging Bitcoins via Near Field Communication?": "\nThe risks could be, someone else with a good NFC communicator could intercept your request and make you send some BTC to them, having another persons phone next to yours with the app can do the same, and possibly NFC jammers can really cause a lot of problems with the transfer.\n", "development - Java library for Bitcoin Client Application": "\nBitCoinJ\nIn addition to @D.H's answer, BitCoinJ provides the following for developers\n\nopen source through Subversion\neasy to use Java API\neasy to integrate via Maven\naccess to either release or snapshot editions depending on your risk profile\n\nBitCoinJ also uses the Bouncy Castle encryption algorithm implementations. Some of these were missing or poorly implemented in Android which necessitated the inclusion of these libraries into BitCoinJ (currently via the Maven Shade plugin to allow updates to Bouncy Castle to be introduced when they occur). \nThese inclusions makes it a very useful library to get started with than simply rolling your own against the JSON API of the standard client. \nDisclaimer: I'm a contributor to the BitCoinJ project so I'm a bit biased regarding it's utility. \nBCCAPI\nA transaction and balance monitoring API for Java.\nFrom the website:\n\nThe BCCAPI (BitCoin Client API) allows you to create a light-weight\n  secure Bitcoin client in Java. The BCCAPI connects to a server that\n  holds the block chain, and which tracks the client\u2019s wallet balance on\n  the clients behalf. The server only has knowledge of the clients\n  public keys, and is in no position to spend funds owned by the\n  client\u2019s wallet.\n\nThis could be useful if your application does not require the client to spend coins through your system.\nOff topic: A note on Bitcoin clients in Java\nAlthough it's not a library as such, you may benefit from looking at the source code for the MultiBit project to get you started in creating a Java Swing based Bitcoin client based on BitCoinJ with internationalisation and QR code support.\n", "security - How can a single person operation keep a collection of online wallets secure?": "\nMy solution in Open-Transactions is to create a voting pool between participating transaction servers. (I noticed people discussing the project here so I wanted to make sure it's clear that this has only been proposed -- I haven't coded it yet.)\nWhen Alice bails into an OT server, instead of sending her BTC directly to the server, she would send it to the voting pool. \n===> My proposal was, whenever she wants to bail back OUT again, she sends a signed request to the server, and then she forwards the server's signed reply to the members of the pool. IF the pool members have a record/audit of Alice's account (which must be in a DHT they share) and IF the two signatures both verify on the receipt, and IF the request is within the allocation for that server and its maximum bailout-per-day, then the pool members vote ON THE BLOCKCHAIN to release the funds back to Alice.\n===> This can also have a time delay on it, like a 24-hour bailout if necessary, and it is also subject to all pool members having access to audit data of the other pool members. (The other transaction servers.)\n===> In the event where a server is HACKED, it will still be unable to move any of Alice's Bitcoins, because the other pool members won't vote for it without Alice's signature.\n===> In the event where the server uses a dummy account (hidden from the DHT) to inflate the internal currency, the other pool members won't vote for such bailments out because it can't get past the real-time or daily audit.\n===> In the event where a server refuses to answer Alice's bailout request, she can submit it to the pool members, which triggers a message to the offending server. If there is no reply, after a timeout, then they can vote 9 out of 10 (or whatever) to release the funds. This makes it possible to recover funds even from servers that have disappeared outright.\nI work on OT in my spare time so it will easily be a few months before the above protocol is actually operational. But that's the basic plan.\n", "Why are coin miners (such as GUIMiner) a \"threat\" in Windows Defender?": "\nIt is because of hackers that bundle the CPU miners in their viruses causing unaware AV makers to ban the miners that are being used. (including cgminer due to the fact it was cpuminer)\nEDIT: According to nmat, there are also virus GPU miners.\n", "client - How to build Bitcoin from source on Ubuntu 11.04 Natty Narwhal?": "\nWolciph over on the Bitcoin forums wrote a bash script specifically for 11.04. You haven't posted your specific build errors, but I'm guessing that the problem is with the wxWidgets lib and you'll probably have less issues when the main Bitcoin client eventually moves over to Qt (which I believe is in the works, correct me if I'm wrong). In case the link to the script eventually goes down, here it is:\n#!/bin/bash\necho \"DISCLAIMER: you are using this script at your own discretion! By typing 'c', you agree that you have read the script yourself and have understood it and that you will thus take full responsabilty in the eventuality that this script leads to any harm to you or your property. If you do not agree type 'n'\"\nread -n 1 r\n[ \"$r\" = 'c' ] || exit 0\n\nset -e\n\necho \"You will be prompted to enter your password in order to install necessary dependencies.\"\n\nsudo apt-get install build-essential libgtk2.0-dev libssl-dev libdb4.7-dev libdb4.7++-dev libboost-all-dev\nsudo apt-get build-dep libwxgtk2.8-dev\n\nmkdir bitcoin || true\ncd bitcoin\n\n[ -e wxWidgets.tar.gz ] || wget \"http://biolpc22.york.ac.uk/pub/Daily_HEAD/wxWidgets.tar.gz\"\n[ -e wxWidgets ] || tar -xvzf wxWidgets.tar.gz\ncd wxWidgets\n./configure\nmake -j3\nsudo make install\nsudo ldconfig\ncd ..\n\n[ -e miniupnpc*.tar.gz ] || wget \"http://miniupnp.tuxfamily.org/files/download.php?file=miniupnpc-1.5.tar.gz\"\n[ -e miniupnpc*/ ] || tar -xvzf *miniupnpc*.tar.gz\ncd *miniupnpc*/\nmake\nsudo make install\ncd ..\n\n#for some reason, github's certificate doesn't work:\n[ -e bitcoin*.tar.gz ] || wget --no-check-certificate \"https://www.github.com/bitcoin/bitcoin/tarball/v0.3.21\"\n[ -e bitcoin*/ ] || tar -xvzf \"v0.3.21\"\ncd bitcoin*/\nmake -f makefile.unix\n#optional:\nstrip bitcoin\necho \"Bitcoin is now compiled : '$PWD/bitcoin'\"\necho \"Launch bitcoin now? (y/n)\"\nread -n1 r\n[[ \"$r\" = y ]] && ./bitcoin\ncd ..\n\n", "scalability - Can the number of transactions per second ever overwhelm the network?": "\nThere are three parts to this:\n\nThe miners have to verify each transaction that will go into the block and all transactions that are in the block they will be basing their own work on\nEach client needs to look for transaction destined to their own addresses, which can get hard if you have a large address pool\nSince all transactions are broadcast the network itself could potentially be flooded.\n\nThe first two are pretty simple to solve since most computers already can process up to 100 transactions a second (resulting in roughly 10*60*100=60'000 transactions per block) and this can be pushed by investing in larger hardware to do the processing, and offloading verification to trusted third parties.\nThe last part is harder to solve as it results in possibly O(n^2) messages going around the network. Here a more structured network might do the trick, but all attempts so far to create a structured network have been dismissed.\nLast but not least the blockchain grows linearly with every transaction which uses diskspace on every client. This has been partly solved by Satoshi in his paper.\n", "weaknesses - What security features are built in to the standard Bitcoin software?": "\nEssentially, almost none. But all of the problems aren't really particularly serious or the proposed solutions don't really help anyway.\nThe latest version of the client doesn't use IRC by default, though it's still supported to help older clients find newer clients. Instead, DNS is used. But these really aren't points of failure because a list of known working legitimate nodes is hard coded into the client. And as soon as you can find one node, it can send you the current list of working nodes anyway.\nWallets aren't encrypted by default, but if they were, we'd be flooded with \"I forgot my wallet password\" complaints and people would lose their Bitcoins anyway. Also, there are complex technical reasons why password-protecting the wallet won't actually work against the typical threat model (mass distributed malware with specific Bitcoin knowledge).\nThe client supports a 'backup wallet' command. But the wallet is in BerkeleyDB format. I wish the client had a native wallet format specifically for backups. There is work on fully deterministic wallets, so you can 'backup' your wallet just by knowing a passphrase even with no backup files at all. This is a legitimate issue and one that's being worked on.\nThe server does default to plain text, but it also defaults to localhost communication only and you must configure a password to run it in server mode. (There's no issue in GUI mode.)\nThese issues are all being worked on. The client is pretty raw at the moment, definitely.\n", "cpu mining - Is it possible to generate bitcoins with a Google Chrome extension?": "\nThe Bitcoin Miner extension is simply this flash game. Rlweb's Bitcoin Generator does not seem to do anything at the moment.  As far as I understand from the description, this should be a client for the bitp.it pool, but it just adds a button to chrome that shows some text.\nMining with your browser is possible. There is an open source javascript CPU miner, but it is no longer being developed because the difficulty is too high to mine with Javascript. Like Evil Spork said, other alternatives supporting WebCL and other browser plugins are coming up, but I don't know of any for Google Chrome.\n", "gpu mining - What happened to Krad Miner (the first javascript GPU miner)?": "\nI purchased Krad Miner from the creator for the bounty cost of 50 BTC, and have released it as open source (Apache 2.0 license) on Github. Since the author has other projects using the Krad label, I have renamed it to Tumen Miner. I would currently consider it alpha-quality; I have not run it, merely cleaned it up as best I could.\nIn the short term, I plan to fund some minor testing and development on it. Longer term, I may start coding on it myself, if I ever find the free time. I welcome donations in the form of bug reports, code pull requests, and BTC to pay the coders.\nMerry Christmas, coiners.\n", "legal - Tax implications in Canada of buying and selling Bitcoins?": "\nTaxing authorities consider currencies or goods received in trade to be taxable income. Bitcoin would fall in the same category as foreign currency or barter, and would be taxable.\nIn Canada, barter is sometimes exempt from taxation:\n\"According to the Revenue Canada document T-490 (Barter Transactions): if the person(s) bartering is an employee, and not a business owner, they may exchange non-business-related services or goods \"occasionally\" without being subject to taxation. However, if the goods are business-related, or the exchange is \"a regular habit\" it falls under the category of taxable income, regardless of his employee status.\" source\nHere's the Revenue Canada bulletin on barter and taxation:\nhttp://www.cra-arc.gc.ca/E/pub/tp/it490/it490-e.txt\n", "qrcode - What additional benefits can QR codes bring to Bitcoin applications beyond payment requests?": "\nIn terms of marketing, here is a very nice QR code that could be used for spreading the word about Bitcoin. It contains a link to bitcoin.org. See this thread on bitcointalk.org for more information. It was created by phelix at bitcoinx.com.\n\n", "mobile - Is Bitcoin suitable for fast transactions, eg in shops?": "\nThe time for when a block has been confirmed is the main issue that seems to arrise. The coffee shop problem (I want my coffee now but this may take 10 minutes to confirm payment)\nThe mobile reception issue could be resolved by allowing restricted open access with on-site wifi service\nThere are third party services which may help this very effectively (www.flexcoin.com)\nAlso SolidCoin offers 3 minute blocks and may be substantially more elegant if a third party service was chosen not to be used for small transactions.\n", "bitcoin economy - How could recurring payments be implemented?": "\nI think the most obvious way, though perhaps not the best way, is precisely the same way as is done with other currencies. If Bitcoins are adopted as a primary currency, they'll probably be used the same way other primary currencies are.\nI am paid in dollars, but no actual dollars transfer unless that is absolutely required. Instead, I have a bank account denominated in dollars from which I can withdraw actual dollars any time I need. These same mechanisms could be implemented with Bitcoins. I could have an account denominated in Bitcoins, I could be paid in Bitcoins, I could pay bills in Bitcoins, but no actual Bitcoins need change hands except where the benefits of doing things that way outweigh the costs.\n", "development - What is the meaning of the Bitcoin address version?": "\nLast time I heard of it, the future of version bytes was still unsettled.\nCurrently, they are used to force incompatibilities between several base58-encoded data structures:\n\naddresses / private keys\ntestnet / realnet\nalternative-chains variants (namecoin etc\u2026)\n\nThis way, you cannot misuse one for the other.\nSomeday, it might also be used as a real version number (the current SHA-256 + RIPEMD-160 + base58-encoding for keys could become obsolete).\n", "Useful alternative Bitcoin transaction scripts": "\nIf a full implementation of the scripting language were in place, then pretty much all of the following could be implemented. However, there are serious security concerns with some of these and they warrant further analysis before finding their way into the clients.\nThe referenced Scripts link in the original question contains several script examples covering the following use cases which are worth listing before getting to the more exotic cases:\n\nStandard generation/transaction to Bitcoin address - this is the typical situation everyone uses when sending/receiving bitcoins\nStandard generation/transaction to IP address - a method of automatically getting the recipient to generate a Bitcoin address so long as their IP is known (very dangerous due to man-in-the-middle attacks) \nTransaction with a message - Add arbitrary text to a transactions (typically limited to around 10,000 bytes) which allows for ASCII art and other graffiti, perhaps even a steganographic exploit\nHidden recipient address - allows the address of the recipient to be encrypted so that only a shared secret between them allows the bitcoins to be spent\n\nThe further linked Contracts page on the wiki provides these additional use cases which are somewhat more complex:\n\nProviding a refundable deposit - handy for proving that you're willing to spend money to ensure that you're reputable, with the option to get it back after a given time\nEscrow and dispute mediation - permits several parties that don't trust each other to trade using their common trust of a given set of trusted third parties (this is the classic M of N signatures to release the funds contract)\nAssurance contracts - essentially to allow pledges to be given for the greater good by competing parties (example is to pay for a lighthouse)\nUsing external state - Scripts can consult addresses that may be attached to \"oracle scripts\" which can perform transaction signing based on complex internal logic (example is to guarantee payment of an inheritance upon death or coming of age whichever is the sooner)\nTrading across chains - Allows other Bitcoin based currencies to trade against each other (thus potentially solving this problem for countries wishing to use Bitcoin)\n\nClearly there are many opportunities for exotic transaction types:\n\nProof of knowledge - to prove that knowledge was acquired at a certain time a transaction could be created that references an oracle script that could provide verification. The oracle may not exist at the time of presentation, but it would be trivial to run the script and verify the outcome.\nPayment on successful prediction - another external state use case to allow an external oracle to sign a transaction based on pre-arranged transaction outcomes (examples include gambling, spread betting etc)\n\nAll in all, it shows that Bitcoin is a very effective financial trading instrument.\n", "How does a recipient know they can satisfy the transaction script to spend their bitcoins?": "\nI don't think your threat model makes sense. If you \"send me Bitcoins I can't claim\", you've done the equivalent of nothing at all, except you've wasted some of your own Bitcoins in the process.\nCurrently, clients will only recognize Bitcoins as being sent to them if they can confirm they can claim them. Non-standard transactions (those with scripts other than the two well-understood forms) are ignored.\n", "How do Scripts work?": "\nScripts are one of Bitcoin's more clever features. The most obvious way to implement a crypto-currency is to make a transfer be to a public key. To claim the transfer, you sign with the corresponding private key. This is not the way Bitcoin works.\nWhen you send Bitcoins (the out of a transaction), you send them to a script. When you claim Bitcoins (the in) of a transaction) you claim them with a script. To determine if a transaction input correctly claims a transaction output, the two scripts are combined and the result is executed. If the result is true, then the input claims the output. The scripting language is stack-based and roughly similar to Forth.\nThe transaction input (the script trying to claim the Bitcoins) runs first. It will typically put a public key and a signature onto the stack. Then the output (the script whose Bitcoins are being claimed) runs. It will typically confirm that the public key is the correct one and that the signature signs the transaction with the corresponding private key.\nThus, you get the same effect as if you just specified a public key and signature, but you have the option of specifying more complex scripts. Unfortunately, this kind of simple script is pretty much the only kind of script supported right now. The original developer(s) imagined much more interesting scripts including things like contracts, multi-party signatures, and so on.\nM of N signatures are planned. This way, you could list, say 3 public keys such that any 2 of them could claim the Bitcoins.\nUnfortunately, some of the scripting components are feared to have security risks, so many of them are disabled currently.\n", "blockchain - Decentralized escrow functionality built into Bitcoin?": "\nI don't think it's possible in principle. The escrow service is one that is inherently authorized to make a decision as to who ultimately gets the funds. In a decentralized escrow service, who or what would make that decision?\nIf I place some coins in escrow as part of a transaction to you, something must decide whether those funds ultimately go to me or you. Obviously, that decision can't be made by me or you.\nI have heard proposals where the coins are \"burned\" (lost forever) if both parties don't agree on who should ultimately get them. I think that's a pretty useless service as it allows one party to blackmail the other. \"Release the coins to me and I'll give half of them back to you. Otherwise, they're lost forever.\"\n", "Why am I getting this make error w/ 0.4.0rc1 on Ubuntu": "\nThe first two lines are just warnings that can be ignored. But the error is a known issue caused by Bitcoin's use of a deprecated API that was removed in your version of Boost. The fix is to modify src/ui.cpp around line 1809 as follows:\n  {\n     if (!fAutoStart)\n     {\n-        unlink(GetAutostartFilePath().native_file_string().c_str());\n+        unlink(GetAutostartFilePath().c_str());\n     }\n     else\n     {\n\n(Remove the line marked with a - and replace it with the line marked with a +.)\n", "security - How can one download the bitcoin client securely?": "\nJeff Garzik signs every release with his GPG key (also here). You can find release announcements (such as this one) on the SourceForge.net Bitcoin development list.\nTo verify the signature on a release, obtain the key from the link above. Obtain the release announcement from the link above. Obtain the download from any source. Then point GPG at the release annoucement (or the signature block from it, including the BEGIN and END lines). GPG will ask what file you want to verify, pick any of the ones listed in the signature certificate. It will then tell you if the release is identical to the release Jeff Garzik signed.\n", "client - How can you find out what is the latest block number?": "\nAll these sites display the total block count:\n\nhttp://blockexplorer.com/\nhttp://bitcoincharts.com/\nhttp://bitcoinwatch.com/\n\nBlockExplorer also has an API that among other things lets you get the latest block count.\n", "exchanges - How can one find how much \"room for arbitrage\" is there in the Bitcoin market?": "\nAfter studying Bitcoin Arbitrage for the past few months, I've developed an information service to answer this question.\nCoinThink.com gives a complete picture of arbitrage. All asks that have a bid at a higher price (on another exchange) are tallied into a total opportunity amount, including the fees for each exchange. It also makes an estimate on the fee for moving money between exchanges. The result is a total dollar amount available for arbitrage.\nThe exchanges are limited to those that have an automated transfer capability - basically a connection to bitinstant. I am interested in extending the site's functionality to bigger and better information in the future.\n", "Is there a way to undo transactions with a \"too low\" fee?": "\nI have successfully used the methodology described here to delete a transaction which didn't go anywhere because of a too low fee. In short, the process is as follows:\n\nConfigure Linux machine with db4.8-util and bitcointools. Ubuntu works fine.\nRun following command on your data folder:\n./dbdump.py --datadir ~/.bitcoin --wallet-tx > tx.txt\n\nOpen tx.txt using text editor. Find transaction in question. Should look like:\n==WalletTransaction== 12a75d48a002ab920 ...\nblock: 00000000000000000000000000000000 ...\n2 tx in, 1 out\nTxIn: value: 0.007640 prev(c09e92cb94ff1fb6d4 ...\nTxIn: value: 0.000050 prev(7dcda75e6ad8b5adc7 ...\nTxOut: value: 0.007690 pubkey:  Script: DUP HA...\n\nReverse the 12a75d48a002ab920... value, get something like 92ab02a0485da712. Don't need to reverse the whole line, just a few hex values from beginning. You will need to search for this in the database dump.\nDump the database using following command:\ndb4.8_dump ~/.bitcoin/wallet.dat > dumpfile\n\nUsing text editor open the dumpfile and search for that 92ab02a0485da712 line you found earlier. There will be two lines - key and value, you need to delete both. Save the file.\nRe-import the database using the following command:\ndb4.8_load ~/.bitcoin/wallet2.dat < dumpfile\n\n\nIf all went fine, the wallet2.dat will have a database without transaction in question.\nAll of this, of course, only works if transaction was never accepted by the network, which is likely the case if you already waited a day, and nothing happens. There is no way to undo transaction which was already accepted by the network. I tried this technology twice and both times worked fine.\n", "trading - Is there a correlation between Technical Analysis predictions and actual prices?": "\nIf you are talking about Technical Analysis in general, we would need to write a book to answer that.\nAs for Technical Analysis applied to Bitcoin, just look at the date when the predictions were made, look at the graphs and compare. During the last couple of months:\n\nHe wrongly predicted a short term rally starting at $14 at the end of July\nHe correctly predicted the short term fall to $6 at the beginning of August\nHe has been predicting a long term up trend for two months that hasn't happened yet\n\nOverall, I think his analysis are well documented and based on market indicators that work very well in other markets. However, I am not sure if the Bitcoin market got to the point where Technical Analysis plays an important role for price movements. No one can really tell because this is not an exact science.\n", "security - What is meant by \"releasing code tells the hackers what to attack\"?": "\nIt would appear that Gavin is advising against providing zero-day attack vectors. \nEssentially, if someone gives fairly precise instructions (e.g. a code sample) on how to exploit a vulnerability then anyone monitoring that discussion can exploit it. This is the zero-day exploit because no-one has had time to react, create an appropriate patch and disseminate it widely. Until the patch overtakes the exploit then the affected systems are vulnerable.\nConsider the famous \"Java Double of Death\" (see http://www.exploringbinary.com/java-hangs-when-converting-2-2250738585072012e-308/ for details, Oracle fixed it here http://www.exploringbinary.com/fpupdater-fixes-the-java-2-2250738585072012e-308-bug/). \nImagine if a malicious coder decided to put that magic number into a request against your web API that and exploited the fact that you haven't patched your JVM? You'd be seeing an awful lot of unexplained JDK downtime and lost business.\nThere is a fair amount of discussion about this topic over on Security StackExchange which references this Wikipedia page about responsible disclosure. \n", "What is the Alert system in the bitcoin protocol? How does it work?": "\nTL;DR:\n\nAs @Alex Waters has stated, it's a centralised alert system to allow\n  people to shutdown their clients in response to a threat to the\n  overall Bitcoin network, pending a client patch to resolve the issue.\n  This was intended as a short term measure to counter-act perceived\n  problems in growing the software.\n\nThis thread on the forum has some interesting information about it (I've fixed the links to cover the moved forum):\n\nYes, it appeared in version 3.11. Here's the thread discussing it:\n\"Development of alert system\"\n  https://bitcointalk.org/index.php?topic=898.0;all \nBut I think Satoshi took it out of recent builds, to avoid accusations\n  that he was a point of central control (because his key would be used\n  to sign the alert). If I can find the reference to that announcement,\n  I'll post it.\nedit: here's the announcement about the removal of \"safe mode\". It's\n  not clear to me whether the alert itself was removed, or whether the\n  ability to have the alert shut down transaction processing was\n  removed:\nRemoved safe mode (0.3.19)\n  https://bitcointalk.org/smf/index.php?topic=2228\n\nClearly, Satoshi intended it to be a centralised mechanism to issue alerts that would result in clients stopping transactions (not block generation). This would act as an effective mechanism to cause clients to upgrade as a result of a bug, but a naive interpretation is that it is also a good way to shutdown an economy. \nAnyone can build a standard client and replace the key requirement with one of their own, thus negating the efficacy of a system-wide shutdown due to a compromised key. Essentially, this would cause a fragmentation of the standard client as nodes seek to protect themselves from external compromise.\nSatoshi notes this himself in this comment:\n\nIt can't do arbitrary actions remotely.  Maybe some of you are\n  responding to other posters who suggested the alert system should do\n  more?\nIf there is an alert, the following json-rpc methods return an error:\n  sendtoaddress getbalance getreceivedbyaddress getreceivedbylabel\n  listreceivedbyaddress listreceivedbylabel\nThe remaining 14 methods function as normal.\nI believe the safer option should be enabled by default.  If you want\n  your server to keep trading and ignore an alert saying the money its\n  receiving might be like the money from the overflow bug, then you can\n  use the switch and not blame anyone else if you lose your money.\nWorst case if you leave alerts enabled, your site stops trading until\n  you upgrade or add the -disablesafemode switch.\nGetting surprised by some temporary down time when your node would\n  otherwise be at risk is better than getting surprised by a thief\n  draining all your inventory.\nSomeday when we haven't found any new bugs for a long time and it has\n  been thoroughly security reviewed without finding anything, this can\n  be scaled back.  I'm not arguing that this is the permanent way of\n  things forever.  It's still beta software.\n\nGiven the ongoing backlash of misunderstanding over the concept, it appears that it was decided to remove the feature and rely instead on detecting a dodgy blockchain that is longer than the longest valid one:\n\n\nRemoved \"safe mode\" alerts \"safe mode\" alerts was a temporary\n  measure after the 0.3.9 overflow bug.  We can say all we want that\n  users can just run with \"-disablesafemode\", but it's better just not\n  to have it for the sake of appearances.  It was never intended as a\n  long term feature.  Safe mode can still be triggered by seeing a\n  longer (greater total PoW) invalid block chain.\n\nBuilds:\n  http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.3.19/\n\n", "development - How do I build Bitcoin source in Windows 7?": "\nTake a look at Windows Build Instructions By Matt Corallo, it's outdated, but has some additional comments to the included doc.\n\nInstall:\n\nMinGW Automated Installer from\nhttp://sourceforge.net/projects/mingw/files/OldFiles/mingw-get-inst/mingw-get-inst-20110316/.\n  Install with the C++ and MSYS options checked.\nActivestate Perl (for building openssl) from\nhttp://www.activestate.com/activeperl/downloads.  You don't need\n  anything except ActivePerl and Perl, none of the other fancy crap.\n  You do want to add Perl to your PATH (its an option in the\n  installer).\n\nDownload:\n\nWxWidgets 2.9.1:\nhttp://sourceforge.net/projects/wxwindows/files/2.9.1/wxWidgets-2.9.1.zip/download.\n  Unzip to C:\\wxWidgets-2.9.1-mgw\nOpenSSL 1.0.0d:\n  http://www.openssl.org/source/openssl-1.0.0d.tar.gz.     Untar  to\n  C:\\openssl-1.0.0c-mgw (yes bitcoin is designed to build with\n  1.0.0c, but might as well use the latest version since it works right?) Hint: untar using the tar binary which is included in MinGW (do not use 7-zip, it will not handle symlinks correctly) using cd \\c\\ && tar xvvf\\c\\Users\\Matt\\Downloads\\openssl-1.0.0d.tar.gz && mv openssl-1.0.0d openssl-1.0.0c-mgw in the msys shell\nBerkeley DB 4.7.25 NC: http://download.oracle.com/berkeley-db/db-4.7.25.NC.zip.  Unzip to C:\\db-4.7.25.NC-mgw\nBoost 1.43.0:\nhttp://sourceforge.net/projects/boost/files/boost/1.43.0/boost_1_43_0.zip/download. Unzip to C:\\boost-1.43.0-mgw\nBoost Jam:\nhttp://sourceforge.net/projects/boost/files/boost-jam/3.1.18/boost-jam-3.1.18-1-ntx86.zip/download. Unzip wherever you like, I used C:\\bjam \nminiUPnPc binary\nhttp://miniupnp.tuxfamily.org/files/download.php?file=upnpc-exe-win32-20110215.zip.\n  Unzip to C:\\upnpc-exe-win32-20110215\nminiUPnPc source\nhttp://miniupnp.tuxfamily.org/files/download.php?file=miniupnpc-1.5.20110215.tar.gz. Untar to C:\\upnpc-exe-win32-20110215\\miniupnpc (you only need *.h, but the others won't hurt) untar with cd \\c\\upnpc-exe-win32-20110215 && tar xvvf \\c\\Users\\Matt\\Downloads\\miniupnpc-1.5.20110215.tar.gz && mv miniupnpc-1.5.20110215 miniupnpc\n\nNote that the reason for using the binary miniupnpc release is that I\n  was unable to get it to build on my system.\nAdd C:\\MinGW\\bin to your PATH environment variable (Google is your\n  friend as it depends on your Windows Version).\nIn the DOS Shell:\nwxWidgets:\ncd \\wxWidgets-2.9.1-mgw\\build\\msw\nmingw32-make -f makefile.gcc\n\nBoost:\ncd \\boost-1.43.0-mgw\n\\bjam\\bjam.exe toolset=gcc --build-type=complete stage\n\nIn the msys Shell (MinGW shell in your start folder or\n  C:\\MinGW\\msys\\1.0\\msys.bat):\nOpenSSL:\ncd /c/openssl-1.0.0c-mgw\n./config\nmake\nperl util/mkdef.pl 32 libeay enable-static-engine > libeay32.def\ndllwrap --dllname libeay32.dll --output-lib libeay32.a --def libeay32.def libcrypto.a -lws2_32 -lgdi32 \n\nCopy the libeay32.dll file\n  to the folder where you are building/running bitcoin.\nBerkeley DB:\ncd /c/db-4.7.25.NC-mgw/build_unix\nsh ../dist/configure --enable-mingw --enable-cxx\nmake\n\nBitcoin\nIf you wish to use git to pull keep a local repository, you'll have to\n  download msgit from\n  http://code.google.com/p/msysgit/downloads/detail?name=Git-1.7.4-preview20110204.exe&can=2&q= . Otherwise, you can download the latest zip of bitcoin from\n  https://github.com/bitcoin/bitcoin/zipball/master In the msys shell,\n  cd to the unzipped location and\nmake -f makefile.mingw\n\nRun with ./bitcoin.exe (make sure you have the libeay32.dll in bitcoin\n  folder)\n\n", "What economics/finance methods and tools can be used to analyze and predict the Bitcoin market?": "\nTechnical analysis is important, but right now I think that one should not rely exclusively on chart analysis and indicators to predict Bitcoin's price movement. For example, at the end of July and mid-August some indicators, such as MACD or RSI, clearly showed a trend inversion that did not happen.\nOne of Bitcoin's unique features is the mining system and I think that, right now, this plays an important role in price analysis. After Bitcoin hit $30 in July, many people invested in mining rigs and difficulty rose a lot. Those people are looking forward to get their investment back and, since Bitcoin is extremely infalctionary right now (50 new coins every 10 minutes), there is a big selling force at the markets.\nIf miners sell 30 coins out of each block, we need around 1 million dollars per month to keep the price at $5. \nI also believe that the $30 spike was caused by media exposure. Such a small market can be easily manipulated by a few serious investors.\nMain points:\n\nUse Technical Analysis carefully.\nConsider the number of coins per block and the money invested by miners\nKeep an eye for important news that may attract new investors to the market \n\nTo finish, here is one stock behaviour that I could identify: the dead cat bounce. \n\nA dead cat bounce is a trading term used to define when a stock in a\n  severe decline has a sharp bounce off the lows.\n\n\n", "Hardware Bitcoins (Smartcards, RFID etc.)": "\nIt's certainly possible. The card would basically need four functions: add/generate account, add bitcoins, prove bitcoins, spend bitcoins. The card could piggyback on external smart systems so the card doesn't need to do very much.\nEach function would be implemented as follows:\nAdd Account: An ECDSA private key would either be randomly generated by the card or loaded from an external source. The card would add the key to its store of keys. This would be a secure operation that would require the card's internal key to perform.\nAdd Bitcoins: A list of transaction identifiers and output indexes would be loaded into the card. This would also be a secure operation.\nProve Bitcoins: This operation would prove the ability of the card holder to spend a particular number of Bitcoins. An external device specifies a number of Bitcoins to prove. If desired, approval is sought from the card holder via a PIN or similar mechanism. The card then forms a transaction to pay that number of Bitcoins but damages it so the transaction is invalid (for example, it adds a single transaction input for a billion Bitcoins). Then it signs it. The recipient, seeing the invalid transaction signed knows the card holder could have signed the corresponding valid transaction. (If desired, a challenge can be included to prove the signed transaction was generated on the spot.)\nSpend Bitcoins: This is the same as the prove Bitcoins operation except the transaction is valid, the recipient commits the transaction to the block chain, and the card updates its memory to reflect that the coins are spent.\nThe only other thing you might need is a 'sync' operation where the card fixes any discrepancies. For example, if a spend operation is done but for some reason it doesn't make it into the block chain, the card needs to know that it still holds those Bitcoins. (And can't spend the 'change' from that transaction.)\nThis is a minimal implementation. You can certainly add more capabilities.\n", "economic theory - Will the amount of electricity used for mining be huge if Bitcoin is widely adopted?": "\nThis is a very difficult prediction to make, but there is one factor often left out of mining cost estimations: cost of hardware. When amortized over their expected lifespans, the costs of various pieces of equipment can become a meaningfully large factor in Bitcoin mining costs. In the days to come, it seems likely that FPGA or ASIC miners will become more common since they offer tremendous power efficiency gains over GPUs. The \"downside\" to FPGA and ASIC mining is that it is also extremely expensive to obtain the initial equipment, which means that the cost of equipment amortized over its expected lifespan is higher than with GPU mining. \nWe're now seeing the first commercially available FPGA mining rigs become available, costing about $440 for a 100 MH/s rig consuming 6.8 watts of electricity. Here at my home in Las Vegas, NV it would cost about 55 cents per month to run one of these FPGA boards, and even if the device survived 10 years of operation before its death, amortized hardware cost would be $3.67 per month, absolutely dwarfing energy costs. The ATI Radeon HD 5830 based rigs I currently run cost about $6.58 per 100 MH/s in electricity alone, but a 10-year amortization only adds $0.96 per month per 100 MH/s to that cost. This means the buy-in for GPU mining is low but so is the profit and sustainability.\nThis puts my cost per coin for FPGAs at $2.45 and for GPUs at $7.54, though there is certainly room for improvement in those numbers and your mileage WILL vary. The important bit, however, is that FPGA mining is far more profitable regardless of hardware cost and is likely to be the next big thing, which does a lot for Bitcoin's overall energy footprint since FPGA mining consumes about 8% of the electricity GPU mining currently consumes. If FPGA mining took over right now, the Bitcoin network could grow to 12 times its current hash rate without seeing a net increase in energy consumption.\nIn short, Bitcoin is in its infancy still and so is mining. Just as most technologies begin at low efficiency and high cost and grow towards high efficiency and low costs, so too is Bitcoin mining. You are correct in your assumption that electricity use will likely grow with Bitcoin adoption, but the missing factor in that equation is the increasing energy efficiency of mining hardware.\n", "Solo Mining vs Pool Mining for users with high computing power": "\nIt completely depends on the \"pool fee\". Theoretically, with a zero percent pool fee, solo mining and pooled mining should, over the long term, produce precisely the same revenue. The only exception is that some (most) pools keep the transaction fees for themselves.\nIf you mine solo, with an expected 5 BTC/day take, that will mean on average you'll mine a 50 BTC block every ten days. It will be completely random though. You could mine two blocks in a day. You could go three weeks without a block. When the difficulty changes, not only will the amount you get paid change (that always happens) but the time between payments will change drastically as well.\nIf you mine in a pool, you take the pool fee right off the top. A 3% pool fee means you make 3% less. Also, most pools don't pay transaction fees. But your revenue is more predictable. You'll get paid on a regular basis and your payments won't vary much (until the difficulty changes, of course).\nOne advantage to solo mining is that it's more reliable. Pools have outages and have had a problem with denial of service attacks lately. Mining solo, you aren't relying on other people's systems to keep your mining going. If you pick a very reliable pool, or use a mining proxy with a \"fallback pool\" configuration, this isn't a major issue.\nOne advantage to pooled mining is that you get to use the pool's tools. These include things like web-based control panels, alerts, and so on.\n", "Is the alert system still in the main client's code? Will it be removed?": "\nSatoshi didn't remove the alert system; it still exists in the client. However, it cannot trigger RPC safe mode as it could before.\nThere are no plans to remove all traces of it, as all it does in its current state is display a warning message.\n", "development - Are there any Scala libraries/implementations/projects on bitcoin?": "\nI really don't think it's needed. Bitcoin is a complicated project, it's better to have one canonical JVM-based library than a library in each JVM language.\nAFAIK there is currently no Scala library, and I'm betting there won't be for some time (unless perhaps as a wrapper to bitcoinj?)\n", "trading - What's the best way for someone in Israel to move money in and out of Mt. Gox and/or Tradehill?": "\nFor smaller amounts you could buy bitcoins from another who holds ILS on BitMarket.eu.  http://bitmarket.eu/market/ILS or over the counter on the #bitcoin-otc marketplace: http://www.bitcoin-otc.com\nTradeHill had been planning on adding ILS, but there was a setback:\n - http://bitcointalk.org/index.php?topic=19537.msg366806#msg366806\nFor larger amounts, having your bank send USD funds via an International bank wire to an exchange would likely the cheapest and fastest method even though the fees to do so are sizable.\n - http://en.bitcoin.it/wiki/Buying_bitcoins\n", "alternatives - Can Bitcoin technology be leveraged to implement a decentralized trust system (i.e. a replacement to SSL)?": "\nWhile it's certainly possible to implement a script to handle trust the way NameCoin handles DNS-like transactions there are a few possible \"weak links\" in such a system. First, since an individual can't usually be known the trust could only be tied to individual addresses, which would encourage the re-use of addresses and thus decrease the anonymity of the network as a whole since merchants would want to find ways to get around generating a new address for each transaction in order to maximize their trust rating. The only alternative is to implement a system of binding multiple addresses into one trusted \"account\" which would further compromise anonymity by making it known precisely who owns which addresses thereby tying at least one side of most Bitcoin transactions to a real person.\nIn short, it's possible but it kills the pseudonymous nature of the network and makes transactions far too traceable to real identities. It could be implemented, but given the private (and disruptive) nature of most Bitcoin proponents it's unlikely that it will be. An external \"Web of Trust\" type system carries adequate benefits without compromising Bitcoin itself and in fact, there has been a great deal of discussion on how to decentralize them.\n", "security - What can an attacker with 51% of hash power do?": "\nActually, it's very easy to do damage to the network once you have 51%; just build your own chain faster than the network, and broadcast it whenever you like. If you send some of your coins to a new address in your own chain, all the transactions issued in the live network by spending those same coins will be reversed at the moment the longer chain is broadcast.\nRight from the bitcoin wiki (probably proof-read by many pairs of eyes) :\n\nAn attacker that controls more than 50% of the network's computing\n  power can, for the time that he is in control, exclude and modify the\n  ordering of transactions. This allows him to:\n\nReverse transactions that he sends while he's in control\nPrevent some or all transactions from gaining any confirmations\nPrevent some or all other generators from getting any generations \n\nThe attacker can't:\n\nReverse other people's transactions\nPrevent transactions from being sent at all (they'll show as 0/unconfirmed)\nChange the number of coins generated per block\nCreate coins out of thin air\nSend coins that never belonged to him \n\nIt's much more difficult to change historical blocks, and it becomes\n  exponentially more difficult the further back you go. As above,\n  changing historical blocks only allows you to exclude and change the\n  ordering of transactions. It's impossible to change blocks created\n  before the last checkpoint.\nSince this attack doesn't permit all that much power over the network,\n  it is expected that no one will attempt it. A profit-seeking person\n  will always gain more by just following the rules, and even someone\n  trying to destroy the system will probably find other attacks more\n  attractive. However, if this attack is successfully executed, it will\n  be difficult or impossible to \"untangle\" the mess created \u2014 any\n  changes the attacker makes might become permanent.\n\n", "blockchain - When and how did Bitcoin start?": "\nBitcoin's design paper was published on cryptography@metzdowd.com on October 31, 2008, which is considered by most to be the official beginning of the project. On January 3, 2009 at 18:15:05 GMT the Genesis block was established. Six days later, Bitcoin 0.1 was released and announced on the Cryptography Mailing List.\nIt is hard to estimate the size of the community at any point, especially historically, but there is a decent timeline of the major events in Bitcoin history at the official wiki.\n", "trading - Is it true that Paypal banned Bitcoins, while Google Checkout did not (yet)?": "\nI can't speak for why Google Checkout seems to have no problem, it may simply be that they are unaware of Bitcoin as of yet. Edit: A Google Checkout employee has replied that they explicitly allow virtual currencies - at least for the time being. PayPal, on the other hand explicitly bans \"the sale of traveler\u2019s checks or money orders, currency exchanges or check cashing\" in section 3(f) their acceptable use policy.\n", "How can one redeem a Casascius Physical Bitcoin?": "\nThe first 8 characters of the public address are on each coin, which allows you to obtain the full address or check the balance at FirstBits or a similar service. Beneath the tamper-evident holographic sticker on each coin is the private address which corresponds to the public address. Once you've obtained both the public and private address, the process for importing this information into an existing wallet has already been documented in this prior question.\nEdit: On a side note, it's probably worth noting that this process is almost identical to the process used to redeem BitBills\nEdit 2: Apparently these coins use a different private key format than standard. Casascius has published a utility to convert these private keys to standard addresses and more about the \"mini private key\" format can be found at the wiki. For those lacking a copy of Visual Studio, I've compiled a copy for your convenience. These keys may also be computed using any calculator or code capable of generating an SHA256 hash:\nSHA256(\"S4b3N3oGqDqR5jNuxEvDwf\") = 0C28FCA386C7A227600B2FE50B7CAE11EC86D3BF1FBE471BE89827E19D72AA1D\nOf course that's still in hex and needs to be converted to Bitcoin's modified Base58 but many wallet import tools will accept hex as well.\nEdit 3: Just heard from Casascius that we may be able to redeem these coins, as well as any device bearing a mini private key directly at MtGox in the near future.\nEdit 4: Support has officially been added\n", "Is there data on the geographic distribution of bitcoin users?": "\nThis shows bitcoin nodes based on IP address location.\nhttp://www.weusecoins.com/globe-bitcoin/  (UPDATE: link is broken)\n", "How can I use the vanity name generator to look for an address?": "\nProper syntax for VanityGen is:\nUsage: vanitygen [-vqrikNT] [-t <threads>] [-f <filename>|-] [<pattern>...]\nGenerates a bitcoin receiving address matching <pattern>, and outputs the\naddress and associated private key.  The private key may be stored in a safe\nlocation or imported into a bitcoin client to spend any balance received on\nthe address.\nBy default, <pattern> is interpreted as an exact prefix.\n\nOptions:\n-v            Verbose output\n-q            Quiet output\n-r            Use regular expression match instead of prefix\n              (Feasibility of expression is not checked)\n-i            Case-insensitive prefix search\n-k            Keep pattern and continue search after finding a match\n-N            Generate namecoin address\n-T            Generate bitcoin testnet address\n-X <version>  Generate address with the given version\n-t <threads>  Set number of worker threads (Default: number of CPUs)\n-f <file>     File containing list of patterns, one per line\n              (Use \"-\" as the file name for stdin)\n-o <file>     Write pattern matches to <file>\n-s <file>     Seed random number generator from <file>\n\nThe important options to know are -i and -r which cause the search to be case-insensitive and use regex, repsectively. In its simplest format, you issue a command like:\nvanitygen.exe 1david\nWhich tells vanity gen to look for an address with the exact prefix \"1david.\" On a single core of my core i5 this runs at about 325,000 keys per second as shown by the status display (which does show a time estimation.):\n[324.43 Kkey/s][total 15166208][Prob 0.1%][50% in 9.1h]\nUsing the -i option drastically decreases generation time. vanitygen.exe -i 1david produced the following results in just a few seconds:\nDifficulty: 36384905\nPattern: 1david\nAddress: 1DAVid3iW7XhDBzdoj8FbnaSaqWCjeTgUP\nPrivkey: 5JvtXtpUbwbNNqRoQjF3w2nyXHhphJk6LX1pWkPYEkBr4nnnBeL\n\nThe -r option allows the specification of a regex value instead of the default pattern option. If, for example, I demanded that my address contain all lowercase letters but I don't care if the \"D\" in \"David\" is uppercase or not, I could use vanitygen.exe -r 1[Dd]avid. One downside to specifying a regex prefix is that you will not be given any estimated time or probability data since such calculations are not as trivial as matching a simple prefix.\nThe more specific your matching criteria (and the longer the pattern) the longer it will take to generate your address(es). This can be sped up considerably if you have an ATI/AMD video card since there is also an OpenCL version of VanityGen which can try millions of keys per second on a decent GPU.\n", "wallet - How can I \"redeem\" a private key without downloading a client?": "\nIt [edit: was] possible to redeem a private key at MtGox. Under \"Add funds\", choose \"Redeem private key\" and pick the format that you want to enter the private key in. The full amount of the private key will be added to your MtGox account.\nUpdate: It is also possible at My Wallet (blockchain.info).\nUpdate2: Mycelium wallet for Android app has a \"cold storage\" feature.  You simply scan (or enter) the private key, then scan (or enter) the Bitcoin address t send the funds to.  Hit send and you are done.\n", "Why hasn't the Bitcoin client advanced to version 1.0?": "\nThe software is definitely in beta at the moment. There are many things that need working out before version 1.0 can be declared, like the blockchain for instance - many works in progress. And they're about to completely change the GUI to QT so it certainly wouldn't make sense to declare v1 just before releasing something a lot closer to the actual v1. Patience :)\n", "ubuntu - How do I sort the output of listtransactions \"*\"?": "\nYou can run the listtransaction JSON output through this little python script (save it as jsonTOCSV.py). That will produce csv (comma separated value) output that Excel or Google Spreadsheets can import, both of which can sort by columns (if I recall correctly).\nSo:\n\nbitcoind listtransactions | jsonTOCSV.py > transactions.csv\n\n#!/usr/bin/env python\n#\n# Reads an array of JSON objects and writes out CSV-format,\n# with key names in first row.\n# Columns will be union of all keys in the objects.\n#\n\nimport csv\nimport json\nimport sys\n\njson_string = sys.stdin.read()\njson_array = json.loads(json_string)\n\ncolumns = set()\nfor item in json_array:\n  columns.update(set(item))\n\nwriter = csv.writer(sys.stdout)\nwriter.writerow(list(columns))\nfor item in json_array:\n  row = []\n  for c in columns:\n    if c in item: row.append(str(item[c]))\n    else: row.append('')\n  writer.writerow(row)\n\n", "diablominer - No OpenCL platforms found?": "\nNVidia cards require that you install the CUDA drivers in addition to the standard video card drivers (ATI/AMD cards ship with OpenCL as part of their driver package). Without these drivers installed they will not be available to any miners.\nSince the Quadro 600 appears on the list of CUDA compatible GPUs it should be mineable, though what kind of performance you'll get is questionable.\n", "security - What is a deterministic wallet?": "\nYou've hit the nail on the head. A deterministic wallet is any system which uses a passphrase or other snippet of data to build a keypair in a repeatable manner. So long as you remember the passphrase, the keypair can be re-generated from it, so storage is no longer a security concern. There are several methods for generating deterministic wallets, but my favorite is Casascius' Bitcoin-Address generator (C#, Windows, binaries here)\n", "transactions - Has there ever been a successful double spend attack on the Bitcoin network? If not, is it really necessary to wait for confirmations?": "\nFor what it's worth, MyBitcoin.com claimed that their closure was precipitated by a series of double-spend attacks:\n\nOur programmer was under the assumption that one block was good enough\n  to secure a transaction. Two years ago when the software was written,\n  this single confirm myth was a popular belief.\n\nUser theymos (an administrator of the bitcointalk.org forums) had publicly warned them that accepting transactions after a single confirmation was \"insane.\"\nHowever, there is no way to verify whether or not any double-spend attacks have actually taken place because to my knowledge no one is currently scanning for them on the network (doublespent transactions are normally discarded after the event is resolved to the satisfaction of the block-chain).  All we can observe publicly are block-chain reorganisations which also naturally occur from time to time when blocks are found near-simultaneously by different miners or pools.  Perhaps a statistical argument could estimate how often these should be occurring (we've had 14 in the past month) and argue for the existence of double-spend attempts on that basis, but I've not personally seen such an analysis.\nMost critically to your question about whether or not to wait for confirmation, however, is the fact that you have missed a possible attack vector, known as a \"Finney Attack\" after Hal Finney who identified it.  In a Finney Attack, a miner includes one \"double\" of the two transactions in their own blocks while mining, but does not broadcast it to the network.  When they eventually find a block, they purchase something with a conflicting transaction (the second \"double\" in the double-spend attack), and then immediately broadcast their block, which will invalidate the purchasing transaction in the blockchain.  If the merchant hasn't waited for confirmation, the attacker would walk away with both the purchased item (hopefully something cashlike) and their original bitcoins.\nSince this situation and its variants apply largely to merchants who offer 'on-demand' items delivered instantly, your analysis of \"everyday users transferring small amounts of bitcoins\" remains roughly correct.  Keep in mind that if accepting 0-confirmation transactions became the norm, the incentive for the \"send them simultaneously\" attack would rise significantly (requiring even one confirmation prevents this in the vast majority of cases).  But for the time being, regular users should be more worried about regular old \"you-pay-first\" fraud on non-escrowed transactions, and man-in-the-middle attacks where an interlocutor passes messages between two trusted parties looking to do business, then walks away with the cash while they both yell that the other person is scamming them (this attack has been executed in the wild).\ntl;dr Merchants and exchanges definitely need to wait for confirmations any time transactions are of significant value and/or in exchange for cashlike goods.  Individuals transferring small amounts need to be more worried about other aspects of trust in the exchange, and can protect themselves quite effectively with just a single confirmation.\n", "installation - Is there a BSD Bitcoin client?": "\nThe standard Bitcoin client should run on BSD machines. If you encounter any difficulties getting it to compile or run, ask more specific questions.\n", "What does the Bitcoin client do when it receives conflicting transactions?": "\nI can't speak for what it does every time but I just tested Mr. Schwartz's comment, so I can speak for what it did this one time. I remote controlled a geographically distant machine running an identical copy of Bitcoin on it and my local PC (with identical wallets). I sent identical conflicting transactions for my entire balance within a few milliseconds of each other (atomic clock sync & timers - don't ask) and just as expected, both transactions showed in both clients at 0/unconfirmed and only one made it into a block. The other disappeared after a -rescan\nCuriously, after the -rescan the second transaction doesn't even show in a bitcoind listtransactions dump which seems odd to me. It seems like such erroneous transactions should be recorded and marked with a special status, similar to how orphaned block rewards are - this is an accounting system after all and under certain circumstances this could be \"destroying evidence.\" I'll make a comment next time I'm on GitHub and see if someone bites.\n", "How can you tell how many users Bitcoin has?": "\nDue to the nature of Bitcoin there is no precise answer to this question. However, this site displays some statistics on the number of nodes in the network over time: http://bitcoinstatus.rowit.co.uk/\n", "blockchain - How would the Bitcoin protocol be impacted if nodes only stored the blocks they cared about?": "\nThere is proof of concept work in progress right now to solve this problem.  Basically by creating hub nodes capable of handling many thousands of connections.  These hub nodes are in fact a proxy backed by a real satoshi bitcoin daemon.  This will relieve standard bitcoin nodes from a lot of the connections being used up by these 'selfish' nodes and allow them to continue operating as do now.  Mining pools will have a strong incentive to run hub nodes as it will speed up propogation of their generated blocks as well as ensure they have the best chance of getting new blocks as quickly as possible.\n", "protocol - How does change work in a bitcoin transaction?": "\nFirst, let's clarify the difference between accounts and addresses.\n\"Accounts\" are used for the convenience of people to track their funds. This is primarily used to track the source of funds. Since this is just for your tracking, you can move Bitcoins from one account to another just by moving a number from one column to another. No transactions are needed. (This is like when you know you owe your son $25 for allowance, and you have $200 budgeted for groceries.)\n\"Addresses\" are used to receive Bitcoins in transactions. The coins are sent to an address. The client associates each address with an account and adds received funds to that account. This is simply done for convenience to allow people to track indirectly which address funds were sent to. But you can have any number of addresses associated with the same account.\nChange comes from the way Bitcoins are spent. To spend a certain number of Bitcoins, you must pull in Bitcoins from transaction outputs to accounts you control. Note that in the spending part, it doesn't matter what address this is or what account that address is associated with. When you spend Bitcoins from a particular account, that just means you debit that account for the amount you send. It doesn't mean the funds come from addresses associated with that account. Remember, the association between addresses and accounts is for receiving only, not sending. (Like when you spend money on groceries, it's not like you have specific bills for groceries. You just have an amount budgeted.)\nSo when you pull in transaction outputs, you form a pile of Bitcoins big enough for the number you are trying to send. Usually, it won't be exact since you must claim an entire output. So the excess forms the 'change'.\nSince there is no address associated with sending Bitcoins, there is no particular address the change should be sent to. So, to preserve anonymity, the client creates a new one just to receive the change from this transaction. Since this address isn't really associated with an account and shouldn't be used to receive any more Bitcoins (because that would senselessly tell people the same recipient got the coins as got this change) the client does not display it.\nBecause the client manages coins in a particular way, it doesn't make sense to try to view coins it is managing with any kind of explorer. It's specifically trying to obscure the fact that all the coins are related. Those kinds of services are intended to monitor recieved funds, not managed funds.\n", "client - How can the alert system be triggered? Who can do it?": "\nJust got confirmation that Satoshi passed the signing key to Gavin before he retired, so at present only Gavin (and Satoshi if he ever returns) is able to send out alerts.\n", "Is the cryptocurrency Bitcoin a good idea?": "\nAdam Cohen is wrong.\nSeeding Initial Wealth: If you're jealous of the early adopters, become one. If we assume Bitcoins fail, who cares who adopts when? If they succeed, then it's still early. As for mining being random or useless, no, miners are paid for securing transactions. The way Bitcoins work, seeding initial wealth is a side-effect of the distributed transaction resolution system.\nBuilt In Deflation: He repeats the idea that the set of early adopters is fixed. If Bitcoins last long enough for the deflation to happen, you can still be an early adopter since it's still very early. (And they actually won't deflate because the money supply will be inflated by things like fractional reserves, mortgages, and the like just like other currencies are.)\nLack of Convertibility: I don't think a currency has to be able to act as a store of value. In fact, use as a store of value to some extent conflicts with use as a means of exchange. But in any event, Bitcoins are already reasonably convertible and as they become more popular, exchanges will increase as well.\nWhen Something Goes Wrong, It Will Die: Serious things have gone wrong with Bitcoins, including an exploited bug that let people create Bitcoins out of thin air. What happened? Everyone who cared about Bitcoins pulled together to fix the problem. But if you're really worried about this, the fix is simple -- don't use Bitcoins as a store of value, just use them as a means of exchange.\n", "How should you backup your wallet?": "\nThe file you'll need to back up is wallet.dat which can be found in %appdata%\\roaming\\bitcoin on Windows or ~/.bitcoin on Linux/MacOSX.\nBy default a pool of 100 pre-generated, unused addresses is maintained in your wallet, and so it is safe to use 100 new addresses without backing up your wallet.  New addresses are used most times you send bitcoins and used as a \"change\" address, and also when you request a new receiving address. As you use new addresses, more are generated and added to the end of the pool.  Once you've used 100 since backing up, you'll start using addresses which aren't in the backup. To this end, the frequency of your backups is largely determined by the frequency of your transactions and this is largely a personal decision. If you absolutely cannot manage a backup every 100 transactions (why?) or are comfortable with a more aggressive schedule (and smaller wallet) there is a -keypool option to change the number of addresses pre-generated.\nBest practices for storing wallet backups almost always include encryption. Most folks in the community swear by tools like TrueCrypt for such purposes, though there are countless alternatives. Storage of the backup depends largely on how long-term the storage is intended to be and the security levels necessary. For small amounts of coin and short-term backups, online services like DropBox or Mozy might be adequate, assuming the wallet is encrypted before uploading. For longer-term or higher security backup, coins might be sent to an offline wallet stored in paper form at a physically secured location or any variation between.\nRegardless of your wallet backup methodology and schedule, it is ALWAYS a good idea to take some basic measures to secure your wallet.\n", "exchange rate - Where can I get historic data series of Bitcoin prices?": "\nEDIT: These links appear to no longer work\n\nYou can get it at Bitcoincharts:\nhttp://bitcoincharts.com/t/trades.csv?symbol=SYMBOL[&start=UNIXTIME][&end=UNIXTIME]\n\nIt returns a CSV file with the format:unixtime,price,amount. \nFor example, you can use this link to get the MtGox prices since August:\nhttp://bitcoincharts.com/t/trades.csv?symbol=mtgoxUSD&start=1312174800\n\n", "Can a bitcoin transaction be reversed from the receiving end?": "\nWhen sending coins, the original Bitcoin client picks the more \"secure\" coins, i.e. the oldest ones that can be used as input for the transaction. Internally, it doesn't care about accounts, although it does of course keep track of each account's balance.\nAs a result, sending coins back to an input address will only guarantee they will go back to the original wallet, not necessarily the original account, let alone the original person. In many situations wallets are shared between different persons, e.g. in web services (online wallets, mining pools, etc.), so the difference is crucial.\nThus if you're designing an application and you want to allow refund, you should absolutely not rely on the sending address in your application design. Instead, allow people to give an email, a refund address, etc. at some point.\nWe're talking about the original Bitcoin client here. Although this behaviour is largely justified for security reasons, some current or future clients may not mix addresses between accounts and still be compliant at protocol level.\n", "transactions - Why does the Bitcoin client require at least one confirmation before I can spend?": "\nThere is no technical reason you can't spend it immediately. A transaction that is dependent on an unconfirmed transaction should be accepted by the network and should eventually make it into a block.\nYou will almost certainly have to include a transaction fee with the second transaction in order to get it accepted into a block immediately. Otherwise, you will be waiting some time before the second transaction gets committed into a block.\n", "testing - What does -keypool=1 do?": "\nYou can do getnewaddress as many times as you want. The keypool parameter just sets how many extra keys the client creates when it needs to create keys. With keypool set to 1, the client will create one extra key every time it needs to create a key.\nSetting keypool low will keep your wallet smaller. But it will mean you have to backup your wallet more often to avoid losing the keys to newly-created addresses.\n", "security - What is BlitCoin?": "\nDan Kaminsky has the idea that if you have enough bitcoin nodes/connections under your control, than by looking at how transaction spread across the bitcoin p2p network, you can determine ip address of a node that was the source of transaction, Blitcoin is suppose to be to the tool for that. I think that won't become a problem because use of a simple proxy that hides ip address of a sender, will be sufficient solution. \nPost on forum from Dan Kaminsky himself BitCoin Deanonymization\nDisscusion among developers Blitcoin? (Black Hat 2011)\n", "mac - Quick and easy mining on OS X": "\nTry the DiabloMiner app. It uses an older version of Diablo Miner that should work. The developers behind bitcoin mining software usually do not put much effort into Mac compatibility mainly because of two aspects:\n\nMost Macs (iMac/Macbook/Macbook Pro) are not suited for mining because they have poor ventilation, which causes overheating issues.\nApple's OpenCL implementation is not very good. There are constant complaints about its inefficiency and incompatibility with mining software.\n\n", "Is there a help file for the bitcoin client?": "\n\nBitcoin Config Arguments\nBitcoin CLI Commands\n\n", "Is there an open source (free) client or code for bitcoin transactions": "\nIn the past, I've implemented this just by asking the standard Bitcoin client to generate a few thousand addresses and then just have the web site give them out one by one. It's a bit slow generating the addresses, but if you let it run overnight, you'll have a virtually unlimited supply.\nDon't forget to backup the wallet immediately after doing this!\n", "How do we know how many BTC have not been spent since being mined? Any tool to see this information?": "\nI don't think your question quite makes sense. Bitcoins aren't \"transmitted\", they simply sit in the block chain until someone chooses to spend them. There's no way to tell if a particular Bitcoin is lost or not because that depends on whether anyone knows they key needed to claim it. That key could be written on a piece of paper for all we know.\nWhen your client tells you that you have 50 Bitcoins, it is doing that in a purely passive way. Nobody can tell that your wallet contains the keys needed to claim those Bitcoins, and this is by intentional design.\nYou could fairly easily measure how many coins hadn't been spent since they were mined. But that wouldn't really tell you anything. Some of those coins may have lost keys and some may not. And some coins may have been spent once and then lost.\n", "currencies - What cryptocurrency systems predate Bitcoin, and how do they differ from it?": "\nThe closest predecessor to Bitcoin is generally agreed to be Wei Dei's b-money proposal.\nThe proposal had a lot of holes. For example, it assumed that money could be created simply by solving hard computational problems. But it contained no mechanism to control currency inflation, so currency would inflate as computing power increased.\nHe actually offered a way around this, auctioning off the currency. But this still creates huge problems without a centralized authority -- who confirms the bids were paid and issues the currency? On what authority?\nIt also hand-waves over major issues. It requires servers to be partially trusted and argued that to be a server, you could be required to deposit some money in a fund that would be debited in the event misconduct was discovered. But who would debit the account? And who would get credited? And by what authority would they do this?\nBut this got the ball rolling on the idea of a completely decentralized crypto-currency. The amazing thing about Bitcoin is that it solved all the remaining problems at once.\n", "Is the timestamp in the genesis block relevant?": "\nThe newspaper quote proves that Satoshi did not mine a large number of blocks before the public announcement of Bitcoin on January 10. The block chain creator could for example create a chain of 1000 blocks before publishing just the first one. He now has a head start for mining and can invalidate the public block chain at any time by announcing the blocks he kept secret as long as his chain is longer. The block headers contain timestamps but these can be manipulated if no one else is verifying the blocks.\n", "security - What prevents bitcoin from breaking down in case of a \"transaction attack\"": "\nThere are rules which make such kind of attack very costly to the attacker. Below are relevant rules from wiki, with updated transaction fee:\n0.0005 BTC fee per kilobyte of transaction, but:\n\nIf the blocksize (size of all transactions currently waiting to be\nincluded in a block) is less than 27 kB, transactions are free.\nIf the blocksize is more than 250 kB, transactions get increasingly\nmore expensive as the blocksize approaches the limit of 500 kB.\nSending a transaction when the blocksize is 400 kB will cost 5 times\nthe normal amount; sending when it's 499 kB will cost 500x, etc.\n\nLet's say attacker publishes 499kB worth of transactions every block, this would be about 1000 transactions per block, 144000 per day. This is nowhere close to millions or billions, and besides it would cost him about 18000 BTC per day.\nSource: Transaction fees\n", "transactions - In order to reduce fees, can I 'consolidate' my wallet by sending the entire balance to a new address in the same wallet?": "\nIt depends which of two cases you are in:\nIf you have lots of decently-sized transactions to 'gather', it will likely have the reverse of the effect you want. Right now, you probably have lots of old transaction outputs that your future transactions can claim. That means you can form many transactions that use only old outputs, and thus get a higher base priority. If you consolidate your coins, you will have only one transaction output to claim. So in the future, you will only be able to create one high-priority transaction. Once you do that, you will have no more old coins.\nBut if you have lots of absurdly-small transactions to 'gather', it will likely help you. By not having to gather lots of small transaction outputs together in the future, your future transactions won't be as large and therefore won't require as high a fee (or as large a wait).\n", "development - What are the steps in building bitcoind on Mac OS X 10.6?": "\nIf you just want to build Bitcoind once then Gavin's method seems like the most straight forward. If you want to develop for Bitcoin it's worth setting up an Xcode project.\n\nCreate a blank Xcode project in your bitcoin root directory.\nCreate a new target called bitcoind\nDrag all the files from the src folder into Xcode, make sure you have bitcoin selected in add to targets.\nRemove the README, Makefiles and any other none .h .cpp \n\nAdd \"./deps/include\" to \"Header search paths\"\nAdd \"./deps/lib\" to \"Library Search Paths\"\n\nAdd libssl and libcrypto to your linker flags (The system ones should work fine)\n\nIn Build phases add the required libraries. Should look something like this (excluding the mysql libs)\n\nDepending on what version of Xcode your using You might need to change the Default compile to gcc as clang seems to have problems with cryptopp, or you can just move cryptopp to deps and import the .a.\nApologies I cannot be more precise, I did write down instructions at the time but i seem to have lost them. You can build for 10.6 & 10.7 with no changes required other than setting the SDK in Xcode.\n", "blockchain - Can I download the whole block chain from somewhere?": "\nNote by Murch: This download link is broken and it seems unlikely to me that anyone still provides this service. Network and synchronization code have been immensely improved over the years so that the initial block download via the network is usually acceptably fast.\nYou can download the blockchain nightlies handled by tcatm (one of the Bitcoin core developers and the operator of bitcoincharts.com). Unpack and copy&replace blkindex.dat, blk0001.dat files into C:\\Users\\\"username\"\\AppData\\Roaming\\Bitcoin for Windows 7, and run bitcoind with the -rescan option. Then it will take only a couple minutes to download up to latest block. Be aware that manually copied blocks won't get verified.\n", "development - How do I develop web applications for Bitcoin?": "\nSome tips:\n1) Don't keep the full amount in the wallet on the server (have it on a server that's offline, think of it as an active reserve)\n2)Have the actuall bitcoind software and wallet on a different machine from which the webapp is\nAn alternative to running bitcoind (and dealing with all it's issues) is to use a web wallet with an API, GLBSE (GLBSE.com, note I'm the founder) has a python client for interacting with it.\n3)Require at least 8 confirmations before crediting someones bitcoin account.\n", "script - How would I hand code a Bitcoin transaction": "\n\nTechnically, the ScriptSig depends on the particular type of transaction output you're trying to claim, but for all standard scripts, it consists of the signature of this transaction and (usually) the public key corresponding to the private key the signature was made with. The public key must be the correct one to claim the transaction output this claims, that is, the one the coins were sent to.\nBitcoin scripts use opcodes. They're documented in the wiki.\nThat is the Bitcoin address that can claim this output (in raw binary form), assuming the transaction is a transfer to a Bitcoin address.\n\n", "economic theory - Are there statistics on how Bitcoin holdings are spread among addresses?": "\nI don't know if any of this data is of any use or significance, but...\nI calculated the Gini coefficient at the end of each month of Bitcoin's history.  I did it in two different ways:\n\nThe vast majority of Bitcoin addresses that have ever been used are now empty.  They don't represent the \"have nots\", they're just addresses that have been used and discarded, and so shouldn't be included in the calculation.  Similarly there will be lots of addresses which are holding change from transactions.  I arbitrarily decided to throw away all addresses with a balance of less than 1 BTC for this first calculation.\nThen I calculated the Gini coefficient for just the 100 richest accounts at the end of each month.\n\nThe results are shown below, with the columns in order:\n\nthe date.  \"Jan 09\" means \"the end of Jan 09\"\nthe total number of addresses in existence at that date, including empty ones\nthe number of addresses with 1 BTC or more in them\nthe amount in the richest account\nthe amount in the 100th richest account (notice how this stayed at 50.00 for over a year)\nthe Gini coefficient of the >= 1BTC addresses\nthe Gini coefficient of the top 100 addresses\n\n\u00a0\n-date-   addresses    >1 BTC   1st - 100th richest   Gini >1   Gini100\nJan 09       2,569     2,439     2775.00 -   50.00   0.04571   0.50862\nFeb 09       5,975     5,642     9075.00 -   50.00   0.05064   0.71354\nMar 09       9,444     8,864    16675.33 -   50.00   0.05794   0.82048\nApr 09      12,893    12,120    21175.33 -   50.00   0.05715   0.85527\nMay 09      16,288    15,380    26675.33 -   50.00   0.05306   0.87075\nJun 09      18,528    17,534    30675.33 -   50.00   0.05118   0.87980\nJul 09      20,456    19,338    36675.33 -   50.00   0.05248   0.89165\nAug 09      22,021    20,741    44473.86 -   50.00   0.05617   0.90351\nSep 09      24,180    22,639    53974.86 -   50.00   0.06188   0.91664\nOct 09      26,311    24,366    61424.62 -   50.00   0.07208   0.92725\nNov 09      28,533    26,403    61424.62 -   50.00   0.07279   0.93164\nDec 09      32,611    29,818    61424.62 -   50.00   0.08352   0.92241\n\n-date-   addresses    >1 BTC   1st - 100th richest   Gini >1   Gini100\nJan 10      37,647    34,333    72374.36 -   50.00   0.08571   0.92339\nFeb 10      43,329    37,262    72374.36 -   50.00   0.13683   0.88570\nMar 10      48,615    40,316    72374.36 -   50.10   0.16674   0.82492\nApr 10      57,806    42,661    72374.36 -  500.00   0.21059   0.71037\nMay 10      63,368    44,583    72374.36 -  630.00   0.24448   0.65747\nJun 10      69,540    46,963    72374.36 -  750.00   0.26638   0.62843\nJul 10      94,992    51,628    72374.36 - 1757.14   0.32583   0.56689\nAug 10     107,172    53,578    72374.36 - 2100.02   0.35365   0.52483\nSep 10     120,562    53,492    72374.36 - 3000.00   0.39915   0.46956\nOct 10     135,952    54,637    85000.00 - 3333.33   0.42841   0.46050\nNov 10     155,639    55,756    90000.00 - 4150.00   0.45464   0.43790\nDec 10     176,326    57,247    90000.00 - 5000.00   0.47592   0.38625\n\n-date-   addresses    >1 BTC   1st - 100th richest   Gini >1   Gini100\nJan 11     210,243    58,073   250000.00 - 5350.00   0.49987   0.47440\nFeb 11     267,542    59,699   250000.00 - 5650.51   0.52439   0.47584\nMar 11     353,093    61,984   250000.01 - 5613.86   0.54646   0.45504\nApr 11     443,112    64,254   200000.00 - 6002.81   0.57161   0.46808\nMay 11     631,480    70,883   297000.00 - 6309.40   0.62830   0.49247\nJun 11   1,061,590    90,159   424242.42 - 6308.24   0.70803   0.52602\nJul 11   1,548,806   101,895   384587.42 - 6450.00   0.73473   0.50905\nAug 11   1,930,979   105,572   104895.01 - 7495.92   0.74448   0.41533\nSep 11   2,205,926   106,973   105000.00 - 6926.85   0.74847   0.45014\nOct 11   2,411,298   110,463   105000.00 - 7345.73   0.75422   0.44981\nNov 11   2,601,999   111,386   455501.30 - 6926.85   0.76065   0.51328\nDec 11   2,768,500   118,263   105555.00 - 6705.00   0.76137   0.41685\n\n-date-   addresses    >1 BTC   1st - 100th richest   Gini >1   Gini100\nJan 12   2,956,869   123,003   105555.00 - 7000.00   0.76883   0.42408\n\n", "development - Is there a list of available APIs for Bitcoin exchanges?": "\nThere is now the XChange library\nThis is a pure Java library that has been released under the MIT license. It currently supports Mt Gox, but there are simple hooks to allow other exchanges such as Intersango and CryptoXChange to be supported.\nIt is currently used by the MultiBit client.\n", "shopping cart interface - What OpenCart plugins are available or in the works for Bitcoin transactions?": "\nThere is an extension for bitpay (bit-pay.com) that can be found here.\nBitpay allows merchants to accept bitcoins but to be paid in dollars which can be very convenient for merchants who are interested in trying out Bitcoin but might not yet be convinced of its greatness.\n", "What forums or websites have an active bitcoin section?": "\nBitcoin Talk is currently the most active.\nThe bitcoin reddit also has a fair amount of traffic and discussion.\nAfter that, it falls off pretty significantly.\nTalk Gold has some discussion, so does bitcoin.org.uk.\nbitcoinforums.net and other forums are sparse. (See link to wiki in Chris Acheson's post for a list of all current forums)\nThere are of course often discussions about blog posts or news items on tech related blogs like Slashdot, Ars Technica, Wired, etc. The same is true of some sites dedicated to online gambling, and some Tor forums dedicated to the Silk Road and similar projects.\nThere have also been some longer threads that are especially useful for miners at the Overclockers Forum\n", "trading - What is the \"Maintenance\" amount referring to on the bitcoin exchange Bitcoinica?": "\nNo, it relates to when you have a margin call for your open positions. From their FAQ:\n\nWhat's your Margin Call Policy?\nAfter you've logged in, you can immediately see your real-time account\n  Net Value (total assets) and Maintenance (minimum net value). When\n  your Net Value falls below twice the amount of Maintenance, we will\n  issue a margin call. If you don't take actions before your Net Value\n  falls below Maintenance, all your positions will be liquidated\n  automatically.\n\n", "Do any vendors sell good mining rigs?": "\nThere are two sites that I know of: bitcoin-rigs.com and bitcoinrigs.com\nIf you have a local computer shop near you, you could also order the parts and ask them to mount. There is a wiki entry for mining rigs that has a few standard configurations (including two setups with 5850s).\nYou might also want to check the Marketplace section of the bitcointalk forums. Sometimes people sell used rigs there.\n", "development - How do I read the contents of wallet.dat in C#": "\nWallet.dat is a Berkeley DB file.  You could check out Berkeley DB for .NET to see if it is able to read the file.\n", "development - How to start programming your own Bitcoin client?": "\nI don't believe anyone has published a detailed spec anywhere if that is what you are hoping for.  There is some information on the bitcoin wiki, but your best option is to review the existing implementations.\nCheck out BitCoinJ (a from scratch bitcoin implementation in Java) and BitCoinSharp (a C# port of BitCoinJ).  They are not full implementations yet, but they are very far along and can do most of the tasks of a bitcoin client. \nNo matter what language you plan to create your implementation in, looking at these is very valuable because they are very thoroughly commented and much easier to understand than the official C++ client.\n", "economic theory - What are \"bitcoin days destroyed\"?": "\nThe idea of \"bitcoin days destroyed\" came about because it was realised that total transaction volume per day might be an inappropriate measure of the level of economic activity in Bitcoin.  After all, someone could be sending the same money back and forth between their own addresses repeatedly.  If you sent the same 50 btc back and forth 20 times, it would look like 1000 btc worth of activity, while in fact it represents almost nothing in terms of real transaction volume.\nWith \"bitcoin days destroyed\", the idea is instead to give more weight to coins which haven't been spent in a while.  To do this, you multiply the amount of each transaction by the number of days since those coins were last spent.  So, 1 bitcoin that hasn't been spent in 100 days (1 bitcoin * 100 days) counts as much as 100 bitcoins that were just spent yesterday (100 bitcoins * 1 day).  Because you can think of these \"bitcoin days\" as building up over time until a transaction actually occurs, the actual measure is called \"bitcoin days destroyed\".  This is believed to give a better indication of how much real economic activity is occurring on the bitcoin network.\nSo how well does it work?  Well, it's still not perfect, because the other day I moved some coins out of a wallet they've been in for several months without spending them or giving them away.  And some genuine businesses have very rapid turnover in bitcoins, so they're not being measured well by this method.  But it does do a good job of filtering out the \"noise\" of bitcoins that are just \"bouncing around\" without really going anywhere.  The graph of overall bitcoin days destroyed is believed to show that the genuine level of activity in the Bitcoin economy is continually increasing--it's not just one person experimenting by rapidly sending the same coins back and forth, flooding the network with meaningless chatter.  Looks pretty good, hey?\n\nImage from the Bitcoin wiki.  The above graph is in percentage of bitcoin days destroyed and a little out of date--for a regularly updated version in bitcoin days destroyed check out Bitcoin Days Destroyed - Active Chart instead!\n", "security - What incentive is there for a miner to not include a bad transaction?": "\nAny block that contains an invalid transaction will be considered invalid as a whole, and every other peer/miner will reject it. A miner must check that every transaction included in a block is valid, otherwise there is a high risk that all the hard work required to solve the block is just being wasted.\nAny miner who disobeys the validity requirements (by considering some invalid block as valid, or some valid block as invalid) will be completely disregarded by the rest of the network, defeating the point of any mining activity. \nNote: Sending 1BTC with a fee of 1BTC is a perfectly valid transaction (even though it might be a mistake by A). Of course, doing that, A must own 2BTC and give them away, or the transaction can't possibly be valid.\n", "blockchain - What do the different .dat files contain?": "\nwallet.dat, addr.dat and blkindex.dat are Berkeley Database files. They can be read using standard tools, but aren't human readable by themselves. blk0001.dat (and additional blk000n.dat blocks) contain the blockchain itself, that's just a binary concatenation of the blocks.\n\nwallet.dat contains your private keys, your address book, a copy of the transactions that send coins from or to one of your addresses, accounts, reserve keys, personal settings, and a pointer to the current best block.\naddr.dat contains IP addresses of peers, both those you've connected to yourself or those you've only heard about. It has been replaced by peers.dat since 0.7.0\npeers.dat contains the same information as addr.dat, but using an efficient custom format.\nblkindex.dat contains an index of the blocks and transactions that can be found in all the blk000n.dat files.\n\nI don't know about any standalone tools that convert addr.dat and blkindex.dat to human-readable form, although blockexplorer.com can be used to inspect the blockchain, and addr.dat just contains IP addresses.\nUpdate: the data above is only valid before v0.8.0. As of v0.8.0, a new database structure (with associated filesystem layout) is used\nfor blocks and indexes.\n\nSee also:\n\nBitcoin.stackexchange.com\n\nMigration from Berkeley DB to LevelDB\nWhat is the database for?\nWhat information does a wallet contain?\n\n\nStackoverflow.com\n\nHow to open local bitcoin database\n\n\n\n", "security - What keeps the average block time at 10 minutes?": "\nThe bitcoin network rules define which difficulty each block has. This is done through a simple formula that only depends on the block chain itself. This means that if you give me a blockchain with blocks 1 through N, I can tell you with 100% accuracy what the difficulty of block N+1 will need to be, and I can reject any block which has the wrong difficulty. This means it is not really \"the network\" deciding on a difficulty, but really each separate node calculating and enforcing it independently.\nThe actual formula is this: at every block N which is a multiple of 2016, look at the time stamps of the past 2015 blocks, and change the difficulty for what follows to old_difficulty*(2 weeks)/(time the past 2015 blocks took). Additional rules on which time stamps are allowed in blocks prevent cheating (mostly).\nIn short, by using a bitcoin client, you agree to its network rules, and those include the difficulty adjustment.\n", "protocol - Why isn't transaction replacement supported?": "\nThat's not correct. The nLockTime field is implemented. It was deliberately switched off some time ago in order to reduce the complexity of the protocol. The reason was a series of protocol-based attacks that had compromised the integrity of the system.\nAt some point the feature will be re-activated. Probably, after someone has written a comprehensive test suite and technical analysis showing that it's not risky to re-enable.\n", "exchanges - Can I buy/sell a lot of bitcoins without moving the price?": "\nIt won't work, no matter how you do it. If you acquire a lot of Bitcoins, that will mean that a lot of people who wanted to get rid of their Bitcoins no longer want to get rid of their Bitcoins. Thus, they will stop supplying them. The reduction in supply will move the bid/ask prices. It's fundamental economics and you can't change it.\n", "Will mining significantly increase the power consumption of my PC?": "\nYes it will. The component you're likely to use for mining is your video card (GPU) which consumes very little power when idle but can consume a great deal under load. Check this list of common cards and consult the Watts (W) column for how many watts your card is likely to draw. Any card worth mining on will probably draw at least 100 Watts under full load. Depending on the electricity costs in your area, it may cost you more in electricity than your coins produced are worth. There is at least one good calculator to estimate your proceeds but you'll need to find out how much your local utility company charges per kilowatt-hour for electricity to determine if it's profitable. For reference Kilowatt-hours per day = Watts * 24 / 1000.\n", "Bitcoin client which doesn't use wallet.dat?": "\nThis is not exactly what you're asking for, but might be helpful. Bitcoin v0.4 supports encrypting wallet.dat, so you cannot spend without entering the password. Basically you would do something like:\n\nmake a copy of wallet.dat\nencrypt your copy with Bitcoin client v0.4 and set a long random password (one you will easily forget)\n\nVoila, you have just created your read-only wallet. Because of 100 keypool you will even see some new transactions made with original unencrypted wallet.dat\nYou can download Bitcoin v0.4rc2 here.\n", "mining reward - How much will transaction fees eventually be?": "\nI read that the market will find the equilibrium how much these transaction fees will be.\nIt will not.  This is perhaps the biggest flaw in Bitcoin at the moment: once mining rewards end there is no direct linkage between the amount of hashpower needed to secure the network and the incentive to mine.\nTrue, there is a limit on the blocksize, so if the transaction volume in a block window (approximately 10 minutes) exceeds the block size you can expect a miniature \"auction\" where transactions fight for space in the block by bidding up the minimum transaction fee needed to get in.  However this isn't really a closed-loop adjustment: the maximum blocksize is an arbitrarily chosen number, and there's no reason to believe the maximum blocksize is small enough to ensure that transaction fees are high enough to incent enough miners to mine to keep the system secure.  Unlike the difficulty and the USD/BTC exchange rate it does not respond to market activity.  It also has the negative side effect of capping the worldwide Bitcoin transaction throughput since other parts of the protocol rely on the assumption that blocks are created -- in the long run -- no more than once every ten minutes.\nCompare this to the current situation with mining rewards: the more valuable a bitcoin is the more incentive there is for somebody to try to overwhelm the \"good guys\" by gaining 50%+1 hashpower.  However, the more valuable a bitcoin is the more miners will mine!  It isn't perfect, but the important point is that the demand for security increases the incentive to mine.  Note that although the difficulty will go up, that simply ensures that the reward granted every ten minutes is an approximately constant number of BTC -- the number of terahashes/sec fighting over that amount of BTC is free to respond to changes in their changing value (as measured in terms of all other goods in the world, including other currencies).\nAs the mining reward is reduced this \"direct coupling\" between the network's need for security and the incentive to mine becomes progressively more diluted.\nI worry a lot about what will happen to Bitcoin once we decouple those two forces.  I think the developers ought to at least come up with a story on how this will be solved so people can start testing it.\n", "energy consumption - Where in the world is bitcoin mining the most profitiable?": "\nAccording to the EIA:\nhttp://www.eia.gov/emeu/international/elecprih.html\nThe cheapest electricity prices from their available data would be Kazakhstan at .052USD/kWh.\nAlthough electricity cost itself would not be the only determining factor of profitability, it would be a major part.\nCurrently FPGA's seem to be the answer for best performance/kWh.  Some other factors to think about would be(not 100% inclusive of all the factors):\n\nDifficulty in sourcing equipment to the country of choice.\nGovernmental taxes\nEmployee Cost\nWeather Conditions(HVAC)\nGovernment stability (Politics in General)\nAbility of the power distribution network to handle your load.\n\n", "How do Bitcoin clients determine the number of confirmations a transaction has?": "\n\nTransactions are first transmitted to all the nodes in the p2p network.  At this point they are \"unconfirmed\".  \nAt some point a miner includes the transaction in a block.  The transaction now has 1 confirmation.\nMiners continue to find blocks and the next block builds on the block that contains the transaction.  The transaction now has 2 confirmations (the original block + 1 more after it in the block chain).\nMiners continue to find blocks, the next block that extends the chain makes the 3rd confirmation and the one after that makes the 4th, etc.\n\nClients determine the number of confirmations by counting the number of blocks in the block chain since the block that contains the transaction:\n\"Height of current longest chain\" - \"Height of chain for the block containing the transaction\" + 1\n", "doublespend - In a double spend attempt, how is the valid transaction chosen?": "\nWhen a node receives two conflicting transactions, it will only relay the first one that it received, dropping the other.  If one transaction fully propagates through the network before the other is sent, the first will prevent the second from ever reaching any miner nodes.\nIf both transactions are sent at roughly the same time, the network will be in disagreement about which one is valid.  This will be resolved once a miner node finds a block and includes whichever transaction it had first heard about.\n", "economic theory - Will merge mining patch make Bitcoin network mining power available to anyone?": "\nYour question seems to be based on a misunderstanding. The patch simply allows you to do merged mining. It doesn't add support for other people to do merged mining to Bitcoin, as that is not necessary.\nAnything placed in the Bitcoin hash chain will be secured by the Bitcoin mining process. If I put \"HAVE A NICE DAY\" into a transaction, as Eligius puts prayers, they will become a permanent part of the hash chain and will be secured by all the miners currently mining the Bitcoin hash chain whether they intend to secure it or not.\nAll that is required is that it not be illegal according to Bitcoin rules. (Otherwise, the block would be rejected.)\n", "money supply - What happens once mining speed gets close to zero?": "\nI think you are confusing two things here: \n\nBlock generation rate\nNew bitcoins introduced per block\n\nBlocks will always be found at a rate of approximately one per 10 minute. The difficulty of finding a block adjusts itself according to how many people are trying. Simply said, if N people are mining (all with equal hashing power), they will each (on average) find one block per N*10 minutes.\nOn the other hand, the newly introduced currency in each block is currently 50 BTC/blocks, but somewhere end 2012 this will decrease to 25 BTC. 4 years later, it will become 12.5, and so on. Around 130 years from now, the last block with non-zero new coins will be created. After that, mining will still continue, but blocks will only have transaction fees as rewards, and no new currency anymore.\n", "money supply - How does the mining process support the currency?": "\nMining is not just a way to ensure the initial distribution of bitcoins. It happens that coins have been distributed through mining, because it was easy and useful to do it this way, so this might be a bit misleading, but mining will remain essential even after all the bitcoins (~21MBTC) have been distributed.\nMining has not been designed to distribute coins. It's exactly the opposite: coins are distributed to attract miners. The network needs them.\nMining is the core mechanism that makes Bitcoin possible. \nThe bitcoin block chain (i.e. transaction history) needs to be updated continuously. In effect, one block is added to the chain about every 10 minutes. Mining is the little miracle that allows trust in the network as a whole, without trusting any single participant\u00b9. The idea is to add some artificial difficulty to block creation, so that only a few blocks are presented to the network for consideration (and for validity checking). This way, the network can choose which block will be accepted as the next reference, while nobody has full control on block creation.\nThe hard work of miners that build those blocks must be compensated (hardware equipment and electricity are not cheap). A reward has therefore been included in newly created blocks. For now, the reward is constituted mostly by newly minted coins. But given that the mining process is essential to the bitcoin ecosystem, that reward must (and \u201chopefully\u201d will) be replaced by fees, paid by transactors, when coin creation is going stop completely, in about 130 years.\n\u2014\n\n1. Assuming no one has access to more than 50% of the total computation power of the network.\n\n", "blockchain - Why don't the timestamps in the block chain always increase?": "\nFrom the wiki:\n\nA timestamp is accepted as valid if it is greater than the median\n  timestamp of previous 11 blocks, and less than the network-adjusted\n  time + 2 hours. \"Network-adjusted time\" is the median of the\n  timestamps returned by all nodes connected to you.\nWhenever a node connects to another node, it gets a UTC timestamp from\n  it, and stores its offset from node-local UTC. The network-adjusted\n  time is then the node-local UTC plus the median offset from all\n  connected nodes. Network time is never adjusted more than 70 minutes\n  from local system time, however.\n\nIt's not obvious that there aren't any problems with this way of timestamping. See the blog post Timejacking & Bitcoin and the discussion about it here.\n", "transactions - Bitcoin usage charts": "\nBlockchain.info is an alternative to blockexplorer that has additional statistics regarding market prices, mining costs and bitcoins in general. There is some information there about transactions that might interest you.\nHere is a chart with data from last year:\n\n\nA chart with Bitcoin Days Destroyed is also available at the website. This might be a better way to represent Bitcoin's usage. See this question and the wiki for more information about Bitcoin Days Destroyed.\n", "development - Can a bitcoin be destroyed?": "\nSorry Alex, but you're wrong on the question being asked.  It's trivial to put bitcoins \"beyond use\" so that they can never be spent again.  All you would have to do is send the bitcoins to a made up address, which no one would have a key to.  This has already been done, since coins have been sent to addresses which are almost certainly unowned (like the lowest possible hash that is a valid address).\nSo specifically in your situation, the BTC2 people could use a public method of creating an address that no one owns the private keys to, then design their system to credit people who send BTC1 bitcoins to that address.  One reason someone might want to do this despite the open-source nature of Bitcoin would be to create a new, incompatible protocol that grabs some of the user base of BTC1 without forcing anyone to leave, allowing the two to coexist and compete quite fairly.\n", "asic resistance - Are there algorithms that could have been chosen for mining that balance CPU/GPU?": "\nThe scrypt key derivation function was explicitly designed to be resistant to hardware optimization, with an explicit trade-off allowed between memory and cpu usage:\n\nThe scrypt key derivation function ... is designed to be far more secure against hardware brute-force attacks than alternative functions such as PBKDF2 or bcrypt.\n\nThis makes it better than SHA-256 or bcrypt if the intent is to give more of an advantage to CPUs.\nAnother option would be to include the same sort of variety of primitives that are provided for general purpose CPUs, e.g. a combination of floating point operations, access to large memories (perhaps including something that would use a large random access memory like a disk), etc.\nBut as Thilo point out, including some sort of anti-botnet feature might also be needed.  A CAPTCHA might also make it rather unpopular, but some sort of work load that would indeed be noticed by a regular computer user might make it hard to hide botnet activity.\n", "bitcoind - Is there an online wallet service that will allow me to access an rpc server?": "\nIt isn't free, but:\n - http://www.microthosting.com/bitcoin-servers.html\nhttp://en.bitcoin.it/wiki/BitCoinD_Cloud_Hosting\n", "blockchain - How does a client decide which is the longest block chain if there is a fork?": "\nGary's answer is not entirely correct. When comparing two chains, their total \"scores\" are compared.\nEach block counts as (2^256 / block_target); this is the expected/average number of attempts that were necessary to create it.\nObviously, within one series of 2016 blocks, the difficulties are all equal, so for most small reorganizations, the score will tell you the same thing as just counting the number of blocks. However, as an attacker may well try to rewrite blocks that cross the multiple-of-2016-boundary, you need to take this into account. The actual rule always favors the chains which required the most \"work\".\n", "qrcode - Using QR codes for bitcoin giveaway": "\nThe easiest way to do this is to have the QR code be a URL. For example, http://www.example.com/bitcoingiveaway/E34IKJ. Just assign a unique code to each location, the E34IKJ in my example.\nWhat that web page does is up to you. It has to track how many times it has been accessed, of course. The first time, it can send a form that allows a person to fill in some kind of identifier, which can be a Bitcoin address. You then send them the coins (or if using some kind of account, credit their account).\nMaking this work without the scanners having Internet access is much trickier. It can be done, but it would require your to control the scanning devices such that they included a time stamp, and there would be no way to reliably inform people whether they were first right at the point of scan.\nAnother possibility for the \"first come, get coins\" model is to have the QR code be the actual private key used to claim the Bitcoins.\n", "altcoin development - Are there algorithms that could be used for mining that resist acceleration with ASICs?": "\nYou are missing botnets of GPUs. \nHonestly, I do not think botnets are such a big problem. Botnets succeed because they are invisible to the victims (some trojans even include an anti-virus to clean the system). If an infected computer has 100% CPU usage, it will not stay infected for long. Stealing credit card data is still a lot more profitable than running a crippled mining botnet.\nSo I would say that the scrypt key derivation function, from nealmcb's answer at your other question, is be a pretty good choice.\n", "exchanges - Is performance really important when choosing a language for a trading bot?": "\nNo. The trades in Bitcoins just aren't that frequent. That is relevant to HFT in stocks, where there are many thousands of trades per second.\n", "security - Why did BitcoinEXpress plan a 51% attack on Namecoin?": "\nThis post by ArtForz on the forums explains the attack:\nhttps://bitcointalk.org/index.php?topic=43692.msg521772#msg521772\nQuote: \"By exploiting the fact that retargeting ignores one block interval every period, it's possible for an attackers' fork chain to \"jump backwards in time\" and create lots of blocks at low difficulty without running nTime off into the far future.\"\nThis attack has been proven to work on GeistGeld (which uses 10 second blocks and 16 block retarget intervals). It was rather easy there, because of the low intervals and because the developers \"forgot\" to adjust other constants regarding timing and clocks. They since made it much better.\nNow it seems it will be tried on namecoin, with the goal of making bitcoin more secure.\n", "exchanges - Why is MtGox trying to trademark \"Bitcoin\"?": "\nSome countries have a strict first-to-file rule. In these countries, if some malicious entity tried to trademark the term 'Bitcoin' it could cause problems for others trying to use it to talk about the currency. Tibanne is trying to protect the community from this kind of nonsense. Source.\n", "exchanges - What happened with MtGox on 2011/9/12?": "\nSome more info by upb from #mtgox:\n\n<upb> so there IS some underlying bug which was triggered that caused invalid order matching\n<@MagicalTux> yes, but it requires a large amount of funds to be triggered\n<@MagicalTux> normal users, unless millionaire, wouldn't trigger it\n<upb> must be some kind of integer overflow ;-)\n<@MagicalTux> it happens when an order executes way too many orders at once\n<@MagicalTux> I'm adding some code to avoid this from happening, but nobody in their right mind would do that\n\nThis actually reminded me of about 2-3 Weeks ago when I noticed a bug and reported it on #mtgox.\nThe bug worked as follows:\n\nI had a buy order at, let's say 1 BTC for USD 10.0, last trade was 10.001\nsomeone partly filled that order, let's say he filled 0.3 BTC\nthis had the effect of my order being in state \"pending\" with 0.7 BTC for USD 10.0\nwhile my order was pending, a lower order (say at USD 9.99) was filled\n\nI complained and a short while after, MagicalTux said he found the problem and fixed it.\nI don't know if this could have anything to do with the current problem, but \"it happens when an order executes way too many orders at once\" sound kind of like this could be the case.\nI also remember someone suggesting this above bug could be exploited to disable a lot of orders in order to \"get to\" an order that would normally be well out of spread. Maybe someone managed to pull off this exploit. That would also match MagicalTux saying something about 2000 accounts being created. Maybe these accounts were used to \"disable\" orders by filling a small part of them successively in order to execute an order well out of spread.\n", "client - Gui shutdown: message in the terminal": "\nHere's its filing on github.  Seems to be an unresolved issue with the client.\n", "security - What can xxxCoin do to stop the impending 51% attack?": "\nThere are two basic fronts on which they can defend, and they really do have to do both.\nFirst, they need to increase their total hashing power. 51% of a very large number is much harder for an attacker to muster than 51% of a small number. Merged mining is probably the most realistic way for these currencies to accomplish this.\nSecond, they need to fix specific vulnerabilities in their difficulty adjusting algorithms. Some of these attacks requires less than 51% of the hashing power or do more damage than they should because of specific weaknesses in the difficulty-adjusting algorithm.\nAlternative currencies are vulnerable to hash rate decrease attacks. To resist them, they've adjusted their difficulty algorithms so that difficulty can drop rapidly. Unfortunately, these algorithms have been found to have unexpected defects. Because strict timestamp accuracy can't be enforced, an attacker can maliciously inject false timestamps into mined blocks to cause the difficulty to drop very, very quickly. This allows a malicious group of coordinated miners to extract a very large number of coins in a very small period of time with relatively little hashing power.\nEffort will be needed to fix these algorithms so that they still provide protection against a hash rate decrease attack but don't create even more serious new vulnerabilities.\nIt may well be a rocky road these next few weeks. The 51% attack is fundamental to the decentralized nature of these currencies -- the only solution is more hashing power. But the difficulty algorithm attack issues will likely be solved by fixing the algorithms.\n", "What OSes don't yet have Bitcoin clients?": "\nThe bitcoin source is free derive and redistribute. I believe some microarchetectures (some flavors of ARM?) are currently unsupported.\n", "legal - Would it be possible to patent Bitcoin?": "\nTo claim a patent you must be able to prove against contest that you invented the device, and have a working example that if built to the specs provided, runs. \nAs it was this Satoshi who invented bitcoin, and there are prior examples of a digital currency, it would be very hard for any one person to claim a patent so far after the fact. Some one could try, but the patent industry is built to make it hard to write a patent, easy to contest. Admitedly many companies do just that and are good at it, but anyone patenting bitcoin would have a hell of a time proving first invent.\n", "security - What is the \"zeitgeist attack\"? Does it affect all blockchain technologies?": "\nThis is a 51% attack where the attacker sets the block timestamps artificially to lower the difficulty, allowing him to profit more coins than his hash rate would warrant. It works because the difficulty adjustment formula is based purely on timestamps that can be chosen quite freely by the attacker. In particular, the timestamps are not required to be in increasing order. ArtForz explains the attack in detail here.\nThis attack was used against the new Geist Geld block chain. Geist Geld difficulty adjusts every 16 blocks making the chain particularly vulnerable against this attack. An attacker targeting Bitcoin would have to mine a full set of 2016 blocks at the current difficulty before starting to get any benefit compared to a \"normal\" 51% attack.\n", "security - How many consumer computers would it take to launch a 51% attack": "\nA standard laptop CPU provides around 2-8 Mhash/sec. An ATI 5870 video card, which has one the best efficiency/cost ratios, mines at about 400 Mhash/sec, and at the moment, the Bitcoin network has a total hashing power of about 12,460,000 Mhash/sec, which equals 31,150 5870 video cards.\nSo someone would need to invest about 10 million USD just to buy video cards, without including the cost of assembly and other hardware like mother boards, power supplies etc. It is possible to design custom hardware to do Bitcoin mining using an ASIC, which might have ten times better efficiency/cost ratio.\nBut it will be always too expensive to execute a 51% attack to justify just by the profit from the security breach because the Bitcoin network hash rate gets adjusted to the value of a Bitcoin -- in another words, people buy more mining hardware when the price of a Bitcoin goes up.\n", "security - Can a 51% attack be detected and dealt with?": "\nCan such attacks be detected? Yes.\nWhat you would see is a chain reorganization that invalidates a large (greater than three) number of previously-accepted blocks. The standard client will actually log this -- you'll see a REORGANIZE in the client's debug.log file. The client doesn't currently log the number of blocks invalidated by the reorganization, but that's a simple enhancement.\nCan honest users revert such attacks? Sort of.\nIf a transaction you care about is in the set of blocks that was invalidated, you can always resubmit that transaction. Unless the sender issued a conflicting transaction as part of a double-spend attack, the transaction will still be valid. (The network will actually do this for you automatically. Miners don't want to miss out on the chance to grab the transaction fees associated with the undone transactions.)\nAs a longer-term solution, there have been proposals discussed to reject reorganizations that invalidate suspiciously large numbers of blocks such as four or more. The problem with these proposals is that under unusual circumstances (such as if a disaster partitions the Internet for half an hour), the network can permanently split with each side rejecting the other side's block chain as a suspicious reorganization.\nEssentially, the client would have to go to a \"lockout\" mode if this happened and reject all transactions until some mechanism to find the real block chain could be implemented. (It could submit all transactions to both chains and consider only transactions accepted in both as confirmed!) One proposal uses a central authority to pick the real chain. This is an area where there is room for innovation.\nOne important point to keep in mind though: If the sender is not attempting a double-spend attack, you have nothing to worry about (other than the reduced usefulness of an unstable exchange network). You can submit the transaction to the block chain as many times as you need to until some block containing the transaction finally does win. Only the sender can create a conflicting transaction that would make you unable to get the transaction you care about into the chain.\nUpdate: In fact, you can lose coins even if the sender wasn't attempting a double-spend attack. Suppose A sends B money and then B sends C money, if A successfully uses a double-spend attack to invalidate the transaction that sent the coins to B, the send from B to C can fail (because a conflicting transactions means B will never have the funds to spend) even though B was not attempting a double-spend attack.\n", "security - Could the EC2 infrastructure be used to efficiently launch a 51% attack?": "\nAn NVIDIA Tesla \u201cFermi\u201d M2050 is not as fast as an ATI 5870. According to the wiki, the NVIDIA card makes around 70Mh/s and the 5870 makes around 400Mh/s.\nIf they were similar and if Amazon had that amount of cards available for rent, then it would be possible. Just don't forget that you would be paying $65415 per hour to sustain an attack that will not give you that much power over the network. See this question for an explanation of what the attacker could do. \n", "mining profitability - Do bitcoin miners actually make money": "\nMiners have about 26% profit at the moment, that's includes only cost of electricity vs bitcoins sell price.\n", "legal -  What are the dangers of MtGox's trademark over Bitcoin?": "\n\nIf anyone trademarks bitcoin, shouldn't it be Satoshi, Gavin or one of the people who actually made it[.]\n\nYou'd have to take that up with them. Thus far, they haven't.\n\nI mean, if GOX wanted, wouldn't they be able to shut down Tradehill or at least charge royalties if they were able to enforce their trademark. A very dangerous prospect.\n\nIf that's true, then had Mt. Gox not filed their Trademark, someone else could have and the problem would have been the same (except they could blackmail Mt. Gox as well, which would make things worse). So your issue is not with Mt. Gox.\n", "How are transactions in discarded forks merged back into the blockchain?": "\nThe client will import all the lost transactions into its pool of transactions it's trying to commit. Miners will include those transactions into blocks mined for the new chain, if they're not already in it.\nSince a miner won't keep a conflicting transaction in memory anyway, it's not possible for the client to cause a conflict by accepting the transactions in the blocks that are undone. Miners should immediately accept all transactions that meet its transaction fee policy and fit as many of them as they can, in priority/dependency order, into blocks they mine.\nOf course, coinbase transactions (the payment for mining a block) are forever lost. This is the primary reason that many more confirmations are typically required before coins from these transactions can be spent.\n", "transactions - What is the coin selection algorithm?": "\nI couldn't find the results of the Coin Selection written out anywhere, and just finished piecing it together from the code. It works as David mentioned, but here are more details.\nThe Coin Selection Algorithm logic to transfer Target amount\n\nIf any of your UTXO\u00b2 matches the Target\u00b9 it will be used.\nIf the \"sum of all your UTXO smaller than the Target\" happens to match the Target, they will be used. (This is the case if you sweep a complete wallet.)\nIf the \"sum of all your UTXO smaller than the Target\" doesn't surpass the target, the smallest UTXO greater than your Target will be used.\nElse Bitcoin Core does 1000 rounds of randomly combining unspent transaction outputs until their sum is greater than or equal to the Target. If it happens to find an exact match, it stops early and uses that.\nOtherwise it finally settles for the minimum of \n\nthe smallest UTXO greater than the Target\nthe smallest combination of UTXO it discovered in Step 4.\n\n\nAs David mentioned, the subset problem will first restrict to UTXO that have at least one confirmation if sent by yourself, or six confirmations if received from another wallet, then later relaxes these requirements in two further passes if no suitable set of UTXO could be discovered.\n\nSome examples\nAlice has four UTXO:\n\u2022 UTXO_A 0.1BTC\n\u2022 UTXO_B 0.3BTC\n\u2022 UTXO_C 0.5BTC\n\u2022 UTXO_D 1BTC\nI will be ignoring transaction fees for simplicity's sake.\nExample 1:\nAlice wants to send 0.3BTC.\nBitcoin Core discovers that UTXO_B matches the Target, and it only uses UTXO_B as input.\nExample 2:\nAlice wants to send 0.4BTC.\nBitcoin Core finds that UTXO_C is the smallest UTXO greater than the Target, and that the sum of all UTXO smaller than the target (i.e. UTXO_A + UTXO_B = 0.1 + 0.3 = 0.4) matches the Target here. Both UTXO_A and UTXO_B are used as inputs.\nExample 3:\nAlice wants to send 0.45BTC.\nBitcoin Core finds that UTXO_C is the smallest UTXO greater than the Target, and that the sum of all UTXO smaller than the target (i.e. UTXO_A + UTXO_B = 0.1 + 0.3 = 0.4) does not surpass the Target. UTXO_C is used as the sole input, being the next smallest input greater than the Target.\nExample 4:\nAlice wants to send 0.35BTC.\nBitcoin Core finds that UTXO_C is the smallest UTXO greater than the Target, and that the sum of all UTXO smaller than the target (i.e. UTXO_A + UTXO_B = 0.1 + 0.3 = 0.4) does not match the Target. It adds up randomly selected UTXO 1000 times until they surpass the Target, remembering the smallest sufficient combination. The smallest sufficient combination is then compared with the smallest single input greater than the target. Assuming that it does find the best combination here which would be UTXO_A + UTXO_B, it finds that Target < UTXO_A + UTXO_B < UTXO_C and uses UTXO_A and UTXO_B as inputs.\nExample 5:\nAlice wants to send 0.6BTC.\nBitcoin Core finds that UTXO_D is the smallest UTXO greater than the Target, and that the sum of all UTXO smaller than the target (i.e. UTXO_A + UTXO_B + UTXO_C = 0.1 + 0.3 + 0.5 = 0.9) does not match the Target. It starts trying random combinations as before, and in this situation would probably discover that UTXO_A + UTXO_C = Target. As it finds a combination that matches the Target, it breaks and immediately goes with that combination. UTXO_A and UTXO_C are used as inputs.\n\n\u00b9\"Target\" is used here for the amount to be spent.\n\u00b2UTXO = Unspent Transaction Output\n", "How to save bitcoins as paper?": "\nCurrently the most popular method is to use something like pywallet to export your public/private keys and simply generate a text QR code for them. Typically separate QR codes are generated for the public key and private key so that one code may be used to receive payment without giving away the private key which allows spending from the account. There are some alternatives, however, depending on your paper wallet needs.\nCasascius' Bitcoin Address Tool is an excellent way of saving bitcoins in an easy to recover format. Though it doesn't yet support QR codes it does have the ability to generate a paper wallet from any passphrase. Once generated you could store the public and private keys as QR codes using any of a number of applications or online generators. Additionally, you could store the passphrase in a QR code and use it to recover your addresses at any time.\nI specifically suggest this as opposed to simply exporting keys with pywallet and QR-ing them because this method would let you store more than one wallet address using a single QR code since any passphrase can generate up to 999 addresses deterministically in such a manner. Of course having a simple public key in QR code form also lets you scan the address with a smartphone or computer to send coins, so ultimately the solution depends on your usage.\n", "What unique business models has Bitcoin enabled?": "\nThe only thing I can think of is Mike Hearn's idea for Smart Property. This would allow the ownership of physical assets to be digitally exchanged and stored in the block chain. Other than that, I think Bitcoin mainly improves the efficiency of many, mainly digital, business models.\n", "algorithms - Is there any consensus over specific improvements Bitcoin needs?": "\nThere is no consensus. I think part of the reason for that is that many people involved in the Bitcoin project have a vested interest in maintaining that there is nothing wrong with Bitcoin.\nIn fact, there really is nothing wrong with Bitcoin, but there is lots of room for improvement. However, most improvements suggested have corresponding costs, and there is no consensus that the benefits outweigh the costs for many of the improvements.\nHere are a few areas where improvements are likely possible:\n\nThe mining algorithm is only computation hard. It is not memory hard or decision hard.\nAnonymity is limited by the inability to publish a receiving address without revealing how many coins are transferred to that address.\nThere is no good way to prune the block chain.\nThere is no good way to reverse a transaction or indicate acceptance of a transaction.\nTransaction fees are not predictable long-term.\nMining pools have centralized the decision of which transactions to include and which chain to work on, defeating some of the protection diversified mining was supposed to provide.\nThere is no way to recover lost coins.\nThere is no good way to manage the currency if that turns out to be needed. For example, the block payout algorithm is all but fixed in stone but may make no sense in a decade.\nThere is no good way to pull coins out of the block chain such that they can be put back in.\nA 51% attack can revert as much of the chain as desired, up to the last checkpoint.\n\nMy own opinion is that it's way too early to talk about Bitcoin 2.0. We don't know enough about what's really right and what's really wrong yet, and such efforts would actually work against broader adoption of crypto-currencies by reducing stability.\n", "security - How should centralized wallets handle user accounts?": "\n\nIn this way, without associating a user account with the private key itself, we are able to allow the user to have exclusive access to any number of keys. \n\nA very significant benefit that wallet services can offer is immediate and invisible transfer of coins between their accounts, by just updating their internal databases, without going through the block chain. This is how you can facilitate trades on MtGox for example, and it also provides increased anonymity, because you can now make transactions that are not visible on the block chain (and the transactions that are visible are withdrawal and deposits into the service as a whole, and those addresses are shared between many users, so also effectively anonymized). Obviously, this will not work unless the service can \"redistribute\" all the coins in all its addresses at will internally. (And obviously this also only works if every account holder trusts the wallet service to not take all the coins and make a run for it).\n\nEach account \"owns\" one or more public key hashes (the meat of a Bitcoin address). \n\nActually, for making deposits, this is how it already works with wallet services. There is a (or many) receiving address (sometimes for one-time use, sometimes stable and fit for publication) that is associated with every account holder. You deposit to the account using that address. However, the private key remains with the wallet service, and can be used by it for all kinds of unrelated payments. \n", "security - How much would it cost to execute a 51% attack?": "\nAdding to David's quote of $65,415 per hour here's a quick analysis of non-EC2 attacks (i.e. buy and run ALL the hardware to sustain a 51% attack)\nSince power efficiency will be HUGE for this scale of an operation, let's use the most power efficient card we can find. This lovely pastebin doc tells us that is the Radeon 5850 at 1.595 MH/W.\nAt present you need 12.42 TH/s to pull off a 51% attack, which would require 51,585 of these cards. Assuming we put four cards to a rig it also requires 12,897 computers to run them all. Assuming the PCs take a scant 200 watts, each rig requires 804 watts of power, 10,365,735 watts in all. Assuming a fairly high efficiency cooling system, we can bump that up to about 14,619,916 watts. Before anyone claims that this alone is impossible, keep in mind it's about 0.7% of the peak output of Hoover Dam. Speaking of Hoover Dam, I'm going to use my local energy rate of 11.28 cents per kW/h (I live in Vegas) to find that it would cost $39,579.04 to run and cool these rigs for a single day.\nSince these cards cost $192 at the cheapest outlet I could locate, we'd spend $9,904,320 on cards and at if we spent a scant $500 on each rig's other hardware they'd cost us $6,448,120 as well for a total hardware cost of $16,352,440. If we amortize that cost over a year of operation before the parts die or become too obsolete to pull off our attacks any more, we can estimate $44,770.54 per day in hardware costs.\nTotal cost in amortized hardware and electricity to run a 51% attack for one day on the bitcoin network: $84,349.58 - but also recall that our total startup costs were 16.35 million dollars, and all that would buy you is the ability to double-spend for a time, so no it wouldn't really be worth it.\n", "transactions - Standing Orders, Is it possible with Bitcoins?": "\nOne way to accomplish this today is to run Bitcoin with the -server switch. Then, create a cron job (Linux) or scheduled task (Windows) that calls bitcoind with the proper arguments. Something like...\nbitcoind sendtoaddress <address> <amount> <comment>\n\nThe up side of this method is that you can run a lot of different commands this way. See the wiki for a full list of available RPC calls.\n", "security - String-along, is this possible and is it an attack?": "\nA miner can always lose out if someone else mines a block at approximately the same time as he does. A miner will always continue building on his own block if he finds one before he processes a block found by someone else. It is never to a miner's advantage to ignore a block found by someone else unless he himself has found a block at almost exactly the same time.\nSo this is all behavior as expected.\nWhen you mine a block, everyone else who has not found a block has a strong incentive to mine after your block. If they don't, they have to find two blocks to get any credit at all. If they find one block first, the rest of the network will ignore it.\nIf you control 51%, you effectively control 100%. That is also expected behavior.\n", "payment - Can a bitcoin transaction be used to send usernames?": "\nI'm not sure how you would make vanity addresses work for this. You don't want to store an address for each user, and if you did you wouldn't need vanity addresses. If you force the user to create a vanity address, I don't see what they would do with it that would help you. It seems kind of bizarre to force them to transfer the coins to their own vanity address and then transfer them to you, so you can see the vanity address as the source.\nOne possibility is to publish a simple algorithm to convert their user name to a Bitcoin address (that nobody could claim). Then have them use the sendmany API call to send the payment to you and a satoshi to their user name's corresponding Bitcoin address. You would receive the funds and then know what user to credit them to by decoding the address that had received a satoshi. This would waste one satoshi for each transfer.\nThere are really only two issues with this. First, it's a bit of a pain for your users. They can't use the GUI to send the funds since it doesn't support sendmany. Second, the users have to be careful not to send the actual funds to the Bitcoin address corresponding to their user name. If they did, those coins would be lost forever. They need to understand that they should only send a tiny fraction of a Bitcoin to that address so as to 'mark' the transaction.\nAll in all, I think all the possible solutions are ugly and you should rethink the decisions that led you to these unusual requirements.\n", "value - Could a futures market be included in the Bitcoin protocol?": "\nSilk road's hedged escrow is a first step in this direction, and seems to work.  But all the \"trades\" are bilateral (SR is always one of the parties) and you can't \"buy\" the \"contract\" unless its to hedge a sale made through the SR website.\n", "blockchain - Can new types of transactions be included the current block chain?": "\nMiners will accept block with transactions they don't understand, so long as the transactions don't attempt to create Bitcoins out of thin air. They won't include transactions they can't validate in their own mined blocks though.\nThere is active effort at the top levels of the Bitcoin developers to get new transaction types into the client. M-of-N transactions (transactions that require a set of signatures), for example, are close to obtaining a consensus.\n", "development - How do I implement a Merkle Tree?": "\nIn each iteration, you concatenate two subsequent hashes of the previous level, and double-sha256 them. If there is an odd number of hashes, concatenate the last element with itself.\nThis gives you a new list of hashes. Repeat, and stop when one hash remains. This is the merkle root.\nAssume you have tx hashes Ha1,Ha2,Ha3,Ha4,Ha5,Ha6,Ha7\n\nFirst iteration: Hb1=Hash(Ha1|Ha2), Hb2=Hash(Ha3|Ha4), Hb3=Hash(Ha5|Ha6), Hb4=Hash(Ha7|Ha7)\nSecond iteration: Hc1=Hash(Hb1|Hb2), Hc2=Hash(Hb3|Hb4)\nThird iteration: Hd1=Hash(Hc1|Hc2) => Merkle root\n\n", "Costing arbitrage between exchanges": "\nnmat: i think you got the signs wrong in there somewhere. the fees will /decrease/ your effective selling price, and /increase/ your effective purchase price. so it should in fact be:\nExchangeA_sell * (1 - ExchangeA_fee) - ExchangeB_buy * (1 + ExchangeB_fee)\n\nand also, you should take into account any deposit/withdrawal fees (E.g., when you withdraw via LR from mtgox, that's a 2% hit, when you use dwolla, that's 0.25USD fee, etc) that you'd incur when moving money between the exchanges.\n", "Best way to get the OID of an order created at TradeHill?": "\nYou must keep a record of your orders and compare them with the returned list. Alternatively, you can sort the returned list according to date. The order you posted is the most recent.\n", "alternatives - What does a comparison of Bitcoin Days Destroyed say about Bitcoin vs Namecoin vs SolidCoin?": "\nWhile Bitcoin DD% is lower it is a lower % on a larger base.  Converted to a standard unit say USD Bitcoin transactions are a magnitude higher than other coins.  The lower DD% doesn't tell us anything about the nominal amount of transactions but rather the relative days destroyed between currencies.  \nThe lower DD% simply means that less of the older coins are moving in the bitcoin economy than other economies.  Other economies are much newer thus they don't have very old coins which due to their extreme age can skew the stat donward.    If the oldest SolidCoin miners simply mine and hold they at most can prevent a 14 days from being destroyed.  For early bitcoin miners holding onto a single coin can prevent hundreds of days from being destroyed.\nAs for reason why older coins may not have the same velocity as newer coins.  Some of that may be loss.  For a long time bitcoin was worth less than a cent.  Someone with 10,000 coins (a huge sum tody) may not have taken very many precautions against it and lost coins in data losses or system formats.  \nSome early miners may have done it simply for academic reasons rather than any investment and when they stopped they deleted (intentionally or accidentally) their wallets.\nIn the early years of bitcoin there wasn't much value or reason to quickly sell coins.  Now the miner may no longer even be mining and just holding the coins as a speculative investment.  Newer chains usually have an exchange open from day one.  Checking the alternative cryptography forums and exchange chats will indicate a large number of miners aren't mining alt coins for long term appreciation (which would result in low DD%) but instead are quickly selling on exchanges for other currencies including fiat.\n", "Services paid in Bitcoin": "\nBitcoin Torrents lets you use their uber-fast servers to download a torrent.  Then you can stream it from there at a consistent rate.  Very nice idea!\n", "currencies - If Bitcoin is ratified as a currency would its code be BTC?": "\nThe normal rule is (two letter country code) + (letter), although that's arguably already been broken by the Euro having EUR instead of EUE.\nBT is the country code of Bhutan, whose currency has the code BTN. If anyone will object to BTC for Bitcoin, it'll be them.\nAccording to wikipedia, which is never wrong, multi-national currencies use the X prefix. XBC is taken by \"European Unit of Account 9\", but XBI is available.\nhttp://en.wikipedia.org/wiki/ISO_4217\n", "client - Merkle Tree hashing": "\nAs it was pointed out to me by ArtForz in this post: https://bitcointalk.org/index.php?topic=44707.msg534605#msg534605 the hashes are stored in little endian notation, so I first need to reverse them before double-hashing them, and then reverse the output back to get the proper result.\n", "transactions - How to debug a long \"0/unconfirmed\" status in the bitcoin client?": "\nTry running bitcoind from the command line with the -rescan option. It may be that your transaction was erroneous or a double-spend attempt and it only exists in your client. You could double-check the receiving address in blockexplorer to see if the transaction ever came through from the rest of the network's perspective. If this is a zero transaction fee transaction (or is just otherwise unlucky) it might still be in-queue to be included in a block. Bitcoin Charts has a list of in-queue transactions you can check as well.\nAssuming blockexplorer sees the transaction, your client probably isn't downloading blocks and may not even be connected at all. Check that the block number in your client matches the block number at blockexplorer (or any of a number of other sites), check if your client has 0 connections. If you have no connections, try the troubleshooting steps from this question. Worst case scenario delete everything from the Bitcoin data folder except for wallet.dat and re-launch the client. Several hours later when you've finished downloading a fresh copy of the block chain, your 0/unconfirmed transaction will probably be resolved.\n", "currencies - How can determine the fundamental theoretical value of the Bitcoin based on steady state daily velocity (BTCDD)?": "\n\"Bitcoin days destroyed\" seems like a bogus metric. Transactions in the block chain do not always represent an actual economic trade. Wallets routinely resign the remainder of a coin to a new private key and it's very hard to determine what is the transaction and what is the change. You could spend 0.5 BTC from a 50 BTC block mined 10 days ago, and resign 49.5 BTC to yourself - you have \"destroyed\" 500 bitcoin days as far as the metric is concerned.\nYou don't have to care about the proportion of currency circulating, just the average velocity. Us dollar M1 velocity is in the 8 - 10 range. That means that on average a dollar changes hands every 1-1.5 months. If we assume a similar dynamic for say 10 million bitcoins (2 years from now?), we get about $4400/BTC for 10% of your quoted Visa volume.\nBut 10% of that is very, very much. It includes 1500bln in cash/ATM and 1700bln in credit purchases. The online commerce part of that than Bitcoin could target is maybe 200bln dollars and 10% of that brings the price of one bitcoin to 200$. \nAnd all this assuming the deflation does not choke the velocity - which it will, bringing the actual volume down and with it the incentive for businesses to invest in bitcoin support.\n", "Are there any poker websites that accept bitcoins?": "\nThe best resource to look for a poker site is the gambling section on bitcointalk.org.  There are a lot of smaller sites advertised in that section of the forums trying to cater to the poker players who want to use their bitcoins.\nI think I've also seen people will to trade bitcoins for money on bigger poker sites, but I do not believe any major sites accept bitcoins directly at this time.\n", "mining setup - What software/hardware is required to mine with an FPGA?": "\nYou would need a computer to program the FPGA, obtain the work units, distribute them to the FPGAs, collect the shares, and submit them back. If you're not using a mining pool, you'll also need the computer to generate the work unit, assemble solved blocks, and submit them to the Bitcoin network.\nThe computer won't be doing that much work. So you can use a very low-end machine and optimize it for low power consumption and low noise.\nCablesaurus built the first commercially available FPGA Bitcoin miner. There is a lot of innovation going on and what's available is changing rapidly, but most of the current designs are very similar to this design.\n", "security - Why is 6 the number of confirms that is considered secure?": "\nI believe this is addressed in page 8 of Satoshi's Bitcoin paper when showing the probability of an attacker catching up.\nThe wiki states: \n\n\"Only 6 blocks or 1 hour is enough to make reversal computationally impractical.\"  \n\nThe key word is \"impractical\".  \nThe important sentence in Satoshi's paper is: \n\n\"Assuming the honest blocks took the average expected time per block, the attacker's potential progress will be a Poisson distribution\".  \n\nSo, it is not that someone couldn't create the worlds first and own a $50 million ASIC farm, so as to have the ability to overtake the blockchain from a fork six blocks prior but that doing so would be a.) a massive undertaking, b.) obvious to all and c.) terrifically unprofitable to the attacker.\n", "charts - Is there a \"MtGox Live\" alternative which supports Euro?": "\nMtGox Live now supports 17 currencies. Use this URL with the desired country code:\nhttp://mtgoxlive.com/orders?currency=YOUR_DESIRED_CURRENCY_CODE\n\n  BTC  // Bitcoin    \n  USD  // USA    \n  EUR  // Euro    \n  JPY  // Japan    \n  CAD  // Canada    \n  GBP  // Great Britain    \n  CHF  // Switzerland    \n  RUB  // Russia    \n  AUD  // Australia    \n  SEK  // Swedish    \n  DKK  // Denmark    \n  HKD  // Hong Kong    \n  PLN  // Poland    \n  CNY  // China    \n  SGD  // Singapore    \n  THB  // Thailand    \n  NZD  // New Zealand\n\nHere is the Euro chart: http://mtgoxlive.com/orders?currency=EUR\n", "security - What can be done to mitigate the risk of a Finney-attack?": "\nThe key to understanding why the Finney attack isn't really that big of a deal is understanding the business case for accepting 0/unconfirmed transactions. An online merchant doesn't usually have to accept such transactions since they probably do batch-shipping anyway. It's not required from an integration standpoint since the API includes many options to simply not return transactions without confirmations. The only business case that requires the acceptance of 0/unconfirmed transactions is when your customer is standing directly in front of you and won't be around for 10+ minutes. In such cases, a Finney attack isn't feasible and here's why:\nImagine I'm a scammer wanting to use the Finney attack against you, the honest merchant. I've spent a few grand and bought myself 3 GH/s worth of Radeon 5830 rigs. This number isn't arbitrarily chosen, I specifically picked it to make for easy math - 3 GH/s will net you about 1 block per month at current difficulties. Given that actual brick-and-mortar stores are closed for about 8 hours per night on average, this means that 1/3 of my found blocks will occur outside of business hours so on average I get a chance to double-spend with a Finney attack every 45 days.\nNow as with all mining, there's no telling when you'll hit that lucky block so if I'm dead set on executing this attack I have to stay hypervigilant because once every 45 days I'll get an alarm of some sort telling me to go spend money at my target's store. I have to get there quickly because if I don't make my purchase and remotely trigger the release of the block fast enough, that block will get solved by some other miner and I'll lose my chance. So let's say on average it takes me 5 minutes to get somewhere, pick something and make a big purchase - I've got a 50% chance of failure, so now I'm able to execute my attack about once every 90 days.\nMining isn't cheap - my 3 GH/s setup draws something like 2 kilowatts, add in another 800 watts or so for cooling and at my local electricity costs it runs me about $8 a day to try for this attack. Multiply this by the 90 days it takes on average for me to be successful and I have to be successful to the tune of $710 just to break even. I'd make better money mining! Keep in mind that I've spent 16 hours a day every day for three months waiting for that alarm to go off too, so even if I double-spend $1420 (double my costs) I still only make $236.67 per month for my trouble - 49.3 cents per hour.\nOh and once you've made the purchase there's still the gap between then and releasing the block. If a block is found during that window, you've actually spent that money now. This particular attack is not without risk.\nSo there's something of an answer - not how to mitigate the attack but why the attack doesn't really matter. Online merchants don't need to accept 0 confirmation transactions since your stuff probably won't ship within 10 minutes anyway and brick-and-mortar merchants add a delay to the transaction process that makes the attack unfeasible. Even without the delay, the transaction would have to be positively huge to make any sort of profit and the attacker still stands a large risk of actually spending the money anyway. I don't really see this taking off.\n", "What strategies can an e-wallet use in order to reduce transaction fees?": "\nFirst, transfer out older coins, gathering as few inputs as possible. The client does this automatically, and exchanges will typically have a vast supply of old outputs they can claim.\nSecond, combine transactions (using 'sendmany'), sending funds to more than one destination at a time. If you have a single, large, old transaction output you can claim, use it to make payments to three or four destinations at once. This will keep your transaction just inside the free relay limit.\nThird, configure your client appropriately. Set it to never pay a transaction fee. Set it to specifically connect to other clients known to relay transactions with no fees and known to be linked to miners who are willing to include transactions with no fees. And trade off anonymity for convenience and speed by modifying your client to send new, local transactions to all connected clients immediately.\nNote that not all of these strategies will always be appropriate. For example, if fast transactions are important to your customers, it may be worth paying the occasional transaction fee even if you have to eat the cost.\n", "doublespend - Would a reduced block generation time make the Finney attack more difficult?": "\nAssuming all else is equal (same network hashrate, etc) then the attacker still represents the same percentage of the overall hashrate and therefore may claim the same percent of the blocks for his/her attack. While it's true that faster block time increases the total number of blocks, reduces the difficulty and makes it so that the attacker has more opportunities to land an attack with the same hashrate it also lowers the detection time for such an attack and narrows the window.\nIn the standard Bitcoin network, a block is found roughly every 10 minutes, but realistically they are found along normal distributions with their peaks at 10 minute intervals. A block may be found immediately after another block or it may take 20 minutes to find the next block, but these are not typical cases. I don't have data to show what one standard deviation from the 10 minute mark would be, but I can say that if block time were reduced such that the region of +/- 1 standard deviation overlapped slightly, an attacker would face a statistically significant risk of a block being found before he or she could execute the Finney attack. I have no idea what other effects this might have on the network, and it would require significant testing to confirm its feasibility.\nEven if the +/- 1 SD region did not overlap, the distance between their boundaries is effectively the period of time an attacker has to execute an attack, so anything which narrows this gap reduces the effectiveness of a Finney attack.\nThe active question which I've still not found an answer to, is this: Does the value of \u03c3\u00b2 for the distribution of block finds change along with average block time or is it somewhat static? If \u03c3\u00b2 remains the same then decreasing the block time will drastically effect the ability of an attacker to utilize this method, but if it decreases proportionally to block time then the only effect block time has on such an attack is the added requirement of greater precision in timing.\nEdit: I've received confirmation that block generation isn't a normal distribution but rather a Poisson distribution and that the time window for a Finney attack does scale linearly with block time. To this end, reduced block time provides no statistical advantages over normal block time, but it does still require an increase in precision on the part of the attacker. As I've not heard of anyone executing a Finney attack, even as a proof-of-concept it's questionable how much the precision requirement would help in preventing attacks, though the effectiveness of such is probably more dependent on the merchant/business model than on the network itself.\n", "gavin andresen - What does TruCoin do?": "\nFrom reading publicly available information it seems the intention of TruCoin is to create a set of stable business fronts that can benefit both the growth of bitcoin and also the company (ofcourse)\nAs we all know without stable business there will be very little growth. Working in close colaboration with the lead developer of bitcoin gives both a good understand of how to support the specific business metrics that bitcoin may demand when running a live and large e-commerce site.\nOther upcoming sites may greatly benefit from any situations that they face and can certainly \"test the water\" for large organizations to use BTC.\n", "How to calculate transaction size before sending (Legacy Non-Segwit - P2PKH/P2SH)": "\nAssuming all the inputs you are spending are from regular \"pay to address\" transactions, each input will contribute 180 (plus or minus 1) bytes to the transaction.  Each output adds 34 bytes to the transaction.  And there's a fixed extra 10 bytes which are always present.\nThe \"plus or minus 1\" comes from the fact that each input needs a signature to be claimed.  The signature contains two 32 byte values, but if either of the values has a first byte of 0x80 or more, it has a 0x00 byte prepended to it.  So I'm assuming one of the two is high and the other is low.  That way I'm off by at most one byte per input.\nSo if your transaction has in inputs and out outputs, the transaction size, in bytes will be:\nin*180 + out*34 + 10 plus or minus 'in'\n\nFor example, this transaction has 40 inputs and 16 outputs.  That gives us a transaction size of\n40*180 + 16*34 + 10 +- 40\n\ni.e. 7754 +- 40 bytes.  The actual size is 7761 bytes.\nIf the inputs are from \"pay to pubkey\" transactions then the inputs are smaller than for \"pay to address\" transactions.  And this will be different also for \"pay to script hash\" inputs too, depending on how/if that's implemented.\nEdit: This transaction was made with bitcoins stolen in the Linode heist and shows a transaction size of 1337, possibly a deliberate use of leetspeak in the blockchain.\nEdit2: Now that compressed public keys are commonplace, each input is 32 bytes shorter and so the transaction size is now:\nin*148 + out*34 + 10 plus or minus 'in'\n\n", "economic theory - How would interest and fractional reserve banking work in a limited money supply?": "\nIt doesn't matter very much because the economy can trivially create substitutes for currency. Anything that has the same capabilities as currency (fungible, easily exchanged, limited supply) can also serve as currency.\nA good example would be a Mt. Gox code. Mt. Gox may or may not have 100% reserves, but it doesn't matter. A Mt. Gox code for 100 Bitcoins is basically as good as 100 Bitcoins. If you don't fully trust Mt. Gox, maybe it's as good as 99.5 Bitcoins.\nAlso, you can \"print money\" without actually being able to produce currency. For example, say I want to buy a car today and need 2,500 Bitcoins to do so. If someone loans me 2,500 Bitcoins in exchange for an insured IOU to pay 2,600 Bitcoins in six months, the 2,500 Bitcoins I borrowed to buy the car are still in circulation. But there is also now an IOU in circulation that is also worth 2,500 Bitcoins. As that note comes closer to maturity, it's value will go up. So just by time passing, the effective number of Bitcoins in circulation will go up.\nThis is bad news to the people who don't like the way a modern economy works, oppose fractional reserve banking and currency controls, and think that Bitcoins will bring on a new economy where banks can't create money. But I think it's pretty obvious that the same kinds of things will happen.\nThe whole Bitcoin system itself is an example of creating money out of thin air.\n", "development - What happens if the developers make a controversial change to the \"standard\" client?": "\nThe power to dissent over changes that causes existing clients to reject a block does lie disproportionately with miners. Any change that causes existing clients to consider a block invalid is useless until the majority of miners update.\nMiners who consider the block invalid will never attempt to build on a chain that includes any such blocks. So until a majority of miners upgrade, the longest chain will never stably contain a block requiring the update.\nOnce the majority of miners have updated, those running clients will pretty much have to update. Otherwise, they'll be stuck on a shorter block chain that won't agree with the more secure block chain.\nThe change would have to be pretty detrimental to key interests for businesses or ordinary users to be able to stand up to the miners. That seems pretty unlikely to me because there interests are pretty well aligned.\n", "blockchain - How do the clients agree on the target to hash for?": "\nBy \"difficulty\" I mean the number that determines the minimum acceptable hash. Higher difficulties mean lower hash minimums and thus, on average, more hash attempts needed to produce a valid block. (Related terms are target and nBits).\nEvery 2,016 blocks there is a difficulty change block. Unless the block is a difficulty change block, the difficulty must be precisely the same as the previous block or the block is invalid.\nOn a difficulty change block, the difficulty must be precisely what the difficulty algorithm requires or the block is invalid. The algorithm takes into account the amount of time it took to generate the previous group of blocks and computes a new difficulty such that the block generation time will be, on average, once every ten minutes if the network hashing power stays the same.\nIf you want to see this in the source code, check out the GetNextWorkRequired function in the main.cpp file.\n", "Bitcoin Client says transaction is unconfirmed for 2 days now": "\nBitcoin Charts is a great place to check and see if your transaction is out there.  It displays unconfirmed transactions that have been broadcast to the network.  If a transaction does not show there, then running bitcoin with the -rescan option should fix things up.\n", "Is there a usable Namecoin GUI client?": "\nMulticoin can be used to trade Namecoin although the functions for registering names and such cannot be used.\nThere is a current bounty of 750NMC to produce a web UI for the client to run within a local machine. It can be found on the http://dot-bit.org wiki site.\n", "backup - How to debug a failed restore of a Namecoin wallet?": "\nThe best thing to do is wait for the blockchain to download.  With most wallet backups/new installations of bitcoin or namecoin blockchain downloading is usually the issue.  Many people seem to get a little impatient and think the program is broken when it's really just the download taking a while.\n", "commerce - Is there a chart of Bitcoin merchants over time?": "\nI went through the last 500 revisions of the wiki page, pulled the byte count into excel and graphed it. Line count would probably be a better metric but I didn't have a readily available data source for that. If someone wants to write a script that wget's each revision and counts the number of  tags that might be more accurate, but here's 500 revisions worth of data as a chart:\n\n500 revisions goes back to Jul 8, 2011.\nAlso of interest, the earliest revision (Feb 10, 2011) of the Trade page has a scant 117 <li> tags while the current page has a whopping 785! I haven't taken the time to count all the revisions inbetween but that's quite a lot of growth - 668 new entries in 225 days for an average of almost 3 entries per day or about 1,084 per year! While some of these are bound to be non-merchant list items, that's still an impressive rate of growth.\n", "security - Fraud Detection & Prevention": "\nThe primary mechanism of attack in most financial systems, Bitcoin included, is a \"double spend\" attack which essentially allows the spending of the same money in multiple places either by duplication of funds or by revocation of the earlier of two transactions. We've actually addressed a number of such attacks on the StackExchange site here. Try looking at questions with the doublespend tag.\nThe two most commonly discussed are the 51% attack and the Finney attack.\nThe 51% attack requires the attacker to hold 51% or more of the complete hashing power of the Bitcoin network. Once the attacker holds the majority of all hashing power he/she may spend bitcoins and then fork the blockchain in such a way as to not include the block they were spent in. This is incredibly expensive and not arbitrarily done. It would also be somewhat detectable as the forking blockchain would regularly cause problems with other transactions until the 51% attack completed.\nThe Finney attack can be done by a solo miner without 51% of the network hashing power. The miner waits until they solve a block and place a transaction in that block in which they send all their coins to another address they control, but withhold their result. They then spend coins from the originating address elsewhere and then release the block. This essentially breaks the order of operations and makes the valid transaction impossible since the originating address no longer contains an adequate balance to have sent the coins.\nThese have both been discussed at great length and from many angles here on the StackExchange site. Again, try looking up the doublespend tag.\n", "reward schedule - The End of Mining": "\nA surge in transactions would mean a surge in transaction fees. So it does not follow that there would be a massive decline in mining.\nIn any event, we have about a decade to work out what changes, if any, are needed. Nobody has a crystal ball.\nOne interesting issue though -- right after a block is mined, all the 'juicy' transactions will be taken, and the available transaction fees will be low. Miners might wait a bit (especially if they can save power/money by pausing mining) until the possible transaction fees reach a higher level. The consequences of that \"off and on\" surging in mining power need to be considered.\n", "legal - Bitcoin Intellectual Property Threats": "\nAccording to our good friend Wikipedia (my emphasis): \n\nIntellectual property (IP) is a term referring to a number of distinct\n  types of creations of the mind for which a set of exclusive rights are\n  recognized\u2014and the corresponding fields of law.1 Under intellectual\n  property law, owners are granted certain exclusive rights to a variety\n  of intangible assets, such as musical, literary, and artistic works;\n  discoveries and inventions; and words, phrases, symbols, and designs.\n  Common types of intellectual property rights include copyrights,\n  trademarks, patents, industrial design rights and trade secrets in\n  some jurisdictions.\n\nSo to attack Bitcoin you'd need to produce evidence that someone else got there first, or that Bitcoin is mis-using an existing technology beyond it's remit (breaking terms of a license for example). \nThis would be hard given the unique nature of Bitcoin, the open source license it was released under (MIT - a very permissive license) and the well-established cryptographic protocols and algorithms it uses (SHA-256, RIPEMD-160, elliptic curve DSA) all of which are taken from worldwide standards (think IEEE, ISO, FIPS etc).\nHowever, I am not a lawyer, and the law varies across the world. It may be possible through some convoluted mechanism to attack it and lay claim to a patent of some kind, but it would take obvious collusion on behalf of the respective court of law to ratify it which may serve to discredit the attacker.\n", "How do I upgrade my Bitcoin client?": "\nFirst, you should backup your wallet.dat in case something goes wrong. The file is located in the data directory:\n\nWindows\nC:\\Documents and Settings\\YourUserName\\Application data\\Bitcoin (XP)\nC:\\Users\\YourUserName\\Appdata\\Roaming\\Bitcoin (Vista and 7)\n\nThe easiest way to open your appdata folder is to press Windows Key-R, then type %appdata% and hit enter.\n\nLinux\n~/.bitcoin/\nMac\n~/Library/Application Support/Bitcoin/\n\nThen install the new version in the regular manner. The new client should use your previous settings (including the wallet and the blockchain data).\nIf, by some strange magic, your wallet gets corrupted, just copy your backup into the data folder.\n", "security - Are there any attacks with a plurality of computing power?": "\nIn a certain sense, all 51% attacks are really plurality attacks, but you have to consider all honest users as forming a single \"coordinated group\".  (Which is true when you think about it: they are all following the intended protocol as implemented by standard software.)\nSuppose for example that 30% of hash power is controlled by honest miners, 32% by Cartel X, and 38% by Cartel Y.  The honest miners are mining on the main chain.  Cartel X wants to reverse a transaction that appeared in some previous block A, so they are mining on a side chain that diverges from the main chain at block A-1.  Cartel Y wants to reverse a different transaction that appeared in a previous block B, so are likewise mining on their own side chain from B-1.\nGiven enough time, Cartel Y's chain will eventually be longer than either the \"honest\" chain or the chain produced by Cartel X, so it will become the official record.  Cartel Y will be successful in reversing their transaction, and Cartel X will not.\nThe 51% figure is based on the assumption that all miners who are not part of the attacking cartel are honest.  But if some of them are part of a competing cartel, then a plurality indeed suffices, assuming you count all honest miners as a cartel of their own.\nIn principle something similar could happen in the event of a blockchain fork, where honest miners could split into two or more non-cooperating groups mining on distinct chains.  In that case an attacker controlling more hash power than either group could mount a 51% attack also.\n", "proof of work - How cooperative or competitive is the mining process?": "\nMiners that aren't cooperating will never replicate work because they each want to get a different block as the next official block. If nothing else, the account the mining fee is paid to will be different. (And this ripples up to the header.)\nFor miners that are cooperating, work units are assigned by the mining pool. The pool will typically embed a different coinbase in the work units it assigns to each miner. When a miner finishes processing a work unit, it requests a new work unit (with a new coinbase) from the mining pool.\nSo there should never be any replicated work.\n", "security - Can I force my wallet to only have news keys, post-encryption?": "\nSeems to me that the easiest way would be to create a brand new, encrypted wallet using the new client, then send all your coins to that one and forget about the old one.\n(You can force a new wallet by simply deleting wallet.dat before launching the client)\n", "development - Will be possible to have the same key on more than one wallet?": "\nThe pull request that you refer to is just for simple import/export of private keys and wallets and does not include the feature that you want.\nThere have been some discussions on multi-signature transactions which sounds similar to what you are looking for. That would allow for cases where two different private keys are required to make a transaction. See this forum thread and the draft proposal here.\n", "Is the NotHaus conviction (Liberty Dollar) relevant as legal precedent?": "\nThere are many complementary currencies in use around the United States quite openly and without government interference, including BerkShares, Ithaca Dollars and similar hyper-local currencies, various bartering or time swapping systems like LETS or Time Dollars, etc. The case you are referring to revolved around minting coins that could easily be confused with US money and allegedly circulating (and encouraging others to do so) to local businesses while passing them off as US money (by a lie of omission, if nothing else).\nIt may well be that Bitcoin faces legal challenges in various countries, including the US, but this particular case will have set no precedent in that regard.\n", "bitcoin core - How exactly does -rescan work?": "\nThe bitcoin client stores, in the wallet, the transactions that affect coins it manages. If it sees a new transaction, it checks to see if that transaction affects any accounts stored in the wallet. If so, the wallet is updated. Similarly, if the chain is reorganized, the wallet is updated.\nHowever, the client doesn't check to make sure the wallet is synchronized to the current block chain. To fix this, the rescan command can be used. This causes the client, on startup, to go through every single block it has downloaded, search for transactions affecting accounts in the wallet, and update the wallet's transaction store and balances to reflect that transaction.\nThere are a few cases when you definitely need to rescan. For example:\nIf you restore a backed up wallet, it will be missing any transactions in blocks you downloaded after you backed up the wallet. Since the client won't receive those blocks (since it already has them) the normal wallet update logic won't fix this. You will need to rescan.\nIf you modify your wallet, say by adding keys to it or removing transactions from it, the wallet update logic won't see the transactions. So if you use a program other than the client to modify your wallet, you will need to rescan.\nTheoretically, it shouldn't matter whether you download all the blocks and then rescan or vice-versa. The client won't download blocks while it's rescanning. And newly-downloaded blocks should update the wallet anyway. The logic is basically that this ensures the rescan process sees the blocks containing any missing transactions, rather than the regular block update logic. (They should both work. But if you need to rescan, we know something's wrong anyway.)\n", "cpu mining - How to code the Simplest BitCoin CPU Miner?": "\nIf you're fluent in Python, there is a reference RPC miner, written by one of bitcoin's developers: https://github.com/jgarzik/pyminer\n", "websites - Is there a list of established sites that have started accepting Bitcoin?": "\nhttp://stuffexists.com/  has a good list.\n", "arbitrage - Pricing TradeHill compared to MTGox": "\nThe problem might be that TradeHill adds orders to the Orderbook before processing them.\nFor example, this happened today:\n\nAround 18h10 UTC, the highest bid was 4.842524 and the lowest ask was 4.840000\nAround 22h00 UTC, the highest bid was 4.820000 and the lowest ask was 4.819900\n\nI have also detected similar situations at ExchangeBitcoins.com.  CampBX  and MtGox seem to be matching orders before displaying them so you shouldn't have these problems there.\nIf you don't want to risk putting an order that will never go through, you should detect situations like this in your code and wait for the orders to solve. If the lowest ask is lower than the highest bid, something is not right.\n", "transactions - Is it possible to send bitcoins without paying a fee?": "\nIt is possible to send Bitcoins without paying any fee. The easiest way is if your transaction meets the following requirements:\n\nThe transaction only sends coins to one address, plus the return of change. (No more than two 'out' scripts.)\nThe transaction doesn't need to gather a large number of small transaction outputs. (You are spending funds you received in a sensible way, not as a large number of micro-transactions.)\nThe funds are stable. That is, you aren't spending funds you recently received.\n\nOtherwise, the transaction fee goes to the miner who includes your transaction in a block.\nCurrently, it is possible to get any valid, standard transaction into a block without paying a fee if you are willing to be sufficiently patient. You may need to specifically configure your client to connect to a client known to accept such transactions and known to relay them to miners. (Luke Dash Jr. runs one such node, with IP address 173.242.112.53.)\n", "economic theory - Does speculation hurt bitcoin?": "\nIt's worth noting that bitcoins would have no value if it weren't for speculation.  When Satoshi first released the client, those who put their electricity and computing resources towards mining bitcoins were speculating that the value would rise from zero, and that the coins would be accepted as payment by someone else.  Those who first accepted bitcoin payments, likewise, were speculating that the value would remain above zero, and continue to be accepted by others, and so on.\nIt's also worth noting that Bitcoin would likely not have received the amount of attention that it has if not for people speculating that the value would rise tremendously and buying coins in large quantities.  This attention has brought in more users, developers, and businesses, thus increasing the health of Bitcoin.\nIf speculation does hurt Bitcoin in some ways, it's at the very worst a necessary evil.\n", "bitcoind - Where can I set the fee value for accepting transactions?": "\nNote that the transactions are chosen by the client you issue your getwork requests to. If you're mining in a pool, the pool chooses the transactions.\nThe key settings are in the main.h file. Look at MIN_TX_FEE and MIN_RELAY_TX_FEE.\nTo accept non-standard transactions, comment out these lines in main.cpp:\n// Rather not work on nonstandard transactions (unless -testnet)\nif (!fTestNet && !IsStandard())\n    return error(\"AcceptToMemoryPool() : nonstandard transaction type\")\n\nNote that if you accept transactions with less than the normal transaction fees, you should connect to Luke Dash Jr.'s node to make sure you get such transactions, since most clients won't relay them to you. Add -addnode=173.242.112.53 to the command line you use to start your client.\n", "bitcoind - Is it possible to run more than one client instance on a machine?": "\nYou need both a different RPC port (-rpcport), a different P2P port (-port), and a different working directory (-datadir).  You will also need to use the daemon (bitcoind) for everything after the first instance, since only one GUI can be running at the same time.\n", "wallet - How can I transfer all funds to new keys?": "\nEasiest way I can think of:\nUse up all of the addresses in the keypool by requesting 100 new addresses. If you're comfortable in the command-line on Mac or Linux:\nfor i in {1..100}; do bitcoind getnewaddress; done\n\nThen perform a bunch of sends-to-self using MORE freshly-generated addresses. Again, if you're comfortable on the command line and had (say) 10 bitcoins in your wallet you wanted to send in 10 different transactions over the course of an hour you might do:\nfor i in {1..10}; do bitcoind sendtoaddress $(bitcoind getnewaddress) 1; sleep 360; done\n\nThis wallet will still get coins sent to the old addresses, although if somebody at work DID have a copy they could also spend coins that came in to the old addresses.  There's not much you can do about that.\n", "majority attack - Do miners have both the incentive and ability to keep the reward at 50BTC?": "\nIt's not just about the miners, it is also about people using bitcoin. If miners decide to fork the chain and keep block bounty at 50btc, they cannot use those bitcoins in any place where people have not also modified their non-mining bitcoin client. Protocol changes are not just about >50% of miners, but about >50% of user clients. \nIn this case, since users do not have any incentive to modify their clients to treat the new fork as legitimate, rather than the original rules fork, any miner that decides to spend his resources mining the new \"50 btc forever\" fork is just going to be wasting time, since he will not be able to spend his coins anywhere; they'll be rejected as illegitimate by users, merchants, exchanges, etc.\n", "money supply - Why are the mining rewards set to reduce in such dramatic steps?": "\nIt`s a geometric series with the base 1/2. After half of the remaining coins are mined, rate is decreased until half of remaining coins since the drop are mined.\nThe rate is convergent, that is, it approaches a finite number and doesn't go on until infinity (like say, 1, 1/2, 1/3... 1/n would). This makes it so that there will never be more than certain amount of Bitcoins created.\nAs for why it is so dramatic, probably for the ease of calculating whether the block is correct. If you would have some complicated way of calculating the reward some of the coins might be lost due to rounding error (below 1 Satoshi), and different (non-official) clients might have issues with calculating the result effectively. Moreover, these sudden decreases in amount of coins generated probably will increase the worth of Bitcoins.\n", "client - Raw block / other messages": "\nThe wiki describes this:\n - https://en.bitcoin.it/wiki/Protocol_specification#Common_structures\nBlockExplorer will show the raw data.  For example:\n - http://blockexplorer.com/rawblock/00000000000008d11f13eed2e13f2765eceaf00de36e0ec040a10cc3738bdc74\n", "verification - When a block is \"discovered\" how is the nonce determined?": "\nBasically, there is no such thing as a \"correct\" nonce, only a set of possible \"correct\" blocks which can use any nonce they wish to obtain an acceptable hash.  So the nonce is just \"some arbitrary number\".  But in order to understand how nonces work, you first have to understand the hashing process by which blocks are produced.\nCryptographic hashes are a mathematical way of turning any set of data into a random number, called a hash.  The hashing process is designed so that it's easy to calculate the hash of some data but nearly impossible to find data which will fit a specific hash, having even a slightly different set of data will produce a totally different hash, and so that the only way to find a hash with a particular property (say, being below a certain number) is to calculate lots of them until you get lucky.\nIn the Bitcoin network, only blocks with certain hashes get accepted and included in the official list.  The criteria for which blocks \"count\" is that their hash has to be below a certain number called the target.  The network adjusts this number up and down according to how frequently blocks are passing the test--this is how it's able to keep the rate of block production at an average of 10 minutes per block.  So if the target is\n00000692856290566183958127638592383846392938562929689273923968\n\nthen a block with a hash of\n00000739485762992939239823472938472569106923385616929838472389\n\nwon't be accepted, but blocks with hashes of\n00000683060299472046094517810601040976920106812102601296720934\n\n00000000000000000000000000000000000000000000000000000000453737\n\nor\n00000692856290566183958127638592383846392938562929689273923967\n\nwill all pass with flying colours.  These aren't real hashes--they're just examples.\nA miner is taking a list of checked and valid transactions, putting them together in the right format, and then calculating their cryptographic hash.  But let's say that the hash they get doesn't meet the criteria (as most of them don't).  What are they supposed to do?  The only way to get a different hash is to use at least slightly different data.  So instead of messing up their list of valid transactions or anything like that, blocks have something called a nonce in them.  The nonce is just a meaningless number that can be changed as many times as you like so that you can check a bunch of different hashes and see whether they pass the network's difficulty check.  So when a miner is checking billions of hashes per second (as many of them are) they are just changing the nonce to something else, checking the hash of the whole block; changing the nonce to something else, checking the hash of the (now slightly different) block; changing the nonce again, etc.\nIn this sense a \"correct\" nonce is simply the one that allows the block to hash to an acceptable number.  Just like there are many acceptable hashes, there are many different nonces which will work for the same block.  But a miner only has to find one of them.  Whichever one they find first is just fine.\nYou may also be interested in how the target is calculated.\n", "development - Bitcoin client IRC - a potential network weak link?": "\nThey'd have no problem finding peers for several reasons:\n\nOnce the client finds a single peer, it can get a list of peers from that peer.\nThe client has a built-in list of about 500 peer IP addresses known to be stable.\nThe client knows several DNS names (such as bitseed.xf2.org and dnsseed.bluematt.me) that resolve to lists of Bitcoin peers.\nThe client stores peer addresses in a local database.\n\nIn fact, IRC has been removed from the Bitcoin client since 2013.\n", "difficulty - How many Integer Operations on a GPU are necessary for one Hash?": "\nThe ALU OP numbers are correct. The numbers vary based on the video card but are basically in the range of 1,300 to 1,700 operations per double-hash. On the x86, you need more instructions (around 3,700 - 4,500 depending on the exact CPU) but these CPUs can average more than one operation per clock cycle, so you can't convert instruction counts directly into execution speed.\nAll sensible mining implementations (CPU or GPU) attempt more than one hash at a time. On an x86 CPU, it's typically around four hashes at a time (one per core). On a GPU, it's more like 1,000 - 3,000 hashes at a time (one per core). Hence the superior hashing performance of GPUs.\n", "cpu mining - Miners, did Catalyst version 11.9 fix CPU usage issue for you?": "\nCatalyst 11.9 resolved the issue for those mining on single GPUs but not multiple GPUs (including single cards which contain multiple GPUs like the 6990 and 5970). You can try setting the -f flag to higher numbers until CPU usage is reduced or try setting -aggression to 10 or lower. Note that these settings might reduce your hashrate significantly depending on how aggressively you change them from defaults.\nThe bug in question was introduced in Catalyst version 11.5 and at the time affected only multi-GPU setups. It remained in place for version 11.6 and in 11.7 actually began affecting single-GPU systems as well. In 11.9 the single-GPU bug was fixed, but the multi-GPU bug is still in place. There is a beta release of 11.10 available but I've not heard anything about whether it fixes the 100% bug or not.\nA quick search shows that the 11.4 drivers are still available for 32 and 64 bit systems. Assuming you don't need anything that the newer drivers offer for non-mining purposes, 11.4 is probably your best bet. If you're running dedicated rigs it's definitely your best bet.\nEdit: It appears that 11.10 did not fix the multi-GPU bug so 11.4 is still your best bet.\n", "How do I report a bug in the Bitcoin client application?": "\nYou can use the issues page on github. https://github.com/bitcoin/bitcoin/issues?state=open\nYou can also search through the issues to see if yours is already reported.\n", "proof of work - What features of scrypt() make Tenebrix GPU-resistant?": "\nThe scrypt() algorithm has at its core a routine called ROMmix.  Basically, it defines\n  V(1) = hash(message)\n  V(2) = hash(hash(message))\n  V(3) = hash(hash(hash(message)))\n  ...\n\nand it calculates\n  V(V(V(V(...(message))))\n\nSince computing V(n+1) requires computing V(n) first, the most efficient way to do this is to cache all of the previously-computed values.  Once you've generated a large enough table, the V(V(V(...))) is just a bunch of lookups.\nCaching all the previously computed values requires lots of memory, and since each lookup depends on the previous one it's sensitive to memory latency (although if you're mining you can work on several blocks in parallel and pipeline the requests to get around this).\nGPUs can perform far more integer operations per second than a normal CPU, but have roughly the same memory bandwidth/latency as a CPU.  So an algorithm that is memory-dominated should \"level the playing field\" between CPUs and GPUs.\nI still don't understand why the Tenebrix folks consider this to be an important goal.  It just \"equalizes\" GPUs and CPUs, but you can still build custom hardware that does scrypt() much faster and cheaper than a CPU.  So it's just going from \"GPUs are best\" to \"custom printed circuit boards covered in memory buses are best\".  Nobody's been able to explain why this change is worth all the trouble.\n", "blockchain - What was the most recent change to the official client that broke block validity?": "\nThe last changes I'm aware of that would cause a blockchain split were in August 2010, after the overflow bug; see, for example, https://github.com/bitcoin/bitcoin/commit/4bd188c4383d6e614e18f79dc337fbabe8464c82\nI don't think there have been any changes to the block or transaction validity rules since, although it is very possible I'm forgetting something.\n", "wallet - Is there a recommended maximum number of transactions any one address should ever receive?": "\nYou can use it as many times as you like. There is no upper limit.\nThe reason that people advocate using new addresses is that it increases anonymity. For example, people who know your address can easily look up how much has been sent to it in total. See these questions for some more info on anonymity:\n\nHow anonymous are Bitcoin transactions?\nHow can one remain relatively anonymous while using Bitcoin?\n\n", "currencies - Could speculation some day rise bitcoin to the moon?": "\nBecause there is no guarantee that bitcoin will be in demand in the future.  Here's an example, in a recent Gawker article they put \"(RIP)\" when naming Bitcoin .. as if it had died. http://www.gizmodo.com.au/2011/09/is-digital-money-the-new-way-to-buy-drugs\nOf course, the existing $35 million or so valuation of the currency come from those speculating that the value of the currency will at some point in the future buy more than it will today.\nWhether or not this will be a stratospheric rise nobody knows but it isn't unprecedented, just not typical nor expected by most.  But there are those, such as Rick Falvinge, who believe it.  Rick describes his thoughts here:\n\nhttp://falkvinge.net/2011/06/16/bitcoins-four-drivers-part-one-unlawful-trade\nhttp://falkvinge.net/2011/06/18/bitcoins-four-drivers-part-two-international-trade\nhttp://falkvinge.net/2011/07/03/bitcoins-four-drivers-part-3-merchant-trade\nhttp://falkvinge.net/2011/07/05/bitcoins-four-drivers-part-4-investment\n\n", "Is there any point to casual mining?": "\nMining in your work/home computer has some side effects, namely:\n\nHeat - could damage your hardware if you don't handle it properly\nNoise\nSlowdowns - if you use your computer while you mine you should reduce the miner's load \nPower consumption - if you don't pay for electricity this may not be an issue\n\nSo I would say that there is a point in casual mining as long as your earnings compensate for these disadvantages. It is really up to you to decide if you want to stress your hardware to earn a few coins.    \nSpeaking of a more concrete scenario, casual miners usually fall into two categories:\n\nYou have a good GPU for mining in your PC - a recent medium/high end ATI card.\nYou don't have a good GPU so you want to mine with your CPU/low end GPU.\n\nCheck this question to find out where do you stand. If you have a good GPU, you might get around 8 bitcoins per month at current difficulty. If you don't, you will probably not earn more than 1 or 2 coins per month.\nMy personal opinion is that if you fit into the first category, you could give it a shot. If not, I wouldn't do it just for a few dollars (and I do not recommend mining with your CPU at all).\nAs a final note, bear in mind that these numbers are always changing: new hardware is coming out all the time and new miners are joining while others are leaving. This influences the amount of bitcoins you will earn with your hardware so be sure to check an updated hardware list for your calculations.\n", "json rpc - What is the standard protocol for pools/miners?": "\nWhen there were no pools, all of the first mining clients interfaced directly with Bitcoin. They connected to Bitcoin's JSON-RPC interface and used the getwork RPC method to get the required work. Getting work from a pool is the same as getting work from Bitcoin. The client connects to the pool over HTTP, often using the same HTTP authentication that Bitcoin's JSON-RPC interface uses; the client sends a JSON-RPC getwork message; and the pool sends back a JSON-RPC getwork response.\nMany pools nowadays support some extensions to the getwork protocol that Bitcoin does not.\nSee:\nhttps://en.bitcoin.it/wiki/Getwork\n", "network - Uptime and other service performance levels": "\nYou seem to conflate several issues in your question. If you are just talking about \"uptime\", which your question title implies, then speed of transaction propagation or confirmation is not relevant. As long as your node is can connect to other nodes and send/receive data, the network is \"up\". If you send transactions that require fees and they don't confirm for a long time, that's your problem, not the network's.\nThat said, the \"gist\" of your question, about network health, transaction processing speed, etc, is not unimportant. There is a bunch of useful data on this site, dedicated to monitoring the bitcoin network: http://bitcoinstatus.rowit.co.uk/ that would probably get you started in the right direction. :)\n", "Can you use an external PCI expansion box for mining?": "\nThe amount of bandwidth used for mining is absolutely trivial, so bandwidth won't hurt you much here. Of course you would have to use something like this box because this one doesn't appear to be nearly deep enough for a full-length video card. Using the backplane from this box in a custom enclosure might be worthwhile.\nThe secondary problem you'll run into is power. This unit appears to have just enough power supply to power the communications between ports. An additional PSU will be needed for the GPUs themselves which, conveniently, typically draw most of their power from four or six pin connectors.\nSo in short, using this backplane in a separate enclosure with an external power supply (and a lot more airflow) seems pretty viable to me. Of course I haven't personally done this so I make no guarantees, but if someone has actually attempted this I'd love to hear about it.\n", "security - Trojan Clients?": "\ngithub also doesn't support https downloads. though the download 'area' is https, the actual files are pulled from http://cloud.github.com\nyou really are barking up the wrong tree with the https bit, since all https is telling you is that the server you're talking with is who it claims it is. if server is compromised, it will serve you a trojaned file just as happily as any other file.\nwhat you really want to do is verify the pgp signature of the file (or of a file containing a hash of the released file), made by the developer making the release. you can do this regardless of where you download the files - both github and sourceforge contain the gpg-signed sha1sums file that you can verify the signature of to ensure file integrity and authenticity. the only way that could be compromised if the developer's machine itself was compromised.\n", "weaknesses - How is block-solution-withholding a threat to mining pools?": "\nEvery pool is vulnerable to the threat. And there's pretty much nothing they can do about it other than perhaps to try to force their miners to use a closed source mining program that they try to make tamper-proof.\nYour analysis is precisely correct. Miners know when they only found a share versus when they solved a block. A malicious miner could submit shares but withhold solved blocks.\nThe consequences of this depend on the payout model the mining pool uses. If, for example, the pool uses a fixed pay per share, such a miner is robbing the pool operator. But he does no harm to the other miners. If it uses most of the other distribution schemes, such a miner is robbing the other miners since he is being paid out of solved blocks and never contributes to the number of solved blocks. The amount of harm he does is typically proportional to the amount of hashing power he has.\nThis attack is typically undetectable because it just appears to be ordinary bad luck. An attacker can use a large number of distinct user names so it wouldn't appear suspicious that no blocks had been solved.\nThere are generally two motives for such an attack, depending on the payout plan the pool uses. One would simply be to make the pool operator lose money. In a PPS plan, you would get paid normally for your mining, all of which would be a straight loss to the pool operator. With other payout plans, making the pool seem unlucky (and thus driving away miners from that pool) could be a part of the motive. You still get paid for your shares, so the cost to launch such an attack (assuming you were already going to mine) is not that much.\nThe consensus is that such attacks are likely to remain rare and generally insignificant. The payout for the attack is simply too small and it's not an effective way to bankrupt a pool or get miners to desert a pool unless it's a particularly small pool, in which case there's generally no point.\nNote that it is not possible for an attacker to submit any blocks he finds himself and keep the profits. To earn shares, he must attempt to solve the blocks the pool asks him to solve, and those will include a coinbase entry that pays the block reward to the pool's operator.\n", "currencies - Can we interpret a rolling average transaction count per block as the 'adoption curve' for Bitcoin?": "\nThe main problem I can see with using such a metric to measure adoption is that a tremendous amount of transactions take place on the various exchanges during periods of heavy speculative investment.\nDuring the current downtrend we're probably experiencing a lower percentage of traffic from investors and a higher percentage of traffic from actual users of the currency. The problem is that there isn't really any feasible method of weeding out the MtGox, TradeHill, Britcoin etc traffic from the regular use cases.\nThe only way that I can imagine being able to weed out such transactions is if MtGox and their ilk actually provided a full list of the transactions they process each day. Armed with a list of transactions from at least the major exchanges we could mostly eliminate speculative use from our measurements and see something closer to actual adoption levels.\nUnfortunately to my knowledge no such transaction list exists and without it, it's uncertain if such a rolling average is showing a decline in actual adoption or simply a decline in speculation. One of the big difficulties to be encountered in Bitcoin is that it's simultaneously quite open and extremely closed and can be very difficult to perform meaningful analysis on.\n", "Is there a way to provide the walletpassphrase to bitcoind without exposing it on the cmdline?": "\nAnything you can do from the command line you can also do from the JSON API which means that the same unlock command could be sent from within code just as easily. To my knowledge there is no pre-built utility capable of this, but the API is simple enough that I can't imagine it being terribly difficult to actually build such a tool.\n\nEdit: It was much easier than expected to do this in Python. Assuming you have Python's JSON-RPC module installed just use this code:\nfrom jsonrpc import ServiceProxy\nfrom getpass import getpass\naccess = ServiceProxy(\"http://127.0.0.1:8332\")\npwd = getpass(\"Enter wallet passphrase: \")\naccess.walletpassphrase(pwd, 60)\n\nSimilarly you could call access.walletlock() to lock the wallet on demand and walletpassphrasechange(old, new) to change the passphrase without ever having it see the command line.\n\nEdit 2: I also submitted an issue to the devs on github on your behalf.\nEdit 3: A pull request containing my python scripts has been accepted. Downloading the bitcoin source from github now includes scripts for this purpose in contrib/wallettools\nEdit 4: A new bug report was filed to request that the builtin command behaves properly.\n", "mac - Where is Bitcoin information (wallet.dat) stored on OS X?": "\nThe Bitcoin wallet on Mac OS X is located in ~/Library/Application Support/Bitcoin/wallet.dat.\n\nMac\u00a0OS\u00a0X\u00a0v10.7 (Lion) came out, and it has the ~/Library folder hidden, see the answer from chilled35 to access it with Finder.\n\nIn order to see hidden folders, such as ~/Library from Finder, simply hit shift + \u2318 (command) + G which will GO to a folder, then paste in this location:\n~/Library/Application Support/Bitcoin\n\nFrom there, you will see all the files associated with your wallet.\n\n", "bitcoind - Push notification of incoming transaction": "\nA transaction can only be confirmed by a new block being added to the chain. And since that happens on average every ten minutes, it would work just as well to be notified when a block is discovered (and/or the chain is reorganized). You can then check any transactions you care about.\nOne way to be notified if the chain is changed in any way is with my native long polling patch. This should apply pretty cleanly to any recent version of the client (but is based on 0.4.0):\ndiff -u orig/init.cpp new/init.cpp\n--- orig/init.cpp   2011-09-25 08:29:53.935505617 -0700\n+++ new/init.cpp    2011-09-25 08:48:13.667215990 -0700\n@@ -199,6 +200,7 @@\n             \"  -rpcport=<port>  \\t\\t  \" + _(\"Listen for JSON-RPC connections on <port> (default: 8332)\\n\") +\n             \"  -rpcallowip=<ip> \\t\\t  \" + _(\"Allow JSON-RPC connections from specified IP address\\n\") +\n             \"  -rpcconnect=<ip> \\t  \"   + _(\"Send commands to node running on <ip> (default: 127.0.0.1)\\n\") +\n+            \"  -pollpidfile=<f> \\t  \"   + _(\"Support long polling\\n\") +\n             \"  -keypool=<n>     \\t  \"   + _(\"Set key pool size to <n> (default: 100)\\n\") +\n             \"  -rescan          \\t  \"   + _(\"Rescan the block chain for missing wallet transactions\\n\");\n\ndiff -u orig/main.cpp new/main.cpp\n--- orig/main.cpp   2011-09-25 08:29:53.937505613 -0700\n+++ new/main.cpp    2011-09-25 08:48:13.667215990 -0700\n@@ -1118,6 +1118,7 @@\n bool CBlock::SetBestChain(CTxDB& txdb, CBlockIndex* pindexNew)\n {\n     uint256 hash = GetHash();\n+    bool lp = false;\n\n     txdb.TxnBegin();\n     if (pindexGenesisBlock == NULL && hash == hashGenesisBlock)\n@@ -1160,6 +1161,7 @@\n     // Update best block in wallet (so we can detect restored wallets)\n     if (!IsInitialBlockDownload())\n     {\n+        lp = true;\n         const CBlockLocator locator(pindexNew);\n         ::SetBestChain(locator);\n     }\n@@ -1173,6 +1175,23 @@\n     nTransactionsUpdated++;\n     printf(\"SetBestChain: new best=%s  height=%d  work=%s\\n\", hashBestChain.ToString().substr(0,20).c_str(), nBest\n\n+    if (lp)\n+    {\n+        // Support long polling\n+        string lp_pid = mapArgs[\"-pollpidfile\"];\n+        if(lp_pid != \"\")\n+        {\n+            FILE *pidFile = fopen(lp_pid.c_str(), \"r\");\n+            if(pidFile!=NULL)\n+            {\n+                int pid=0;\n+                if ((fscanf(pidFile, \"%d\", &pid) == 1) && (pid > 1))\n+                    kill((pid_t) pid, SIGUSR1);\n+                fclose(pidFile);\n+            }\n+        }\n+    }\n+\n     return true;\n }\n\nTo use it, just start bitcoin or bitcoind with a command line argument of-pollpidfile=/path/to/some/file. Then write your monitor process' PID to that file. You will receive a SIGUSR1 on any block chain change.\n", "Will fees be charged when importing a key to my wallet?": "\nSince the \"transaction\" is not going through the bitcoin network, I can't see how a fee could be charged.\n", "security - How can I best implement Bitcoin in my business?": "\nJust some quick tips to get you started:\n\nrun with 'noirc=1' so that your node IP isn't discoverable via IRC\nrun with several 'connect=<sometrustednodeip>' so your node only connects to other specific nodes that you trust\ndo not expose the json api to the internet at large, confine it to localhost or specific ip only.\nif you plan to hold a significant amount of bitcoins, then estimate how many you'll need for your daily float, and save the rest in an offline wallet (also generated on an offline computer - don't leave traces of your keys on any internet-connected disk)\ndo not accept 0-confirmation transactions, other than for really trivial amounts where speed of delivery is of the essence.\ndo use new bitcoin addresses for every new customer and order. address reuse makes it easier to track your customers.\n\nThere are probably a more items that could be added to the list, this is certainly not to be treated as comprehensive.\n", "development - Will it be possible to export a key and only allow it to be imported once?": "\nNo, there is no way to keep track of what people do with their private keys. You could easily write down the key before exporting it and you can use it without ever importing it to a wallet. It's possible to construct a transaction from the private key manually or using some 3rd party software and then broadcast that transaction to the network.\nIt sounds like you want to be able to send money without using the blockchain by simply passing private keys around. You then run into the double-spending problem. This is exactly the problem that the blockchain is solving. So, no, if you want to securely send bitcoins you will have to use the blockchain.\n", "security - How can I stop websites running an integrated Bitcoin miner without disabling javascript altogether?": "\nYou can use Adblock Plus to block the miner script.  In this case it would be:\nhttp://www.bitcoinplus.com/js/miner.js\n\n", "blockchain - Strange transaction (block 71036)": "\n\nOn July 29 2010, it was discovered that block 71036 contained several transactions with a ton of OP_CHECKSIG commands. There should only ever be one such command. This caused every node to do extra unnecessary work, and it could have been used as a denial-of-service attack. A new version of Bitcoin was quickly released. The new version did not cause a fork on the main network, though it did cause one on the test network (where someone had played around with the attack more).\n\nhttps://en.bitcoin.it/wiki/Incidents#OP_CHECKSIG_abuse\n", "mining pools - How do I keep my miners from doing duplicate work?": "\nMy understanding of the mining mechanism is this:\n\nThe miner connects to a Bitcoin client (or pool) and submits a getwork request\nThe client (or pool) responds with a chunk of data containing the block data, including the randomized bits, and the nonce (the bit which the miner changes)\nThe miner increments the nonce multiple times until it either finds a solution or overflows, at which point it submits a new getwork request to the client (or pool)\n\nSince the client/pool is responsible for handing out the getwork requests, the client/pool is also responsible for guarding against duplication. Since the entropy of the data handed out by getwork must, by definition, be greater than or equal to the output entropy of SHA256 (2^256 bits) it should have the same or lower chance of collision (1/2^256).\nIn this case a \"collision\" would be handing the same work to multiple miners and so we can say that multiple miners being given duplicate work has so low a risk of occurrence as to be a negligible risk.\nOne of my favorite comp sci professors once told me that the chance of such a collision (per unit of work) is about the same as winning the state lottery 11 times in a row, then being struck by lightning, surviving and being elected president. And he had the math to back this up...\n", "blockchain - What will happen when SHA 256 needs to be replaced?": "\nI'm assuming you mean what will happen to Bitcoin if SHA256 is discovered to no longer be suitable for use as Bitcoin uses it. First, such a thing is likely to happen very gradually. We'll first see hints of weaknesses and attacks that currently take millions of years will shrink to thousands of years and then hundreds of years. So there will be plenty of time to arrange a change.\nNote that Bitcoin addresses also use RIPEMD-160, which is likely weaker than SHA-256. However, the way they're used, weaknesses in RIPEMD-160 might not actually create problems for Bitcoin.\nBasically, whatever changes needed to be made to the protocol would have to be worked out. Possibly any other changes deemed advantageous could be made at the same time, since protocol-breaking changes are rare. Some fields may need to be expanded.\nA particular block would be picked, after which the new methods would start. Everyone would have to upgrade before then.\nI think every effort would be made to keep the block header size the same so the mining algorithm didn't have to change. This may mean having to add an intermediate header. The intermediate header would contain the larger hashes of the previous block, transaction tree, and so on. The hash of the intermediate header would go in the block the miners try to mine, reducing its three hash fields to just one. (And allowing the nonce to be expanded to 64-bits! Yay!)\nIf addresses or transactions had to change, then after that chosen block, new-style transactions would be permitted. Coins not transferred to new-style accounts might become vulnerable to attack, in theory. Because Bitcoin transactions already have input and outputs that function in a logically independent way, there would be no problem with importing coins with an old-style address/signature and sending them to a new-style address.\n", "What exchanges support Tenebrix?": "\nBTC-E.com currently supports trading pairs of BTC/USD, GG/BTC, SC/BTC, SC/USD and TBX/BTC. At the moment I believe it is the only exchange currently supporting Tenebrix.\n", "Is there an easy way to check out the market cap of the alternative cryptocurrencies?": "\nIntroducing ... Bitcoin Pie.\nSupported Coins are Bitcoin, Tenebrix, NameCoin and SolidCoin. If your favorite coin is not supported, point me towards an active exchange (with or without an API), and a block explorer, and I'll integrate it.\n", "How are public & private keys in an address created?": "\nThe public and private keys in a Bitcoin address are a normal ECDSA key pair. I haven't poked through this particular bit of Bitcoin's own code but the offshoot products I've had a chance to work with typically use the Bouncy Castle crypto library. Bouncy Castle also has an excellent introduction/tutorial on how to use their library. Their examples are in Java but it's fairly simple and should be easily ported to other languages.\nThere is also an excellent pre-written library for JavaScript key generation available from Tom Wu under the BSD license.\n", "development - Does BTC-E have an API for alternate currencies?": "\nThe URL to the api's for other currencies are:\n\nhttps://btc-e.com/api/2/1/ticker - BTC/USD\nhttps://btc-e.com/api/2/2/ticker - IXC/BTC\nhttps://btc-e.com/api/2/4/ticker - I0C/BTC\nhttps://btc-e.com/api/2/5/ticker - SC/BTC\nhttps://btc-e.com/api/2/6/ticker - SC/USD\nhttps://btc-e.com/api/2/7/ticker - GG/BTC\nhttps://btc-e.com/api/2/8/ticker - TBX/BTC\nhttps://btc-e.com/api/2/9/ticker - FBX/BTC\nhttps://btc-e.com/api/2/10/ticker - LTC/BTC\nhttps://btc-e.com/api/2/11/ticker - RUC/BTC\nhttps://btc-e.com/api/2/12/ticker - RUC/USD\nhttps://btc-e.com/api/2/13/ticker - NMC/BTC\nhttps://btc-e.com/api/2/14/ticker - LTC/USD\nhttps://btc-e.com/api/2/15/ticker - CLC/BTC\nhttps://btc-e.com/api/2/16/ticker - DVC/BTC\n\nIn the links below change the 1 to a number anywhere between 1-16 to match the category above.\nApi for trades: https://btc-e.com/api/1/trades\nApi for depth: https://btc-e.com/api/2/1/depth \nApi for ticker: https://btc-e.com/api/2/1/ticker\nBy: dodoking\n", "How many Namecoins are generated per block?": "\nYes, it's 50, as documented here:\nhttp://www.bluishcoder.co.nz/2011/05/12/namecoin-a-dns-alternative-based-on-bitcoin.html\nThe reward for solving a block will halve every 210,000 blocks (around 4 yrs), like Bitcoins.\nWhen namecoins are spent to register a domain name, they are destroyed. More details here:\nhttps://github.com/vinced/namecoin/blob/master/FAQ.md\nNote that even though the mining reward remains constant, the network fee to register a domain goes down quickly over time. Quote: \"The network fee is initially high, but will be negligible after a couple of years. It is used to slow down the initial registration rate so that plenty of desirable names are left for late adopters.\"\n", "economic theory - Inflatory and deflatory economy comparison": "\nThis topic on bitcointalk forum might be a good place to start: \nDeflation and Bitcoin, the last word on this forum\n", "Port forwarding for pooled mining?": "\nWhen the miner needs work, it contacts the pool. So the miner makes the connection.\nThe only time the pool needs to contact the miner is when a new block is found, to invalidate existing work units so the miner doesn't waste time finishing a work unit when the block wouldn't be accepted anyway. But this case is handled with long polling -- the miner keeps an open outbound connection to the pool manager at all times to receive this notification.\nSo there is no need to forward the port, and such a forward would never be used anyway. The mining program isn't listening for inbound connections.\n", "exchanges - What happens to cash used to buy bitcoins?": "\nBitcoin exchanges, like stock exchanges, act as a middleman for people that want to trade bitcoins. They do not sell/buy their own bitcoins or US Dollars.\nSuppose that I have 10 bitcoins and I want to sell them at $5 each. In order to do that, I can use a bitcoin exchange and put a sell order at $5 for 10 coins. This is a way of \"announcing to the world\" that I will sell 10 coins to anyone who is willing to pay me $50. If you want to buy them, just login to the exchange and put a buy order at $5. The exchange will match our orders and I will receive your $50 and you will receive my 10 bitcoins.\nWhen a buy order matches a sell order, a trade is made. This is how the bitcoin price is defined.\nNow suppose that you want to buy bitcoins, but you are only willing to pay $4.9 for each bitcoin. You will put your buy order at $4.9, but it will not match mine because I only sell if you pay me $5 per coin. The amount of pending orders defines market depth. \nFor example, you can see here the market depth for MtGox. The bids table show the price people are willing to buy at and the asks table show price people are selling at. MtGox Live is also a nice way to visualize these concepts.\nNote that bitcoin exchanges charge a small fee (currently around 0.5%) each time they match an order. So in the previous example I would receive $49.75 and you would receive 9.95 bitcoins. The rest is kept by the exchange for their services.\n", "security - Is the tenebrix client safe?": "\nThere are a lot of people who are hostile to any new crypto-currency, usually because of their vested interest in previous currencies. They tend to audit any new currency's code, looking for things that can embarrass the developers. There's a very good chance that any back door or serious problem would be widely publicized on sites like the Bitcoin forums.\nYou can certainly audit the changes yourself. Find the closest trusted code base (the one the code you're trying to evaluate is based on), and run a diff. Then look closely at all changes.\nAlternatively, you can rely on the wisdom of crowds. Just wait at least a week or so before accepting any updates published by the development team. And search forums likely to be hostile to that project, such as the Bitcoin forums.\n", "currencies - Can Bitcoin software be used to create a private currency (single issuer)": "\nIf I understand you correctly, the answer is yes. You could use a Bitcoin-like system simply to track the movement of 'shares' or 'units'. All the 'coins' could start out pre-mined, and the system's sole purpose could be to track the movement of those units.\nHowever, there would be a lot of reasons why this would be a bad idea. The primary one is this: the Bitcoin system makes a lot of trade-offs to get the benefit of decentralization (nobody needs to trust anyone else at all ever). If you want to have one central authority anyway, you are trading off all those things for nothing.\nSecuring the block chain requires sufficient hashing power such that a malicious organization can't easily muster 51% of it. So to keep the system secure on a day-to-day basis, you'd need some way to fund that massive amount of computing power. It's hard to see what benefit you'd get back for that cost.\nThere are systems, even cryptographic ones with similar properties, that are more suitable for a centralized currency. The basic design change would be that instead of having a block chain, you'd simply have the central authority (or authorities) sign all transactions.\nFor example, if I had 50 units of this currency, I could request a signed and dated statement from the central authority saying that I had those coins and showing my public key. If I want to transfer 10 units to you, I make a signed statement saying so and get the central authority to sign it. You can now prove you have those 10 coins with that signed statement. I can prove I have 40 coins by showing the signed statements and the central authority can't argue I made a transaction I didn't make because I have to sign them. So you get the same security properties and don't need all the CPU power.\n", "protocol - Bitcoin communication with non-standard ports": "\nIf you make only outbound connections it won't matter what ports you use. Your client will be able to fully participate in the network without any issues.\n", "Are there any linux distros that have the bitcoin client pre-included?": "\nLinuxCoin is such a distro (based on Debian).\n", "mining pools - What are stale shares and what can I do to avoid them?": "\nStale shares are the shares that were sent after a block was already solved, that is to say, they were sent late and were no longer valid. To avoid stale shares, best to have a reasonably fast mining rig (so you won't take too long to calculate a share, probably not a problem for most machines), reliable internet connection (stable, not necessarily fast), but also an up-to-date mining software (if you are mining with some really old miner it might not communicate in the most efficient manner with the pool).\nIn short - update your miner every now and then, make sure your internet is running okay, and don't mine on really weak rigs.\n", "namecoin - Where can I find a Windows binary of MultiCoin?": "\nI have been doing windows builds of multicoin-exp, but have not heard of anyone using them so don't keep it up to date unless I get a request usually.\nhttp://www.wuala.com/jbw9/pub/Bitcoin/multicoin/MultiCoin-exp/src/bitcoin.exe/ is actually mutlicoin, however I am pretty sure this version only works with the config file that would have been compatible with .62 and needs to be updated for .63 now that we have passed block 19200.  I can update it if anyone wants it to be.\n", "How to get difficulty from Fairbrix/Tenebrix?": "\nThe easiest and most straightforward way would be going to www.allchains.info\nNo need to bother with command line and stuff.\n", "Is there a Bitcoin bank, which gives interest on my deposit?": "\nPlease Take Note: Flexcoin has been hacked and is no longer operating.\nOriginal Post shown below:\n\nRight now, the closest thing you can find to a bank is Flexcoin. If you keep your money there, you will receive a variable interest (they call it discount for legal matters) every month. They also have a user defined cold storage service available for those who want to keep their funds offline.\nHere is how it works. Every time you withdraw money from Flexcoin, you pay a fee:\n\nFees:   \nFlexcoin to Flexcoin = FREE\n  Bitcoin to Flexcoin = FREE\n  Flexcoin to Bitcoin = 0.01 BTC or one half of one percent of the transaction amount (whichever is greater)\n  Cold Storage Transaction Fee (outbound) = 0.02 BTC or one percent of the transaction amount (whichever is greater)\n  Cold Storage Transaction Fee (inbound) = 0.01 BTC or one half of one percent of the transaction amount (whichever is greater)\n\nThis fee is used to pay miner fees and keep the service running. The rest of it is distributed among clients:\n\nDiscount Payout:\n70% of the fees collected are disbursed to the account holders as\n  discount payments on any fees already paid or any potential future\n  fees, based on the following formula\u2026\n(your account balance / total balance of all flexcoin accounts) *\n  ((all fees collected \u2013 miner fees) * 0.7)\n\nHere are two bitcointalk threads about the discount payments for the first two months.\nAs a final note, I would like to say that I personally think that this kind of service is not very useful right now because the Bitcoin price is too unstable. For example, yesterday the price dropped 15%. Any interest you might earn becomes irrelevant in this scenario.\n", "Does encoding Namecoin/messages into the blockchain bloat it?": "\nNameCoin merged mining adds no more than 49 bytes to the size of the block.  Namecoin messages aren't stored in the bitcoin block chain, instead the hash of the most recent namecoin block is stored in the Bitcoin block providing continuity between a potential hash and the Namecoin block chain. \nSo yes it technically does \"bloat\" the Bitcoin blockchain but it current is ~4% and that percentage will decline as transaction volume increases, as that fixed 49 bytes is measured against increasingly larger blocks.\nAs for \"how\" can it be done.  The coinbase transaction (which transfers rewards and fees to miner's address) contains a field called coinbase.  Without merged mining this field is used to generate entropy for hashing process (extra nonce) which alters the block header each time it is changed.  Allowing a miner to try nearly infinite number of hashes. \nThis field is not used by the blockchain for anything other than entropy so adding namecoin hash to the field doesn't collide with any Bitcoin transaction.  Once a block is signed the field is never used for anything other than verifying the block valid (by verifying the hash is correct and is smaller than required target).\n", "When will the official client support partial blockchain downloads?": "\nGavin has stated that he wishes to pull features in the version .5 release candidate this weeks.  He further states maybe the version .6 release will have it as a killer feature.\n\nMaybe the big feature for version 0.6 can be fast initial download (I'm thinking the best thing to do for brand-new, starting-with-an-empty-wallet installations is to download only block headers, function as a 'lightweight' client, and 'backfill' full blocks until you're caught up with the full chain-- then function as a 'full' client)\n\nhttps://bitcointalk.org/index.php?topic=46493.msg553778#msg553778\n", "linux - How can I start mining Bitcoin?": "\nPlease check this question first:\nHow much Bitcoin will I mine right now with hardware X?\nBefore you go through all this work, it is important to know what to expect from your hardware.\n\nThere are two options: solo mining or pool mining. Unless you have a lot of computing power (several ASICs), you should probably mine at a pool.\nSo the first thing to do is to sign up at a bitcoin pool. The stickies in this bitcointalk section have links for the top 10 pools. The main differences between them are the payout models and the fees. If you just want to try things out, choose one of the most popular pools like Deepbit or BTC Guild. You can then try others, according to your needs.\nNow you need to install a miner. It has a simple interface, a drop down menu with a list of pre-configured pools and it is not difficult to setup.\nAfter you install the miner, you need to point it towards your pool. So select device you want to mine with (probably your FPGA/ASIC), enter the pool URL (if you don't know what it is, check the FAQ/help section of your pool's website) and your username/password.\nThat's it. You can now see your progress at the pool's website.\nUseful links:\n\nWhat is a Mining Pool, what is it good for?\nIs CPU mining even worth it?\nWhat is a good mining pool/payout model for infrequent mining?\n\n\nIn your specific case, you have no ASICs or FPGAs, so you will earn less than a penny of Bitcoin.\n", "blockchain - Is there a limit to how much extra data can be put into blocks via scripts?": "\nThe maximum size of a block is 1MB. A block can be filled entirely with arbitrary data.\nNamecoin actually puts its extra data into the \"coinbase\" parameter, which is specifically designed to hold arbitrary data. Data put here is limited to 100 bytes, and this data will in the future be safely forgotten by most clients.\n", "Have there been reports of botnets mining Bitcoin / crypto-currencies?": "\nFirst report about mining botnet was made at the end of June, and it evolved rapidly from CPU to GPU mining. But there is no consensus about what kind of harm it will do to Bitcoin, because from the bitcoin network point of view, infected computers run legitimate mining that supports network operation.\n\n17 Jun 2011 - Symantec suggested that it would be profitable to\nrun CPU mining botnet.\n28 Jun 2011 - Kaspersky Lab's expert Alex Gostev made first\nreport about simple CPU mining botnet found in the wild.\n2 Aug 2011  - F-Secure reported about discovery of advanced CPU\nmining botnet controlled via twitter.\n11 Aug 2011 - Symantec discovered first GPU mining botnet called\nTrojan.Badminer.\n\n", "Is there an open source Bitcoin exchange?": "\nIntersango is an open source exchange that is used at intersango.com, which is an exchange operated by The Bitcoin Consultancy. The open source project that can be found here is released under the GNU Affero General Public License. \nFor more info on how to set it up, see this post on the bitcointalk forums: Intersango HOWTO - Build your own Bitcoin Exchange Web Site!\n", "When building bitcoind, I receive error \"headers.h:36:20: fatal error: db_cxx.h: No such file or directory\"": "\nYou need to add -I <directory> to the end of the CXX=g++ line in the Makefile. The directory should be the one that contains the db_cxx.h file from your BerkeleyDB installation. So, change:\nCXX=g++\n\nto\nCXX=g++ -I /usr/local/BerkeleyDB.5.1\n\nYou may need a /include or something like that on the end of that. It depends exactly which directory holds the db_cxx.h file.\n", "Do I need a wallet to start mining?": "\nThe wallet doesn't have to be on the same computer. For example, you can mine in a pool and the address to receive bitcoins could be from any wallet located anywhere.\n", "alternatives - Is there a uniform measure of \"difficulty\", that when multiplied by price, will give \"profitability of one hour of mining\"?": "\nThe standard formula to determine the average profit per day for a given MH/s miner on a given blockchain is as follows:\n(S/(D*4295))*60*60*24*R*P\nWhere S is the speed in MH/s rating of the miner, D is the difficulty rating, R is the reward (50 BTC/block for Bitcoin) and P is the price in USD of a single coin.\nThat I know of there is no standard profitability measure but it would be easy enough to create one given standard values of S. If for example we define the standard as S=100 MH/s then we could easily compare the profitability of mining various blockchains in the resultant USD calculation.\n", "hash - How well does scrypt perform on different architectures / OSes? - Cryptography Stack Exchange": "\n\nI've heard claims that it's relatively slow on Windows and/or Intel compared to Linux/AMD.\n\nThe claim that it could be Windows/Linux is a little off. It is more likely to be Intel/AMD, if anything. This will be an implementation detail based on the relative costs of processor instructions on each architecture; for example inc instructions are cheap on AMD, but costly on core 2 processors (relative to the speed of processors. You won't notice this difference unless you measure it). \nIn order to see numbers I suggest having a read of the x86 latency measurements made during the development of libgmp. They're slightly dated, but give you a fair idea that in fact not all assembly instructions cost equal.\nDoes this mean scrypt performs better on one processor or the other? Not at all. It means the implementation of scrypt measured performs better on one processor or the other. You should be able to produce optimised versions of scrypt for each architecture. This is, internally, what libgmp does for your multiprecision arithmetic - the optimised code for your architecture is the one you link to.\nI'm not really a compiler expert, so I can't really comment on the behaviour of C compiled versions, but to achieve full optimisation you'd likely need to start from the assembler output of a compiler anyway.\n", "terminology - Is \"bitcoin\" a countable noun?": "\nEveryone is using it as a countable noun. There's actually a grammatical rule that says this is what should happen. If a new term ends with an existing term and is semantically related to that term, it gets the old term's rules. If not, it does not.\nSo, a \"pop fly\" is not a type of fly (the bug). So we don't say \"pop flies\" but \"pop flys\".\nA \"bag lady\" is a type of lady. So we don't say \"bag ladys\" but \"bag ladies\".\nWe don't say \"two firemans\" because while a fireman is not necessarily a man, the origin is directly related.\nSo, a \"bitcoin\" is a type of coin, the terms are semantically related. So it should inherit the rules of the word 'coin'. Since we'd say \"one coin\", \"two coins\", we would expect the rule to be \"one bitcoin\", \"two bitcoins\". This feels natural to people, so it's what they do.\n", "charts - Is there a graph of Namecoin value over time?": "\nCMC has it, why look elsewhere? https://coinmarketcap.com/currencies/namecoin/\n", "security - Can someone with 51% computing power earn more than he deserves?": "\nIf you have 51% of the network and you see that someone else has solved a block, then you can either accept their block or compete with it. In either case, if you get the next block you'll get 50 BTC. Usually neither option is more desirable than the other unless you're doing other attacks. It might be a bit better to take 100% if you're worried about difficulty or subsidy adjustments.\nSo an attacker could get 100% of block rewards, but this alone won't help him much.\n", "privacy - What Bitcoin Mixing/Laundry Services are availble today?": "\nThe only one I'm currently aware of is \"Bitcoin Laundry\" operated by Mike Gogulski. They charge a 4.555% commission rate and do little more than accept a payment then re-send a payment. There is also (according to the Wiki) that the service is only lightly used and might not be adequate to provide any real anonymity. You might be better sending then withdrawing coins at Mt Gox with a decent delay between transactions - the sheer volume of Mt Gox's transactions as well as the size of their wallet would make them much more effective and there's nothing I'm aware of to stop you from creating an account with a throwaway email address and accessing Mt Gox through TOR/I2P/etc.\n", "mining pools - What is NTime rolling/nonce range? And what miners support it?": "\nNTime is the integer timestamp in seconds.  It is one element on the block header. Each second NTime increases by one.    \"NTime rolling\" is a getwork parameter indicating how many seconds forward a miner can still consider this getwork valid (by incrementing NTime locally).\nTo understand how this is used lets first take a look at Bitcoin Block Header.\nFor a given set of transactions only two elements in the block header change between hash attempts.\n\nNTime - current timestamp (changes every second)\nNonce - 2^32 number (changes every hash)\n\nSo to construct a valid header a miner must have the current value of these two rapidly changing elements.  The other elements of block header are also needed but changes occur much less frequently and trivial for the pool to handle.\nThe basic (inefficient) method to handle these two variables in a getwork request is for the pool to explicitly provide both values in every single header. The pool will provide one getwork every second.  A miner with less than 4.2GH/s however will on average find < 1 nonce per getwork. As an example, a miner which can execute 100MH/s will cover the nonce range (2^32) in 40 seconds.  The pool will need to issue 40 getworks per share.  The avg # of getworks per share will depend on the speed of individual miners however a significant amount of excess communication is occuring.\nNow both nonce range and NTime are highly predictable so a miner could simply be given a starting point and locally change both values.  Doing this significantly reduces the number of getwork requests required to cover the same number of hashes.\nBy allowing the miner to roll the NTime forward for 10 seconds the pool can cut the number of getworks from 40 to 4 seconds.\nThere is also a benefit for fast miners which are already efficient.\nA 2 GH/s miner will find on average one nonce every 2 seconds.  With an NTime rolling value of 10 seconds.  The same getwork will enable the pool to acheive 4 nonces per getwork.\nThe NTime rolling value instructs the miner how far it can increment NTime (in seconds) before needing to request new work.  So a NTime rolling value of 4 means the miner can use this header for 4 seconds before considering it stale and likewise a value of 40 indicates to the miner it can use same header for next 40 seconds.  Pools can use increasingly large NTime values however there are diminishing returns.  A block is found on average every 600 seconds, and periodically transactions need to be included.\nStill an optimal Ntime rolling value ensures the pool is only updating getworks when work has actually updated in a meaningful way (elements changed other than nonce or time).\nAn example:\nA pool provides a 100MH miner a block header containing the current ntime, a nonce range of 0 to 2^32 (full nonce) and an NTime Rolling value of 40.  The miner would hash until the local time increments 1 second (roughly 100 million hashes) then it would increment NTime value and continue to hash for another 1 second (roughly 100 million more hashes).  Once it has incremented NTime 40 times it must request new getwork.\nProper use of NTime rolling improves pool efficiency by reducing number of getworks per share.  In your example I speculate that Slush looked at the pool logs and determined that some miners were requesting work \"too often\" indicating they were ignoring or incorrectly using NTime Rolling value.   Obviously a pool operator would want all miners to use latest protocols such as NTime rolling, and Long Polling as it allows a pool server to handle a higher throughput with same amount of hardware, bandwidth and other resources.\nI don't have an exhaustive list but as far as I know any \"relatively recent\" miner supports NTime rolling (as in released in last 6 months).\n", "currencies - What are Namecoins?": "\nNamecoin is a distribuited DNS system where information held about a web address (MX, A, etc) are held within the coin itself. Advantages of this are no other company holds the address, unique ownership will always be had due to the way the bitcoin works. (no man in the middle attacks, CA will no longer be needed)\nSpecific DNS servers are required to browse these sites. There are a handful of public servers available.\nThe code is being reviewed on a regular basis as it is very young and building a unique usable specification is a challenging task, even with all the features bitcoin has left in place for it.\nAt this time the extension is .bit although this can be changed or even removed completely if wanted.\nHow does merged mining work? will provide details on Merged Mining.\n", "transactions - Is there a way to initiate a payment request in bitcoin?": "\nYou can now use the Bitcoin payment protocol to do this.\nHere is an easy to use implementation from Bitpay.\nThere are already a few wallets that support this (including the reference client).  More will be released soon.\nSee:\n\nBIP 70\nBIP 71\nBIP 72\nBIP 73\n\n", "client - `bitcoind` must be different from `bitcoin -server` because one gives an error message the other doesnt": "\nThey're not exactly the same -- they're two different programs. The bitcoind program is a pure server (or pure RPC client), it contains no GUI at all. The bitcoin program contains a GUI and can also run in server mode. So being unable to operate as a server is fatal to the server-only version, because there's nothing else it can do.\nWhen you ask the GUI client to run in server mode, it interprets this as an additional request. If it is not configured properly to run in server mode, it will still start up and run the GUI. So for bitcoind, an improperly configured server mode is fatal -- what else could it do? For bitcoin, an improperly configured server mode just makes server mode not work; it will still run as a GUI client.\n", "Is there a way to automatically send bitcoins from one wallet to another?": "\nYou may use /etc/crontab on your Ubuntu:\n* * * * * root /usr/local/bin/bitcoin_resender\n\nAnd script shall looks like:\n$ cat /usr/local/bin/bitcoin_resender\n#!/bin/bash\nif [ $(echo \"$(bitcoind getbalance) > 0\" | bc) -eq 1 ];then\n      bitcoind sendtoaddress YOUR_NEW_ADDRESS $(bitcoind getbalance) \"Comment for resender\"\nfi\n\nIt will check every minutes your bitcoind balance and resend each bitcoins to YOUR_NEW_ADDRESS.\n", "What does \"PROOF OF WORK RESULT: false (booooo)\" mean when mining?": "\nYou're solo mining. So there's nothing useful you can do with a share -- there's nothing for you to share in. Every share you find will be rejected, unless you actually mine a block.\n", "client - What happens if my transaction is not accepted because I did not pay fees?": "\nIf your transaction does not get accepted, you have a few options. Right now, at least for Bitcoin itself, there are still enough miners willing to include any valid transaction. So if you just keep waiting, it should eventually get confirmed.\nYou may also wish to stop your client and then restart it, manually forcing it to connect to a client known to accept transactions without fees. It can help to disable incoming connections to maximize the chances your transaction will go to the client that will accept transactions without fees. It can take several hours for the transaction to get out, even if you do everything right. (The client intentionally 'dribbles' out transactions to try to hide their origin. This completely fails for transactions with too-low fees, but the client still tries.)\nOtherwise, you can abort the transaction attempt. Stop your client and then make sure the transaction is not in limbo by checking the list of pending transactions. If it's not there, you can stop attempting the transaction to recover the coins. Ideally, you made a backup of your wallet before you attempted to make the transaction -- reverting the wallet and restarting the Bitcoin client with the -rescan option will remove the transaction. Otherwise, you'll have to (ouch) edit your wallet file to remove the transaction.\n", "What is a share? Can I find it while mining solo, or only when pool mining?": "\nA share is a hash smaller than the target for difficulty of 1* (see clarification at end).  Every hash created has a 1 in ~4 billion (2^32) chance of being a valid share.  In comparison if the difficulty of network is 2,000,000 then a share is 2 million times \"easier\" to find than a valid hash for the block, and on average it will take 2 million shares (8 quadrillion hashes) to find a valid hash for the block.\nShares have no actual \"value\".  To the bitcoin network they are worthless.  The only hash with any value is the one that is smaller than the target (determined by difficulty).  \nSince a miner has no control over when he will generate a share (they occur randomly roughly once per 2^32 hashes) he can't cheat the pool.  When one miner in the pool finds the solution hash (the only hash worth anything) rewards can then be split by number of shares submitted.  There are multiple reward methods (Proportional, PPLNS, SMPSS, PPS, etc) that calculate the \"fair share\" of the reward but all use a share as a proxy for work completed by the miner.\nIt is important to emphasize that a share has no actual value.  The only hash with value is the one that solves a block.  A share is merely an accounting method to keep the miners honest and fairly divide any rewards earned by the pool.\nThere is no need to keep track of shares in solo mining because you will not split the reward and can't cheat yourself.\n\nUsually pools use a difficulty of 1 as the target for a share.  Technically any difficulty (less than network difficulty) could be used.  Each miner's share of the reward would remain the same regardless of what difficulty is used.\n\n", "Can an SMPPS (Shared Maximum Pay Per Share) pool be hopped?": "\nSMPPS can be hopped, but not in the same way that proportional can. Proportional is hoppable because the expected reward per share is different at different times, so hoppers mine when the reward is high (early in a round) and leave when it is low.\nIn SMPPS, the expected reward is in theory constant, but the maturity time, the time it takes to actually receive the reward, is not (maturity time is bad because of the time value of money, uncertainty wrt the future of the pool, etc). When the buffer is positive, SMPPS is very attractive, as it is like PPS but with 0 fee. When proportional pools become extinct, hoppers will choose to mine in SMPPS when its buffer is positive because it is better than alternatives. When the buffer is negative the maturity time is high, so the hoppers will leave, and the honest miners will suffer from more than their fair share of the bad times.\nSo, the hoppability relies on the possibility of a negative buffer. But this possibility is very real - the underlying stochastic process is similar to the one in PPS, but the fee which helps PPS stay afloat is absent. This means that with probability 100% it will become negative at some point, no matter what the initial buffer was.\nSee also Analysis of Bitcoin pooled mining reward systems for more information about reward systems.\n", "security - Gaming the \"off-by-one\" bug (difficulty re-target based on 2015 instead of 2016 block time span)?": "\nThe attack allows a group of miners with more than 50% of the network's computational power to change difficulty arbitrarily.\nWhen difficulty is adjusted, only the times of the first and last blocks in a retarget period (i.e., the first and last blocks with a certain difficulty) are considered. This attack works by manipulating the timestamp of one of these two blocks.\nBlocks are considered valid if their time is greater than the median of the last 11 blocks and less than currentTime + 2 hours, so it's legal for an attacker to create a new version of an old block with a time far in the future. If this is the first block in a retarget period, then the difficulty will quadruple after that period. If it's the last block, then the difficulty will be divided by four. (Difficulty adjustments are limited to *4 or /4.)\nNote that it is not possible to do these major changes with recent blocks because the time would be more than two hours in the future. It needs to be done with historical blocks, and then the attacker needs to re-do all blocks that come after that block. So this attack is only possible when you have a lot more computational power than the legitimate network.\nThis would not be as big of a problem if there was a block of overlap between the retarget periods. Instead of using the first and last block in a retarget period, use the last block of the old difficulty and the last block of the new difficulty. Then the attacker will still be able to mess with one retarget period, but it will be corrected in the next retarget period.\nI think a better solution would be to look at every block in a retarget period plus maybe some blocks before the period. It just seems like a bad idea to give certain blocks \"special powers\".\nA discouraged block is considered valid (it adds confirmations to transactions, blocks after it will also be valid, etc.), but your node refuses to relay it or build future blocks onto it. If most of the network is discouraging a block, then it will almost certainly be replaced. Even a minority discouraging a block will hurt the block's chances. It is very unprofitable for a miner to discourage a block when most of the network is not, though.\n(Thanks to gmaxwell for explaining this attack to me.)\n", "mining pools - What are acausal blocks?": "\nIt allows the pool to avoid making new work for every single request. Instead, it just increments the time by a second and gives that to the next miner. Under heavy load (longpolls), Eligius might use the same work for up to 7,200 miners, meaning the last miner gets a work timestamped 2 hours into the future. This helps reduce stale shares significantly.\n", "transactions - Can I hide my IP address by blocking incoming connections in the client?": "\nDan Kaminsky's deanonymization works by having a lot of probes in bitcoin network that collect data about how transaction propagate and than trying to localize it's source.\nWhen packet travels in the network (Internet), it has to have source and destination IP addresses in it's header. Therefore when your bitcoin client sends transaction it has to wrap it into IP packet with your source address and destination address of the connected peer.\nFor one way communication it's theoretically possible to have random IP source address in a broadcasted transaction, but it would be still possible to deanonymize by knowing location of closest peers.\nIt would be easy to avoid deanonymization by using any kind of IP proxy, see this question.\nP.S. The answer has some speculations because Dan Kaminsky didn't release the software yet.\n", "alternatives - Has anyone attempted to make a working voting system using a bitcoin based system?": "\nAt least one group has at least claimed to develop a voting system based on Bitcoin.\nhttp://www.newscientist.com/article/mg21328476.500-bitcoin-online-currency-gets-new-job-in-web-security.html\nAccording to the article:\n\nThe pair have used their method, known as CommitCoin, to close a\n  loophole in a voting system they helped develop. In the Scantegrity\n  system, voters receive a confirmation code from the list that is\n  cryptographically linked to their selected candidate and can be used\n  to check on the election website that their vote is counted.\n\n", "history - Which Namecoin block was the first one to be generated by merged mining?": "\nYes, block 19200 was mined using MM, by slush's pool. AFAIK first Bitcoin block with merged-mining information was 00000000000002c727047296ee20b628599031c6ea5c09292513fddbb11d34df (block 148557), also mined by slush's pool.\n", "cpu mining - What is the status on webminers?": "\nWhile not directly a WebCL miner there is a miner which uses OpenCL via  Java Webstart so is accessible to any internet user with Java installed and apropriate hardware.\nhttp://www.BitMinter.com\nThe site is both a pool and a custom java miner. \nThe pool can be used with other miners however the BitMinter miner works only with the BitMinter pool.\n", "development - What does the Bitcoin community need the most now?": "\nPR is the most important thing for growth right now.  There's enough basic services that you can use with bitcoin, but not enough people to use them.\n", "proof of work - Bitcoin alternative designed for NVIDIA": "\nThe specific reason that AMD cards are more efficient for Bitcoin mining is twofold and the answer to this question depends on both reasons:\n\nAMD GPUs tend to have lower-end ALUs but make up for this by packing more ALUs onto the card overall. For most hash algorithms this is preferable.\nAMD GPUs uses ALUs which can perform the 32-bit integer right rotate operation in a single instruction - Nvidia's ALUs take three processor cycles to perform the same operation. SHA256 uses this operation heavily, therefore Bitcoin mining uses this operation heavily.\n\nCombining the two reasons above results in an overall 3x-5x faster generation of SHA256 checksums. However the two effects are not equal: Effect 1 leads to approximately 2x-3x Nvidia's performance all on its own, with Effect 2 accounting for about 1.7x performance advantage. Even if you were to choose a hashing algorithm that made less use of the BIT_ALIGN_INT instruction AMD cards would still be 2x-3x faster for hashing algorithms in general. This is because such algorithms are explicitly designed to be simple binary operations which AMD's simple ALUs can handle just as well as Nvidia's more complex ALUs.\nIn order to choose an algorithm which would perform better on Nvidia cards than AMD cards, you would not only have to eliminate scenarios such as #2 above where a specific instruction happens to be better implemented on one card than the other, you would also have to choose an algorithm with math complex enough that Nvidia's higher-end ALUs get the chance to individually shine. To my knowledge no such algorithm exists.\nTo back up my statements, here is some example data from oclHashcat's web site. The table below compares actual performance measurements from similarly priced AMD and Nvidia cards for the MD5, SHA1, MD4, NTLM and SHA256 algorithms, among others.\n\nKeep in mind that in comparing PC1/2 and PC3/4 that the Nvidia cards actually have higher clock speeds in both cases and still perform worse. In no case did Nvidia's performance approach the performance of a similarly priced AMD card, and to my knowledge no currently implemented algorithm performs sufficiently complex mathematics to make use of the more advanced ALUs on Nvidia's cards.\nIn short, Nvidia cards are like a small room with several fairly intelligent people, each capable of complex mathematics while AMD's cards are like a sweatshop. Hash algorithms are the computing equivalent of mass-producing name-brand tennis shoes and so the AMD \"sweatshop\" card will always outperform.\n", "blockchain - Largest number of bitcoins at a single address at one time?": "\nHere's a complete list of 'record setting' address balances over time:\n   date        block  transaction       balance                    address\n-----------   ------  -----------   ---------------   ----------------------------------\nJan 03 2009        0   4a5e1e4b:0       50.00000000   1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\nJan 14 2009      496   a3b0e9e7:0       61.00000000   1BBz9Z15YpELQ4QP5sEKb1SwxkcmPb5TMs\nJan 15 2009      586   4d6edbeb:0      250.00000000   19QKDUJtx9n7Vaga6nX1bVHdsnT4Khfyi6\nJan 19 2009     1055   8897ea9c:0      500.00000000   15oUEZFKAC8E8BTLt1s1jx4fPxumwB3ecr\nJan 22 2009     1296   59bf8acb:0      875.00000000   12higDjoCCNXSA95xZMWUdPvXNmkAduhWv\n                              [36 records omitted for 12higDjoCCNXSA95xZMWUdPvXNmkAduhWv]\nJan 15 2010    34887   ffcea1e6:0    72374.36000000   12higDjoCCNXSA95xZMWUdPvXNmkAduhWv\nOct 02 2010    83231   689f1772:0   110001.00000000   1LUPDXYf9XD9Ee1AqCuM3gZCA3ZMKgTcgw\nOct 02 2010    83240   0ee1f4e6:1   120001.00000000   1NJWs6g6hQsgxqtpRxXLhZJwHYhH2P2bvx\nOct 02 2010    83243   31b00090:0   122001.00000000   1NJWs6g6hQsgxqtpRxXLhZJwHYhH2P2bvx\nJan 27 2011   104770   8f821069:0   400000.00000000   1AYtnRppWM7tWQaVLpm7TvcHKrjKxgCRvX\nJun 12 2011   130281   a09ac44c:1   432109.87654321   1KLahQtqDNAXvrjNyfvgSBtAhwco5ZxLp4\nJul 18 2011   136856,  e4762860:1   434242.43424242   1eHhgW6vquBYhwMPhQ668HPjxTtpvZGPC\n                              [36 records omitted for 1eHhgW6vquBYhwMPhQ668HPjxTtpvZGPC]\nJul 18 2011   136870   b96a37e4:1   474320.43424242   1eHhgW6vquBYhwMPhQ668HPjxTtpvZGPC\nNov 16 2011   153509   29a3efd3:1   500000.00000000   1M8s2S5bgAzSSzVTeL7zruvMPLvzSkEAuv\n\nAnd this shows for record setting transaction sizes:\n   date        block   transaction       amount\n-----------   ------   -----------   ---------------\nJan 03 2009        0     4a5e1e4b        50.00000000\nJan 14 2009      496     a3b0e9e7        61.00000000\nJan 15 2009      586     4d6edbeb       250.00000000\nJan 19 2009     1055     8897ea9c       500.00000000\nJan 26 2009     1945     5559270f      1000.00000000\nFeb 09 2009     3645     cec658ac      2200.00000000\nMar 16 2009     7677     e6f00fa6      2400.00000000\nApr 20 2009    11666     eebd343e      3500.00000000\nJul 20 2009    19863     123a3968      6049.53000000\nOct 16 2009    25095     4aa98b18      9700.00000000\nOct 22 2009    25618     1aae9d58     11950.00000000\nOct 24 2009    25788     5d793270     12250.00000000\nOct 27 2009    25969     3cd9410f     13000.00000000\nNov 04 2009    26402     6029e51c     15500.00000000\nNov 19 2009    27525     f2e5fdd3     21850.00000000\nNov 19 2009    27528     67fc73c7     22500.00000000\nMar 06 2010    44006     23709241     23247.39000000\nJul 12 2010    65566     ba62e528     35000.00000000\nJul 26 2010    70527     b9d69463     46753.13000000\nJul 28 2010    70870     73ac0fdc     50000.00000000\nNov 04 2010    89583     3bc57f90     50000.01000000\nNov 06 2010    90003     70dab592     55000.00000000\nNov 08 2010    90505     1ec28eee     96999.00000000\nJan 27 2011   104770     8f821069    400000.00000000\nJun 12 2011   130281     a09ac44c    432109.88745232\nJun 23 2011   132749     3a1b9e33    442000.00000000\nNov 16 2011   153509     29a3efd3    550000.00000000\n\nSo both the biggest balance and the biggest transaction are in block 153509.\nThe transaction is 10% bigger than necessary due to some sub-optimal coin selection code in the default client.  It makes sure, when using a set of different coins to make up the transaction inputs, that the selected coins total at least one cent more than the transferred amount.  This is an attempt to prevent sub-cent change which would trigger transaction fees.  However, in some cases there is no need for any change at all.  In this case the 'spare change' it allocated was a 50k BTC coin.  I've since submitted a fix for this issue.  This 500k coin and its subsequent movements caused the spike in global Bitcoin transaction volume referred to in this question.\nData is accurate as of February 9th 2012.\n", "What are the advantages/disadvantages of a continuously decreasing block reward compared to the current method?": "\nThe main advantage of the staircase rewards is simplicity. It's easier to implement; easier to describe; easier to plan with.\nThe main disadvantage is that it is less mathematically elegant. It will not be very disruptive in practice because it is known in advance and can be planned for.\nThe early adopter advantage is not a consideration, as it can trivially be controlled with the timescale parameter.\n", "governance - Who controls the Bitcoin software?": "\nThere are a number of \"core\" developers. And the ones who have access to commit directly to the Github project obviously have more \"power\" than other people. Since the software is open source you can of course make your own copy of it and modify it to your likings but you won't be able to change any of the \"rules\" of the network unless you get the rest of the Bitcoin world to follow you and use your client.\nAccording to bitcoin.org the core developers are Satoshi Nakamoto, Gavin Andresen, Pieter Wuille, Nils Schneider and Jeff Garzik. According to a recent message on the Bitcoin Development mailing list Wladimir (J. van der Laan?) is now also part of the core development team. Obviously Satoshi is not anymore, so I don't know how accurate the list on bitcoin.org actually is.\nThe ones who have push access to the Github project are according to this message:\n\nGavin Andresen\nNils Schneider (a.k.a. tcatm)\nPieter Wuille (a.k.a. sipa)\nJeff Garzik\nAlex Waters\n\nGavin, who is the lead developer is active here so I'm sure he can give us a clearer answer himself. Also see Is there a list of core Bitcoin committers?\n", "transactions - Speed of operations in the Bitcoin network": "\nThe alternative currency Geist Geld is experimental and is trying to approach a maximum block rate (that's currently achievable), and has apparently settled upon a target block rate of 1 block per 15 seconds. However, the block rate doesn't necessarily make a substantial difference to how you would use a currency as you could still consider a small transaction accepted even before it's been included in a transaction block, whereas with a faster block rate you may need to wait just as long.\nThere has been lots of discussion on how a faster block rate would affect things (eg here, here, here, and here) but I think that ribuck summarises it well in that last link: \"If you make the blocks too frequent, you get more cases where two blocks are generated at nearly the same time. Due to network propagation delays, this can cause temporary splits in the block chain. On the other hand, if you make blocks too infrequent, it takes too long for a transaction to become essentially irrevocable.\"\nThat same link mentions a calculated latency of 2.11 seconds.\nWith a block rate that's too fast, you may end up with miners consolidating within a part of the network with low latency, creating an unfair distribution of mining returns.\n", "What options are there to combine mining over multiple computers?": "\nYou can run as few or as many Bitcoin clients as you want. You can have them all pull from the same client, or you can have each miner pull from its own client. Just remember, the mined coins will go to the wallet of the client the miner pulled the work unit from.\n", "development - Is an Xcode project for the Mac Bitcoin client available?": "\nI don't believe the project itself is distributed, but there is a step-by-step guide to creating an Xcode project for Bitcoin in the answers to \"What are the steps in building bitcoind on Mac OS X 10.6?\"\n", "terminology - What is the collective name for Bitcoin, Namecoin, etc?": "\ndistributed digital currency, or distributed digital crypto-currency. the \"distributed\" bit is a key issue - anyone can make a centralized digital currency, even with crypto thrown in.\n", "standard - Where should one suggest new terminology?": "\nBitcoin is completely decentralized.  Most terms in use today \"pools\", \"51% attack\", \"miner\", \"rigs\", \"stales\" came about simply because they were adopted by most users of bitcoin.\nIn addition to the IRC options already given, http://bitcointalk.org has a general discussion forum which may finds some interest if you start a \"glossary\" thread.\nAlternatively you could look to influencing the discussion via the bitcoin wiki.  You can add entries for existing terms, clarify terms, request terms be merged with othe terms in an attempt to improve standardization.\nJust remember bitcoin is decentralized.  You can only gain adoption by winning mind share.  You can't force a term by committee.\n", "security - Who controls Solidcoin's special millionaire accounts?": "\nRealSolid controls those accounts. He claims that he has selected several trusted people to operate them, but we have no way to know if this is true or not.\nThere also seems to be a somewhat fundamental flaw in the reasoning. If we trust people because they have the most to lose, why should we trust people who have unspendable coins? Unspendable coins don't reflect having anything to lose at all.\nIt should also be pointed out that those with more than a million coins have complete control over the transactions included in the chain and who gets all of the mining rewards. They have merely to announce blocks in pairs -- everyone who doesn't control a million coins can be completely locked out by those who do.\nAlso, I think \"the poor can trust the rich because they have the most to lose\" fails the giggle test. (That is, you can't say it with a straight face, so it's probably not even close to true.)\n", "transactions - What is op_eval?": "\nOP_EVAL is a new opcode (operation code) for the Bitcoin block chain scripting language, proposed in this thread.\nWhat this opcode does is take a binary representation of a script from the data supplied for authorizing use of an output, and add the corresponding script to what is being evaluated.\nThe goal of this is to create Bitcoin addresses which, to use, require an arbitrary verification scheme, without people sending to that address needing to know what the script is.\nThe \"killer app\" for this is for people who don't want to lose all their bitcoins if their computer is compromised. They will use addresses where coins can only be spent if signatures from two different keys stored on separate devices are provided. Again, this is transparent to others sending to this person, they only need to know the address and not the details of his desired script.\n", "wallet - OS X 10.7 - Where is Bitcoin data stored?": "\nBitcoin data on Mac OS X located in ~/Library/Application Support/Bitcoin/ . Just copy the whole folder to the new HDD to use your old wallet and downloaded blockchain with the new copy of Bitcoin client.\n", "blockchain - Where are the user's bitcoins actually stored?": "\nIt seems like what's called for here is a basic explanation of two of Bitcoin's big concepts: the wallet and the blockchain:\n\nA \"wallet\" is a collection of ECDSA keypairs. For those not familiar with cryptography, a keypair consists of a \"public key\" and a \"private key\" which can be used to encrypt or sign bits of data. The public key, as the name suggests, is known to everyone and can be used to encrypt messages in such a way that the holder of the private key alone may decrypt them. The private key may also be used to sign messages in such a way that anyone holding the public key may verify that the message truly came from you. Every Bitcoin address consists of such a keypair - the \"address\" you send people is the public half and the private half resides in your wallet.dat file.\nThe \"blockchain\" is a constantly growing database of transaction information which is sent out to all nodes in the Bitcoin network. When you perform a transaction, that transaction is distributed to the network and assuming the transaction is valid, will be included in the next \"block.\" This is where the coins themselves are stored. When you initiate a transaction, all previous transactions to or from that address are scanned and a balance is calculated. If your transaction exceeds this available balance, it will be rejected by the network and will not be included in a block.\n\nIt's also important to note that the blockchain technically doesn't store \"coins\" it stores transaction information. The coins themselves are not discrete things which need storage - when coins are mined the miner's balance is credited via a \"generate\" transaction which adds to his or her available balance. When coins are sent from A to B, that transaction subtracts from A's balance and adds to B's balance. This is similar to the way that your employer may, via EFT, send \"money\" to your bank and you can use your debit card to spend that \"money\" in a store, all without anyone ever seeing a discrete physical dollar bill. Most money in the world today exists merely as transaction histories and balances - Bitcoin is no exception.\n", "mining profitability - World-wide price for generating 1BTC": "\nThe parameters you need to calculate this are:\nE - the mining efficiency, measured in MHash/J. Data on this for various hardware is available in Mining hardware comparison (though this take into account only the card's power and not of the system it is in). Or you can calculate it for a given system by dividing the total hashrate (in MHash/s) by the power consumed (in W).\nc - the cost of electricity, measured in $/KWh.\nB - the bitcoin reward per block.\nD - the difficulty.\nThe cost to generate 1 BTC is:\nc*D/(838*B*E)\nFor example, if E=2, c=0.1, B=50 and D=1,500,000, this is\n0.1*1500000/(838*50*2) = $1.79\nThe 838 \"magic number\" comes from the various unit conversion factors - 2^32 hashes per difficulty-1 hash, 3,600,000 Joules per Kilowatt-hour, 1,000,000 Hashes per MHash.\n", "Can I damage my computer by mining bitcoin?": "\nIt is possible to damage your computer by mining in the following ways:\n\nthe computer will degrade more, as it is used more (you will have to replace it sooner than normally)\nthe computer will overheat and some components will fail because of that (if for example, the computer is dusty. If the parts are well-maintained and the computer is not boxed in, this shouldn't be the issue)\nyou will overload some part of your computer with the mining and it will short circuit or blow a fuse (mostly relevant if your power supply is weak, this happened to me once)\n\nNumber 3 you should notice quite fast if you run your miner at top speed, full load. If you are already mining, this probably won't happen unless you increase your load, or are operating close to the limit of your hardware. If something flashes, smokes, or the computer doesn't turn on any more, this was probably the cause. Replace hardware.\nNumber 2 you should notice if you run your miner for about an hour, once everything heats up well. Again, if you are already mining and this doesn't happen, it probably won't if you keep your computer clean and give it some air. If your computer turns off suddenly, but runs fine after cooling down, this probably was the cause. Clean your computer chassis, possibly add some fans or replace hardware.\nNumber 1 you won't notice for months or years.\nMining with lower-end GPU should be fine in all the regards, asides maybe 1 (leaving your computer on for longer to mine will ear it down more). Usually it means you won't use as much power and generate as much heat, so you should be fine.\n", "exchanges - Could the price drop between July and September 2011 have been caused by a bot?": "\nSince the bot exists, and the people who wrote it presumably wish it to perform every transaction it performs, it reflects real supply and real demand. Why would you want to stop it? There is nothing inherently good about a high price.\nPersonally, I think the drop in value was due to the bursting of a speculative bubble. The price was previously kept high due to press attention that made people think Bitcoins might be a good investment. As soon as everyone who was going to be brought in by the hype was brought in, the demand started to drop. This caused a small price slide, which induced a lot of panic selling from people who thought the speculative rise would continue forever. Once the price starts dropping at the end of such a bubble, more and more people try to sell out to minimize their losses. Once everyone who expected a short-term profit sells out, the price stabilizes.\nWe're now back at that relatively stable floor, waiting for the next hype cycle to start another speculative bubble. Until Bitcoin's price is driven by its use as a real medium of exchange, this pattern is likely to repeat over and over.\n", "transactions - Is it possible to forward bitcoins without the private keys?": "\nShort answer: no.\nLonger answer: to 'forward' coins one needs to spend them out of the first receiving address, and to the next one. in order to spend them, one needs to sign a transaction using the private key associated with the first receiving address.\n", "mtgox - Is there a historical timeseries of market depth & transactions available?": "\nCurrent market depth available at \n\nhttps://mtgox.com/api/0/data/getDepth.php?Currency=USD\n\nAll trades which happened in the last 24 hours available at\n\nhttps://mtgox.com/code/data/getTrades.php\n\nRetrieves 100 trades that happend after specified transaction\n\nhttps://mtgox.com/code/data/getTrades.php?since=\"transaction tid\"\n\nA script is required to retrive all historical data, like the one posted by mizerydearia. The idea is to cycle download request while incrementing \"transaction tid\" aka \"lasttrade\" to download all data in steps.\n#!/bin/bash\noutputfile=data\nlasttrade=0\nwhile test -n \"$lasttrade\";do\n    wget --quiet https://mtgox.com/code/data/getTrades.php?since=$lasttrade\n    if test \"`cat getTrades.php\\?since\\=$lasttrade`\" != \"[]\";then\n        cat getTrades.php\\?since\\=* >> $outputfile;\n        echo >> $outputfile;\n        lasttrade=`cat getTrades.php\\?since\\=$lasttrade|sed \"s/,/\\n/g\"|grep tid|tail -n 1|cut -d \":\" -f 2|cut -d \"\\\"\" -f 2`;\n        lasttradets=`cat getTrades.php\\?since\\=*|sed \"s/,/\\n/g\"|grep date|tail -n 1|cut -d \":\" -f 2`;\n        echo \"$(date -d @$lasttradets)  tid $lasttrade\"\n    else\n        echo Finished\n    fi\n    rm getTrades.php\\?since\\=*;\ndone\n\nSee MtGox - API for more http API calls.\n", "Can gaming consoles be used as a Bitcoin mining platform?": "\nWhen CPU mining was common gaming consoles did provide comparable performance.  There was some development work for xbox360 and PS3.  However roughly a year ago GPU mining hit bitcoin network rendering CPU miners obsolete almost overnight. Using unified shaders in modern GPUs and OpenCL programming language GPU miners could operate in parallel working on many hashes simultaneously.  Even the earliest crudest implementations vastly outperformed any CPU in terms of raw hashing power, hashing power per dollar, and hashing power per watt.  Since then refinement of OpenCL kernels have only widened that performance differential.  Currently there is no economic value in using CPU for mining Bitcoins. \nDue to the emergence of GPU mining there are a couple issues that make mining with current gaming consoles futile.\n\nMarketing aside gaming consoles are not that powerful.  Today a $69 AMD graphic card has more computing power than either the Xbox 360 or PS3.  Moore's law is a powerful force and gaming consoles which were start of the art in 2005 are pitifully weak compared to hardware available today.\nAs already discussed CPU mining is futile and unprofitable\nThe GPU in both consoles while powerful at one time are rather lackluster by todays standards.  They could provide low end hashing power except they lack unified shaders which makes programming them to do hashing impossible.\n\nConsoles are not upgradable and that is both a benefit and detriment.  Right now we are at the tail end of ther current consoles lifecycle and it works against using consoles for computing power.  Since they can't be upgraded they are essentially $600 computers based on hardware available in 2005.  However at the begining of a console life cycle the hardware is rather powerful for the price point and they are routinely subsidized. At launch a $400 xbox 360 contained about $500 worth of hardware.\nSo to answer your question there is no benefit to mining on current gen consoles, however it may be possible that \"next-gen\" console would be viable hasing platforms at least for the first couple years (before their static hardware fall behind due to the continually effect of Moore's law).\nHowever there are some requirements for a future console to be a viable hashing platform:\n\nThe Console has a GPU with unified shaders and good integer\nperformance.\nThe ability to access those shader either through API (Microsoft\nXNA) or hacking/rooting console.\nPowerful GPU relative to retail cost of the machine.  \n\nIt remains to be seen if future consoles could be used for hashing but using current generation consoles for hashing is simply not economical.\n", "transactions - Why does Bitcoin send the \"change\" to a different address?": "\nTwo reasons:\n\nSo whoever sent to your \"A\" address can't claim to have sent you 31 bitcoins (\"See!  Look on block explorer, there are two transactions sending to \"A\", one for 20 bitcoins and one for 11-- send me back the extra 11!\")\nUsing a new change address makes it more difficult for other people to track of how many bitcoins you have or where you're spending them.\n\n", "protocol - Does the client broadcast it's version? Is it possible to determine which version of client are in use?": "\nWhen you connect to the other Bitcoin client, the first message you send is \"version\", which states your protocol version. Moreover, it states both your IP address, and the addres you are connecting to. You can capture this data like any other TCP/IP data.\n", "security - What software and skills do I need?": "\n\nif I buy bitcoins, what will I need to know about the software involved?\n\nYou don't have to know anything really, if you don't want to.\n\nand where should I keep my bitcoin wallet?\n\nIf you don't want to learn about the software or how to keep your wallet secure you should try to find the most reputable e-wallet and keep your money there. People will have different opinions on which one is the safest so have a look around, read forum threads, use something that is well established. MtGox is one option that is well established and is also the exchange with the highest volume.\n\nI have a home computer and I have a Google account. Can the latter be used?\n\nIf you don't want to use an e-wallet you could download the official client from bitcoin.org and store your money in its wallet. Your money is then stored in a file on your computer. You could use your Google account to backup that file (your wallet). That would basically mean that the same money is stored in two places - on your own computer, and in your Google account.\n\nWhat security issues are involved?\n\nIf you choose the option of downloading the client it means that anyone who gets ahold of your wallet file can spend your money. If you have uploaded the wallet to your Google account that simply means that there are two places to rob you. It would be enough for the thief to get it either from your home computer or from your Google account.\nThere is an option in the client to encrypt the wallet using a password. That way anyone who gets ahold of your wallet file can't use your money unless they also know your password. Things to keep in mind here is that if you have some malware on your computer it is possible that it could sniff that password as you type it and then the encryption won't help you. Also, if you forget your password your money is gone. There is no way to recover it.\n\nIf I'm travelling and far from home, how would I have access to my bitcoins?\n\nThen the simplest way would be to use the e-wallet option.\n", "value - What could be the consequences of many bitcoins being lost out of circulation if people lose their wallets?": "\nEconomic theory tells us the price would rise.  It would have a deflaitonary effect on bitcoin economy.  However because bitcoins are so easily divisible it would not impact the ability for the network to function.  \nIf 90% of bitcoins were lost/destroyed that would leave 2.1 million \"whole\" bitcoins in circulation.  This wouldn't be an issue because currently bitcoin network supports transactions down to one satoshi (0.00000001 BTC) which is 210 trillion discrete units of exchange.  \nIt is possible to allow smaller units of exchange however I will illustrate that is unecessary.  The world's money supply (M0) is valued at ~ $20 trillion.  If entire world switched to using bitcoin for all commerce the value of a \"whole\" bitcoin would be $9,524,000 each.  However the smallest unit 1 satoshi would be worth $0.10 Even with 90% of bitcoins destroyed/lost there would be sufficient units remaining to allow commerce down to a 10 cent granularity with Bitcoin replacing the entire world's money supply.  \nIt would result in some changes in language.  Obviously most people wouldn't value things in terms of bitcoins but rather in smaller units like satoshi's (0.00000001 BTC).  \nAs an example a fastfood meal could be priced as $5USD, 0.00000053 BTC, or 53 satoshi's. Obviously 53 is far easier for humans to express than 0.00000053 BTC despite them having equivelent value.  Given the high value of a single BTC, \"whole\" BTCs would rarely be used other than to express things that are currently express in millions of dollars (like salaries of celebrities, values of corporations, size of national debts, etc).\nSatoshi is used as an example but alternatively SI prefixes could be used. For common usage prices in fractional \u03bcBTC (micro bitcoins) makes the most sense with 1 \u03bcBTC = 1E-6 BTC.\nSome examples:\n\"Man gold broke 200 \u03bcBTC today\"\n\"The US Congress raised the minimum wage to 1.50 \u03bcBTC effective Jan 1\"\n\"I got the job.  Starting salary is 8,400 \u03bcBTC a year\"\n", "mining profitability - Pool Hopping Math": "\nThe parameters that affect profitability of hopping are the number of proportional pools, the accuracy with which the hopper can choose at any time the one with the youngest round, and the hashrate of all hoppers combined in comparison with the hashrate of continuous miners.\nThe expected reward for a share submitted to a proportional pool (expressed as a multiple of the fair reward) is a function of the round age (ratio between number of shares already submitted and the difficulty), namely f(x) = Exp(x)E1(x) where E1 is an exponential integral (this is found by taking the average reward over the round length distribution conditioned on it lasting at least as long as it has). This function is monotonically decreasing, so the hopper will always choose the pool with the youngest round. So his long-term advantage is the average of this function at the minimum age among all pools. With m pools the minimal age at any point follows the exponential distribution with mean 1/m, so the more pools the better the payouts.\nFor large m the multiple is (m*ln(m))/(m-1), assuming flawless execution and that the hoppers constitute a negligible portion of the pools. (It is also possible to construct models that relax these assumptions.)\nThis is thoroughly discussed in Analysis of Bitcoin pooled mining reward systems, appendix \"Pool-hopping in proportional pools\" (the appendix assumes the relevant sections in the body have been read).\n", "services - Is there a way to publicly raise Bitcoin funds?": "\nThere is plans to implement conditional transactions which would do some of the things you indicated.   That hasn't been implemented yet.\nTo do what you want would require creating website from end.\nFor example you could display current balance & goal as well as the number of donators.  When someone donates you could have them provide a \"return address\" (in case it is different) that can't be changed and a return password (which you encrypt).\nWhile you said you want to use Mt. Gox I don't see how that would increase trust and it would make automating deposits and returns much more difficult.\nIn short it can be done but there is no easy automated way to do it within the Bitcoin protocol so you will have to custom build a lot of the functionality.\n", "Why isn't there a fast blockchain update inside a LAN behind a router between two Bitcoin clients?": "\nBecause the bitcoin client tries to avoid being \"fenced in\" by an attacker who wants to control all the information flowing to it. It does this by connecting to more distant nodes, i.e. nodes which don't share the first two octets of the IP address. (update: the new address manager code still defends against this type of attack, but probably not in exactly the same way any more.)\nIf you know of a trusted nearby node, you can configure it with the -connectcommand line option or the connect= setting in bitcoin.conf.\n", "backup - What is the absolute minimum amount of information required to have access to a bitcoin balance and or a wallet file?": "\nNmat answer is correct the absolute minimum you would need to rebuild a wallet is the private key of the address.\nAn alternative is a deterministic wallet.  \nWhat is a deterministic wallet?\nA deterministic wallet can use cryptographic algorithms to create (and recreate) and wallet containing multiple public/private keys from a single passphrase.\nA deterministic wallet has the advantage of being able to create an infinite number of addresses from a single passphrase.\nA deterministic wallet has the disadvantage that if the passphrase is retained but the software & algorithm is lost then the addresses can never be recreated and all value lost.\nThat risk could be partially mitigated by keeping multiple copies of the wallet generation software both online and offline.  As a final backup the algorithm (and optionally  the passphrase) could be etched or cut into a thin sheet of aluminum (8.5\" x 11\" to simplify storage) using a laser cutter.  This would provide a time resistant disaster recovery method.  Using a sheet with dimensions of standard documents would allow it to be easily stored in a safe or safety deposit box.  This task is simplified because many cryptographic algorithms can be expressed using diagrams which reduces the amount of space necessary to express the algorithm.\nFor example SHA-256 (and SHA-512) can be partially expressed by this diagram:\n\nTo completely express the algorithm you also need to record each variable, the number of rounds, and the meaning of the symbol operators.\n", "exchanges - Why have prices fallen so drastically around October 2011?": "\nOne thing a lot of people fail to notice is the decreasing volume at the exchanges. If we look at the USD volume - and not at the bitcoin volume, which is misleading because bitcoins are now worth much less - we can see a spike in June and a decrease afterwards:\n\nThe news reports in June attracted lots of people who were curious about bitcoin. A part of these people left and the market size is now coming back to April/May levels. As a consequence, there is much less money being traded. However, we still have 5 new coins being produced every minute and lots of miners who want their invested money back.\nThe current price is a natural consequence of high supply and low demand.\n", "traceability - Can Bitcoin help charitable organisations ensure payments go to the right people?": "\nBy itself Bitcoin doesn't provide a complete solution however it could be used in conjunction with a trusted non-governmental entity to track charitable flows.  The issue is that while Bitcoin provides public and irrefutable evidence of monetary transfers it doesn't (and shouldn't) provide information on who owns those accounts.  It would require some mechanism of registering ownership of accounts similar to how an SSL cert is used to not just encrypt traffic but to also validate ownership of the site.\nUsing a system of cert authorities and public key encryption one could create \"public and verified\" addresses.  This has potential uses beyond just Charities.  The Bitcoin network itself should always remain psuedo anonymous.  It was designed to have properties of digital cash and trying to force verified identities into the network would be a mistake.\nA better solution would be building a framrwork that allows entities to volentarily have their identitiy validated.  They could then be issued a digital cert which would enable them to sign an address making it public & verified.\nMany businesses would benefit by linking an anonymous Bitcoin address to their real world identity to improve the trust and confidence of customers and suppliers. Remember Bitcoin is irrevocable so this present unique challenges if it were ever to become mainstream.  If a major store (Amazon for example) decided to accept bitcoin and was hacked, the attacker could replace Amazon payment address(es) with their own. Unsuspecting customers would be paying the wrong entity and would have method of reversing those fraudulent transactions. The larger the sales volume the more tempting the target.  In the Amazon example even if the attack was detected within minutes a sizeable amount of funds could be diverted. \nTo protect against this thread an entity could use a \"public & verified\" payment address.  Wallets & browsers could implement changes to warn users that an address in unverified, similar to how browsers use SSL today to provide warnings or assurances to users.\n", "user base - What are some of the things that would make bitcoin better and more accepted?": "\nAdoption is limited because of a chicken and egg program. People don't accept bitcoins because nobody else accepts bitcoins.\nNormally, the way you solve a chicken and egg problem is to get the cycle going by finding a niche in which the technology works so much better than other available solutions that adoption is possible even without a critical mass -- that is, by finding a killer app. The problem with bitcoin getting started through these kinds of mechanisms is the lack of stability in the price of bitcoin relative to national currencies.\nFor a while, speculation and investment were the killer apps that were driving bitcoin. The problem is that if this is the driving force behind a commodity, there will inevitably be bubbles and crashes. These drive down the use of bitcoin as a medium of exchange. The adoption cycle only works if the killer app drives widespread adoption, it fails if the killer app works against it.\nSo that's where we're stuck. But there are a lot of really smart people working on the problem. They're working on getting ATM machines to sell bitcoins, adding the ability to accept bitcoins into widespread point-of-sale systems, solving the problem of having to wait for confirmations, and so on.\n", "marketing - Should there be a Bitcoin equivalent of Tux?": "\nAllie the Apaca !\nhttp://www.livanti-alpacas.com/images/photos/alpaca_horizon.jpg\nA lot of the early bitcoin coverage mentioned the fact that you buy alpaca socks so I think the alpaca should be the bitcoin mascot. Obvious names are Al and Allie. I think Allie is cuter. \n", "Can't recover MtGox password": "\nMtGox support is available on https://support.mtgox.com, by email (support AT mtgox.com) and on IRC freenode server channel #mtgox.\nYou could try to check your spam folder if you are using a bad webmail provider or bad antispam.\n", "adoption - Any statistics on usage of Bitcoins by region or country?": "\nWebGL Globe shows bitcoin nodes seen during last 48 hours. Install Chrome Web browser if you have problem rendering WebGL. \nGoogle Trends has countries, cities and languages sorted by number of bitcoin related search queries.\n", "scalability - Capabilities of Bitcoins and their place in the future": "\nWe are a long way away from VISA scale transaction volume (>4K transactions per second) however there are some methods for Bitcoin to deal with the data on that scale\nRemote blockchain. In the current implementation of the mainline client, every client downloads and store a complete copy of the blockchain.  This is the best way to boostsrap the bitcoin network while transaction volume is low.  However at peak transaction volume most users will have no interest in downloading and storing terrabytes worth of data.  In the future if a client trusts an online entity they could query transactions against that entity rahter than store the block chain locally.  Obivously this requires a level of trust so it would be important to choose a trustworth \"block chain provider\" however it has the advantage of each client only needing to query transactions they are interested in (for example client could ask for all transactions involving a particular address (to get current balance) or number of confirms for a particular transactions (to update the confirmation status). Before someone cries \"centralization\" there would be no official blockchain provider but instead numerous independent entities offering this as a service (either paid or free). If someone is paranoid they could use/build a client which queries two different block chain providers to ensure they return same data.  Lastly if a person is sufficiently concerned about security they could trust no-one and compute the entire blockchain themselves.\nGPU Acceleration of transaction verification.\nGPU are currently used to find a hash to sign the block as this is cryptographically intensive and any performance increase pays huge dividends.  This isn't true for transaction verification as transaction volume is low.  As a result the bitcoind uses non-openCL CPU calculations to verify transactions.  If necessary an Open-CL GPU powered client would be able to verify significantly higher transaction volume.\nA rough estimation of future computation power required.  The paper linked by author indicates it would take a modern CPU can only handle ~100 tps (transactions per second). For integer math (like used in cryptographic hashing) a high end GPU is (as of writing) roughly 20x as powerful as a high end CPU. That allows in the ballpark of ~2000 peak tps per GPU.  Furthermore even with say 50% annual transaction volume growth we are two decades away from VISA level transaction volume.  Moore's law would indicate that average CPU/GPU in 20 years would be roughly 1000x as powerful.  That would be on the range of 100,000 tps per CPU and 2 mil tps per GPU in 20 years. Even if growth in computational power slows as long as it isn't slower than the growth in transaction volume it will ensure that all transactions can be verified by off the shelf hardware.\nActual transaction volumes.\nBitcoin is digital cash.  Many people today chose not to use cash for online and offline transactions favoring instead indirect payment methods (check, debit card, credit card, gift card, etc).  It is probable that higher level payments systems built on top of bitcoin network will emerge.  Users of these systems should cause significantly lower transaction volume.  For an example lets look at how VISA transactions work.  An individual may have 200 VISA transactions in a month but only makes a single payment to the card issuer (a 200:1 multiplier between purchases and actual currency movement).  Likewise a company may have a thousands of VISA transactions in a day but recives that as a single currency payment (usually ACH).  Another thing to consider is \"VISA level\" is more an end game scenario.  A more likely interim goal (say over next 2 decades) would be a \"PayPal level transaction volume\" which despite being a modest 100 tps (vs VISA >4K tps) would indicate Bitcoin is a massive success.\n", "How does the Bitcoin client encrypt the wallet.dat file?": "\nA detailed explanation can be found in the application's README: https://github.com/bitcoin/bitcoin/blob/6b8a5ab622e5c9386c872036646bf94da983b190/doc/README\nIn short:\n\nThe passphrase is converted to a key/iv pair using EVP, with a dynamic number of rounds\nThis key/iv pair is used to encrypt a randomly-generated master key, using AES-256-CBC\nThe secret part of wallet keys are then encrypted using that master key, again with AES-256-CBC\n\n", "Does any open source software exist for an e-wallet service?": "\nIt seems like the project was abandoned, but you might be able to recycle the code.\n\nDuring the last days I started hacking together a little online-wallet\n  and thought some of you might be interested.\nIt is based on the bitcoind RPC API for handling accounts and adds\n  custom labels stored in database.\nIf you want to send coins to a labeled address, just start typing the\n  label and it will autocomplete.\nIt is a Ruby/Rails application released under the MIT license, so you\n  can setup your own online wallet or even run it locally and use it\n  instead of the default client UI.\nNote that this is just a very early development version which still\n  needs a lot of work.\nProject/Source: http://open.sourceagency.org/projects/webtc Demo\n  (testnet): http://webtc.interesthings.de (There is a demo Account:\n  foo@bar.baz / password, but feel free to create new accounts, the\n  email doesn't have to exist)\nFeedback, bug reports, patches and donations welcome\n\nbitcointalk.org\n", "alternatives - Different ways to encode Bitcoin Address": "\nWhat you're talking about is actually two separate concepts. A \"Bitcoin Address\" is not a keypair, it does not have public and private components. The Address is derived from the public portion of the key pair and is almost always expressed as a Base58 string.\nFirstbits is merely a way to look up addresses. When you enter someone's \"firstbits\" address at firstbits.com, firstbits converts what you've entered to all lowercase characters and then looks through the block chain to find the first (chronological) occurrence of an address beginning with that string. You can't send coins to my firstbits address of \"1enmaku\" for example, but plugging that into the search box will produce an address \"1EnmakuaAN1WgAK2tUFvmsYcKc3NvH3NML\" which is valid.\nThe others mentioned are all methods of expressing the private key. An address represents a receiving address, but the private key represents the right to claim coins at that address. A private key is a 256-bit number which can be represented in many ways. The most common way is WIF or \"wallet import format\" which is a 51-character string in Base58 which always begins with the number 5 and has some built-in error checking.\nThe mini private key format is also seeing some widespread use such as in Casascius' physical bitcoins. Mini private key uses as few as 22 characters of the same Base58 encoding as Bitcoin standard addresses. There are some criticisms that the fewer number of characters represents a smaller number of bits, making these keys vulnerable to brute force attack, but even the smallest of them still represent a substantial amount of entropy.\n", "development - Which of the open-source Bitcoin clients has the most thoroughly commented source code?": "\nI remembered that I had seen answer to that question somewhere, after searching a bit I found it here.\n\nCheck out BitCoinJ (a from scratch bitcoin implementation in Java) and\nBitCoinSharp (a C# port of BitCoinJ). They are not full\nimplementations yet, but they are very far along and can do most of\nthe tasks of a bitcoin client.\nNo matter what language you plan to create your implementation in,\nlooking at these is very valuable because they are very thoroughly\ncommented and much easier to understand than the official C++ client.\n\nweird, because it's the answer to your other question.\n", "How to know there is a new transaction?": "\nFirst: to get transactions from all accounts, use the \"*\" wildcard.\nSecond: Bitcoin version 0.5 includes a new listsinceblock RPC command that makes polling for new transactions more efficient.\nI wrote a monitorreceived patch that does an HTTP POST whenever a new block or transaction-to-or-from-your-wallet was received, but I haven't pulled it into mainline bitcoin because it would make it VERY easy for websites to do the wrong thing and treat 0-confirmation transactions as \"paid\" and because it isn't clear what (if anything) to do when block chain re-organizations happen or transactions are orphaned (double-spent).\n", "Can multiple transactions transferring the same bitcoin be done in one block?": "\nYes, this is possible. This is seen happening today in MtGox's green address implementation. The two transactions are not guaranteed to be included in the same block, because the second transaction has a lower priority for miners to include it; but it's possible, and seems to happen in a lot of cases.\nQuoting from MagicalTux:\n\nActually if you look at : http://blockexplorer.com/address/1LNWw6yCxkUmkhArb2Nf2MPw6vG7u5WG7q\nLook at transactions 597d00408b... and 557c87f205....\n597d00408b... is \"A to B\"\n  557c87f205... is \"B to C\"\nBoth happened in the same block, which is the expected behaviour.\nPrevious tests did not always end in the same block, so I believe some miners may consider the second transaction lower priority as it involves not yet confirmed coins. In the case of those two transactions it was as fast as a normal transaction, but it cannot be guaranteed in 100% of the cases.\nIf we look at the previous transactions we can see it was sometimes coming out with a difference of 1 block, or even more. If pools could put priority on green addresses it'd (mostly) solve this issue.\n\nYou can also pay a higher fee on the second transaction in order to compensate for the lower priority.\n", "address - What are Green Addresses?": "\nThe green address is a third party trust trick and can help resolve most problems related to the need to wait for confirmations (slow transactions).\nTo make it very simple :\nService A publishes its green address, service B decides to trust service A.\nWhen someone send bitcoins from service A to service B, he will send from the service A green address.\nThe service B knows he can trust the service A, he knows A won't double spend, so B can credit the sent bitcoins immediately, without waiting for confirmations ( or waiting for just one confirmation, which is probably wiser ).\nThis is mostly useful for transferring bitcoins b2b (business to business), typically it would help making arbitrage easier and faster between 2 bitcoin exchanges, if both decide to trust each other's green address.\nThis can also be useful to allow for POS (Point of sales) with instant transactions if the POS can trust the green address of your bitcoin bank (or online wallet)\nAs an individual, I could also negotiate with my local supermarket to trust my green address (providing them my IRL address, ID number and more if needed).  Once they decide to trust my green address, I can pay immediately with bitcoins at my local supermarket (they trust me and won't need to wait for confirmations).\nThe green address is just a bitcoin address, but it's a \"from\" address people decide to trust and accept transactions from this address without waiting for confirmations.\nPossible drawbacks are :\n\nLess anonymity, or even no anonimity at all ( always using the same public from address), which is not a problem for a business, and its even great for public accounting/auditing ( yes bitcoin can also help fighting corruption ! )\n\nBlockchain spam (more transactions for the bitcoin network), which is a good thing if the blockchain can scale.\n\nEncourages people to use trusted wallet providers (some kind of bitcoin banks). Here too, this have good and bad sides.\n\nIt's not enough to create a green address, you still need to be trusted so that your green address is useful\n\nFor now, afaik, only mtgox.com, btcpak.com and instawallet.org support the idea.  To be useful, green address system needs to be widely adopted by bitcoin pools, exchanges, online wallets, businesses, etc.\nSee also https://en.bitcoin.it/wiki/Green_address\n( edit 11 years ago, october 2020 , this reference is no more very relevant, some people completely rewrote the wiki page years later,for obscure reasons . . . they even replaced the first line with a blockstream ad . . . but you can still go and check the earliest versions of this page, around 2011-2012 , by clicking the \"history\" tab of the wiki page )\n\n\n", "exchanges - Trading between different cryptocoins": "\nBTC-E currently offers trading pairs of BTC/USD, BTC/RUB, SC/BTC, SC/USD, GG/BTC, TBX/BTC, FBX/BTC, LTC/BTC, LTC/USD, RUC/BTC, RUC/USD, RUC/RUB, NMC/BTC and RUB/USD\n", "development - What is the easiest way to programmatically obtain the current USD-BTC spot price?": "\nYou could use the JSON encoded ticker data available from MtGox at: https://mtgox.com/api/0/data/ticker.php\nJust use whatever your language's equivalent to cURL or wGet is and parse as appropriate.\n", "transactions - What would happen if a portion of the Bitcoin network was separated from the rest of the network?": "\nIt wouldn't be a fork as both chains would only exists as the longest chain until the network was reconnected.  As soon as Armenia was reconnected to the internet every client would via block exchange determine there is a longer block and switch to that chain.  The orphaned chain would simply be discarded by all clients and eventually the entire network would be \"re-unified\" under the single longest chain.\nIn a situation like that it would be difficult but not impossible to pull off a double spend.  An attacker would need to have wallets in both sub-networks so coins could be spent in both sub-networks during the \"isolation\".   A precaution to take when isolated from \"main internet\" is to not process any transactions until the sub-networks have rejoined.  \nFor example a store could accept coins, and prepare orders but not ship them until rejoining the main network and ensuring no double-spend occurred.  If a double-spend had occurred the merchant would become aware once the larger network began processing the orphaned transactions and they were reported as invalid by the network.  If no double spend occurred those transactions would eventually be included in longest blockchain and become confirmed.\nFor those in the \"main network\" there is no risk from a double spend because their chain will remain longest and will survive while overwriting transactions from the smaller sub-network once the networks are rejoined.\n", "transactions - Send bitcoins using just a pub and private key": "\nEDIT: I recalled that Wiki: Sweepprivkey proposal, is actually exactly what you are asking for, bitcointalk.org: Proposed RPC command: sweepprivkey. The latest news about the work in progress from jarpiain, dated October 15.\n\nThis is functional in the sense that I tested it succesfully on the\n  real block chain. It's not yet robust enough for serious use. In\n  particular, there are race conditions for accessing addrblock.dat.\nI'm going to implement some of the sweepprivkey options and copy the\n  transaction fee logic from CWallet::CreateTransaction() this weekend\n  (I think it's best to keep the fee setting in one place, the -paytxfee\n  option).\n\nMtGox has the option to fund account with private key, and it understands several different formats, not only the standart one, e.g. it accepts mini format used by Casascius physical coins, MtGox adds redeemer for private keys including Casascius Physical Bitcoins\nBut if you want to send the transaction from your own computer then you need a software that would create a proper transaction using the public and private key, bitcoin or bitcoind can't do that without importing keys into wallet first, importing could be done with Pywallet or hopefully soon-to-be-official wallet export/import bitcoin patch, but make sure to backup your wallet first.\n", "Does the amount of the transaction fee affect the priority of a transaction?": "\nCurrently no.  Any \"required fees\" are enforced only by the client not the network or protocol.\nIt is up to each individual miners which transactions to include in a block.  If forced to make a choice a miner would choose a paying transaction over a nonpaying one however current transaction volume is so low that all transactions (paying and otherwise) can fit into next block with significant room to spare.  If you used a modified client with no fees most miners would simply include your fee transactions.  Some pools (Eligius) will exclude free transactions that \"should\" (based on mainline client rules) have a fee.\nAs for what fee is the minimum to guarantee access to the next block.  Most miners and mining pools prioritize transactions by fees and then priority.  If you include any fee (even 1 satoshi) even if it is less than what is required by mainline client it likely will be included in the next block. Paying more is likely of negligible value as paying anything almost guarantees access to the next block.  The block size limit isn't much of a capacity constraint to warrant higher fees (and move further up transaction list ordering).  I can't see any miner excluding a valid paying transaction from any block at current transaction volume. \nThe current fee structure (or lack thereof) brings up some scalability issues when block reward aproaches zero.  The development team has indicated an improved fee structure is something planned for later releases.  It is an issue which will need to be addresses as left as it is now one could simply include 1 satoshi fee with every transaction and it would drive block fees down to ~ (transactions per second) / 166,667 BTC per block.  Even at high volume of say 1,000 tps it would be a tiny number and thus network hashing power would fall to a tiny fraction of current hashing power leaving the network vulnerable.\n", "How can I participate in a mining pool that is mining Litecoins?": "\nLitecoin doesn't use the same algorithm as Bitcoin. Bitcoin hashes are SHA-256 based.\nLitecoin hashes are Scrypt based. You must use a miner capable of understanding scrypt.  Early in Litecoin history there were no GPU capable miners as the performance of GPU relative to CPU was very poor.  In time GPU performance increased and today most mining software supports both SHA-256 and Scrypt.  Part of the reason that GPU mining is possible is that the Scrypt parameters used in Litecoin (and other clones) have been selected to reduce the \"memory hardness\" of the algorithm.  The default parameters for scrypt are n=2^20, r=8, p=1.  The Scrypt used by Litecoin uses the parameters n=2^10, r=1, p=1 making it roughly 100x less memory hard and allowing GPUs to out perform CPUs while they are unable at n=2^20, r=8, p=1.\n", "blocksize - Bitcoin Block Size - What are the rules?": "\nThe current maximum block size is 1MB (but it could be increased in the future with a protocol change), there is no minimum size per se, but the block needs to have all its components to be valid (check Protocol Specification). Each block needs to have at least one transaction - one paying the miner the reward for mining the block.\n", "economic theory - What are the obstacles to pegging the value of bitcoin to an established stable currency?": "\nYou could fix the minimal value of Bitcoin if you had some money and you wouldstate: \"I have X$, I will buy each and every Bitcoin you offer me at the rate of X/2100000$\". The only problem is that people need to trust you and you have to have enough money. So, if you get en established company (for example, Google) to secure the funds you can fix the minimum price of Bitcoins at any arbitrary rate.\nFixing the maximum price, however, is impossible, as you can't generate Bitcoins at a whim to sell to anyone offering you money. As with anything with limited supply, the sky is the limit.\n", "encryption - How to Call JSON-RPC SendToAddress when the Wallet is Encrypted?": "\nNot in the current code. The way it works now, you have to make two RPC calls -- one to unlock the wallet for a period of time (walletpassphrase) and one to do the transaction (sendtoaddress). You can follow up with a command to lock the wallet immediately, if desired (walletlock).\n  walletpassphrase <passphrase> <timeout>\n  Stores the wallet decryption key in memory for <timeout> seconds.\n\n  walletlock\n  Removes the wallet encryption key from memory, locking the wallet.\n  After calling this method, you will need to call walletpassphrase again\n  before being able to call any methods which require the wallet to be unlocked.\n\n", "ecommerce - Where can I sell things for bitcoins?": "\nYou can find an extensive list on page Trade at Bitcoin Wiki.\nA short list of some auction sites that use Bitcoins:\n\nBid Bitcoins\nBidding Pond\nBitmit\n\nIf you want to sell digital files per download, go here: http://bitcoinservice.co.uk/ .\nAnd as with anything, you can just post on an online classified ad websites, such as craigslist (thanks Thilo for the suggestion).\n", "Why does the standard Bitcoin client not display the balance per address?": "\nThe balance of an address is almost always useless, since money is sent from random addresses.\n", "nodes - Internet speed required to run the Bitcoin client": "\nInternet connection speed has to be fast enough to download new blocks as they get mined. With current transaction rate it requires 1-2 Kb/s. But faster connection would help to reduce chance of double spend attack if you run retail business and accept transactions with 0 confirmations.\n", "hash - How can I measure the total hashing power of the Bitcoin network?": "\nNetwork hashrate calculated using formula: H ~= h / t , where t is time that took to find X number of blocks and h is approximate number of hashes it should have taken to solve X number of blocks, h = X * (D * 2**256 / (0xffff * 2**208)) Wiki:Difficulty\nBitcoin network hashrate stats available at bitcoinwatch.com and bitcoincharts.com .\n", "Mining pool hardware and bandwidth requirements": "\n\na good dedicated server will be enough to run a pool like eligius\nyou will need to ln -s /dev/null debug.log ( or logrotate the file ) if you dont want to run out of space\nyou could use a good anti-ddos protection if your pool becomes popular ( most pools and bitcoin businesses are regularly ddosed .\nconcerning server load and bandwidth usage, you could be interested in reading this ( very technical ) log extract , setting this parameter ( difficulty rewrite ) can help to reduce load ( receiving more or less miners requests / second ) and / or make your pool more or less cpuminer friendly\n\n", "blocksize - Does block size effect Miner's Hashing speed?": "\nOnly block header gets hashed, and it has fixed size, so the total block size doesn't matter.\nFrom Wiki:Block hashing algorithm\n\nThe body of the block contains the transactions. These are hashed only\n  indirectly through the Merkle root. Because transactions aren't hashed\n  directly, hashing a block with 1 transaction takes exactly the same\n  amount of effort as hashing a block with 10,000 transactions.\n\n", "hash - Nonce size - Will it always be big enough?": "\nThe difficulty is already to the point where it requires over a quadrillion hashes to solve a block. 2^32 is only 4 billion. Fewer than one in a billion times will there be any nonce that makes the block valid.\nA miner simply has to try every possible nonce on a different block. He can vary the coinbase, the transaction set, and/or the block timestamp. Any change to any of these things results in a new chance for there to exist a valid nonce.\nOften the best choice is to bump the timestamp, a practice called NTime rolling.\nThe block timestamp doesn't have to be exact anyway, so you can back the timestamp back, say, ten seconds before you start mining and then bump it up 20 times before giving up and getting a new block. At worst, your block timestamp will be off by a dozen seconds or so -- nobody cares about that.\nAfter that, you probably want to get a new block because there might be some new transactions to include -- this not only improves the efficiency of the network as a whole but reduces the chances you'll miss out on a transaction fee.\n", "transactions - Listtransactions in v. 0.4.0 - different behavior?": "\nYes, it was by design.  The old behaviour was accidental and was causing a crash in some situations.\nHere are the full details:\nIn version 0.3.24, the 'from' parameter was simply passed into std::advance() to skip the required number of transactions.  If the value given was bigger than the number of available transactions, it would wrap around, due to how std::advance() works.  I'm not clear on whether advance() is defined to work like that, or if it's dependent on the particular implementation in the library your version was linked against.\nAnyway, in version 0.4, the advance() function call was made conditional:\nif (txByTime.size() > nFrom) std::advance(it, nFrom);\n\nmeaning to only skip some transactions if the number of transactions available is greater than the number you're trying to skip.\nThe change was made by Gavin Andresen on August 12, 2011 in response to a bug report\n", "transactions - Given a private key, how do you get a public address": "\nIn ECDSA public keys are usually generated from a random private key. The simple answer then would be, that instead of using a random private key, you use the given private key and it should generate the public key. After that, perform the steps listed in the Wiki to find out the conventional notation for the public key you can use anywhere.\n", "project - Bitcoin promotional campaigns": "\nThere has been a bitcoin billboard on the Lawrence Expressway in Silicon Valley, California, paid for by memmorydealers.com.\n\nAlso the same company paid for a radio advertisement across a number of US radio stations I believe. \n", "business - Is there a list of existing businesses that have started to accept Bitcoin?": "\nI created this page on the Bitcoin wiki, please add to it.\n(BTW, the wiki is extremely slow for the last day or so)\n", "terminology - When and who coined the term \"mining\"?": "\nFrom Satoshi's paper (my emphasis):\n\nBy convention, the first transaction in a block is a special\n  transaction that starts a new coin owned by the creator of the block. \n  This adds an incentive for nodes to support the network, and provides\n  a way to initially distribute coins into circulation, since there is\n  no central authority to issue them. The steady addition of a constant\n  of amount of new coins is analogous to gold miners expending resources\n  to add gold to circulation.  In our case, it is CPU time and\n  electricity that is expended.\n\nI don't know of any other examples where the word has been used in a similar manner.\n", "protocol - Bitcoin client communication time constraints": "\nBitcoin client decides that the other client is not responding when it receives report from operation system that the connection is dead.\nBitcoin relies on OS implementation of TCP to send and receive messages. For example, by default, when connection was already established and Round Trip Time is known, Windows will try to resend data segment five times doubling wait time after each resend before reporting connection as dead. So the total wait time is: \"Round Trip Time\" * 2^(5-1) .\nP.S. Timeouts are different for each type of message, e.g. total connection initiation timeout equals to 6 seconds .\nTCP/IP Configuration Parameters\n", "blockchain - What are checkpoints?": "\nThe checkpoints are hard coded into the standard client. The concept is, that the standard client will accept all transactions up to the checkpoint as valid and irreversible. If anyone tries to fork the blockchain starting from a block before the checkpoint, the client will not accept the fork. This makes those blocks \"set in stone\".\n", "promotion - What's the best way to ask a merchant to accept Bitcoin?": "\nProbably you should approach the merchant with a group of friends, and each one of you should separately ask him over the span of a couple days a question like: \"I would like to buy X from you, but I would like to pay for it in Bitcoins. I understand that this is sort of payment gives you more work, so I am willing to pay Y% more. The current exchange rate at https://mtgox.com is Z USD/BTC and going up, so will you consider selling me X for Q amount of Bitcoins?\" If the merchant is small, he probably will be okay with accepting Bitcoins for a moderate transaction, you can even offer waiting a bit until the Bitcoin exchange goes through (or say, a down-payment, so the merchant will know how this thing works before committing to anything). You would probably need to follow up a bit on that inquiry explaining some things about Bitcoins, but not including all the details on how the coins work probably works in your benefit (your email doesn't look like soliciting, but as a more genuine inquiry).\nA bigger merchant will probably say no (unless they are tech-savvy), but after a couple people would ask about payment in Bitcoins, the lost opportunity costs would start adding up.\nGenerally, you can try convincing merchants with some benefits of Bitcoin technology, but probably nothing works better than money incentives and business opportunities.\n(note: method not tested)\n", "Testnet fallback nodes": "\nBlockexplorer.com runs a testnet node all the time.\n", "protocol - Can a Bitcoin node send messages to a program on the same machine?": "\nYes and no.  Don't use 8332 for your custom client's communication port, that is the default rpcport.\nYou can run an arbitrary number of bitcoind instances on your machine, as long as they are given different -port= and -rpcport= arguments, and they can all communicate with each other (using -addnode=127.0.0.1:...port... or -connect=127.0.0.1:...port... ).\n", "transactions - Are private keys published to the blockchain after spending coins from a wallet?": "\nThe answer is no. Your private key is never transmitted to the network for any reason.  You may wonder how the network can validate that a transaction is \"yours\".\nThis is possible because Bitcoin uses Public Key Cryptography (also know as asymetric cryptopgraphy).\n\nYour addresses consist of a pair of keys which are mathematically linked.  It is easy to determine the public key from the private key but impossible to determine the private key from the public key.  It is more accurate to say it is computationally infeasible to determine the private key from the public key unless there is some cryptographic flaw.\nYour public key is included in the transaction (along with destination and amount).  The entire transaction is then signed with your private key.  The signature is unique based on your private key and the contents of the transaction.  Someone can't re-use a signature because it is only valid for a unique transaction.\nWhen the network detects a transaction it will verify it by comparing the signature and public key to the transaction.  While an attacker knows the public key he would need to know the private key to generate a valid signature.\nForgery/counterfiting is prevented because it is computationally infeasible (millions of years) to determine the correct signature without the private key.  It is not possible for an attacker to change part of the transaction (like changing amount in fiat check fraud) as that would require  different signature to be valid. The network can safely assume that if the signature is valid it must have been signed by the owner (presuambly with owners consent) and thus the transaction is valid. \nThis is why you must keep your wallet.dat secure.  If someone gains access to your private keys they can sign transactions as you.  Once an attacker can sign any transaction as you the best transaction is to transfer of all funds into account they control.\n", "client - Confirmations on sent/receive transactions, still have 0 balance": "\nIt is possible if the client crashed it didn't finish processing the block containing your transaction (due to bad timing) and now that it is past that block doesn't go back to \"double check\".\nhttps://en.bitcoin.it/wiki/Running_Bitcoin\nThere is a command line argument -rescan which forces the client to recheck every block for transactions related to the current wallet. In windows it would be done from Command prompt \"bitcoin -rescan\".  I assume OS X has some sort of commandline option.\nAlternatively you can stop the client.  Make a backup of your wallet.dat.  Delete all the files from bitcoin configuration folder other than wallet.dat file.  Restart the client.  It should show 0 blocks and not have the \"bad transaction\".  The client will download the blockchain. This could take an hour or more.  Once block chain is fully downloaded the transaction should appear and balance updated.  \n", "What is the maximum size of a transaction?": "\nIf there is a max transaction size it is much higher than 100 bytes. Not sure what that snippet is refering to but the average transaction is closer to ~300 bytes looking at the average # of transactions and block size for last 1000 blocks.\nWhat limits transaction size is cost.  As transaction size (of all transactions awaiting next block) increases the min required fee increases non-linearly.  \n\n0.01 BTC fee per kilobyte of transaction, but: \n  If the blocksize (size of all transactions currently waiting to be included in a block) is less than 27 kB, transactions are free. \n  If the blocksize is more than 250 kB, transactions get increasingly more expensive as the blocksize approaches the limit of 500 kB. Sending a transaction when the blocksize is 400 kB will cost 5 times the normal amount; sending when it's 499 kB will cost 500x, etc. \n\nhttps://en.bitcoin.it/wiki/Transaction_fees \nSo you could make a 500KB transaction but the required minimum fee would be 5BTC.  The developers have indicated they intend to change transaction fee rules in the future but given block space is a valuable commodity any new rules are likely to be constructed to encourage (via larger fees) smaller transaction sizes.\n", "attack - What is the maximum number of signature check operations a transaction script can request?": "\nThe error for nonstandard transaction is simply because they are not yet supported by mainline client.  Remember as writing Bitcoin is only version 0.4 so significat portions of the protocol have not been implemented yet.  \nYou will notice the error being thrown is \"non standard transaction\" which is indicating the client doesn't have support for creating or validating non-standard transactions.\nStandard transactions are those with scriptPubKey of:\n\n OP_CHECKSIG  - transfer to IP Address OP_DUP OP_HASH160\n OP_EQUALVERIFY OP_CHECKSIG - transfer to Bitcoin Address\n(hash of public key)\n\nThe only other transaction type supported is generation transaction which doesn't have a scriptPubKey to identify it.  It is easily identified because every valid block must always have one and only one coinbase transaction.\nContracts are non-standard transactions and not supported by the client yet.  The code snippet is simply to prevent client from attempting to process, broacast or validate non-standard transactions.\n", "trading - How does one use Bitcoin OTC?": "\nAs the founder of bitcoin-otc, I think I'll be able to help you out here. :)\nOTC uses gpg (the free software implementation of the PGP protocol) for authentication. So your first step is to register on OTC with your gpg key. The OTC wiki contains detailed instructions on this page: http://wiki.bitcoin-otc.com/wiki/GPG_authentication\nThe rating system is a web of trust links between users. There is more documentation on the rating system here: http://wiki.bitcoin-otc.com/wiki/OTC_Rating_System . I suggest that you pay particular attention to the 'relying on the rating' section.\nTrades happen p2p - the OTC system is only an order aggregator as far as trading is concerned. Once orders are placed (which is not even a requirement, you can just hang out on the IRC channel and set up trades without ever using the order book), it is up to the individuals to talk to each other and set up the trade details.\nFrom the order book view, you can see a person's ratings by clicking on his/her username.\nThe bitcoin-otc system is not a for-profit entity, nor a profitable one. There are no fees charged by the system for users to register and place orders. All order execution happens directly between people, the otc system does not intermediate either side of the transaction.\nOverall, there is plenty of documentation on the OTC website and wiki; I invite you to give it a read for further details. A good starting point would be the main user guide page: http://wiki.bitcoin-otc.com/wiki/Using_bitcoin-otc\n", "client - How to build a wallet in my computer?": "\nIf you want to get your first wallet, just install the Bitcoin client and run it.\nIf you want to have a new wallet, backup your old wallet.dat and run the Bitcoin client again.\nIf you want to build a custom wallet with tailored structure and so forth, I don't think you're a non-geek user.\n", "development - How can I generate a large number of Bitcoin addresses?": "\nIf you want to generate a lot of keys in the wallet.dat, use command line parameter:\n-keypool=<n>       Set key pool size to <n> (default: 100)\n\nThen you can extract the results with Pywallet.\nIf you want to make them separate, you will have to use a cryptography library that supports secp256k1 ECDSA, like the Bouncy Castle. Simply generate private keys, use the library to generate public keys from them, and then convert them to classic Bitcoin address using this algorithm (requires libraries that support SHA256 and RIPEMD-160).\n", "mac - Where can I download the Litecoin binary for OSX?": "\nAsked it in the forums, and here's the response:\nhttps://bitcointalk.org/index.php?PHPSESSID=039d3d0433adcf037196613c03d139e1&topic=47417.msg605132#msg605132\nEdit - direct link to github downloads\n", "litecoin - Can I view price graphs for alternative currencies, longer than 12 hours?": "\nat http://www.cryptocoincharts.info you see long time chart for all alternative crytpo currencies\n", "What are some good online Bitcoin wallets based on client-side security?": "\nYes there is such a service which provides exactly what your looking for it is called StrongCoin\n", "Does the Bitcoin client generate bitcoins automatically?": "\nNot really, there are a few issues you have to know about:\n\nIn order to generate Bitcoins, you have to be explicitly mining them. The standard client does not mine coins, it stores the keys you use to access them. You need to run a so called miner (like the GUIMiner) and you probably want to join a mining pool (like, Slush's Pool).\nEven if you are mining Bitcoins, you probably won't make too many coins unless you have some good hardware. You should check out what hashing speed your hardware has and then punch the hash speed in a dedicated calculator.\nIf you want to mine coins by yourself (without pool), the chances of getting coins are pretty small, again, check the calculator and look for \"Time to generate one block\".\n\nSo in short, you need specialised software and hardware to mine coins, but it's not hard to get started.\n", "development - How to generate a valid bitcoin address for destroying bitcoins?": "\nStart with an invalid public key\nBitcoin addresses are the pubkeyhash (not pubkey) plus version and checksum information, encoded in base 58.\nBitcoin address = version + RIPEMD-160(SHA-256( Public Key )) + checksum\n\nThe steps for converting a public key to an address can be found here:\nhttps://en.bitcoin.it/wiki/Address\nSince the address uses the pubkeyhash not the actual pubkey we can exploit this by hashing an invalid pubkey (one which can't possibly exist) and thus produce a valid address from an invalid pubkey.\nSo to start we find an invalid public key.  All valid public keys begin with 0x04 if uncompressed and 0x02 or 0x03 if compressed.  A pubkey beginning with any other value is undefined and thus there is no possible signature that can be created to satisfy that key requirement.  Since spending coins requires signing the transaction with the correct private key, an address which has no known private key is unspendable.  By using a public key which is known to not have a private key others can confirm that no private key exists. \nA valid Bitcoin public key (not address):\n\n04678afdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\n\nAn invalid public key\n\n0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n\nThere are other ways to produce a known invalid public key.  ECDSA keys must be exactly 65 bytes if uncompressed or 33 bytes if compressed so a key with a different length will also be invalid.  For uncompressed keys the y value must be correctly produced from the x value.  The point must also lie on the curve.  It also can't be above the modulus for the curve.  So there are a lot of ways to produce provably invalid keys but it best to choose one which is obviously invalid.  This is probably the simplest obviously invalid public key.\n\n0x00\n\nThis public key is invalid for a number of reasons (not produced by private key multiplied by the generator, not located on the curve, not a valid point, but even simpler it doesn't have a valid prefix and is not the correct length).\nThe important thing is this isn't just some probably invalid key it is a provably invalid key.\nYou should test your invalid public key against the reference client to ensure the client reports it as invalid as well.  The validity of keys is a consensus issue so this will not change short of a hard fork.\nProduce a valid (but unspendable) address from your invalid public key\nYou may wonder why we want the address to be valid.  All clients should validate addresses given by users to avoid accidental loss of funds.  So an invalid address is also unspendable but most users will find it impossible to send funds to the address.  A P2PkH address is the pubkeyhash with version and checksum information encoded in base58.\nWhen you provide an address to a Bitcoin client it decodes the address back down to the 'raw' pubkeyhash.  So producing a valid address means starting with a valid pubkeyhash.  This isn't a problem because the hash of anything is a valid hash.  Clients don't know what pubkey is hashed to produce the pubkeyhash as the underlying pubkey is not provided and hashing functions are one way.\nThe Bitcoin network only verifies that an address is in the right form, length, and has the right checksum when \"validating it\".  Producing an address from a pubkey is beyond the scope of this question but there are utilities and the link above provides the steps.  The resulting pubkeyhash and encoded address will be seen as valid by the network and client but it requires a provably impossible private key to spend funds sent to that address.\nNow with just the address (and decoded pubkeyhash) a user can't verify that the underlying pubkey is invalid so you should publish the raw pubkey along with the address.  Users can recreate the address using any bitcoin client or tool and will produce the same address you provide.  Users now have a trustless way to verify that the coins indeed are unspendable.  Any coins sent to the address can never be spent and are effectively destroyed.\nHash collision\nTechnically it is possible but improbable for more than one public key to have the same Bitcoin address. This is called a hash collision.  If public key p1 and public key p2 both hash to the same address A then privates keys for either of these public keys can spend the funds.  However the likely of this happening is very low.  Unless RIPEMD hash algorithm is broken the probability of finding two public keys which generate the same hash (Bitcoin address) is 1 in 2^160 which is far beyond our computational power to locate.\nA few words on why you should use a 'Nothing Up My Sleeve' number:\nUsing a \"nothing up my sleeve number\" (such as a single zero, all zeroes, single repeating digit, sequential numbers, digits of pi, etc) is not required as any invalid public key is equally unspendable but it would improve public confidence that you haven't already found a collision (as improbable as that is).\nIf you just take a random invalid key like say:\n\n00000fdb0fe5548271967f1a67130b7105cd6a828e03909a67962e0ea1f61deb649f6bc3f4cef38c4f35504e51ec112de5c384df7ba0b8d578a4c702b6bf11d5f\n\nSome may question why you chose this specific key. The fear would be that you choose this key not randomly but because you have stumbled upon a collision between this key and a valid key.  There is no way to prove the key is random thus the fear will always remain.  Cryptographic functions (like RIPEMD or SHA-256) often use \"nothing up my sleeve values\" to provide security that a constant was not chosen to enable some cryptographic flaw or \"backdoor\" in the algorithm.  For example SHA-256 uses constants for the initial values of the block segments.  Technically these could be any random number but that would lead to concern that the 'random' number isn't actually random.  So SHA-256 uses first 32 bits of the fraction portion of the cube root of the first 8 prime numbers.  This allows verification when a pseudo random number is needed.  It is very unlikely there is some magical property between the fractional portion of the cube root of sequential prime numbers that undermines SHA-256.  \nhttp://en.wikipedia.org/wiki/Nothing_up_my_sleeve_number\nUpdate (03/31/2015)\nIt is easier to do this now by using an OP_RETURN (null data) output and it doesn't bloat the UTXO with outputs that can't be spent but the network is unaware they can't be spent.  Any funds sent to an output which contains OP_RETURN are provably unspendable and the network will drop the output from the UTXO.  The UTXO (unspent tx output set) is a critical resources which is necessary for validating new transactions and blocks so destroying/burning coins using UTXO is a more responsible use of this shared resource.\n", "client - Bitcoin initial communication diagram": "\nYou're pretty close, with the deviations being I think primarily in terminology.\nClient A listens for connections on port 8333. Listening is a server activity.\nClient A chooses an ephemeral port and opens a connection to the address of Client B on port 8333, on which Client B is listening. At the TCP level, there is a three-way handshake to establish the connection. Imagine this connection as a bi-directional pipe to and from which both clients can read and write.\nOnce established, Client A sends Version and Client B receives it. Client B sends Version and Client A receives it. Client A sends Verack and I think Client B also sends Verack, which is an acknowledgement of the version compatibility or receipt.\nThis is my understanding.\n", "What are the differences between Bitcoin and Litecoin?": "\nLitecoin is exactly like Bitcoin, but:\n\nThe hashing algorithm is CPU-friendly, meaning that having powerful GPU doesn't let you mine fast.\nThe difficulty of the blocks is set so they would be mined about every 2,5 minutes, instead of 10.\n\nOther differences are cosmetic, like aiming to generate more Litecoins than there will be Bitcoins, using different port, etc.\n", "security - Do no-fee transaction represent a greater risk if the product is delivered instantly?": "\nYou can check if a transaction includes a fee just by looking at its inputs and outputs (you can also access this information at blockexplorer.com).\nBut you are correct: accepting transactions with 0 confirmations is risky and there are other attacks besides the one you mentioned (the 51% attack and the Finney attack, for example).\nHere are a few options to defend against this:\n\nWait for more confirmations - this may not be desirable but it works\nAccept payments from an e-wallet/exchange like parker_vmg3 mentioned - some websites such as TradeHill or CampBX allow you to send bitcoins instantaneously between members\nUse green addresses - currently these are only available at MtGox and InstaWallet, but they might become more popular in the future\n\n", "security - Why was the target block time chosen to be 10 minutes?": "\n10 minute blocks is simply a compromise.\nShorter block time:\n\nPRO - Faster 1 confirmation time (to protect from 0-confirm double spend)\nPRO - Less payout variance for miners (less reliance on large pools)\nCON - Requires increased bandwidth (inter node communication)\nCON - More forks, longer forks, and longer re-org time\nCON - A greater portion of the raw hashpower is wasted, resulting in lower effective security.\n\nWith a longer block interval target of longer than 10 minutes, the pros and cons would be reversed.\nThe major benefit of a shorter block time is the reduced 1 confirm time.  While a quicker block's 1 confirm transaction has less strength than a longer block's 1 confirm transaction it is still better than any block's 0 confirm transaction.  \nThe speed of 1st confirm may seem to be a huge benefit but in reality for most low value and time sensitive transactions such as the buying a cup of coffee, paying for a taxi, or using a vending machine, the risk of double spends is very low. Keep in mind that accepting credit cards is not without risk however merchants have long accepted they will face some losses however if those losses are minimal then it can just be seen as a cost of doing business.  So many merchants could simply accept 0-confirm transactions without exposing themselves to more risk than they do from credit card fraud.\nThe other factor that diminishes the real world potential of shorter target block intervals is that for many merchants, even  \"faster\" confirmation times still isn't fast enough. For a Point of Sale transaction, an average confirmation time of 2 minutes is still significantly longer than what most merchants would consider to be workable. The average credit card transaction takes about 20 seconds (including delays by customer).  The entire industry has spent significant resources to shave even a few seconds off.  Changes like enabling customer to swipe card, swiping before all items have been rung up, and not requiring signatures on low value are all about shaving a couple seconds off an already quick process and the cost of those changes is considered acceptable in order to slightly improve the efficiency of a checkout.\nThe other factor is that reducing the target interval only reduces the average confirmation time but half of them will be longer and the tail can be very long. Due to the random nature of blocks solutions about 15% of blocks will take longer than 2x the target, 3% longer than 3x the target and >7.5 minutes and about 0.5% will take longer than 4x the target.  That uncertainty makes it difficult for a time sensitive business to as a matter of policy wait for confirmations.  Having most transactions confirm in 30 seconds but some take minutes is going to lead to customer frustration at the point of sale.\nIf the BTC economy grows large enough we could see expanded use of \"green addresses\" to fill the need for instant acceptance without confirmations.  Such services could be provided by major corporations, and backed by insurance against fraud (for a small per transaction fee).  This would be a more viable 0-confirm solution than a simple reduction of the block interval.\nThat being said the 10 minute target was probably overly conservative and there are some advantages to a shorter block time.\n", "tcp - Bitcoin client two-way communication": "\nI changed wording of the quote a bit, so it would match your question.\n\nWhen you connect to a client, you will receive responses on the port\n  you just used to connect to that client. The Bitcoin network uses persistent TCP\n  connections that remain active so long as both nodes continue running.\n\nBitcoin communication with non-standard ports\nFor the sake of discussion we can define Server as the side that waits or listens on port 8333 and Client as the side that initiates connection by sending network packet to \"server_ip_address\":\"8333\" , the network packet has address of the Client, so Server can send reply back to \"client_ip_address\":\"any_port_reserved_for_client_on_client's_network\" . \nBitcoin always reserves 8333 port on workstation to communicate with Bitcoin Network, but usually home router changes the port number in packet when it's on it's way out for the Network Address Translation mechanic (NAT). To overcome NAT and make Bitcoin Client act as Server and accept incoming connections, Port Forwarding or UPnP should be enabled.\n", "security - How to perform a double spend attack in websites that accept transactions with 0 confirmations?": "\nIf you are attempting a 0-confirm double spend then which transactions (if any) are included in the next block is irrelevant.  Your goal is to simply complete both transaction prior to either merchant getting notification of the other one.  \nThe \"problem\" is that the network is fairly quick at passing transactions from one node to the next.  Unless you have located an inefficiency in the network, a bottleneck, or actively degrading network performnce is unlikely you will complete both transactions before the merchant sees both halves of the double spend.  \nAn effective countermeasure would be for the merchant to introduce a short delay between the time they detect your 0-confirm transaction and when they give you access to the purchased item or service.   Say you execute a perfectly timed double spend.  The merchant sees their transaction and waits 60 seconds.  60 seconds is a long time for transactions to not propagate the network.  If at any point in that 60 seconds the merchant sees the \"other\" transaction you have failed.   Unlike other forms of fraud you will lose the funds as your double spend is irrevocable.  It will just be luck on which merchant gets paid.\nAlso many transactions are not irreversible.  Software which has a license key can have the license key revoked.  Many giftcards can be reported as stolen to freeze the funds.  Any subscription based site would grant you at most a few seconds of service before cutting you off.  Product which require physical deliver are never going to be shipped fast enough to execute a double spend.\nThe risk of a 0-confirm double sped is low but security can be improved by designing ultra fast low latency \"super nodes\".  A service provider could setup a network of Bitcoin nodes around the world with low latency links between them.  Each of these nodes would be running modified version of bitcoind to maximize the number of connections, establishing thousands or even tens of thousands of connections to peers.  No matter where the two halves of the double spend originate it would be only a few hops to a super node.  \nIf a merchant only accepts transactions from the super node network then you would be unable to complete the double spend.  Either the network has seen both transactions and the double spend is detected or they haven't in which case one of the merchants won't give access to the item purchased.\n", "Can I get all the information I need to create a payment transaction from BlockExplorer?": "\nTo create a payment, you need a private key with an associated public key that has funds, a public key of the recipient, have the hash of the last transaction made on your public key, and perform some hashing on all of those.\nBlock explorer provides all the information but the private key. If you have that, you can generate a valid transaction on your own.\n", "trust - How should one try verifying to whom a given Bitcoin address belongs?": "\nThe v0.5 client (still experimental as of time of writing) supports a function where you can sign a text message with a private key.  \nSo you could:\na) have a \"register\" button next to the address.\nb) provide the user a message to sign which includes some identifying information (account name, email address, etc) and the address.\nc) user will run bitcoind signmessage  \"\"\nd) this will sign the message with user's private key.\nOnly a user which has access to the private key that corresponds to the address in question will be able to generate the correct signature.  Think of it as similar to a Bitcoin transaction but it isn't published to Bitcoin network and involves any text message.\nEligius uses this method to link NMC payment addresses to BTC payment addresses for his pool.\nhttp://eligius.st/\nObviously this will have more value once Bitcoind v0.05 is publicly released.\n", "hashpower - What hashing speed does my hardware have?": "\nFrom Wiki:Mining hardware comparison: Core 2 Quad Q9650 - 18.67 Mhash/s . With current price and difficulty factor there is no point in using CPU for mining because the profit won't cover the cost of hardware or electricity. For example with current difficulty it will take you 8 years on average to uncover block and earn 50 BTC or 1/2 BTC a month if mining from a pool. \nToday everyone uses video cards to mine e.g. ATI 5970 has about 800 Mhash/s, which is about 43 times faster then your CPU. Bitcoin network adjusts difficulty factor so bitcoin production rate would stay roughly the same, about 50 bitcoins per 10 minutes. CPU mining can do only a small part of total workload therefore you would receive on average a very small part of the reward.\n", "blockchain - How can a non-miner store data in the block?": "\nThere is a service named btcmsg which allows you to do this. Here is the announcement in bitcointalk. The website is at btcmsg.staticloud.com.\nThey use a simple protocol to write and read the messages in the blockchain:\n\nBTCmsg Protocol v1 (2011-09-18)\nEach message is represented by multiple payment which is calculated by\n  the following algorithm:     \n\nTwo first chars for message type ('01' for md5, '02' for ascii).     \nThen the message in hex (python binascii.hexlify).    \nSplit the long string to groups of 4 hex digits.   \nEach group of 4 hex (e.g. 2 ascii letters from the message) is     represented by a payment in satoshi (maximum 0xffff=65535).   \nThe service fee (composed of a fixed part and a variable part times     the amount of small payments required, minus the transaction fee) can be seen within the first transaction.\n\n\n", "value - Trying to understand the bitcoin chart": "\nThe left Y-axis applies to the lighter colored volume bars from the bottom of the chart which denote the trading volume in BTC. Alternatively you have the option to display these volume bars in the respective other currency (USD in this case), if you select the \"Volume in Currency\" checkbox at the left of the page.\nA volume bar shows how many units of the currency were traded within the respective timeframe (days in this case).\nTo just compare the price of Bitcoin in comparison to the US dollar, you can ignore the volume bars and just look at the price as denoted by the Y-axis on the right of the chart. If you use this link, you see just the daily price over a year without volume bars or candlesticks.\n", "Why was the MIT license chosen for Bitcoin?": "\nSatoshi:\n\nIf the only library is closed source, then there's a project to make\n  an open source one.\nIf the only library is GPL, then there's a project to make a non-GPL\n  one.\nIf the best library is MIT, Boost, new-BSD or public domain, then we\n  can stop re-writing it.\nI don't question that GPL is a good license for operating systems,\n  especially since non-GPL code is allowed to interface with the OS. \n  For smaller projects, I think the fear of a closed-source takeover is\n  overdone.\n\n", "What Bitcoin-esque alternatives are there?": "\nThere are a number of other cryptocoins in use alongside Bitcoin, the most notable are:\n\nTestnet Bitcoins (used only for testing Bitcoin applications, but they are an important mention) - they work exactly the same as Bitcoins.\nNamecoins - coinage used as a distributed naiming system blockchain. Their most notable feature is that they can be merged mined with Bitcoins.\nLiteCoins - \"silver to Bitcoin's gold\" - their blocks are generated every 2,5 minutes, and their hashing algorithms are more CPU-friendly (mining with graphic cards doesn't work well with those).\nSolidCoins - 2 minute blocks, there isn't a limit on how many coins will be generated, CPU friendly, difficulty is adjusted more often, close-source. The SolidCoins have undergone a \"reset\" recently and have earned themselves a negative reputation for how some issues were handled.\nGeistGeld - 15 seconds blocks, making it the fastest alternative crypto-currency.\nI0coin - they don't list any difference from Bitcoins on their website\nIxcoin - same parameters as Bitcoins, asides more coins being generated each block (thusly, all 21M coins will be generated sooner)\nTenebrix - CPU friendly, a few million coins pre-minted\n\nA list of them is also maintained on the Bitcoin Wiki.\nThere is a relative ease in creating new cryptocoins, as you can just tweak the main client, encode a new genesis block and start your alternatives with small effort.\n", "finance - If the economy was based on bitcoin, how would someone go about getting a loan?": "\nLoans are possible in a deflationary environment.  Currently bitcoins is too volatile (which has nothing to do with deflation) to make lending viable.  For the purpose of answering the question I will assume that in the future volatility is either low or easily hedges.\nThe interest in a loan comes from 4 components:\n\nOpportunity Cost.  Instead of giving you a loan I could do something else productive with the money.  If I could get a 10% ROI on my money by installing a new air-conditioner that will factor into the interest I change.  It would be a loss to loan money to you at less than 10% (after adjusting for the other risks) as I would \"earn\" more by taking the 10% ROI.\nInflation risk.  If money is worth 5% less in one year I will want to be paid 5% more even on a no risk no profit loan.  Thus inflation contributes to the overall interest charged.  Deflation would subtract from the overall interest charged.\nDefault risk.  If you don't pay me I lose money.  In the long run I need to collect interest equivalent to % of amount loaned that is lost due to defaults.  If I project I will lose on average 10% of amount loaned and charge 11% interest then I would break even.  Note: real world calculations are more complex because one may collect some revenue even from loans that default and may receive collateral, or sell defaulted loan for some recovery.  Still default risk needs to be included in the price of the loan.\nDelayed Consumption.  By giving you a loan (even if priced to exactly break even) I am delaying my ability to use my money today.  I can't use it until repaid thus I will charge a premium for the time I lose waiting for repayment (sometimes called time value).  Thus even if all other costs/risks are 0% there will be some interest charged otherwise I might as well just keep the money in a can.\n\nInterest is the \"cost\" of money.  Of the four components that contribute to that cost only one of them is related to inflation/deflation.  If in the long term all other factor were equal (which is unlikely), the USD had 3% inflation rate, and BTC had a 2% deflation rate one would be expect interest rates in BTC to be ~5% lower.\n", "virus - Is there a list of Bitcoin malware": "\nStarted a Wiki page on this topic.\nSo far I`ve found mentions of 3 different Bitcoin-related malware:\n\nInfostealer.Coinbit - steals wallet.dat\nDevilRobber Trojan - mines Bitcoins\nBKDR_BTMINE.DDOS - performs DDoS attacks on miners\n\n", "Why does it take 15 minutes for my Bitcoin client to start?": "\nI can't be sure why your client specifically took 15 minutes to start. But I have benchmarked the client's startup process. Most of the time is spent validating the database to ensure the client has a sensible view of the hash chain.\nIt is \"fast verified\" up to the most recent checkpoint and then \"slow verified\" to the current block. Fast verification entails checking only that the header is valid. Slow verification is a much more complete verification that can only be done at about 20 blocks per second on hardware like yours. (Upgrading the client will help, since newer version of the client will have more recent checkpoints.)\nIf you passed the -rescan option, the client will check every transaction in every block to see if it relates to any account in your wallet. That will add some time to the client's startup time.\nWhen you run the Bitcoin client for the very first time, it will take several hours to sync up to the network. The downside of a decentralized system is that you cannot trust anything and must check everything yourself. This literally requires you to fully verify every Bitcoin transaction that has ever taken place. I've seen that take 9 hours on Pentium 4 class computers with 100Mbps Internet connections. (Though I think it should be a bit faster now, thanks to bugfixes in the client.)\n", "development - Changing Bitcoin's deflationary nature": "\nChanging something like coin generation has two major risks:\na) You fork the network.  If you make a change and it doesn't have universal support then those supporting the old network will see new blocks as invalid and those supporting the new network will see old blocks as invalid.  To users who don't want to get caught up in a \"fork war\" the results will be confusing. If user on fork A send coins to user on fork B they will be gone but user B will never get them (unless he modifies his client to fork A).\nb) You cause a loss of confidence.  Bitcoin is based on \"nothing\".  Part of its intrinsic value comes from the fact that nobody can make changes and thus like the \"rules\" or don't like them you at least know the rules won't change.  Anytime you make a change someone gains and someone loses.  For example if the Federal Reserve lowers interest rates that helps debtors but hurts savers.  Once you start changing the rules Bitcoin becomes open to manipulation with each party pushing for changes that help them.  There is a real risk that will cause a huge loss of confidence.  IF you can gain enough support to change the generation rate you can change just about anything and some people won't like that ambiguous future.\nThose risks aside to change the rate of generation you need to\na) decide on a future block in which to change generation\nb) reach near unanimous consensus among users (at least among users you can reach)\nc) provide updated client which incorporates changes at the preset future block.\nd) encourage rapid and widespread adoption of clients with new changes prior to the change block.\ne) at the \"change block\" be prepared for significant issues from users with out of date clients.  \nThere is no way to force this (or any other) change on the Bitcoin community.  Any change require consensus and for something as devisive as generation change that would be difficult.  If it has low support the \"inflation fork\" will die off.  If it has high support, then even those who dislike it will eventually adopt it and the original fork will die off.  A worst case scenario would be a \"fork war\" where both versions have roughly equal support and neither one gains an upper hand.  That likely could crippple Bitcoin or at least push it back significantly.\n", "shrinking money supply - Is there a mechanism to handle stale bitcoins?": "\nIf coins are lost, they are gone forever. This only hurts the person who lost the coins... and in fact it makes the rest of the coins more scarce and thus more valuable long term.\nBecause Bitcoins are divisible down to eight (or more) decimal places, it really means there are 21,000,000 x 1,000,000 = 210,000,000,000,000 units (and this can be divided even further with changes to the code. In practice, this means that one can always have a \"small enough\" unit of Bitcoin to buy tiny items. \nSo if X number of Bitcoins are lost, the rest simply become more valuable, and unless a coffee costs less than .000000000000001 BTC or something, there will not even be a need to alter any code. If we were using those tiny units, a convenient name would be given to them and life would be fine and dandy.\n", "backup - If I wanted to print my bitcoins?": "\nThere are many pairs of private-public keys. The usual wallet.dat starts with 100 keypairs, although usually you use only a few. To get your keys you can use Pywallet. Then you can print them as they are, or as QR codes.\nYou should note however, you are not printing Bitcoins, but the keys you use to get to them. This is more like printing username and password to your paypal account, rather than printing money.\nCarrying your printed keys is only useful if you intend on paying with them (and only as much as you need in case you loose your printed key). As not many people accept Bitcoins nowadays, it is not too useful.\n", "network - What is the threat from multitudes of casual guessers?": "\nTransactions that are invalid will not be propagated by the network, they will stop at the first node that will get them. If someone spams the network with invalid transactions, they can be ignored by the nodes.\nGuessing someone's key is so improbable, that not now it is impossible to get any results.\nSpammers and scammers probably won't target Bitcoins for awhile - people using them are too few and far in-between. People writing viruses are more harmful nowadays, whether they steal wallets, or botnet your computers into mining.\n", "majority attack - What is/Is there the relation between the value of a bitcoin and the prices of video cards?": "\nIf hardware cost or efficiency rises, the new mining power will enter the network, and the difficulty will rise, keeping the rate of bitcoin production stable - this is one of the key design elements of bitcoin. So, arguably nothing should happen to the price of bitcoins due to cheaper/better mining hardware.\n", "alternatives - How exactly is Rucoin different than Bitcoin?": "\nThe \"author\" (if you can call a blatant 1:1 copy of Bitcoin authoring) has not backed up those claims.\nThe website provides no further explanation and a lot of vague nonsensical \"answers\"\nA crude but human translated English version of Russian homepage is here:\nhttps://bitcointalk.org/index.php?topic=48582.msg586451#msg586451\n\nWhat is the specifics of the Rucoin?\n  In short - more stable course\nIt is difficult to talk about stability when the system is at the forefront of the struggle of interests. \n  Constant fierce struggle of interests causes course instability, which creates a number of disadvantages for practical use of such currency.\n  Another thing - Rucoin. \n  This project was not born on the battlefields. At the heart of Rucoin - ready, proven solutions and lessons learned. \n\nThose \"solutions\" and \"lessons\" are never explained except with vague double speak.\n\nConceptually, Rucoin - this is a layer of stability and security, when, instead of blind hope for \"the invisible hand of market\" principles are used strict currency regulations. Instead, to give the exchange rate at the games speculators, who for the sake of their earnings will generate most unpredictable chatter in the system, Rucoin provides some tools functionally similar to central bank and the stabilization fund, whose main task - to make the course of crypto-currency stable, predictable and guaranteed .\nRucoin, unlike Bitcoin, totally unsuitable for currency speculators, but it is very suitable for the conservation and savings to ensure a stable and reliable infrastructure of payment systems new generation.\nIn addition, Rucoin towards Bitcoin may well serve as a reserve currency, into which can be converted part of the funds for the insurance of all kinds of surprises.\n\nSo the author claims to implement a central bank and stabilization fund but makes no mention on how that is possible or how it will be implemented.  Given that exchange and a direct to cash mining pool were launch prior to the actual block chain my suspicion is this is merely a poorly designed pump and dump.\nSince the launch the author has not provided any further information on how the claims will be implemented.  Based on the volatility seen at http://btc-e.com (largest exchange offering RUC trades) there has been no \"currency regulation\", \"central bank\" action or effective use of this so far unseen \"stabilization fund\".\n", "bitcoin economy - Is there already an existing closed cash flow loop for the currency BTC?": "\nClosed vs open loop isn't a black or white definition.  For example even in the US were you have significant velocity of money companies buy parts in other currencies (from other countries), consumers imports goods manufactured overseas, and investors buy foreign stocks.\nSo there is no such thing as a completely closed loop.  I think what you are asking is what can be done to keep transactions in BTC either perpetually or for longer (before being cashed into fiat).  Unfortunately that is a slow process.  There is no grand over arching plan rather each individual seller increases the potential to the currency to be recirculated more before being exchanged.\nI see three major factors determine how likely acquirers of BTC will keep the BTC over selling for fiat currencies:\n1) Availability of goods.  The more goods and services available in BTC the more valuable the currency is relative to fiat currencies and the more likely someone who acquires BTC will keep them.\n2) Value of goods.  If goods are sold in BTC at a discount that will increase the value of BTC.  If good are sold in BTC at a premium that discounts the value of BTC.\n3) Price stability.  The more volatile the price the more risk of losing purchasing power by holding BTC.  That will reduce the likelihood that an acquirer of BTC keeps those BTC over more stable currencies.\nThere are no easy answers to the problem of increasing the length of BTC loop as BTC isn't a planned economy.  As an individual the best thing you can do is to offer goods or services in BTC and look for merchants who do the same.\n", "politics - How safe it is that a single San Francisco company controls the canonical location of Bitcoin code?": "\nYou should learn more about the way the git scm system works. First, it is distributed so that everyone has a complete copy of the entire codebase; second, every commit is checksummed, so that if github wanted to (or was forced to) underhandedly change code, it would be detected by everyone.\n", "block header - Mining pool performance optimization": "\nThe code isn't optimal especially not on the merged mining side.  Currently there is no optimal method to handle both block chains without a more advanced miner-pool communication protocol.\nExcluding merged mining issues, latency is a large factor.  When a block change occurs every single miner's effective hashing power is zero until they begin working on updated block header.  Thus a pool's effective hashing power goes from total hashing power down to 0 and then rises as miner's are updated. So pool's long term effective hashing power depends on how quickly it can deal with a block change.  \nThis involves three components.\n\nDetecting block change.  A good pool should have large number of connections to the Bitcoin network to minimize the delay in learning of block chain. A good pool operator will ensure they maintain connections \"close\" (within 1 or 2 hops) of every major pool.\nRecalculating block headers.  During a block each miner will complete their work at differing times and thus getwork requests are staggered.  However when a block changes the pool needs to update every miner's block header at once. A pool lacking sufficient processing power to quickly compute block headers will have miners working on stale work longer and thus have a higher average stale %.  Updating miners in the order of their hashing power could reduce the pool's overall stales slightly.  I don't know if any pool currently does that.\nUpdate miners.  The latency of the miner's link is beyond the control of the pool but a pool can improve efficiency by having multiple pool servers reducing the number of hops to all miners.  Pool servers should be located as close to miners as possible.  A pool consisting mostly of miners in Asia shouldn't use US East Coast datacenter for example.\n\nNTimeRolling reduces the number of communications (getworks) required for a given number of hashes.  this makes the pool more efficient as a given amount of hardware can support more clients however it doesn't reduce load at a block change.  \nImplementing Long Polling ensures that miners are notified when a block change occurs (minus latency indicated above) rather than continuing to work on stale data until complete.  Completing one nonce range takes roughly 10 seconds for a 400MH miner.  Without long polling on average the miner will waste 5 seconds per block change working on data that can never produce a valid block.  Given block changes occur every 600 seconds that is roughly 1% of CPU time wasted hashing invalid block headers. Slower miners have longer period between getworks and thus waste a greater % of GPU time.  No pool can be efficient without a good Long Polling implementation.\nBoth NTimeRolling and Long Polling (LP) require a miner which properly understands these commands.\n", "blockchain - One dataset for many wallets... how?": "\nOnly the wallet.dat file is specific to the wallet. You can stop the client, swap out the wallet.dat file for a different wallet, and then launch the client again. You may need to start the client with the -rescan option -- the client will do the right thing automatically in most cases, but there are a few corner cases it mishandles without -rescan.\n", "Why do so many bitcoin exchanges have their bank accounts closed and have problems establishing bank accounts?": "\nCountries have AML (anti-money laundering) laws that limit activities that could enable money laundering. A Bitcoin exchange arguably can be used for money laundering. Even if the letter of the law doesn't say anything specifically relevant to Bitcoin, banks don't want to take chances.\nTo be able to respect AML and other laws, banks do need to know a few things about the owner and the business, and they have a \"know your client\" procedure for it. For most businesses this goes uneventfully, for others (e.g. Bitcoin exchange) it could be a problem.\n", "legal - Is there a list of countries that are not likely to persecute bitcoin businesses?": "\nOne possible location would be Nowhereisland - a new nation born from an arts project. It is extremely liberal in it's views and is still in formation.\n", "legal - What are the qualities of a country that might make it more or less likely to freely allow Bitcoins or crypto-currencies?": "\nCountries which have strict AML (anti-money laundering) laws are less likely to freely allow Bitcoin use and exchange.\n", "miner configuration - What does the `gen` option in bitcoin.conf do?": "\nThat configuration parameter no longer has any effect because the CPU mining engine has been removed from the mainline client.\nEarlier versions of the client did have a built in miner and the gen parameter controlled if it ran in the background.  Given the much higher difficulty today the developers felt it no longer served a purpose and would be confusing to new users (who could wait months of even years without generating a single coin).  It was removed from the client.  The wiki should be updated to reflect that.\n", "What are the most respectable Bitcoin news websites?": "\nHere are a list of blogs/sites I follow to keep up with bitcoin news:\nreddit/r/bitcoin - user aggregated bitcoin links/topics, usually anything notable will be posted here.\nBitcoin Magazine - also available as an actual physical print magazine. \nCryptocoin News - mentions altcoins, but Bitcoin is most prominent\nCoinDesk - a relatively new entrant to the Bitcoin news space\nThe Genesis Block\nThe Monetary Future - not exclusively bitcoin related but often covers bitcoin or related topics. This blogger (Jon Matonis)  is now a Forbes blogger and the content will typically appear on the Forbes site first.\nCoding in my sleep - a personal blog  but more and more bitcoin related topics recently. \nThe Bitcoin Trader - excellent blog on bitcoin related topics. (less active recently (end 2012))\nBitcoin Money - another bitcoin blog. \nBitcoin Miner - bitcoin mining focused blog.\nBitcoin Watch - has a collection of links to the latest news along with exchange stats etc. \nstuffexists.com - collection of lots of useful links.\nBitcoin Media - blog with articles mainly by Amir Taaki (genjix) (a Bitcoin developer)\nblockchained.com - has a Top 16 Hot Topics from Bitcointalk.org (seems to use an algorithm to rank the most active current topics) as well as charts an some news links (was bitcoinx.com but that currently only has charts)\nBitcoin on Quora\nBitcoin on Twitter\nThe press sub-forum of bitcointalk.org is usually kept up to date with any press on bitcoin \n", "mtgox - Is there a bitcoin exchange accepting SEPA transfers?": "\nEDIT This information is now out of date - voting to close this question\nYou could use Intersango\nIt's a well-trusted exchange that operates within the Eurozone (and in the UK). You see their current fee structure provides SEPA transfer: \nCountry             Accepting deposits  Processing withdrawals\nGBP (domestic)      Free                Free\nEUR (SEPA)          5 PLN (1.23 EUR)    5 PLN (1.23 EUR)\nEUR (international) 10 PLN (2.46 EUR)   0.2%, capped: 9.5 PLN min, 180 PLN max\n<snip>\n\n", "How do I implement an escrow service using Bitcoin contracts?": "\nThe functionality is not yet implemented in Bitcoin. On October 18 Gavin created 3 Bitcoin Improvement Proposals that would support the functionality, Bitcointalk:OP_EVAL proposal.\n\nM-of-N Standard Transactions\nOP_EVAL\nAddress Format for OP_EVAL\n\n", "protocol - Why does the mainline client limit the number of outbound connections to 8?": "\nThis is a legacy issue.\nWhen the network was first implemented, there was a severe shortage of servers that could reliably accept inbound connections. Many people started running the client behind NAT and they could not accept any inbound connections. Meanwhile, they were consuming the available inbound connection capacity of the more limited number of machines that could accept them. The client now enables uPNP traversal by default.\nSecond, there were problems with the client code that caused it not to be able to support as many connections as it should have been able to. Many nodes could not even support the default 125 connections, even though their CPU and network usage was nowhere near maxed.\nThese days, it's just kind of stuck. My 'hub mode' patches make it easily possible for clients to support 1,500 connections. But they almost never see more than 200 clients because the network capacity limitations are long gone.\nYou need a healthy number of outbound connections because a malicious adversary can consume all your inbound connection slots by repeatedly connecting to you, and staying connected, from a variety of IP addresses. The Bitcoin client actually has code to try to get IP diversity in its outbound connections to protect against some entity creating a million servers and having a high chance of getting all 8 of your outbound slots.\nIf you're paranoid, turn this up. You can still configure for 32 outbound connections if you can also add at least 64 inbound connection slots in exchange. You'll be helping the network. You can use my hub mode patches to do this.\n", "trust - A list of trusted Bitcoin websites?": "\nTheBitcoinReview\nThis site has what you are looking for, but it is a new site and doesn't have a ton of reviews. You can help the website by posting a review for a Bitcoin business you have tried.\n", "Would any of the current botnets be able to launch and sustain a 51% attack?": "\nIf you want to profit from Bitcoins, you would not want to work against it (as was explained by Satoshi in his original paper). A 51% attack would not bring you profit, rather it would make everyone involved in the project loose, as Bitcoin's reputation would be damaged.\nThe other thing is getting enough hashing power. Unless you target mining-specific machines, chances of getting higher-end mining-compatible graphics cards isn't too high. So the trojan would have to rely on getting a lot of moderately powered PCs, and in order to launch a 51% attack, the botnet would have to be quite big. The biggest botnets, consisting of over 100'000 computers could potentially accomplish this, but so far Bitcoin isn't a prime target for botnet activity.\n", "blockchain - Where can I see the average transaction fee payed in the last 100 blocks?": "\nBlockchain.info shows the amount of fees payed each day.\n", "Contracts: Will this be possible?": "\nThe protocol already supports transactions where x out of y keys need to agree in order to spend the coins.\nThe protocol will never support transactions that change/expire automatically after some period of time, as this causes problems.\n", "bitcoin core - Does my client accept inbound connections?": "\nGet your ip from http://whatismyipaddress.com/ and put it in here http://www.subnetonline.com/pages/network-tools/online-port-scanner.php with port 8333. If you can accept incoming connections you should see a result similar to below:\n\n", "blockchain - What is the block maturation time?": "\nGenerated coins can't be spent until the generation transaction has 101 confirmations. Transactions that try to spend generated coins before this will be rejected.\nThe reason for this is that sometimes the block chain forks, blocks that were valid become invalid, and the mining reward in those blocks is lost. That's just an unavoidable part of how Bitcoin works, and it can sometimes happen even when there is no one attacking the network. If there was no maturation time, then whenever a fork happened, everyone who received coins that were generated on an unlucky fork (possibly through many intermediaries) would have their coins disappear, even without any sort of double-spend or other attack. On long forks, thousands of people could find coins disappearing from their wallets, even though there is no one actually attacking them and they had no reason to be suspicious of the money they were receiving. For example, without a maturation time, a miner might deposit 25 BTC into an EWallet, and if I withdraw money from a completely unrelated account on the same EWallet, my withdrawn money might just disappear if there is a fork and I'm unlucky enough to withdraw coins that have been \"tainted\" by the miner's now-invalid coins. Due to the way this sort of taint tends to \"infect\" transactions, far more than 25 BTC per block would be affected. Each invalidated block could cause transactions collectively worth hundreds of bitcoins to be reversed. The maturation time makes it impossible for anyone to lose coins by accident like this as long as a fork doesn't last longer than 100 blocks. If a fork does last longer than 100 blocks, then the damage caused by invalidated transactions would likely be a huge disaster. (However, something else would have to be seriously wrong with Bitcoin or the Internet for a fork to last this long.)\n", "mining profitability - How to choose the most profitable pool?": "\nMining is a zero sum game so pool size has no effect other than to reduce variance not average payout.  Your goal would be to acheive 100% of fair value per share.\nSome factors:\n\nInclusion of block fees.  While small pools which keep block fees\nresult in lower payout than solo mining.\nMerged mining.  Currently adds a roughly 5% bonus relative to BTC only mining.\nHop proof reward algorithm.  Proportional pools are vulnerable to pool hopping.  As mining is a zero sum game anything pool hopper's gain 24/7 miners lose.\nPool fees.  Any fee paid to pool reduces revenue per share relative to solo mining.\nPool efficiency.  This one is tough because pool source code is often closed source.  If pool has a bug which results in extra 1% stale shares then that in effect is a 1% hidden fee.\nPool uptime.  A pool with 0.5% downtime is in effect costing you a 0.5% fee.  This can be partially mitigated by using miner which supports backup server.\nPool latency.  The slower communication is between you and pool\nserver the greater percentage of shares which will be lost as stale\nin a block change.  Part of this is due to server resource\nlimitations but some of this also comes from geo-location.  If your\nminers are located in China a pool which only has a server on East\nCoast US ISP is going to have a longer than average latency.\n\nSo the most efficient pool would be one that includes transactions fee, charges no pool fee, has low latency connection to your miners, offers merged mining, has high uptime, and has no hidden back end bugs which reduce efficiency of shares.\n", "encryption - If I lost my public keys, could I recover them from the private key?": "\nRelation is one private key generates one public key and it is possible to recreate the public key. You can't recreate the private key though, so if you lose them, you lose all coins associated with that key.\nIt is not computationally expensive to generate or recover keypairs, but you need specific programs for that support secp256k1 elliptic curve cryptography.\n", "websites - Running Bitcoin on command-line-only system": "\nTo run it as a daemon type:\n$ bitcoind -daemon\nbitcoin server starting\n$\n\nYou can then use the API calls to do whatever you want:\n$ bitcoind getblockcount\n153407\n$ bitcoind getconnectioncount\n20\n\n", "privacy - What would be the process for identifying a person that performed a transaction from a wallet on a personal device?": "\nThe block chain doesn't report the IP address and the IP address isn't passes by nodes.  Any entities knowledge of Bitcoin network is limited to the connections it has.  If you get a transaction from a specific IP address you can't know that IP address originated the transaction you simply know it came from that IP address.  It was either originated or relayed by that node.\nThe more connections you have to the network the more information you would have about where an transaction originated.   However no matter how many connections you have you can never know you have a connection to every single node, thus all you can know when you see a specific transaction is that node at IP address X is where the transaction was first seen.\nYou can never be 100% sure of the originating node as you can never be 100% sure you have connections to ever node in the network.\nSomeone concerned about privacy could restrict the nodes they send transactions to only nodes they trust.  This would ensure that at most (unless they trusted you) you could only find the node that relayed the transaction not the originator.\nSomeone concerned about privacy could also route their transactions via VPN which would add another layer.  The connection couldn't be traced further back than the VPN gateway without the assistance of the VPN providers which likely would require a court order.  If the VPN provider was located in another country that would make enforcement even more difficult.\nUsing both trusted nodes (using web of trust like fature), and VPN which doesn't keep logs in a foreign country would make tracing the source of the transaction very difficult.\nI find it unlikely that many courts would issue a warrant based on only the IP address of the \"node transaction was first seen\" as it really is proof of nothing.  The actually originator could be that node, a node which relayed it to that node, or a node which is x hops further down the chain.\nLastly a transaction is simply a sequence of bits. There are websites which act as dropboxes where a user can post a transaction in text form and the website will relay it to the rest of the network.  While this isn't particularly secure one could create a similar service on Tor and possibly require transactions to be encrypted with a public key of trusted operator reducing the likelihood of tracing the transaction back.\nOf course the drop box method could be combined with trusted nodes, VPN access, and using a public internet wifi location to further obfuscate the source.  It really depends on how paranoid the sender is.  \n", "attack - Flaw in Bitcoin protocol regarding incentives to share transactions": "\nThis is a non-issue.  The Microsoft paper did not appear in a peer-reviewed venue (journal or conference).\nThere are (at least) two parts to the bitcoin network: the peer-to-peer transaction broadcasting network and the miners.  Only the miners have a disincentive to propagate transactions.  The overwhelming majority of the nodes on the internet running bitcoind are not mining or else are doing trivial amounts of CPU-mining because their admin forgot to use the -gen=0 flag.\nIf so-called \"CPU-friendly\" cryptocurrencies like \"Tenberix\" achieve their goals (which is doubtful) they may be vulnerable to this problem since they are intended to avoid the sort of specialized-miner situation that bitcoin embraces.\n", "bitcoind - boost::thread_resource_error": "\nIt seems to be an error from the Boost library that is thrown \"thread-related resources cannot be acquired\". You probably should contact the dev team about this error, from your description it appears to be a memory leak.\n", "Bitcoin client incentives to share peers and blockchain": "\nIf data is not shared, Bitcoin won't work. So the people who want Bitcoin to work and be useful share the data. If there aren't enough people who want Bitcoin to work and be useful, then it doesn't matter whether anyone can get the data or not.\n", "public key - Why does the length of a bitcoin key vary?": "\nThe length of a key doesn't vary. Private keys are always 32 bytes, and public keys are always 65 bytes (or 33 bytes for a compressed public key). Public key hashes are always 20 bytes.\nThe length of addresses vary because in Bitcoin's base58 encoding, leading zero bytes are expressed as a single \"1\". Other bytes require more than one character in order to be expressed in base58.\n", "transactions - Finding \"lost\" bitcoins": "\nTo look up the transaction go to blockchain.info or blockexplorer.com and type the transaction number in the search box. You will see the sender address, the destination address, the block number where the transaction was included, among other info.\nPlease confirm that your bitcoin client has downloaded all the blocks. You can see a number in the bottom right corner, which should match the most recent block (the current number is 153881, you can find this information in the websites I mentioned). See this question for more information.\n", "mining pools - Why do namecoins have any value?": "\nNamecoins are used to register .bit domains:\nhttps://www.namecoin.org/dot-bit/\nThey're also bought and sold by speculators, but DNS registration is their original purpose.\n", "mining reward - What happens if there are no transactions in a block?": "\nThe mining reward must be collected with a transaction, so technically there is at least one transaction in each block. \nThe mining reward was designed to enable the initial distribution of bitcoins and to encourage the creation of a powerful bitcoin network with a lot of computers to support it, therefore it makes perfect sense that a miner gets the block mining reward regardless of how many transactions were included.\n", "transactions - What is TxIn's sequence?": "\nSequence numbers aren't shown on the Bitcoin Block Explorer HTML pages because they are not used by the network currently. Non-default sequence numbers would be shown on raw block/tx pages, but I'm not sure whether this has ever happened.\nSequence numbers are intended to be used for replacement. Replacement is currently disabled, but how it would work is:\n\nYou send a transaction with a LockTime in the future and a sequence number of 0. The transaction is then not considered by the network to be \"final\", and it can't be included in a block until the specified LockTime is reached.\nBefore LockTime expires, you can replace the transaction with as many new versions as you want. Newer versions have higher sequence numbers.\nIf you ever want to lock the transaction permanently, you can set the sequence number to UINT_MAX. Then the transaction is considered to be final, even if LockTime has not been reached.\n\nThis is useful in several cases. For example, two parties can use it to set up a \"prepared transaction\". Once the prepared transaction is created, the parties can move money between each other instantly, securely, and without fees. So you could set one of these up with an exchange and withdraw and deposit without waiting for confirmations.\nSince replacement is not used currently, all transactions Bitcoin creates have LockTime = 0 and Sequence = UINT_MAX. This is the case with the genesis block's generation transaction.\n", "Is there a Bitcoin exchange which has bank accounts in South Korea?": "\nCryptoXChange.com will let you withdraw KRW directly to your bank account in South Korea. They just opened about a week ago.\n", "peer discovery - How does the bitcoin client make the initial connection to the bitcoin network?": "\nThe Bitcoin client has a number of sources that it uses to locate the network on initial startup. In order of importance:\n1) The primary mechanism, if the client has ever run on this machine before and its database is intact, is to look at its database. It tracks every node it has seen on the network, how long ago it last saw it, and its IP address.\n2) The client can use DNS to locate a list of nodes connected to the network. One such seed is bitseed.xf2.org. The client will resolve this and get a list of Bitcoin nodes.\n3) The client has a list of semi-permanent nodes compiled into it.\n4) The client can connect to a well-known IRC network, irc.lfnet.org, and find other nodes that way. (This method has been removed as of version 0.8.2)\n5) It takes IP addresses from the commandline (-addnode).\n", "blockchain - Limit size of data files": "\nIf you want custom file handling, you'll need to alter the client code, or write some application that would be reading from the dat file and splitting it accordingly. I haven't heard of any existing offline solutions for alternative handling of the files.\n", "Issue with bitcoin client 0.4.0 - stop populating": "\nTry deleting your blkindex.dat and blk0001.dat files (do NOT delete wallet.dat, even better make a backup), and let bitcoin re-download the chain. The exists a rare situation where the block chain files become corrupted, and bitcoin does not accept any new blocks.\n", "Is a distributed version of GLBSE possible? How would you design it?": "\nStep 1 - Representing shares in the company.\nThis is easy enough and has been discussed. The company sends a small amount of bitcoins to one of its addresses. It releases a digitally signed announcement that any bitcoins which can be traced back to this particular output are tokens representing shares in the company. When dividends are to be paid, they are sent (in normal bitcoins) to addresses which contain tokens in proportion to the amount. Initially the company is in ownership of its shares and can sell them to raise funds.\nStep 2 - Enabling OTC trades.\nAlso easy. People who want to trade can broadcast their offers, perhaps on a dedicated Bitstock p2p network. People who want to execute standing orders can contact their issuers and together construct a Bitcoin transaction that sends X normal bitcoins from A to B and Y tokens from B to A, and both sign it. No trust is needed because the exchange happens simultaneously. There can be a Bitstock client that is a modified Bitcoin client, which is careful to distinguish tokens from normal BTC and can communicate with the Bitstock network.\nStep 3 - Committing to offers.\nHere's the hard part. With a normal OTC trade, there's nothing stopping a trader from backing out of an issued order if it becomes unprofitable by the time he is taken up on it. A market where orders needn't be honored will be inefficient and subject to manipulation. There needs to be some way to make committing orders.\nOne could conceive concocting some special Bitcoin transaction where the output can be claimed by reciprocating by sending tokens to a specified address, up to a given time. But I think this has too many moving parts to work. The Bitcoin script will need to verify that the tokens indeed originate in the company's address, and the completed transaction will expire if not included by some time - which is said to be impossible since it will be messed up in chain reorgs.\nOne way to do this is with a distributed trust model such as my own NodeBank proposal, where the bank nodes act as escrow for the trades.\nIf you want to do this completely trustless, I think you may have to create a separate Bitstock blockchain with its own rules (shared between all companies, but distinct from Bitcoin). I'm not sure it's possible to make a commitment mechanism for offering bitcoins for token bitstocks, so Bitstock will have to be its own currency which can also be used to create company tokens (just like Namecoin is a currency which can be used to create a DNS record). The Bitstock blockchain will have rapid blocks and a relatively strict timestamp requirement, and will be merge mined with Bitcoin. It will have a mechanism for making offers of Bitstock tokens vs. normal bitstocks, which is enforced by protocol if an execution request is made with its hash included in an early enough block. There should be a way to make special rules to make this survive reorgs - for example, orphan blocks will also be considered when evaluating whether an execution was given early enough, but a confirmation of this validity will also be included in the main branch, and require enough confirmations to make sure a validation can't be added retrospectively.\nStep 4 - Continuous trade services.\nNo matter how clever we make the decentralized stock exchange, some things can still only be offered by a centralized service, in particular in regards to the speed with which orders can be placed, retracted and executed. A centralized service can be built on top of the p2p system to offer such features. It should enable depositing and withdrawing normal coins and token coins, and offer advanced features for trading deposited coins.\n", "privacy - Should I use a different address for every transaction?": "\nThe only reason why it is recommended to use a different address for every transaction, is for increased anonymity - it makes it more difficult to trace, and next to impossible to prove, that the recipient of transaction A is the same person as the recipient of transaction B.\nIf you publish an address to receive payments online, and keep it static, everyone can go to http://blockexplorer.com/ and see all the money you have received, and calculate how much money you got. If you change the address after every transaction, it makes it much more difficult - someone who have to constantly monitor your web page with the published address to know all your addresses you received money on. And if you keep the page with the published address non-public, such as that your customer has to log-in to his account on your system to see the address, that makes it practically impossible for third parties to monitor your income, find out how much money you have and what you spend it on.\n", "exchange rate - \"Market capitalization\" over time": "\nhttp://blockchain.info/charts/market-cap. 24 hour Weighted price from mt.gox and tradehill.\n", "bitcoin core - Running two bitcoind instances for different nets": "\nYes, you can. Just be sure to specify different data directories and configure them to use different ports.\n", "blockchain - Is the time a transaction was done recorded in the block chain?": "\nThere's a unix timestamp in the block message. https://en.bitcoin.it/wiki/Protocol_specification#block\nSo you would be able to get know the transaction hit the blockchain down to roughly a 10 minute resolution.\n", "How to update Bitcoin client?": "\nIt is always advised to backup your wallet.dat before doing anything with the client, and also to keep a general backup just in case.\nAs the file saving protocol in Bitcoin client rarely changes, one can possibly run a couple different versions on the same .dat files without an issue. However, running an older version after an update is not advised, as unexpected behaviour can happen every now and then.\nSo you should backup your wallet.dat, uninstall the old version, install the new version, check if everything is working okay, and then delete the temporary .dat backup.\n", "standard - Why does the Bitcoin protocol use the little-endian notation?": "\nMost likely it is a small design error, but there is big argument about it at bitcointalk.org:What would you change about the Bitcoin protocol?.\n", "transactions - How long does it take to receive bitcoins?": "\nYou should check the following:\n\nAre you sure you entered the right address to receive the Bitcoins?\n\nIf the address is not correct, the coins are lost\n\nDid your Bitcoin client download all the blocks in the chain? (>150000)\n\nIf not, you need to let it run for awhile, until it downloads all the blocks, making sure that you have a couple connections and the block number is slowly increasing in your client application\n\n\n", "protocol - Block Explorer, which fields are reversed, and which are the same as in a raw block dump?": "\nHashes are displayed in little-endian when they are actually big-endian on the network, and difficulty bits are displayed as big-endian when they are actually little-endian on the network.\nAll other integers are little-endian.\n", "charts - Is there something like Mt.Gox Live but for Intersango?": "\nThere does not seem to be a chart like that for this website. Not every exchange provides a live chart on its own, and asides the two websites you mentioned, there aren't any other that would provide access to a more \"live\" feed.\n", "gpu mining - Is it impossible to GPU mine without OpenCL?": "\nOpenCL allows all graphic cards to be handled in a higher level in a uniform fashion. As all GPU mining software relies on OpenCL, you would need to create your own software to mine on non-OpenCL card. Whereas it is possible, the process would be very complicated and the reward probably wouldn't be worth it (NVIDIA cards aren't good for mining).\nSo all in all, no, if the graphic card does not support OpenCL, you can't use it to mine.\n", "Does block validation get more difficult as the blockchain grows?": "\nValidating hashes and signatures for transactions is the most costly process. So the amount of time it takes for CPU to verify a block depends on number of transactions in the block. \nNumber of transactions per block tends to increase as bitcoin economy grows, therefore it takes longer to verify more recent blocks. \n", "encryption - How do we have one-to-one mapping given the key size differences?": "\nWe don't have a one-to-one mapping in the sense that you are talking about. But, for practical purposes, we have a one-to-one mapping. Yes, if someone tried to map every single key, after a few million centuries, they'd have a problem. But we won't have to worry about that until long after the stars burn out.\nTo find two keys that hash to the same ID, you'd have to try on average 2^80 keys. If you had a million computers, each capable of trying 1,000 keys a second, it would take 380,000 centuries to find a single match. And all you could do with those two keys was claim money sent to the same ID with either one, which would cause no harm at all.\nNow, if you want to find a key that matches a key that actually has Bitcoins already, that's a much harder task. Say there are 10,000,000 IDs that have coins. The odds of a single key matching one of these 10,000,000 is 2^160/10,000,000 -- even with 1,000,000 computers each trying 1,000 keys a second, it would take billions of billions of centuries.\nSo for practical purposes, it's one-to-one.\n", "address - How fast can one generate Bitcoin addresses?": "\nVanityGen uses the GPU to generate addresses until a desired match is found. On my 5870 it does about 27 million addresses per second.\n", "payment - Where can I find a list of merchants who accept bitcoins?": "\nAs well as the https://en.bitcoin.it/wiki/Trade page you could look at:\nhttp://www.thebitcoinreview.com/\nand\nhttp://www.thebitcointrader.com/p/bitcoin-better-business-bureau.html\nBoth of these sites try to give some kind of rating or review but the data is limited at the moment. \n", "FirstBits address shortening algorithm": "\nObviously you would normally use a database with an efficient algorithm, but conceptually it goes like this:\n1) You find the first instance of the account ID in the blockchain. If the account ID does not appear, stop. The account has no firstbits.\n2) As a safety, make sure that there are at least six blocks after the block in which the account ID first appears. Otherwise, you risk having the firstbits change if that block is invalidated.\n3) You search all previous transactions for the account ID that matches this account ID to as many characters as possible.\n4) You output one more character from the account ID than the number of characters matched in step 3. This is the ID's firstbits.\nSo if the longest match prior to the first appearance of \"13xdjsNsf5zJV9tpbxL6iirp1WdettzwyB\" starts \"13xdjq..\" (and thus matches 5 characters), the firstbits for \"13xdjsNsf5zJV9tpbxL6iirp1WdettzwyB\" is \"13xdjs\" (the first 6 characters).\nTo go the other way, you search every account ID that appears in every transaction in the hash chain in appearance order. The first ID whose start matches all of the firstbits is the account ID for that firstbits.\n", "trust - If there is no one company behind bitcoin, who controls it?": "\nFrom bitcointalk.org: triple-entry crowd accounting by casascius.\n\nI came up with the term TRIPLE ENTRY CROWD ACCOUNTING as a way to abstractly describe Bitcoin in as few words as possible.  I wanted to solicit feedback.  This term would make sense to those who are familiar with banking but not with technology.\nSlightly expanded (EDIT: and revised):\n\"Bitcoin is a payment network based on triple-entry crowd accounting.  A crowd of computers - run by ordinary Bitcoin users - observes the transactions, produces a single common ledger, and keeps everyone honest.  The magic that came from Bitcoin's inventor - the thread that holds the whole thing together - is a documented and published process by which the entire crowd can always agree on what transactions it observed, despite differences in timing and perspective, and even despite varying levels of honesty among participants.  Bitcoin's design ensures that no matter how big the crowd, its collective efforts always produce exactly one consistent transaction ledger.\"\n\n", "development - Web API to retrieve difficulty changes": "\nhttp://blockexplorer.com/q/nethash/2016 provides the necessary information and shouldn't be too hard to parse. Every row corresponds to the first block at a given difficulty.\n", "Using Bitcoin for Travel Purchases": "\n+1 for fun question. Places where you can sell bitcoins are a plenty. You are a bit late though since the exchange rate was much higher earlier this year. Purchasing stuff with bitcoins isn't that widespread. bitcoin.travel lists about 10 travel releated places in the entire world that accepts bitcoins. bitcoin.it also has a list of travelling related vendors accepting bitcoins. All this may change quickly in either direction so watch these sites for updates.\n", "protocol - Why is the Block Header txn_count field always zero?": "\nThe headers message is sent in response to a getheaders message.\nThe txn_count is always 0 simply to make the parsing of this packet compatible with the parsing of the block message.\ngetheaders is designed to be used by a simplified client, however since there is no way to get partial merkle branches using the standard protocol this cannot actually be done.\n", "mining theory - What is required to generate a block?": "\nMtGox is an exchange (i.e. a place to sell and buy bitcoins for USD, EUR, GBP, etc.). If you want to get a few coins quickly you can buy them there.\nTo generate blocks you need to use your computer's processing power (this is called mining). Currently, it is very hard to produce a block by yourself so most people mine in group and split the rewards (pool mining). Check this question for more information: \nHow can I start mining Bitcoin?\n", "mining reward - Why is Bitcoin fair?": "\nIt's a complete irrelevancy. It is still early, and Bitcoins are worth on the order of $3 each. If you want to be an early adopter, buy Bitcoins now.\nIf Bitcoins never become really valuable, what difference does it make whether it's fair or not? The sums involved will be modest.\nIf Bitcoins ever do become really valuable, what difference does it make whether it's fair or not? You can buy Bitcoins now for a pittance and get the same benefits as the early adopters.\nThis is just petty jealousy. It's no different from the folks who missed out on Google stock or Apple stock when it was cheap. It's not just about hearing about Bitcoins first, it's about investing first, and taking the risk of loss. That's how everything works. Maybe it's not fair, but that's how it is.\n", "transactions - Is there any way the Bitcoin network could resist a viral tainted-coin tagging system implemented by regulators?": "\nIn a scenario where bitcoin becomes widely adopted and an important part of the economy, governments instituting such black lists is plausible.\nThere are no technical means of resisting this. The only defense would be a social one, where people agree to only use exchanges, merchants, e-wallets and clients that don't discriminate against black-listed coins.\n", "currencies - What is needed for Bitcoin to become the reserve currency of the world?": "\n\nYou would be hit twice by the currency exchange anyway if you were to buy Bitcoins for your local currency, and then buy the foreign currency with Bitcoins. If you would perform those transactions at exchanges ran by large companies, there is little difference from a traditional model. If instead you would use exchanges like Mt.Gox, the spread would go back to the people, rather than a company. The spread might be smaller or bigger, it all depends on the market.\nBanks and companies like Visa often allow you to withdraw foreign money at a local ATM in the foreign country, sometimes even not charging you anything for the operation asides the money conversion spread. You perform only one conversion for the bulk of your money, and whatever is left over you can sell back at the money exchange. So by bypassing Bitcoins, you can save money (if the banks operated at a comparable margin as the Bitcoin exchanges, be they owned by a single company or not).\nMost Bitcoin exchanges offer you money withdrawal to a bank local to the currency. If you were a tourist, this would not be convenient for you, as you wouldn't have an account in any bank like that. An alternative would be a service like OKPAY, but as it is to handle both Bitcoins and other currencies, there is no need for other exchanges.\n\nSo all in all, your proposed idea does not seem to be plausible at the moment. Main advantage of using Bitcoins for such a task is lowering the spread, which could also be accomplished without Bitcoins (say, an online community currency exchange). The proposed idea would however be more plausible if a whole country would adopt Bitcoins as its official currency, which is very unlikely to happen in the nearest foreseeable future (governments seem to move away from currencies tied to a limited resource, like gold or silver, to fiat currencies to enable easier growth).\n", "synchronization - I didn't receive a Bitcoin Payment. What does it mean when the Client is synchronizing?": "\nThis is probably normal. \"Synchronizing with network\" really means \"downloading the block chain\", and it can take a few hours to a day.\nFollowing the \"catching up\" you should see the number of blocks already downloaded. At the time of this writing there are 220,000 blocks, when it reaches that you are fully synchronized. If the number keeps increasing you're probably on the right track.\nYou can speed it up a bit by forwarding port 8333 on your router (not very important, if you don't know how you don't need to bother).\n", "bitcoin core - Version field in transactions, blocks, etc": "\nThe format of messages occasionally needs to change. This is done in a backward-compatible way by exchanging versions in version messages and communicating in the \"language\" of the client with the lowest version. Through this mechanism, clients running version 0.1 should still be able to talk to the latest clients.\nBlocks and transactions are special. When these formats are updated, nodes can't modify old messages to use the new format because this breaks the crypto. So version 2 nodes have to store and communicate both version 1 and version 2 blocks, and special version numbers are necessary to distinguish them.\nBlock/transaction versions other than 1 are not accepted.\nIn version messages, use the same version as the client version that you're trying to be compatible with.\n", "protocol - How does one know they solved a block?": "\nAssuming everything else in the block is valid, the block hash simply needs to be smaller than the target. https://en.bitcoin.it/wiki/Difficulty explains how to find the target from the bits representation; and to find it from the human-readable difficulty D, you calculate 2^208*(2^16-1)/D.\n", "weaknesses - Is Bitcoin inherently dependent on electricity?": "\nThe network is distributed, so it won't go down everywhere at once.\nLocally, on one hand it is similar to debit transactions - they need to get online to be processed. One can use cellphones though, which have their own batteries to run for awhile, so it's not too bad.\nLastly, one can accept transactions offline (using QR codes for example) and later transmit them through the network, but that carries the risk of double spending.\nAnd if you want truly offline transactions with little risk, use things like Casascius physical Bitcoins.\n", "network - Why is Block Explorer so slow?": "\nOn what pages is it slow? It only seems a little slower for me.\nThe \"mirror\" (which is actually usually the main server) went down for a while, so BBE switched to my server, which has much fewer resources.\n", "security - Does the BerkeleyDB-based wallet.dat implementation leak private key data?": "\nIf you are using an encrypted wallet, private keys are never written unencrypted to disk.\nHowever, the 0.4.0 release (the first to feature wallet encryption) had a bug where - upon upgrading a wallet from unencrypted to encrypted - parts of the unencrypted where not necessarily overwritten, leaving them accessible for a while.\n0.4.1 and 0.5.0 fix this by first rewriting the entire wallet file upon encryption (or the first start afterwards), and invalidating the entire pool of reserve keys that was present before. This means (and has been tested), that if you start with an empty wallet, and immediately encrypt it, it will not ever use any key that was ever written to disk in unencrypted form.\nNote that wallet encryption is not a silver bullet, and an attacker may have other ways of extracting the private key, such as keyloggers.\nEDIT: only now I read your question correctly. The log files may contain anything that was attempted to be written to the database files themselves, and if you are using (or were using) an unencrypted wallet, that may indeed mean private keys as well. Again, if you start with an encrypted wallet in 0.5.0, no keys will be used that ever touched disk unencrypted.\n", "Best place to buy bitcoins?": "\nYou should generally have a look at the charts:\nhttp://bitcoincharts.com/markets/\nA good rule of thumb to judge how much people trust a website is how large is the volume of transactions - the more, the better.\nIn all regards, Mt.Gox is safe, you can buy there in euros, and I don't think you can bypass the fees. If you worry about the last one, you can try finding someone willing to trade Bitcoins with you that you can trust (which can be difficult at times).\n", "privacy - Does Bitcoin wallet encryption also protect my sending and receiving addresses?": "\nClearly your receiving addresses, your sending addresses and their associated aliases are readily available without the passphrase to your wallet as they are visible upon opening the Bitcoin client without entering the passphrase. \nIt's perhaps also worth noting that even if your wallet is encrypted, a successful attacker who has a copy of your wallet could install a keystroke logger to obtain your passphrase. \nThis would seem more likely to happen when your computer is compromised through installing a trojan etc than if someone physically found say a lost notebook PC (for which the attacker would need to install the keystroke-logging software & remote access software, and then give you your computer back so you would type in the passphrase next time you wanted to send coins!)\nSorry, I don't know where the sending and receiving address descriptions are stored, so I don't know how to protect them - hopefully someone else can answer that.\n", "wallet - Where are the receiving and sending address descriptions stored?": "\nYes, all of those are stored in the wallet.dat file. I myself have successfully migrated the wallet file to a new computer and have the addresses and descriptions intact.\n", "client - Bitcoin over HTTP?": "\nThe exit node part of BitcoinJS is sort of what you're looking for. Quote from wiki:\n\nThere are two main ways clients can interact with exit nodes:\n\nREST API \u2013 HTTPS-based asynchronous API usable with almost any\n  language or platform.\nSocket API \u2013 Socket-based API providing realtime\n  data events via JSON-RPC and \u2013 using Socket.IO \u2013 even for pure\n  browser-based clients.\n\n\nExample of using the REST API:\nhttps://exit.trucoin.com:3125/pubkeys/register?keys=1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa\nregisters a public key to get a handle.\nhttps://exit.trucoin.com:3125/pubkeys/gettxs?handle=ManS6KcKCR1lpY0qCPiDOr9ej6HXQcVADFOMOGaMuD4=\nuses that handle to get the transactions of the address.\nIt should also be possible to send a transaction but that part is not very well documented.\n", "Why does mining profitability tend towards zero?": "\nAs with all things related to supply and demand, the market will eventually find its equilibrium, where the cost of generating the Bitoins will be close to their sale price. If the costs were bigger, less cost efficient miners would not mine. If the price was higher, there would be more room for investment that would increase the difficulty, thus increasing the cost to mine every Bitcoin.\nIf you want to calculate how profitable mining is, just put the data into any Profitability Calculator.\n", "payment - How can I accept Bitcoin donations on my blog or site?": "\nAlthough bloggers could turn to an external service to manage this for them, it might be more beneficial to simply offer a simple QR code with a description alongside. This would mean that all of the income from the BTCs would go direct to the blogger.\nMy personal blog has an article describing in detail how to do this. I'm not trying to plug anything honestly, just sharing knowledge. \nThis can be imaged with a Bitcoin wallet, or dragged like a Bitcoin swatch onto the Multibit client. A simple click will trigger a protocol handler within the browser (if installed) that would activate an wallet plugin.\n", "cryptography - How does a signed public key look different from an unsigned one?": "\nThe original data isn't changed by signing (not with DSA/ECDSA, anyway). The signature function takes the original data as input and produces some additional, separate data known as the signature. The verification function then takes the signature and the original data as input.\nSo determining whether something is signed is a job for whatever protocol you're dealing with. In PGP there are signature packets in the message format. In Bitcoin, signatures are given as input to OP_CHECKSIG in transaction scripts.\n", "mining theory - How often forks occur?": "\nBlocks are orphaned once in a while, roughly every few hundred blocks:\nhttp://blockchain.info/orphaned-blocks\nThere used to be a blockexplorer-provided list of chain reorganizations which can occur upon such events (might become available again someday):\nhttp://blockexplorer.com/q/reorglog\nThese chain reorgs used to happen a few times per month.\n", "CPU Mining with a large EC2 cluster - worth the effort?": "\nCPU mining for Bitcoins is almost never worthwhile since the advent of GPU mining. If your EC2 instances are free you're welcome to try but there's a better alternative.\nA decent CPU won't get you but 3-5 MH/s of Bitcoin mining power, which at current difficulty and exchange rates will net you about 0.0046 BTC per day (worth about a penny at current rates). On the other hand, that same CPU will net you perhaps 3 kH/s of mining power on one of the sCrypt based forks, I'll use Litecoin (LTC) for this example. Mining LTC on that same CPU will net you about 3.06 LTC per day which, at current exchange rates, will net you about 0.0153 BTC, worth about 4.5 cents per day. It's still not a lot, but at present CPU mining on CPU-friendly forks is much more profitable than CPU mining Bitcoin directly.\nAs for whether your 50 c1.medium instances would be worthwhile, if (for the sake of easy math) we assume each can produce somewhere in the neighborhood of 2 kH/s of Litecoin mining (decent guess, a 1 MH/s BTC CPU tends to put out about 1 kH/s on sCrypt based variants) then that's a combined 100 kH/s worth about 102 LTC per day, 0.51 BTC per day, or about $1.53 per day. Since I'm assuming the cost of 50 c1.medium instances is more than $76.50 per month, I don't think it would be worthwhile for dedicated mining. If, on the other hand, you already pay for these instances for other purposes and the addition of mining is essentially \"free\" then an extra $76.50 (or 25.58 BTC) per month isn't too bad.\nFinally, yes, all fifty of your instances could work together on a single account in a mining pool. This is so common it actually has nomenclature: each of the running instances would be called a \"worker\" and while some pools allow you to create many workers, that's really just for your own stat tracking and isn't necessary at all. Each instance can certainly submit shares under the same account without error.\n", "transactions - How to calculate a hash of a Tx?": "\nAs explained by Gavin Andersen on the forum - in order to calculate the ID hash of the Tx that is used in the Merkle Tree, one needs to SHA hash the whole Tx message as defined in the Protocol Specification wiki page twice.\nFor example, for the only Tx from the Genesis Block one would double hash the following array of bytes:\n01000000010000000000000000000000000000000000000000000000000000000000000000FFFFFFFF4D04FFFF001D0104455468652054696D65732030332F4A616E2F32303039204368616E63656C6C6F72206F6E206272696E6B206F66207365636F6E64206261696C6F757420666F722062616E6B73FFFFFFFF0100F2052A01000000434104678AFDB0FE5548271967F1A67130B7105CD6A828E03909A67962E0EA1F61DEB649F6BC3F4CEF38C4F35504E51EC112DE5C384DF7BA0B8D578A4C702B6BF11D5FAC00000000\nAnd if double hashed correctly, it would give the following hash:\n4A5E1E4BAAB89F3A32518A88C31BC87F618F76673E2CC77AB2127B7AFDEDA33B\n", "miner configuration - Which mining software/script provides the greatest MHash/sec and power efficiency balance?": "\nMy experience with a 6990 rig is that m0mchil\u2019s Python OpenCL GPU miner is the most efficient one for me.\nBut I would try them out on a 12 hour basis, and do a comparison. Maximum output might be very different between software/hardware combos. Would love to see the results.\n", "security - Does the main Bitcoin client blacklist addresses?": "\nThere is a ban mechanism which is handled in net.cpp.\nAny node which misbehave by more than -banscore (defaults to 100) is banned for -bantime (defaults to 60\u00d760\u00d724 seconds = 1 day).\nHowever, nodes with a local ip address are exempted, and for those a warning is shown in the logs after each misbehavior.\nAlso bans are not persistent, they are lifted when the client is restarted.\nSo, during development, just make sure that your app connects with a local address to the bitcoin client, and you will not be bothered by bans.\n\nHere is the relevant piece of code:\nbool CNode::Misbehaving(int howmuch)\n{\n    if (addr.IsLocal())\n    {\n        printf(\"Warning: local node %s misbehaving\\n\", addr.ToString().c_str());\n        return false;\n    }\n\n    nMisbehavior += howmuch;\n    if (nMisbehavior >= GetArg(\"-banscore\", 100))\n    {\n        int64 banTime = GetTime()+GetArg(\"-bantime\", 60*60*24);  // Default 24-hour ban\n        CRITICAL_BLOCK(cs_setBanned)\n            if (setBanned[addr.ip] < banTime)\n                setBanned[addr.ip] = banTime;\n        CloseSocketDisconnect();\n        printf(\"Disconnected %s for misbehavior (score=%d)\\n\", addr.ToString().c_str(), nMisbehavior);\n        return true;\n    }\n    return false;\n}\n\n", "weaknesses - Does Bitcoin rely on the internet?": "\nYou can technically run appropriately modified Bitcoin on any sort of network of communication, be it LAN, mesh, or otherwise. One could imagine making a mesh network on Zigbee or Bluetooth and allow anyone to connect to those without the Internet, although then the network latency would be way bigger and the Bitcoin network could easily become forked. Preferably there would be at least one proxy server running both on the internet (be it through wires or cellular) and on the distributed network.\nIf you want to make payments without using the internet, use physical coins, simple as that. It is far safer than making a new internet-less network. The only way you can lose in this way is if the Bitcoin value would plummet.\n", "How do I know when my mining GPU has been worn out?": "\nYou can try running different software for mining after restoring the overclock settings back to factory settings. This way if the graphic card fails, you know the problem exists regardless of the mining software and the overclocking.\n", "commerce - tradehill.com alternative?": "\nIf you have technical problems with Tradehill, your first step should be to contact them about it.\nIt's not clear to me in what capacity you want to replace Tradehill. If you want an exchange then Mt. Gox is an obvious possibility, or any one of the exchanges listed here. If you want an eWallet, most exchanges are good for this too, and flexcoin is another possibility. If you want merchant solutions, check out bitpay.\n", "network - Why do some transactions take minutes and others take hours?": "\nFour factors affect this:\n1) The size of the transaction. Smaller transactions get a lower priority. Abnormally small transactions look like spam.\n2) The transaction fee. Abnormally low transaction fees may mean the transaction isn't even relayed. Miners have an incentive to include transactions with higher fees.\n3) Luck. Some miners don't include any transactions. Some don't include any transactions without fees, even if the fee would normally be zero. So it comes down to who mines the next block or blocks. Also, 10 minutes is just the average. You could create a transaction and then by sheer bad luck the next block isn't mined for 20 minutes.\n4) Security. The client 'dribbles' out its own transactions rather than broadcasting them to try to conceal the origin.\n", "transactions - No Account number or Address in listtransactions for generated blocks": "\nThere is an embryo of a  patch on github which was precisely meant to solve this issue. It was announced on the dev mailing list but never received much attention. Now it's a bit outdated (the latest merge with master is from Sep 26). Maybe you can start from here.\n", "protocol - What is the formula to calculate the length of a merkle tree?": "\nThe length of a merkle tree is the sum of a series starting with the number of leaves, halving (rounded up) on every step and ending with 1.\nHere is the algorithm for calculating the length of a merkle tree from the number of leaves in JavaScript.\nfunction getMerkleLength(leafCount) {\n  // Input must be a positive integer or zero\n  leafCount = Math.abs(parseInt(leafCount));\n\n  var merkleLength = 0, currentLevel = leafCount;\n\n  // Most merkle tree implementations return a null hash for empty lists, so the\n  // length in that case would still be one.\n  if (leafCount <= 1) return 1;\n\n  // Loop\n  for (;;) {\n    // Add the current level to the length\n    merkleLength += currentLevel;\n\n    // If the current level is the root, we are done\n    if (currentLevel == 1) return merkleLength;\n\n    // Each level contains half the hashes of the last one and if there is an\n    // odd number of leafs, the last hash is duplicated\n    currentLevel = Math.ceil(currentLevel / 2);\n  }\n  return merkleLength;\n}\n\nEdit: I like readable code, but just for fun, here's the equivalent short version:\nfunction getMerkleLength(leafCount) {\n  for (var len = 0, i = ~~leafCount; i > 1; i = ~~(i/2+.5)) len += i;\n  return len >= 2 ? ++len : 1;\n}\n\nEdit 2: And a C version for good measure.\ntypedef unsigned int uint;\n\nuint getMerkleLength(uint leafCount)\n{\n  uint len = 0, i;\n  for (i = leafCount; i > 1; i = (i+1)>>1) {\n    len += i;\n  }\n  return len >= 2 ? ++len : 1;\n}\n\nvoid main() {\n  uint i;\n  for (i = 0; i <= 100; i++) {\n    printf(\"%u: %u\\n\", i, getMerkleLength(i));\n  }\n  printf(\"%u: %u\\n\", 5000, getMerkleLength(5000));\n  printf(\"%u: %u\\n\", 99999999, getMerkleLength(99999999));\n}\n\n", "network - Is there some kind of draft to support a chain split+merge, like Version Control systems do?": "\nThere is one inherent problem with the solution you described in regards to Bitcoin: the block chain is created in a very specific way. Each block in the block chain links to one and only one previous block, and it is encoded in such a way that if you change the internal structure of the block, it is no longer valid. You should look into the block hashing algorithm. Generally, if you wanted to merge two blocks together, you'd have to solve them all over again.\nThis does not mean, however, that the transactions from the invalid branch are lost. Unless the coins were already spent in the valid branch, one can take those \"lost\" transactions and include them in the next block to be mined. This would mean that the transactions would end up having a couple less confirmations, but they would still go through.\n", "Do we know enough about Casascius to trust their physical coins in the long run?": "\nI can't speak for the community, but if I wanted additional measures of protection against fraud, I'd go for:\n\nStart a company and state its details, so it can be reached and sued if worse came to worse.\nProcess of creating the coins should be audited to ensure no data is kept.\n\n", "client - Is there still a shortage of available inbound connection slots?": "\nIt is due to a lot of people not port forwarding from their routers to their Bitcoin machines. Without the forwarding the client can only make outbound connections to those client that have port forwarding enabled. The limited number of such clients is probably due to people not realizing this need and now knowing how to change their router options.\n", "e wallet - Are there any mining pools that allow a specified amount of bitcoins to be sent to a chosen address?": "\nYou can use an online wallet to handle all of your Bitcoins.\nThe reason you don't want such an option in a pool, is that in case someone steals your password, they can drain your account. This is the reason most pools have a 24h waiting period between when you change your receiving address and being able to send any Bitcoins.\nIn the future someone could potentially make a joined pool and wallet service that will allow you to manage your earned Bitcoins easier, but that is not yet an option (I'm slowly working on it though;) ).\n", "mining pools - Which operating system would work best with pushpool?": "\nI use debian. But ubuntu or any other *nix OS would be fine.\n", "development - Which is better back-end mining pool?": "\nPoolserverJ seems the best so far and easiest to set up.\nPushpool was the original but has some issues. The documentation is also a little hazy if you're a newbie to linux.\nP2Pool is a decentralised pool, meaning that if you want to set up your own private pool, you can't use P2Pool.\n", "Bitcoin client won't connect to the network": "\nYou should get the best results if you port forward port 8333 to your laptop. It is also advised to leave your computer on for a long time the first time you connect to the network, as it has about 1GB of data to download and check. After that the operation should be easier.\n", "security - Is bitcoin subjected to DOS attack?": "\nThe Bitcoin client requires a transaction fee to be paid for low-priority transactions. Transactions of the kind you describe are low-priority, thus the cost of such an attack will be prohibitive.\n", "Read wallet.dat error?": "\nBitcoinSharp does not use the same format that the standard Bitcoin client uses for its wallet file.\nBitcoinSharp simply serializes the Wallet object into Binary and writes it to a file whereas the standard Bitcoin client writes its wallet.dat file in a BerkeleyDB format, so the two are not compatible.\nYou could use something like pywallet to export the keys from wallet.dat and then manually add them to BitcoinSharp's Wallet object, but you won't be able to directly read a wallet.dat.\n", "miner configuration - BAMT Email Alerts Setup": "\nStick with Google and use STunnel to avoid TLS\nThere is a useful article describing how to get this to work here: https://groups.google.com/a/googleproductforums.com/forum/#!category-topic/apps/mail-settings/oCwPE2o_oCM\nThe relevant excerpts are:\n\nYou can use STunnel to allow non-SSL devices to connect.  STunnel\nshould be run on a computer on your network that is up 24/7.  The\nnetwork printers will connect to STunnel using non-SSL SMTP then\nSTunnel will bridge the connection to Google Apps using an SSL\nconnection.  STunnel can be downloaded at:\nhttp://www.stunnel.org/\nYour stunnel.conf file should look like:\n-- begin stunnel.conf --\ncert = stunnel.pem\nsocket = l:TCP_NODELAY=1\nsocket = r:TCP_NODELAY=1\nclient = yes\n[pop3s]\naccept  = 110\nconnect = pop.gmail.com:995\n[imaps]\naccept  = 143\nconnect = imap.gmail.com:993\n[ssmtp]\naccept  = 25\nconnect = smtp.gmail.com:465\n-- end stunnel.conf --\n\nIt's worth reading around the rest of the information on the site\nI tried STunnel and failed! What now?\nTry using the sneaky printer backdoor to Google's SMTP servers that avoids SSL. Instructions are here: http://support.google.com/a/bin/answer.py?hl=en&hlrm=en&answer=176600\nRelevant info is:\n\nIf your device does not support SSL, connect to aspmx.l.google.com on port 25.\nYou must configure an SPF record for your domain with the IP address\nof the device to ensure that recipients do not reject mail sent from\nit. You must also add this IP address to the Email Whitelist box in\nyour Google Apps control panel.\nFor example. if your sending device\nsends from 123.45.67.89, add that address to your SPF record without\nremoving the Google Apps mail servers from the record: v=spf1\nip4:123.45.67.89 include:_spf.google.com ~all\n\n", "transactions - Can Bitcoin help people commit money laundering?": "\nSince the vast majority of money launderers seem to prefer cash, I'd say the answer is no. At least, not yet. The way money laundering works is that you hide illegitimate transactions in a sea of legitimate transactions. There are a vast sea of legitimate cash transactions which makes money laundering in cash work well. Until there are some high-volume Bitcoin businesses, there will be nothing to hide illegitimate transactions with.\nEven if the idea is to buy Bitcoins with dirty cash, sell them at an exchange, and claim you bought them really cheap and held them for a long time -- where can you buy large numbers of Bitcoins anonymously for cash?\n", "trading - What is the superscript number in Bitcoinica prices?": "\nThese are indeed pips, according to this comment by Bitcoinica's owner. That is, they are just an extra digit denoting multiplies of 0.00001 USD.\n", "blockchain - Knowing a single transaction can you track down a Bitcoin user?": "\n\nKnowing the Wikileaks donation address, one knows every address\nthat contributed to them.\nKnowing a given address we are interested in, we can try tracing the coins back to when they were created (which can be harder if they\nwere mined by a large pool, in that case you'd probably get a lot of\norigin blocks).\nGiven an address we know when it received coins and from what address.\nIf the particular wallet contained more than one receiving address, sometimes the addresses would be used together. If you have more than one address in the \"From address\", you know the person had to have them together in on wallet.\n\nAnd now a bit of knowledge one can gain from outside the Block Chain:\n\nA lot of people put notes like \"My Bitcoin Address is: 1HWbVLhxj7bhewhyapMZpyhqWAeAhJd51E\" in places like the forum. Then you can link the addresses to particular nicknames, and in some cases emails, names, facebook pages and so forth. If you use one address for everything, one can know if you contributed to Wikileaks, or other known addresses.\nIf one would have a big node in the Bitcoin Network that by chance would be connected to your Client when it sends transactions using the known addresses, one could potentially trace the IP of your computer. If you have a static IP, this can identify you.\n\nSo all in all, with enough resources, time and determination, one can know quite a lot about a given Bitcoin address. A lot of it can be mitigated with enough diligence, but some of methods might be quite hard.\n", "bitcoin core - (Why) is it difficult to merge and split wallet.dat?": "\nThe ability to import and export keys is in the works, with several forks in the Github project trying out various methods. One of them will eventually be selected and make its way into the official client. Until then we're reliant on tools like pywallet to import and export keys.\nAs for the directory concept, the wallet.dat file stores this information in a BerkeleyDB format, as well as a transactions list. I can see the potential benefits, though there are likely downsides that I've not considered and I'm certainly not qualified to speak to the mindset of the developers. Perhaps you'll get lucky though, at least one big name from the Bitcoin devs has been known to frequent these parts.\n", "attack - What are the risks of using Strongcoin.com as an online wallet?": "\nI am the operator of My Wallet which is a similar javascript based wallet service. I will try and keep this answer as impartial as possible.\nThe Website Owner is Malicious \nThe website operator is free to change the javascript code at any time so if they are so inclined can change the code to uploaded your unencrypted keys or intercept your password. If you do not trust the site owner it is therefore not recommended you use such a service.\nThe website database is leaked \nAssuming the site has been programmed correctly in the event of a database leak only your encrypted keys will be leaked. The attacker maybe able to brute force your password if it is not secure enough, but as long as users are made aware of the leak they will have enough time to move their coins to new addresses.\nThe website server is compromised\nIn the event of a full server breach the attacker may be able to alter the javascript code or website code to send him an unencrypted copy of the keys next time you login. This type of attack is generally less common than database leaks and to have any significant effect would need to go unnoticed by the site operator.\nYou forget your password\nAs your password is never sent to the server the site owner cannot offer a password recovery procedure. In the event of a lost password your key(s) will be unusable. Paper wallet backups can help with this.\nKey logger or virus \nIf you have a key logger or virus on your computer it is possible to that it could intercept your password which the attacker can then use to login to your wallet and spend your coins. Traditional desktop wallets are also vulnerable to this. My Wallet is less vulnerable to this as the site supports yubikey two factor authentication.\nOne final note: Using My Wallet you can add your Bitcoin address only without the associated private key. If you then keep a paper wallet backup of your private key even in the event your account is compromised there is nothing to steal.\n", "security - What is the safest medium on which to store my wallet/private keys?": "\nPrint out your private keys to a Paper Wallet and print the keys on Archival Quality Paper. Those should last until the year 2211. They are however un-encrypted so you should store them in a bank safety-deposit-box or somewhere just as safe.\n", "protocol - Given a Tx message, how does one calculate the fee paid for the transaction?": "\nUse the following pseudocode:\nTotalOutputValue = 0\nFor each Output in tx_out array\n  TotalOutputValue += Output[value]\nTotalInputValue = 0\nFor each Input in tx_in array\n  PreviousOutput = Input[previous_output]\n  PreviousTransaction = PreviousOutput[hash]\n  OutputIndex = PreviousOutput[index]\n  Look up the transaction with hash PreviousTransaction\n  Output = The output with index OutputIndex in that transaction\n  TotalInputValue += Output[value]\nFee = TotalInputValue - TotalOutputValue\n\n", "transactions - Bitcoin script example": "\nIn the output there is a field \"scriptPubKey\" that for a standard transaction looks like this:\nOP_DUP OP_HASH160 62e907b15cbf27d5425399ebf6f0fb50ebb88f18 OP_EQUALVERIFY OP_CHECKSIG\n\nThe hex number is what you get the address from; this is the result of step #3 in https://en.bitcoin.it/wiki/Technical_background_of_Bitcoin_addresses. To get the address continue the process in that example. (Though, arguably the hardest part is calculating Base58Check, for which an example is not given.)\nAlso relevant is https://en.bitcoin.it/wiki/Script#Standard_Transaction_to_Bitcoin_address.\n", "How can I import a private key into the Bitcoin client?": "\nImporting could be done with Pywallet or hopefully soon-to-be-official wallet export/import bitcoin patch, but make sure to backup your wallet first.\n", "economic theory - What would be an estimate of the value gained if the whole world started using Bitcoins?": "\nAccording to xkcd: Money Chart estimated total economic production of the human race as of 2011 is $2,396,950,000,000,000 . Divide it by 21 million and the theoretical maximum price per bitcoin would be $114,140,476, but that figure is impossible, because for one, even in best case scenario Bitcoin will co-exist and compete with other currencies and would have only a small share of the pie. Second, Bitcoin is more efficient medium of exchange then USD, in other words, to complete transaction a someone required to hold bitcoins for shorter period of time therefore less total amount of bitcoins would be required for circulation and that also means lower price.\n", "client - Peergroup download of the blockchain stalls?": "\nThe library is abandoned 7 years ago, and I don't see that anybody picked it up for maintenance https://github.com/search?utf8=%E2%9C%93&q=bitcoinsharp&type= Try to base your application on a library that is still maintained.\n", "security - Two bitcoin addresses - Can you link them together?": "\nYou will not be anonymous unless you take special measures to make it so.\nIf you simply not use the old address to receive new payments, in all likelihood there will be a point where the client will combine outputs from this address and your new addresses, and this will indicate that the addresses belong to the same person.\nIt will be somewhat better if you send all the coins from the old address to a new one (with change, so the amount you should send is lower than the total). Then everyone will know that coins moved from the old address to the new one, but they can't tell if they both belong to you or if this was a payment to another party.\n", "Got the Bitcoin Wallet. How do I transfer money into it?": "\nIt is not possible to buy bitcoins from inside the client. What you need to do is this:\n\nFind someone that you can buy bitcoins from. One way is to use an exchange, such as Mt.Gox, that let's you deposit USD (or some other currency) and then buy bitcoins.\nIn the Bitcoin client (assuming you use the original client from bitcoin.org), get a Bitcoin address from the \"Receive coins\" tab (\"New address...\"). Using a new address for each transfer will increase your anonymity.\nTransfer the bitcoins you bought to your new Bitcoin address. If you use Mt.Gox you would use the \"withdraw\" option. The bitcoins will then show up in your client.\n\n", "Litecoin binary for Linux": "\n(I'm trying to close some old questions.)\nLitecoin has a Linux download button on it's homepage now.\nAs Nick Odell pointed out, you can also find the downloads on GitHub.\n", "gpu - Why would someone rent hashing power?": "\n\nThe person hopes that the future ratio of how much money they can earn with a given hash power will be more favourable, so they enter a long-term contract.\nThe person wants to increase the hashrate of a mining pool they own, whether for test purposes or to attract more people with a high hashrate.\nThe person holds some other cryptocoins and wishes for their price to increase due to higher difficulty the extra hashing power would bring.\nThe person wants to mine coins, be they Bitcoins or otherwise instead of buying them at an exchange (one may not exist, or the person does not want to use it for some reason).\nThe person wants to do other activity that can use hashpower for. The person would need to make special arrangements with the owner of the rig, but it could be possible to use the hashpower for generating vanity addresses for example.\nThe person wants to launch a 51% attack on a smaller cryptocoin network.\nTo commit money laundering. Renting hashpower is not regulated under anti-money-laundering laws like the exchanges. On the other hand, the mined coins can't be traced back, so they can be sold at any exchange with ease.\n\n", "blockchain - Is EFF's proposed Sovereign Key system similar to how Namecoin/Bitcoin works?": "\nNo.  Sovereign keys are simply a technical mechanism to use the DNSSEC trust anchors instead of companies like Verisign.  Trust is still centralized; it's just centralized in a different place.\n", "Current block vs whole block chain attack": "\nChanging the blockchain at a point earlier than the most recent checkpoint is impossible, at least with the main client. It won't be accepted by those clients.\nOne can fork the chain at any point, but the most current block is the easiest as it does not require to backtrack and solve the previous blocks. Unless you have some specific transactions you want to invalidate, you would start from the current block.\n", "nonce - Mining software and pool tricks": "\nThe generation transaction has an extraNonce value in the coinbase field, which is the default value to change to get a new getwork. This is generally done by the pool but can also be done by the miner if he gets the relevant Merkle branch.\nThe timestamp also can be changed by the miner, and the entire list of transactions changes occasionally on the pool's end.\n", "Can I use Bitcoin mining as a data furnace to heat my home?": "\nYes, you can use a Bitcoin mining rig to heat your home.\nWhether or not it's worth doing depends on a number of things, such as:\n\nWhether you have a heat pump, or would otherwise install a heat pump (they generally give you 3kW of heat for around 1kW of electricity)\nWhether of not you have other heating that is more cost effective than electric heating (eg a wood or gas fire)\nWhether it's convenient to have a mining rig in the location you want heated (you lose efficiency if your heat is produce away from where you want it)\nThe current exchange rate of Bitcoins (and the difficulty of mining them), and how those values change over time for at least the payback period of the mining hardware\nThe price of electricity\nThe noise produced by a mining rig. They tend to be quite noisy, so it may be a disturbance to leave it running overnight\nYour technical ability to maintain the equipment, and your time available to do so. If it has a problem and you don't have time to fix it, you stop earning mining income.\n\nThere's no guarantee that mining earnings will pay for the electricity to run them, let alone pay for the cost of the equipment and the labour incurred maintaining it - this is dependent on the demand for Bitcoins, and your costs. There's always a risk that the exchange rate will drop to the point where it's not worth mining at all, or that new technology (eg ASICs) will make your hardware obsolete before it's paid for itself.\nAny web-based profitability calculators that exist won't necessarily take into account all the factors above, and none can predict the Bitcoin exchange rate, so their usefulness will be minimal. I recommend just creating a spreadsheet to do the calculations. To include the value of the heat output in your calculations, consider what you would need to otherwise spend to obtain the same heat output, and include that figure as profit on top of the mining profit (but also of course account for the cost of electricity to run the rig).\nTo predict the electricity usage of a particular setup, see this hardware comparison - a carefully built rig can run 4 graphics cards which might output 600-800W (or more) of heat. Using a desk fan (or similar) to keep strong air flow on the rig should reduce the potential of a convective flow of air taking the rig's heat straight up to the ceiling, where it won't be felt in cold weather.\n", "development - Script - OP_PUSHDATAs": "\nLittle endian.\nSee, for example, the script_PushData unit test in the source tree that pushes one 0x5a byte onto the stack 4 different ways:\n// Check that PUSHDATA1, PUSHDATA2, and PUSHDATA4 create the same value on                                                                \n// the stack as the 1-75 opcodes do.                                                                                                      \nstatic const unsigned char direct[] = { 1, 0x5a };\nstatic const unsigned char pushdata1[] = { OP_PUSHDATA1, 1, 0x5a };\nstatic const unsigned char pushdata2[] = { OP_PUSHDATA2, 1, 0, 0x5a };\nstatic const unsigned char pushdata4[] = { OP_PUSHDATA4, 1, 0, 0, 0, 0x5a };\n\n", "security - How can I copy the blockchain from my working client for use with a live CD savings wallet?": "\nYou can find the blockchain in this directory:\nC:\\Documents and Settings\\YourUserName\\Application data\\Bitcoin (XP)\nor\nC:\\Users\\YourUserName\\Appdata\\Roaming\\Bitcoin (Vista and 7)\nAs blk0001.dat and blkindex.dat. Copying those files to a proper folder on your Ubundu (~/.bitcoin/) should spare you from redownloading the entire blockchain.\n", "security - How safe is it to use a Linux live CD to access my savings wallet?": "\nSecurity is always an issue and complex systems like operating systems are prone to attacks. However, it is possible to use an offline machine to create the signed transactions and then export them to another machine. \nFor example a soft copy of those signed transactions could be copied on to a fresh USB stick, or printed out on paper as plain text or QR codes and so on. These transactions could then be imported into an online Bitcoin client that does not have the private keys, but can just transmit the transactions to the network. \nYour private keys are always held offline and thus only exposed to physical attack vectors which should be sufficient to relieve your concerns.\n", "development - PHP script to create private key & public address": "\nI enjoy using this package :\nUniform Server Key Generator\nAnd with it running, you can just execute : openssl_pkey_new(); to generate a private/public key set.\n", "mining reward - When is the Bitcoin payout for solving a block going to change?": "\nIt halves from 50BTC to 25BTC block reward after 210,000 blocks, which at 6 blocks mined per hour by my calculations works out to be in 358 days, which is around Dec 13th, 2012.\nIt's likely that the number of active miners will reduce substantially at that point, but within a relatively short time the difficulty should adjust down so that approx 6 blocks per hour are mined again. In the time it takes this to happen, transactions may take somewhat longer to be processed and confirmed.\n", "exchanges - How can I buy Bitcoin via a Credit Card or Paypal?": "\nI noticed this question was posted a long time ago and perhaps things have changed so I took the liberty to dig in again and also aggregate most of the answers given here and here\u2019s what I found:\n\nIt\u2019s indeed impossible to buy Bitcoins with Paypal DIRECTLY even today and it's mainly because of Paypal\u2019s TOS (Section 3.7 here) and the issues of chargeback.\nHaving said that there are still a few ways you can buy Bitcoin with Paypal\na. Use VirWox to buy SLL with Paypal and then transfer that SLL to BTC (has high comission, transaction can take between 1 hour to 2 days). The full process is explained here.\nb. You can use Local Bitcoins and perhaps find someone in your area to sell you Bitcoins with cash or even someone not in your area to sell you Bitcoins with Paypal or a credit card.\nc. If you\u2019re only into trading Bitcoins for their volitility and not actaully keep them you can use platforms such as AvaTrade or Plus500 to trade CFDs. However CFDs are for more experience traders and your capital is at risk so take that into account.\nd. If you have a Paypal Debit card you can actually connect it to your Circle account and use the funds on your card to get BTC. This is relevant to US residents only.\nSame thing goes for credit cards. Because of chargeback issues there\u2019s no direct way to buy Bitcoins with them. Currently some options for credit cards are CoinMama, Circle or Cubits.\n\n", "client - Copy wallet to Electrum or Multibit?": "\nSpeaking as one of developers on MultiBit, it is not currently implemented at the time of writing (Dec 2011) but there are serious development efforts to consolidate the wallet file format to suit all major Bitcoin clients.\nExpect to see this functionality in Q1 2012.\n", "Need help, understanding bitcoin value protection": "\nThe value of Bitcoins will fluctuate against the dollar -- for a number of reasons, including the price rising as the result of speculation or from demand for the currency.  The price can and has dropped -- for various reasons as well.\nIf you want to hold bitcoins, then you expose yourself to those fluctuations.\nIf you simply want to use bitcoins for spending without exposure to the fluctuations, here's one method: When you add money to a bitcoin exchange, leave those funds as USDs and only exchange some of those funds to bitcoins at the time that you plan to make your purchase which uses bitcoins.\nThat way you are not exposed to the exchange rate fluctuations.  Do keep in mind that when holding funds at a bitcoin exchange you are trusting that the operator of the exchange is administering properly and keeping your funds (your USDs and your BTCs) safe.\n", "Could the $25/\u00a316 Raspberry Pi computer be used to run mining equipment?": "\nYes and no.\nAs far as FPGAs are concerned, I see no reason why you should not, technically, be able to handle a getwork on one of these and pass the work units to one or more FPGAs via USB.\nThese units do not, however, have a PCIe slot nor do they have any connectors which, to my knowledge, are capable of connecting to an external PCIe enclosure box, so GPU mining is out of the question.\nThe real problem you're likely to run into is software. The Raspberry Pi uses an ARM processor and runs on a custom-compiled version of Debian. All software running on the device will have to be compiled from source (since most projects don't just release ARM-compatible executables) and even then some software simply might not work. I'm not an FPGA expert by any means so I've got no idea what kind of software is required to speak to that particular hardware, but I do at least know that software is required and you'll probably have to do some tweaking to make that hardware work.\nSo yes, it's technically feasible, but don't expect it to be easy (or done for you).\n", "backup - Does bitcoin-qt support jsonrpc?": "\nAfter reading the fine manual, I added these lines to bitcoin.conf:\nserver=1\nrpcport=8332\n\nand it appears to be working. \n", "development - Script - true and false values": "\nAnything that doesn't encode a form of zero is considered to be true. Here's the code Bitcoin uses:\nbool CastToBool(const valtype& vch)\n{\n    for (int i = 0; i < vch.size(); i++)\n    {\n        if (vch[i] != 0)\n        {\n            // Can be negative zero\n            if (i == vch.size()-1 && vch[i] == 0x80)\n                return false;\n            return true;\n        }\n    }\n    return false;\n}\n\n", "development - Script - OP_SIZE": "\nIt pushes one item onto the stack, the size of the item on the top of the stack. The item whose size it pushes onto the stack is not consumed, it becomes the second item on the stack.\nHere's the source code:\n            case OP_SIZE:\n            {\n                // (in -- in size)\n                if (stack.size() < 1)\n                    return false;\n                CBigNum bn(stacktop(-1).size());\n                stack.push_back(bn.getvch());\n            }\n            break\n\n", "What mobile wallet software is available for BlackBerry?": "\nFrom what I understand (not being a BlackBerry or Android developer, just a small iPhone one), programming for BlackBerry is more tedious and low level than programming for an iPhone or Android. The SDK is less user-friendly, and one has to develop for a lot of screen resolutions (similar to Android, not really so for the iPhone).\nAll in all, if someone wanted to create an app like that for BlackBerry, there shouldn't be anything stopping them, just that for now there doesn't seem to be anyone wanting to do so. Then again, since there is more and more emphasis on webapps for any smartphone, maybe the need for BlackBerry-specific app is not that urgent.\n", "development - Script - OP_IF etc. clarifications": "\nThe statements are not on the stack, they're in the script. They start immediately after the OP_IF. They end at the first OP_ELSE or OP_ENDIF, assuming there isn't a nested OP_IF or OP_NOTIF. So it looks like this\n// script to put a number on the stack\nOP_IF\n// script that runs only if the number isn't zero\nOP_ENDIF\n// script that runs no matter what\n\nor:\n// script to put a number on the stack\nOP_IF\n// script that runs only if the number isn't zero\nOP_ELSE\n// script that runs only if the number is zero\nOP_ENDIF\n// script that runs no matter what\n\nYou can read a bit more about in this chat transcript.\n", "history - What is the longest time gap between blocks in 2010 - 2011?": "\nI wrote a program that extracts the blockchain into an SQL database and ran a query. The answer is that block 152218 followed block 152217 after a delay of 1 hour 39 minutes 7 seconds. This was the longest inter-block interval in 2011. There were many longer interval in the early history of the blockchain, often multiple hours or days.\nEdit: I also find it interesting that there have been 78 blocks where the inter-arrival time was less than one second.\n", "raw data - How to interpret Mt Gox Live orders chart": "\nIt's essentially a market depth chart, with the orange/brown line on the left representing the (cumulative) volume of standing buy orders and the blue line representing the (cumulative) volume of standing sell orders. The y-axis represents an amount of BTC and the x-axis represents a given buy/sell price in USD. The green line represents recent historical price shifts in that value.\nAt the top right are large numbers representing the current, high and low prices for the day. From the \"Help / Options\" menu at the bottom right, several additional options are available including the ability to show volume as lighter or darker shades of green on the price line and the ability to disable the gray ghostlines which appear every time the volume curve shifts. This Help/Options dialog also contains the following helpful instructions:\n\nThis is a cumulative graph of the outstanding orders on the MtGox\n  exchange. It shows how much BTC/USD will have to be bought/sold before\n  the market rate hits a certain USD price. For example, let's say you\n  want to know how much USD would have to be spent buying BTC before the\n  price reaches 40 USD. First find 40.0 on the bottom axis. Then find\n  where the blue line intersects $40.0. Now find what value that\n  corresponds to on the right axis. If it corresponds to $200000 then\n  that's how much USD would have to be spent buying BTC before the price\n  reached 40 USD.\n\n", "network - What happens if a monopoly grows in Bitcoin mining and payment processing?": "\nIn that scenario, the corporation could:\n\nLaunch a 51% attack at a whim\nPretty much control the Bitcoin economy, driving the prices up or down how it sees fit (at least until it spends all of their Bitcoins)\nControl which transactions get included in the block or not. This could require one to use their specific client and thus gain more control over the network\nHave a big impact on the Difficulty, as it could turn its machines on and off\nControl the rate at Blocks are mined (for example, holding onto a solved block for certain amount of time before broadcasting it)\nControl who gets to see the most recent Blocks. With this, they could hold out a long chain of solved Blocks for their own client, and when a standard client would finally mine a block, they could just release a couple old blocks to invalidate that chain\n\nAll in all, if you own majority of the hashing power, you can pretty much dictate your own rules, up to what the Protocol allows.\n", "development - How can you find how many keys you wasted in bitcoinj?": "\nWallets contain a pool of 100 unused keys plus every key ever used. You can never run out of unused keys because the client adds new keys to the unused key pool as you use them.\nThe reason it maintains a pool of unused keys is so that future transactions that happen after a backup can still be recovered.\nYou should frequently back your wallet.dat up off-site using non-flash media. You should also backup your wallet.dat after every 50 send transactions (receive transactions do not use up unused keys unless you frequently create new addresses to receive coins with, which would also use the key pool up; in that case, every 50 transactions of any kind).\n", "development - Is there a remote Bitcoin API that doesn't require anything to be stored locally?": "\nThis question is a little old now. But you could use the blockchain.info JSON RPC api. It is designed to be compatible with the original Bitcoind implementation and most functions can operate without private keys.\nhttp://blockchain.info/json_rpc_api\n", "development - Are there live BitcoinJS Exit Nodes?": "\nAccording the to the status message at the bottom of the page: https://github.com/bitcoinjs/node-bitcoin-exit\nFirst permanent deployment is online at https://exit.trucoin.com:3125/\n", "protocol - How was the magic network ID value chosen?": "\nmain.cpp carries this comment:\n// The message start string is designed to be unlikely to occur in normal data.\n// The characters are rarely used upper ascii, not valid as UTF-8, and produce\n// a large 4-byte int at any alignment.\nunsigned char pchMessageStart[4] = { 0xf9, 0xbe, 0xb4, 0xd9 };\n\n", "How does the network determine whether to replace a transaction?": "\nEach node in the network accepts any transactions with a higher sequence field (in TxIn) as long as the transaction isn't locked (lock time hasn't expired).\nThis can't be used as an attack because the client is aware the transaction is unlocked and thus could be modified.  The client (and thus any merchant) will/should treat the transaction as even less secure than an unconfirmed one.  \nTo protect oneself the merchant just needs to wait until the lock time has expired (then transaction is similar to any other 0-confirm transaction) and for even more security wait for 1 to 6 confirmations.\nCurrently the client only supports lock time of 0 (lock as soon as created) and sequence of max UINT (no possible higher sequence) which prevents modifying transactions.\n", "development - Is there a good tutorial on how to use bitcoinjs exit nodes?": "\nYou can start with the included test package first. Then check the dependent projects.\n", "economic theory - How can both individuals and the Bitcoin community as a whole promote and advocate the Wikimedia Foundation to deal purely in Bitcoins?": "\nIf any business would decide to rely solely on Bitcoins as their medium of receiving donations, would face the following problems:\n\nBitcoins aren't mainstream yet, so a lot of people would not understand what is it that the company uses.\nCurrently, getting Bitcoins for an average person is a chore. A lot of people can't be bothered to register in an online store to buy something they already have in their shopping cart (PayPal is addressing that issue with a sort of an OpenID equivalent). There would be even fewer amount of people wanting to use wire transfers or the like to get Bitcoins at MtGox.\nBitcoins aren't stable in their value yet. If a company has predictable costs payable in USD, getting donations in something that can change its exchange rate to USD in seconds by a large factor is not an ideal situation.\nBitcoins don't have the stability of a bank or large institution when it comes to security. If someone hacked into your bank and stole your money, usually the bank would give you the money back. If someone hacked into your machine running Bitcoins and stole your wallet, your Bitcoins are gone forever and nobody will compensate you.\n\nSo all in all, advocating for someone to use purely Bitcoins for everything is a bad idea. If a company would loose a lot of money by doing that, they won't want to deal with it ever again. On the other hand, due to the low costs, promoting adoption of Bitcoins as an additional source of donations is a better idea. This way if it doesn't work out too well, no big loss, if it goes well, so much the better.\n", "transactions - Lightweight client, bare necessities": "\nIn order to correctly show balance and be able to create new transactions, a thin client needs the following information:\n\nCurrent block number\nOutPoint information - hash of the incoming transaction and position of the output relevant to the client.\nSignature script, as it needs to be included in a Tx\nAmount of Bitcoins send/received in the given transaction\nBlock number in which the transaction was included (for knowing the amount of confirmations)\n\n(Does anyone have an idea what else could be useful or needed?)\n", "verification - Tracking transactions as a Receiver": "\nThe client will often know about received transactions seconds after they have been sent. Transactions that have not gotten into a block yet are said to have 0 confirmations. You can see them by adjusting the parameters of listreceivedbyaddress, etc. so that they show 0-confirmation transactions.\n", "development - How do I generate offline transactions in Java?": "\nThat depends on how the Overlay Network will be handling the transactions. It might follow the standard protocol, or develop its own. In any case, as the ON is still in proposal stage, everything can change still. Best advise is to follow the forum thread and the Google Doc and see where it settles at.\n", "alternatives - Can a competing cryptocurrency make Bitcoin obsolete?": "\nIf it is a feature for the client that doesn't affect the Bitcoin network (like say, stronger wallet encryption or something like that), it is not a problem.\nIf the feature is related to the cryptographic security (say, SHA-2 becomes somehow obsolete), then adoption might be problematic. First of all, the developers would have to prepare the change and schedule it in advance (for example, \"Starting with block X, we will be using SHA-3\"). This would require all the clients, both standard and alternative, to get updated before that time or risk not being able to connect to the network.\nMoreover, if the change is related to a vulnerability of a cryptographic algorithm of Bitcoins, then the entire network might get compromised before the update could happen. For example, if securing the old coins would require one to send them to a new address, then in a short period of time before everyone would do it, someone could potentially steal a lot of coins. Luckily, a scenario like this is very unlikely.\nAll in all, adopting new features into Bitcoin is possible, although time and consideration is required. Bitcoin's value is in its stable nature, so revolutionary changes could only destabilize it.\n", "bitcoind - When backing up a wallet, is it required to shut down the bitcoin client?": "\nThe Bitcoin client's RPC interface provides a wallet backup command. It's \"backupwallet <filename>\".\n", "development - In order to \"pay someone back\", must I ask them for a return address?": "\nAssuming that the user uses the standard client, or in fact any client, is a very strong assumption. If the user is using an eWallet service such as Instawallet, in all likelihood the user will not get the funds back, they will be held by the operator and possibly credited to one of his other clients.\nEven if the input addresses are controlled in some way by the user, paying back to one of them can cause confusion regarding the payment's source - it will look as if the payment was for whatever the address was originally associated with. If there is a change address controlled by the user, it is associated uniquely with the payment to you so the information exists to identify it, though the client may not display it properly.\n", "encryption - How do I unlock, decrypt, Bitcoin wallet?": "\n\nClose Bitcoin\nFind your wallet.dat\nRename to wallet.old\nStart Bitcoin\nCopy the address from the new empty wallet\nClose Bitcoin\nRename (new) wallet.dat to wallet.new\nRename wallet.old to wallet.dat\nStart Bitcoin\nSend all your Bitcoins to the copied address from new wallet\nEnter your password\nClose Bitcoin\nRename wallet.dat to wallet.old\nRename wallet.new to wallet.dat\nStart Bitcoin\nYour new wallet should now be unencrypted and all old addresses gone.\n\nThis solves both your problems.\n", "development - How to get destination address from bitcoinj TransactionOutput?": "\nTransactionOutput.getScriptPubKey.getToAddress.toString\nUnfortunately, this gives an exception when dealing with an oldstyle pay-to-IP script, so you might have to deal with these yourself if you need them (which in your use case you probably won't). An example can be found in the Scala code from the link below (from line 120 on):\nhttps://github.com/stefanwouldgo/Bitcoin-Graph-Explorer/blob/master/src/main/scala/Graph.scala\n", "mac - How do I fix GUI Miner stuck at connecting?": "\nyou're using api2.bitcoincz.com:8332 but that's not listed on the pool's site:\nRun your own GPU/FPGA/ASIC miner with the worker credentials you gave earlier, and connect it to following URL:\nhttp://api.bitcoin.cz:8332\n(Main pool URL) \nor\nstratum.bitcoin.cz:3333\n(If you have Stratum-compatible miner)\n", "development - Push deposit notification through HTTP requests": "\nBitping.net is the new service that replaces BitcoinNotify and can provide the service you are requesting.\n", "transactions - ECDSA r, s encoding as a signature": "\nIf you want, you can pay $100 for the standard, ANSI X9.62. Or, you can cheat and look at RFC3278, section 8.2. It is in DER format consisting of a SEQUENCE of two INTEGERs. The first INTEGER is r, the second s.\nIf you look at this transaction you can see that one of the signatures is:\n\n3045 0220\n316eb3cad8b66fcf1494a6e6f9542c3555addbf337f04b62bf4758483fdc881d\n022100\nbf46d26cef45d998a2cb5d2d0b8342d70973fa7c3c37ae72234696524b2bc812\n01\n\nIf we parse that as DER, we get:\n 0:d=0  hl=2 l= 69 cons: SEQUENCE          \n 2:d=1  hl=2 l= 32 prim: INTEGER :316EB3CAD8B66FCF1494A6E6F9542C3555ADDBF337F04B62BF4758483FDC881D\n36:d=1  hl=2 l= 33 prim: INTEGER :BF46D26CEF45D998A2CB5D2D0B8342D70973FA7C3C37AE72234696524B2BC812\n\nYou can also peek at the OpenSSL source code, file ecdsa/ecs_asn1.c:\nASN1_SEQUENCE(ECDSA_SIG) = {\n        ASN1_SIMPLE(ECDSA_SIG, r, CBIGNUM),\n        ASN1_SIMPLE(ECDSA_SIG, s, CBIGNUM)\n} ASN1_SEQUENCE_END(ECDSA_SIG)\n\n", "network - bitcoind -- how can i get the number of peers to exceed eight?": "\nIf you want to enable inbound connections and thus have more than 8, most likely what you need to do is forward port 8333 on your router.\n", "synchronization - Help! I sent coins to my bitcoin wallet before it was properly synced!": "\nYes it is, worry not.\nThe client can generate valid addresses without ever being connected to the internet.\nWhen the blockchain finishes downloading, you should see the incoming transaction.\n", "blockchain - Does the bitcoin block contain minimal transaction detail? (Is it as private as possible given the proof-of-work design?)": "\n\nIn order to send someone some coins, you need to know their public address.\nIn order for them to redeem their coins, they have to show everyone that they possess the private address associated with that public address.\n\nYou could try encrypting your public key by some means and later decrypt it when you want to spend the coins, but you'd probably have to provide something that could identify you similarly to using a public key.\nYou could alternatively encode only transaction hashes in the block, rather than actual transactions and only send the actual transaction to the peer you are sending the coins to. This approach though creates a lot of new problems with validation and so forth.\nAll in all, Bitcoin protocol doesn't have much excess data. In fact, by today's standards one may say it is trying to be too slick at times (say by using something like VarInt).\n", "privacy - Does sending from a green address improve my anonymity?": "\nNo, your theory is incorrect. If anything, the green address makes it easier to trace.\nIf I see a transaction from an Instawallet green address, I subpoena Instawallet and ask them who commanded them to make that transaction. Boom, they found me.\nIf I don't use a green address, how can they tell the coins came from Instalwallet at all? How would they even know who to subpoena?\n\nIf I send the coins directly from my wallet, the merchant could likely trace the coins back to the exchange where I originally purchased them, and possibly issue a subpoena to the exchange (which likely knows my identity).\n\nSo what? If some dollar bills were used to buy drugs that I withdrew from an ATM machine, what does that tell you? And how would they trace the coins to the exchange exactly?\n\nWhereas, if I send the coins via a Green Address, the merchant could not trace the coins upstream at all - even if they issued a subpoena to InstaWallet, there should be no way to determine the original source of the coins.\n\nI don't follow your reasoning. They subpoena Instawallet and ask them which user commanded that transaction through their green address. They identify you. They're just saved the hard work of trying to trace the coins to an exchange.\nIt's pretty much academic anyway. There's no good way to tell a sham transaction (where the sender and recipient accounts are controlled by the same party) from a real one.\n", "Are there any mining pools operating on the Testnet?": "\nCurrently, one can merge mine at this pool on the Test Net:\n\nhttps://alpha.masterpool.eu/\n\n", "transactions - Sent 95BTC to my client from Mt.Gox and it never showed": "\n\nIf you are not sure if your wallet balance is okay, search for your address in the Block Explorer. If you see your coins there, they are safe. I'm guessing it's this address, so everything should be fine.\nMake sure your client is up-to-date. If it is too old it might not be able to communicate with the network. (remember to backup your wallet.dat beforehand)\nIf your updated client can't connect to the network (0 connections), check out this topic.\nIf your client is connected to peers, but after an hour you don't see any block progress, try closing down the client, deleting blk .dat files from your Bitcoin data directory, and then starting it again.\nWhen you see your block count progressing, be patient. Leave your computer running the client over night. The procedure takes awhile, as Bitcoin needs to download and verify over 1GB of data.\n\nIf all else fails, you can try redeeming your wallet at MtGox (remember exactly if this is the only service providing this functionality) and using an online wallet service, like StrongCoin, to never have to deal with the problem again.\n", "Where can I go to read up on encryption methods used in Bitcoin?": "\nHere's a short explanation that might help you understand it. It's grossly oversimplified but just designed to help you get the general idea.\nImagine a world in which multiplication and addition were irreversible. That is, division and subtraction do not exist. It is not too difficult mathematically to create a world where division and subtraction are trillions of times more difficult than multiplication and addition, so for practical purposes, division and subtraction are impossible.\nNow, let's say we all agreed on a very large number. Call it G. It's some big number we all agree on.\nNow, you can pick a random number and store this someplace very safe. Call it your \"private key\", S (for secret). Now, multiply it by G. Call the result your \"public key\", P. You can tell anyone your public key. Since they can't divide it by G, your private key will stay private.\nNow, say you want to \"sign\" something, O. What you do is you take that something, add your secret key to it, and publish the resulting number. So you publish: O+S, that's your signature\nFirst, nobody can tell your private key from that number. They'd have to subtract, and that's not practical. And nobody else can produce that number, they'd have to know your private key to know what to add to O.\nSo all we need is for someone to be able to prove that's the \"right\" number and we're there -- and they can do that. Why? Because G * (O+S) = G * O + G * S.\nThey know what you claim is O+S ... the signature. G*S is your public key. And they know O. So with just some addition and multiplication, they can compute both G * (O+S) and G*O + G*S. So they can check if the number you published really is O+S if those two are equal, thus that the person who computed it knew your private key, and thus it functions as a signature.\nThe challenge, of course, is to create systems in which multiplication and addition are possible but subtraction and division are not. And there the math gets complicated. Bitcoin uses a system where division requires discrete logarithms and a change to the algorithm so that it doesn't matter if addition is reversible.\n", "What countries are already represented in the Bitcoin network?": "\nIf you are interested in Bitcoin nodes, This website seems to keep a count of how many of them are connected by country:\nhttp://bitcoinstatus.rowit.co.uk\nOr, if you want more graphical (and cooler looking) data, just look at this globe:\nhttp://www.weusecoins.com/globe-bitcoin/\nIt shows you what amount of Bitcoin nodes are connected in each geographical area not only at a country level, but going down to what I believe is a city level.\n", "bitcoind - Guidelines for creating a PHP driven web app for redeeming Bitcoin coupons": "\nI modified the open source Intersango exchange code so that it can issue and accept Bitcoin coupons.  You can view the code to see how I did it.  My code doesn't store the whole coupon code in the database, so even if a hacker gains read access to the database, they can't redeem the unclaimed coupons.\nTo answer your particular questions:\n1) Is there a sample code for sending coins using bitcoind / PHP ?\nYes.  Here's some code that does it in a very simple way.\n2) Is there a 3d party API providing such functionality (instead of using bitcoind)?\nI don't know.  Maybe one of these has what you want.\n3) Do MtGox and Tradehill have APIs for transfers?\nTradehill's no longer operating.  MtGox does.\n4) Is captcha a must?\nNo.  They're annoying.  Have the code which checks the coupons take a long time to return a result, and only allow the users to check one at a time.  Then they can't brute force the coupons in reasonable time.\n", "development - What are the major reasons for various Bitcoin-related projects' downfall?": "\nOne factor is that people's enthusiasm for Bitcoin drives them to step well outside their comfort zones and do projects they wouldn't otherwise. Bitcoin is a new startup economy and the plethora of opportunities is tempting. But the lack of experience or skill can lead them to mistakes which bring about the end of the project. Bitomat.pl is a great example - the owner tried to make use of AWS without having a clear idea how they work.\nAnother factor - especially with business ventures - is overestimation of the Bitcoin market size. The market is very small, and I have the feeling that people's general excitement about Bitcoin isn't matched by their willingness to actually use it. If it's a niche service the target market is the intersection of people in this niche with people who are using Bitcoin, which is tiny, and for more mainstream services, those that are founded just to offer the service in Bitcoin are often inferior to established mainstream offerings (see above point). It comes down to the revenue not justifying the overhead costs, so the project is abandoned.\nCreating a successful alt currency is an immense undertaking, and so far has mostly been tried by people who seem to think that changing a few parameters is all it takes.\nI don't have any specific suggestions how to avoid this, other than trying to be realistic about the viability of the project and the personal ability to carry it through. This shouldn't, of course, come at the expense of being a bit bold and daring.\n", "future proof - What happens when NameCoins stop being generated?": "\nThe Namecoin block reward is to be halved every 4 years, similar to Bitcoins. The fee to register a domain in Namecoin is set to decrease by the factor of 2 every two months, and later by a factor of 4.\nAs the price of registering a domain go down way faster than the block reward, there won't be a shortage of opportunities for registering domains. On the contrary, soon the price of a domain might be so cheap as to make them almost free. As Namecoins are destroyed though, eventually in the far future one might expect to run out of Namecoins, but with the price/reward ratio decreasing so fast, the project can become obsolete by then.\nThis seems to create a lack of balance of the Namecoin protocol that can be addressed in the future.\n", "transactions - Will BTC value depend on their history?": "\nThere is none, and I don't think it will ever be significant. There is a gentleman's agreement that's part of what makes Bitcoin work that a Bitcoin is a Bitcoin is a Bitcoin.\nYou can have a few \"rare Bitcoins\" with extra value. I might pay extra to have one Bitcoin transferred to me directly from the coins in the genesis block, for example. But just like there can be a few rare dollar bills, a dollar only works as a medium of exchange if more or less, we all agree that a dollar is a dollar. A prime serial number is cool, but your grocery store can't care about that if it wants to do business.\n", "namecoin - How can I know *exactly* when my name_new domain is ready for the name_firstupdate step?": "\nIt seems you can issue your name_firstupdate transaction whenever you're ready (in particular, right after doing the name_new).  It won't be included in a block until the name_new is mature (12 confirms) but should be picked up shortly after that happens.\nI don't have any source for this other than recent experience, but my names are showing up when I do name_list so I take it that they are properly registered.\nEDIT: I thought about it a little, and I suppose you should wait a little bit (at least until your name_new is included in a block).  The reason being that nobody can know what name you're trying to register until you do name_firstupdate, and so they can't steal it from you.  Sending both the name_new and the name_firstupdate is vulnerable because someone can quickly issue their own name_new for the same name, and depending on luck (or in the worst-case, their control of a significant hashrate) claim it before you can.\nSomeone more familiar with the intimate details of how requests for the same name are resolved can comment on whether this scenario is possible or not.\n", "economic theory - Why did Bitcoin transaction volume heavily increase in November and December of 2011?": "\nI'm not sure the volume actually did increase so much in November and December.\nThe actual amounts transacted each month were:\nJan 31 2011   3,679,198.19243835\nFeb 28 2011   4,533,818.22264172\nMar 31 2011   9,331,953.39257620\nApr 30 2011  13,893,407.03577082\nMay 31 2011  11,850,890.09316489\nJun 30 2011  73,031,161.99932121 <-- biggest\nJul 31 2011  37,718,094.01889341\nAug 31 2011  17,348,635.19178118\nSep 30 2011  17,616,839.59721035\nOct 31 2011  12,008,040.32522139\nNov 30 2011  49,968,992.05725216\nDec 31 2011  46,978,824.26111485\nJan 31 2012  11,664,075.33329784\n\nThe blockchain.info graph appears to ignore coins which are moved more than once in the same block.\nTo see that the blockchain.info graph is ignoring some volume, consider block 133233.  That's just one of the >100 blocks from 25th June, and it alone contains transactions worth 2,420,580 BTC.  However, the blockchain.info graph shows that no single day in June had a volume over 1 million BTC.  Scrolling to the end of block 133233 shows a whole page of small payments from a 46k BTC address, which the blockchain.info graph ignores.\nAccording to the blockchain.info graph, the biggest day in December involved transactions worth 5.834 million BTC.  There was only one day in December with that much volume, and that was December 6th, with 6.903 million BTC.  On December 6th, the volume was dominated by a 440k coin being moved 15 times, accounting for 6.601 million of the day's 6.903 million volume, so the blockchain.info graph must be taking 13 of these 15 movements into consideration.  The 15 movements occurred in 13 blocks - the coins move twice in each of blocks 156242 and 156346.\nThe origin of this huge coin was on November 16th, ten 50k coins were combined into a single 500k coin.  The coin moved around a lot from address to address until 8th December 2011, when it was broken up into hundreds of small pieces.\nEdit: see this graph of \"bitcoin days destroyed\", which ignores rapid repeat coin movements by weighting transactions by the amount of time since the inputs were created.  It mirrors the data I pasted above, showing that June was a bigger month than November.\n", "client - How to know if a transaction is valid?": "\nOn the bitcoin wiki, there is rather complete list of validation checks that are done by the Satoshi client: Protocol_rules.\nThere is a section specifically about transaction checking as well.\n", "Are there any services hosting Bitcoin-related ads for websites?": "\nThere is not anything like adsense yet, but there are smaller ad platform. Here are a few:\n\nhttp://dailybitcoins.org/ they offer both ads by number of impression and per click.\nhttp://www.bitcoinadvertisers.com/ they claim to be the biggest, I do not know how true that is.\nhttp://anonymousads.com/ They have a significant presence in the Bitcoin community.\nhttp://puppytwist.com/ they are pretty simple to get started with, high payout too\n\n", "What are the most secure-yet-convenient ways of creating a wallet, that require just remembering a password?": "\n\nTake a password.\nHash it with SHA.\nUse the hash as a private address.\nGenerate your public address from that private address.\n\nGuess this would be the easiest algorithm for having a deterministic wallet. One could easily make a web service or a program to generate those addresses, but people generally don't trust third party services like this.\nEDIT:\nStrongCoin allows one to generate a private key from any sentence, and given that they encrypt the private key before your browser sends it out, one can trust them not to know it. Then, you can decrypt the private key (as far as I know, also on your machine), and import it wherever one needs (provided you don't want to keep your coins online). It is a small workaround, but seems to fulfil your friends' needs.\n", "services - Alternative currencies eWallets": "\nYou can use the btc-e exchange for example.\n", "trust - MtGox - trusted vs verified": "\nAt the time of this writing, \"Verified\" Accounts are eligible for monthly/daily withdrawal limits up to 10 times the default daily amount and 5 times the default monthly amount, while \"Trusted\" Accounts are eligible for monthly/daily withdrawal limits up to 100 times the default daily amount and 50 times the default monthly amount.\nFor verified status it is enough to send by email a scan of the ID and bill, and they only need to be translated if they don't include an English name. For trusted status, physical copies of the documents must be sent by mail, they must be certified by an apostille, and if they are not completely in English they must have a notarized translation.\nThe withdrawal limits for normal / verified / trusted accounts are:\nDaily BTC: 400 / 4,000 / 40,000\nMonthly BTC: No limit\nDaily USD: 1,000 / 10,000 / 100,000\nMonthly USD: 10,000 / 50,000 / 500,000\n\nYou can also choose to lower your limit if you want.\n", "security - Would it be possible to create a mining pool service that specifically processed only certain transactions?": "\nFrom what I understand, you are asking whether one can customize a client running at a mining pool to favour some transactions based on factors like what metadata they contain or where they were sent from.\nThe answer is, yes, it would be pretty easy if you would be able to program a custom client or pool software.\nSearching for a piece of information in a transaction is pretty easy and shouldn't require too much processing power (one could for example use OP_PUSHDATA and later OP_DROP to store some data without affecting the transaction). The downside is that anyone could see which transactions were potentially prepared like this.\nIf you wanted to discriminate based on where the data came from (for example, your own eWallet, or custom wallet running on a computer), you'd need to spend some more time coding, but one couldn't distinguish between your special transactions and the normal ones. You could for example encode the client to wrap the transaction up in some data packet and sign it using a specific key and algorithm before sending it to your server. You'd have to write some special code to check the signature and relay the information to the pool, but it shouldn't be too hard.\nSuch service would certainly go against the spirit of Bitcoin, and probably you'd get some backlash from the community if it found out, but it is possible none the less. Unless such a pool would hold a considerable amount of Bitcoin network's hashing power however, it would not disturb how the network works. However, if it was to reach 51+% percent of the hashing speed, as it is always with such an attack, it could control the entire network.\n", "development - How do pools get the needed transaction information?": "\nThe Bitcoin client tracks transactions that can validly be included in a block. Mining pool controllers issue a getwork command to the client to get work units to give to their miners. The client includes as many valid, normal transactions as will fit in the block, preferring transactions with higher fees and priorities and ignoring transactions that are non-standard or look spammy and have too low a fee.\n", "exchange rate - recent prices changes": "\nAccording to Google Trends, there was an article on Slashdot about Bitcoins:\nhttp://www.google.com/trends?q=bitcoin&ctab=0&geo=all&date=mtd&sort=0\nAnd one could also attribute it to some other little things, like the small hype about The Good Wife's upcoming episode, or many prominent websites accepting Bitcoin donations:\nhttp://www.thebitcointrader.com/2011/12/bitcoin-bounty-ladder.html\nBut then again, pricing Bitcoins at 2$ might've been psychologically too low for some people (like the miners that heavily invested in hardware around the big bubble).\nAll in all, there isn't any sure prediction about how the Bitcoin price will behave, as the project is still young. Anyone can speculate, and your guess is as good as mine. If you want to discuss this issue, the question should be addressed on the forum, not on StackExchange.\n", "difficulty - What is the ecological effect of increased work for the Bitcoin chain?": "\nBlockchain.info reckons the network used    156.51 megawatt hours of electricity in the last 24 hours. This random physics page I googled up reckons a car driving at 40mph takes 100kW (so, 2.4 MWh in 24 hours).\nSo by these (very) rough figures, running the Bitcoin network takes about as much energy as driving 65 cars.\nHow many vehicles are used in the transportation of physical cash? Not to mention the energy costs of physically storing and securing cash. I'd say Bitcoin is almost certainly a net positive for the environment to the extent that it displaces physical cash.\n", "alternatives - Is \"Dacoinminster's Second Bitcoin Whitepaper\" logically/economically consistent?": "\nIt will fail for the same reason other attempts to stabilize currency values always fail. The first time there's a crisis, the regulator will have to decide whether to permit the crisis or prevent the crisis. If they permit the crisis, people will realize that the promised 'guarantees' are shams. If they try to prevent the crisis, they will run their reserves down to nothing, and the same thing will happen as if they permitted the crisis except they'll be broke.\nIf you make one small change though, I don't see any major technical flaws. Simply accept that the regulation will be maintained only under normal conditions and that crises may push the ratios out of bounds. The regulator should have a policy for how it detects a crisis, what it does during them, and how and to what extent it compensates people harmed by them afterwards, if at all.\nFor example, before banks were Federally insured, they would have a policy that the board of directors of the bank could declare a \"crisis\", suspend withdrawals, but later compensate people with extra interest.\n", "wire transfers - Bitcoins & Somalia": "\nThe system the Somalis (and many others) have been using to send money around the world for centuries is called hawala. Monetary futurist Jon Matonis calls Bitcoin a potential replacement for hawala.\nRight now, I suspect that Somalis would be hard-pressed to use Bitcoin for personal remittances, owing to the lack of local exchangers and Bitcoin-accepting merchants on the ground. However, traditional hawaladars might well use Bitcoin as a means of settling accounts among themselves, while taking receipts and making payouts in the locally-preferred fiat currencies.\n", "security - Which bitcoin client distribution to use on a secure pen drive?": "\nYou can run MultiBit on a pen drive in a portable manner if you include Java runtime environments (JREs) for the operating systems you are interested in.  By including a JRE on the pen drive you can be sure it will run on the target computer.  MultiBit runs on Windows, Mac and Linux.\nThere is some help on how to set up MultiBit on a pen drive here : http://multibit.org/help_runFromUSBDrive.html\nYou can create a shell script / bat file with the single line: 'local-path-to-jre/java -jar multibit-exe.jar' to start it up using your included JRE.  (Note that Macs are guaranteed to have Java installed so you do not need to supply a JRE for that platform.)\nThere is a detailed tutorial on how to install a JRE here: http://www.dreamincode.net/forums/topic/42544-putting-java-on-your-flash-drive/\nYou can store your MultiBit wallets on your pen drive.   By default the path to the wallets is stored in the MultiBit config file multibit.properties as an absolute path (i.e. with a drive letter/ name).   I think you can tweak this to put in a relative path which would then open automatically on any computer.   Alternatively you can just go to the 'Your Wallets' screen and press the 'Open Wallet' button to open it manually.\nStrictly speaking MultiBit does keep a local copy of the blockchain but it is the bitcoinj block chain so is less than 20 megabytes. \n", "Private credit card/debit card exchanges?": "\nIf you operate below the radar that practice can thrive.  For instance, if you were to accept a friend's credit card swipe using your Square dongle for the sale of your bitcoins, you'ld probably be in violation of the merchant agreement.  \nIf the charges are from friends and family and only made occasionally Square will probably never know nor care what the reason was for the purchases.  But start doing regular \"card not present\" tranasactions for larger transaction amounts (e.g., $100 or more) and that's probably when you'll end up getting asked for more details on your business activity.\nDo know that you expose yourself to the risk of a chargeback should a payment dispute occur. \n", "How hard is it to transfer money between Bitcoin exchanges?": "\nThat's exactly the service https://www.bitinstant.com/ provide, it should be fairly simple and I think they and mtgox have the API necessary to do this by a bot.\n", "exchanges - Are there any open-source trading bots out there?": "\nI wrote a simple market maker bot in Python: https://github.com/chrisacheson/liquidbot\nThis software allows you to place orders on MtGox market.\n\nLiquidbot uses ezl's wrapper code to interface with MtGox: https://github.com/ezl/mtgox\n\nAricie runs a hosted market maker bot platform: https://dnnbitcoin.aricie.com/default.aspx\n", "development - What is the \"wallet export format\"?": "\nAs it was explained on the forum, it is a base58 encoded private key with added 0x80 byte at the front and 4 checksum bytes at the end.\nMore detailed explanation is not available on the wiki, as well as in a new testing suite.\n", "client - How to backup Android Wallet?": "\nBitcoin Wallet for Android supports backing up your private keys to external storage (e.g. SD Card). Just select \"Export/Import private keys\" from the action bar overflow menu.\n", "miner configuration - Where are the Diablominer Config Settings stored in Mac OSX?": "\nCorrect locations might be either ~/Library/Application Support/Diablominer or ~/.diablominer\nOf course it might be in in an incorrect location. Super Meat Boy, for instance, stores its configuration inside the .app itself (brrr). To check there you have to right click the app and \"show package contents\".\nThe best way to find this configuration file, if you already know at least the file name, is casting find ~ -name filename, hoping at least it is somewhere in your home directory.\n", "trading - Are there any chart tools out there?": "\nSlush has made A bridge to feed Bitcoin exchange data to Sierra Chart.\nOf course, if all you want is to look at a candlestick chart (and even if you want a bit more than that), there's always http://bitcoincharts.com/charts/.\n", "Mining as a screensaver": "\nThere's a project on google code: http://code.google.com/p/miner-scr/\n", "payment - Bitcoin as subscription method": "\nRepeated transactions using Bitcoins is impossible, unless you have access to the private key. This requires a specific client. Such functionality is not yet available, as most people encrypt their wallets (the client can't decode it without the user. The second approach would be preferable.\n", "currencies - Cryptocurrency with less deflationary properties": "\nI believe that it's by design.\nAs others have stated, several other crypto-currencies have different inflation rules. I believe, however, that Bitcoin was designed with a fixed money supply to motivate early adopters to adopt the currency, thus bootstrapping it into existance.\nOne could argue that \"it's not fair to late comers\", but if it works (= it eventually gets millions of people to use the currency), then it was a good design choice.\nIt makes it relatively easy to reason about potential worth of BTC. The argument goes like this: \"If there will only ever be 21,000,000 BTC, and some day 1% of the entire world be using it, then 1 BTC will be worth 1/2,100,000,000 of the world's 'value'. I better get me some of that BTC\". This calculation does not depend on when exactly is \"some day\" - be it 10 or 100 years in the future.\n", "mining hardware - Is there a miner with a controllable hashrate?": "\nI suggest you run the miner at full load but decrease GPU core clock speed (GPU mem clock speed should always be reduced) and even more important GPU voltage.\nReducing GPU core clock speed should reduce power linearly. Also it allows you to decrease voltage further which reduces power quadratically. Doing so you can reduce noise dramatically.\nIf you use cgminer you can underclock and undervolt from within the program itself. If you use another miner you can use a program supplied by your graphic card's manufacturer (e.g. MSI Afterburner, atifonfig on linux) or a third party software such as AMDOverdriveCtrl (Linux). There is also my very own windows command line tool clocktweak (not free).\n", "transactions - Are bitcoins INHERENTLY fungible?": "\nThat is accurate. Let me start explaining how Bitcoins work from the beginning:\n\nBitcoins are first created when they are mined by solving a block. The first transaction in the block is basically you saying \"I'm giving myself 50 Bitcoins to my address A\" (plus transaction fees from the block).\nWhen you want to spend Bitcoins, you have to point to one or more transactions that show where you got them from, and say how many Bitcoins you are transferring where. It's like saying \"I got Bitcoins at transaction X. I'm sending 20 coins to address B.\"\nThe point is that more often than not you don't want to send all the coins you got from the transaction, so you also specify how much change you are sending to another address, usually controlled by yourself: \"I got Bitcoins at transaction X. I'm sending 20 coins to address B and 30 coins to address A.\"\nSince all of the above is cryptographically signed, one can be sure nobody can spend coins they don't have (spending more than they have, spending someone else's coins, etc).\nTo make sure nobody is cheating, everyone is looking at everyone's hands by checking each transaction that comes their way. If you cheat, your transaction does not get forwarded.\n\nI hope that explains the concept of how Bitcoin works in regards to your question. Just to be clear:\n\"Does each bitcoin has a unique identifier, like currency notes have serial numbers?\"\nNot like currency (that each bill has a serial number and you can't break them apart), more like bank statements (the identifier identifies the transaction on a certain amount of Bitcoins), but that's still a simplification.\n\"If so, could you trace a particular bitcoin's ownership chain (ie. find the current owner of a particular bitcoin by its identifier)?\"\nYou can trace the history of transactions on the set of Bitcoins up to who mined them, but not on a particular 1BTC. It's like saying \"Alice paid Jill $10. Jill got $20 from Bob. Bob got $50 from the mint.\"\n", "nodes - What benefit does a non-mining client provide to the network?": "\nA non-mining client will:\n\nPropagate transactions to other peers, including the mining pools.\nPropagate peer list, so everyone will have a wide list of peers to connect to.\nPropagate the blockchain.\nHelp decentralise the network by doing all that.\n\nSo it essentially takes the burden off the bigger nodes by sharing data. It is especially true for the block information, as it can get quite lengthy.\nThis is a bit less true for clients working without forwarded ports, as they connect to few nodes, usually some bigger ones that are connected to many peers.\n", "currencies - Can I use Bitcoins in a game?": "\nThere's one thing that you must consider.\nIf you were using your own Mycoin instead of Bitcoin, you could grant users coins in game (in a limited amout), so that \"premium\" features could be earned simply by playing a lot (which some games do). Now, you wouldn't give people bitcoins that costed you money just for playing your game (for free), would you?\n", "services - Could bitcoins be used to filter spam?": "\nUsing Bitcoins as a reward and micropayment system is possible. You wouldn't want to send a separate transaction for each micropayment (fee/transaction ratio would be quite big), but you can pay everyone down to a couple decimal places for each operation they make say, once a day.  Details of implementation would vary, depending on what you want to do exactly.\n", "privacy - How much anonymity do mining pools provide?": "\nEligius is the most anonymous pool I know of, as it doesn't require registration. Quoted from the Bitcoin wiki: \"To use it, a miner merely needs to be directed to mining.eligius.st on port 8337, with the username set to a valid bitcoin address (which receives the payout). No registration is needed.\"\nPools I'm aware of that have been hacked include nofeemining.com (userids, passwords and emailed were published to the web - the administrator didn't actually notify users of the extent of this. The pool has since closed), ozco.in (this was treated very seriously), and abcpool.co (some balances stolen, but treated seriously). However, if anything, the likelyhood of a being hacked again is probably less than some of other mining websites that haven't yet been compromised.\nGiven that most pools require little more than an email address (and you can create an anonymous email address easily enough on various websites), a user can choose to remain reasonably anonymous with minimal effort.\nPerhaps the biggest risk to user anonymity is through your IP address - if you provided personal details to an untrustworthy website, say dodgyexample.com, and then mined \"anonymously\" at a theoretical site dodgymining.com, your IP address could be used to link the accounts details as being owned by the same person.\nFurther to the above, the payouts you receive through a pool may be linked back to you through the Bitcoin blockchain, depending on where you spend your bitcoins and whether you have shifted them between wallet addresses before you spend them. This is unlikely though, as you will most likely spend your bitcoins somewhere that the malicious individual cannot link back to you.\nSee also: How can one remain relatively anonymous while using Bitcoin?\n", "mining pools - How does one mine Namecoins?": "\nThe -gen flag actually started a CPU miner process in older versions of the Bitcoin client, before CPU mining became obsolete.\nWhat you're probably thinking was more like bitcoind -server or `bitcoind -server -RPCALLOWIP=192.168.1.* -RPCPORT=8333 which would start a listening Bitcoin server from which a proper miner could obtain getworks. Since namecoind is a direct port of bitcoind with only the DNS-replacement functionality added, the flags are the same. Nothing special or fancy required, just follow any old \"how to solo mine\" tutorial and replace bitcoind with namecoind.\n", "mtgox - Has anyone tried transfering 0.00000001 BTC (the currently minimum amount) successfully?": "\nYes, I have successfully transferred 0.00000001 BTC (commonly referred to as a Satoshi) before.\nWhat is possible within the scope of a MtGox withdrawal is another question entirely. MtGox uses a custom client and has a fee structure and other assorted math to contend with that may not allow for such a transfer at present. If your withdrawal has not appeared in Block Explorer you should contact MtGox support as it may reflect more on their modified system than the default behavior of Bitcoin.\n", "Mini private key, PBKDF2 rounding": "\nAs it is already being discussed on the forum, the standard is currently not in use by anyone, so its implementation details can change over time.\n", "privacy - How can I control which coins to spend in a transaction?": "\nCurrently this is not possible with the standard client, other than making separate wallets. There is a patch for coin selection on github, which was very promising. So this feature may make it into a future version.\n", "trading - Is there any desktop notifier application for bitcoin prices?": "\nIf you're looking for a solution which will run on linux, then there's always a the wget command:\nwget -q -O - https://mtgox.com/code/ticker.php\n\nYou can run it in a loop in a terminal :)\nUnder the xfce desktop environment you could use the genmon panel plugin and feed it Mt. Gox's last trade data. Speaking of which, I think I'll do that myself. :)\n", "commerce - Largest current merchants accepting Bitcoin?": "\nThe Bitcoin wiki contains a rather large list of companies that accept Bitcons. You can also add yourself to it once you started accepting Bitcoins.\nThe truth is Bitcoin is still in it's early days; soon it will be much easier to accept them.\n", "privacy - Anonymity versus trust": "\nIf you have a secure channel to the recipient or some way to identify communications as coming from the recipient, just have them send their Bitcoin address. If you have no such channel or method, it's obviously impossible. What can you do to prove your address is yours that I can't do to prove my address is yours?\n", "exchanges - Is the mtgoxlive depth chart information accurate?": "\nUnfunded orders obviously don't show up in the orderbook. I assume that mtgoxlive is based on the same data provided by the API so it is probably accurate.\nIf you really want to know, just compare the market depth from mtgoxlive with the ones shown at bitcoincharts and clarkmoody.\n", "ubuntu - Miners dogpiling on one device": "\nYou could check the temperature on the devices, the one active should be running much hotter than the others.\nIf they're all running hot the bottleneck is elsewhere (CPU or memory/bandwidth). If none of them are running hot you've bought one hell of a CPU to get 200Mhash.\nElse it's advisable to check whether or not you can use the non-default videocard at all.\nI'm afraid I lack the videocards to test this myself :)\n", "websites - What is the btc.to address shortening algorithm?": "\nThe results are specific to the website and the order in which the addresses were input.\nThis can be easily determined by experiment. I took a random address from BE and it gave me http://btc.to/2z7. I took another address and it gave me http://btc.to/2z8.\nSo clearly, it stores all given addresses in a database, and the URL is the address ID encoded in base 36 (experiment also shows that it's case insensitive).\nAlso, it only accepts valid Bitcoin addresses.\nMore generally, it's impossible for any algorithm to take an arbitrary long, high-entropy string and give a short string which can be uniquely mapped back to the input.\n", "transactions - Comment-to in the API": "\ncomment and comment-to are both just stored as text with the transaction. The intent is that comment be used to store what the transaction is for, and comment-to be used to store the name of the person or organization to which you're sending the transaction.\nNeither are stored anywhere besides your wallet (they're not sent with transactions), and neither are encrypted in any way.\n", "Why can't we set fees to a fixed amount say 0.005 BTC?": "\nI was also giving the problem a bit of thought, and here are some conclusions I reached:\n\nIt is impossible to set a fixed fee once and for all, as one does not know the volume of transactions that will appear in the future, nor how big an exponent of Bitcoins will be a \"common sight\" (before Bitcoins became popular, someone paid 10kBTC for a pizza for example). So the fee would need to be adjusted over time, a bit like difficulty.\nPercentage of transaction amount would be harming the people owning large amount of Bitcoins in one address, as in order to spend some of their Bitcoins, they need to send the rest back to themselves. This would encourage people to spread their Bitcoins over many addresses, creating an accounting mess at times.\nCalculating the fee based on real-world value of 1BTC would be too hard, as it would require a lot of knowledge form outside the network.\nCalculating the fee based on current difficulty can be slippery for transactions sent around the difficulty adjustment block.\n\nSo in general, the current way of calculating the fee might not be that good, but nobody smart enough has come up with anything better.\n", "charity - Is there a list of charities that accept Bitcoin donations?": "\nThe most comprehensive list I can find is here: https://en.bitcoin.it/wiki/Donation-accepting_organizations_and_projects\nThere is also a website \"Bitcoin-Charity\" which converts BTC to $ on behalf of charities, promising not to put more than 1% towards admin costs. A neat feature of this site is that no technological knowledge is required by the charity to receive donations, and the total donated to date is listed (though it would be better shown in $ than BTC, or both). They currently have 9 charities listed: www.bitcoin-charity.com/charities/\nEdit note: bitcoin-charities.com is no longer active.\n", "miner configuration - Help locating bottleneck on new mining rig": "\nDid you check the CPU usage? You can use TOP on Ubuntu (sudo apt-get install top, if it's not default). If it's not capping out at 100% it's either the chipset or CPU bandwidth giving up. You can also check you regular memory, although I'm quite sure that isn't used in GPU mining.\nSome things you can easily strike off are network and disk. Disk isn't used at all and network shouldn't cap out even on dialup.\nIf it is in fact chipset or CPU bandwidth you have two options:\n1. Overclock. Focusing on FSB clock should improve everything. I'm quite sure you can't get a 300% increase though.\n2. Build a different system. I daren't advice about this though.\n", "Mining software not using Json-RPC?": "\nJeff Garzik wrote a binary protocol for pushpool originally.\nBitPenny uses a proprietary protocol to get p2pool-like benefits.\n", "development - How to validate a Bitcoin address is a real one?": "\nFor Java, have a look at the validateAddress(String) method in this class:\nhttps://github.com/jim618/multibit/blob/master/src/main/java/org/multibit/viewsystem/swing/action/Validator.java\n", "How is the exchange rate for Bitcoin established?": "\n\nYou have people that have BTC or currency already in their accounts.\nThose people can claim: \"I will buy/sell X amount of Bitcoins for Y amount of currency\". If you divide one by the other, you have the exchange rate for that particular transaction.\nIf a buy and sell transaction overlap, they are executed and removed from the system.\nAfter all such transactions are removed, you have a gap between the exchange rate at which people want to buy Bitcoins, and that at which people want to sell Bitcoins.\nAverage the closest buy-sell pair of transactions and you have the exchange rate, halfway between those two, or the price of the last trade may be used. In both cases, it's only an estimate of the price that the next trade will take place at.\n\n", "Bitcoin-Qt command line control on Mac": "\nYou can start it from the command-line using:\nopen Bitcoin-Qt.app --args -server\n\nI think the --args option to open is OSX 10.6 and later; if you are running an older OSX put server=1 in your ~/Library/Application Support/Bitcoin/bitcoin.conf file. In fact, to use the -server command you must set a -rpcuser/-rpcpassword, so I'd suggest creating a bitcoin.conf that contains:\nserver=1\nrpcuser=yourname\nrpcpassword=...something else\n\nWe don't ship a bitcoind for the Mac, but you can use curl (for example) to send commands to the running Bitcoin-Qt:\ncurl --user yourname --data-binary '{\"id\":\"t0\", \"method\": \"getinfo\", \"params\": [] }' http://127.0.0.1:8332/\n\nThe bitcoin source tree also contains python code that uses the free 'jsonrpc' library to communicate with a running Bitcoin-Qt (see contrib/bitrpc/).\n", "block - JSON-RPC getwork data field": "\nThe number of transactions in the header is always zero, per the specification. The -gen option has no effect on the getwork RPC call.\nI'm not sure what you think is wrong with that information, but if it's just the zero transaction count, that's always that way. If it's the fact that you only get the headers you need to hash, it's always that way. Of course the nonce is 0 because the client has no idea what the nonce should be. (That's the point of mining.)\n", "json rpc - Merged mining custom bitcoind": "\nHere is my merged mining implementation - not quite up to date\n", "Can I configure Bitcoin (Linux) with a custom wallet location?": "\nThe bitcoin startup argument -datadir=<dir> allows you to specify a data directory, including the wallet file. \nThat'll still require you to pass a custom argument I'm afraid. The config file is also in the data dir, hence there's a chicken-and-the-egg problem that makes it impossible to configure up ahead. Unless you're savvy enough to change the default constant in the source and recompile, which might be okay since you're already running Linux.\n", "blockchain - Is \"Reclaiming Disk Space\" already implemented? How effective will it be?": "\nThe blockchain already has reached nearly 1 GB to download and store,\nThe proposal in Satoshi's paper does not reduce the download requirements, only the storage requirements (see this post to the bitcoin-dev mailing list).  Unless you are able to rely on some trusted third party, you still need to download at least all of the block headers.\nIf you download only the headers and not the full blocks and treat \"buried X blocks deep\" as proof that a transaction is valid you are open to a new class of attacks that would not affect a normal full-chain client.  The normal client treats \"buried X blocks deep\" as proof that a transaction will not be reversed later on -- the check to ensure that the transaction's inputs are unspent is completely separate from this.  A thin client cannot check that a transaction's inputs are unspent because it has only the block headers -- it does not have a copy of the transactions themselves.\nThe most worrisome of these new attacks have to come from your ISP, but in this day of wi-fi cafes that isn't such a far-fetched scenario.  So, use at your own risk.\nI've been picking away at a wiki page dealing with all these issues.\n", "Can you shutdown part way through synchronization process and start up again from the same point?": "\nYes you can, as long as you don't close the client in some bizarre way (system crash, etc.). In such case, you can get a blockchain that will never synch (you'd have to delete it and start over). But in most cases, yes, you can close the client and start synchronization over without a problem.\n", "bip12 - What are the implications of BIP 12 vs BIP 16 and OP_CODEHASHCHECK?": "\nBIP 12 creates a new Script opcode which allows scripts to execute more script stored in a string (like eval functions in other languages). There's not much debate about BIP 12: it will not be used. It's very complicated, it allows some looping (which Script should not support), and it makes it difficult to analyze scripts without executing them.\nWith BIP 16, scripts are allowed to execute scripts stored in a string one time (not recursively), and there are also other restrictions that eliminate all of the BIP 12 drawbacks mentioned above.\nCODEHASHCHECK does the same thing as BIP 16, but some technical differences make it arguably more elegant.\nAll of these proposals are designed to solve the problem of how to allow recipients to choose which restrictions to place on coins they receive at an address (two-factor authentication, etc.). Currently senders always define the restrictions on sent coins, which is inconvenient in many cases.\n", "When/How did Eligius \"indirectly cost MTGOX many thousands of bitcoins\"?": "\nIt refers to an occurrence in October 2011 when someone sent a lot of bitcoins to an incorrect public address: someone fucked up and lost ALOT of money . Casascius stated that he thinks it was done by Luke-Jr's Eligius mining pool: Re: someone fucked up and lost ALOT of money\n\nThe way I understand it, these transactions were nonstandard enough\n  that normal miners and clients would already refuse to relay or\n  process them (but will accept them in a mined block). And that the\n  only way these got into a block was that he teamed up with Luke-Jr's\n  Eligius mining pool which has been modified to explicitly allow these\n  nonstandard transactions for a fee (or other negotiated arrangement).\n\nEarlier from the same thread, Re: someone fucked up and lost ALOT of money: \n\nMaybe this helps. It seems MtGox made a mistake somewhere.\n\nMagicalTux: that's a problem, but not the worst problem we ever faced\nMagicalTux: all the broken withdraws have been re-issued\nMagicalTux: just spent one week of BTC-only income\n\n\n", "promotion - Bitcoin animation from The Good Wife S03E13": "\nHere is a link (YouTube) to the clip with the animation in it. I don't know if the actual animation on its own is available anywhere. \n", "blockchain - Did Satoshi object to embedding data in the block chain? Why?": "\nHe supported IsStandard, but he was not against small amounts of arbitrary data. Satoshi said:\n\n\nwhy not make it easier on everyone and just allow say, 64 or 128 bytes of random data in a transaction?\n\nThat's already possible.  <pubkey> OP_CHECKSIG.  <pubkey> can be 33 to 120 bytes.\nI also support a third transaction type for timestamp hash sized arbitrary data.  There's no point not having one since you can already do it anyway.  It would tell nodes they don't need to bother to index it.\n\nHe always promoted putting hashes in the chain instead of the arbitrary data itself, though I don't know whether he was strongly opposed to the latter.\n", "currencies - Are there physical Bitcoin?": "\nThere absolutely are. As a matter of fact, Casascius already offers a 10 BTC silver round in addition to his better-known 1 BTC brass coins and 25 BTC gold-plated brass coins. While not coins per se, the same principal allows for bitbills and other physical Bitcoins.\n", "mining profitability - Is P2Pool vulnerable to pool hopping?": "\nFrom the Wiki on P2Pool:\n\nEach share contains a generation transaction that pays out to the previous n shares, where n is the number of shares whose total work is equal to 3 times the average work required to solve a block, or 17280, whichever is smaller. Payouts are weighted based on the amount of work each share took to solve - proportional to the p2pool difficulty at that time. \n\nSo it works like a PPLNS pool, which is not vulnerable to pool hopping.\n", "security - How secure are various models of Bitcoin clients?": "\nOne way to look at security is to identify the risks. For a bitcoin client there are at least :\n1. Theft of private keys \nMitigation:\n1.1 Keys should be encrypted. \n1.2 Keys should not available to servers. \n1.3 Key generation should be done securely. \n2. Loss of private keys\n2.1 You should be able to backup your wallet or private keys. \n3. Client software fails or is untrustworthy \n3.1 Software should be open source so that you can build it yourself and inspect the code. \n3.2 Software downloads should be signed by private key of author to prevent 'look-a-like' malicious software. \n3.3 Author should spend time building their reputation (even if pseudonymous).\n3.4 The software environment the client runs in should be resistant to attack. \nMultiBit's scorecard\nFor MultiBit - which I am the lead developer on - the \"Security Scorecard\" is currently:\n1.1 Currently no, planned for 0.3.0 release.\n1.2 There is no server - purely local.\n1.3 Keys are generated locally.\n2.1 You can backup your wallet.  Key export and import is planned for 0.3.0 release.\n3.1 Code is open source with an industry standard (Maven) build.\n3.2 Currently no.\n3.3 Author is a real public person - Jim Burton.\n3.4 MultiBit uses a Java Virtual Machine - its security depends on the desktop machine not being rooted.\n", "blockchain - How to decode messages embedded with btcmsg?": "\nTheir FAQ links to a document that describes the protocol, and they provide an open source Python client to decode the messages. The server implementation is also open source.\nI put the client files + protocol spec on a github gist, just in case.\n", "Is it possible to recognize conflicting 0-confirmation transactions with the Bitcoin client or other available software?": "\nA merchant can lessen the risk of being defrauded in a race attack (on 0/unconfirmed) by:\n\nUsing an explicit list of peers to connect to (with most of the known IP addresses of miners)\nNot allowing incoming connections (turn off uPnP)\n\nthis still leaves the merchant vulnerable to a 51% attack that all transactions below 6 confirmations are subject to but also to the Finney attack and another type of attack even where 2 confirmations is required (as described by vector76 here: https://bitcointalk.org/index.php?topic=36788.msg463391#msg463391 )  \nWhat you are asking for is a solution that would be useful for merchants who can absorb some risk that comes with accepting a bitcoin transaction at 0/unconfirmed.  Currently there is only a trivial number of merchants that accept bitcoin at a retail establishment.  And thus, no solution provider -- yet.\nThere is an API to the service http://transactionradar.com which might make it possible to monitor for double spend attempts.\nSome useful conversations related to this topic:\n\nhttp://bitcointalk.org/index.php?topic=36788.0\nhttp://bitcointalk.org/index.php?topic=39562.0\nHas there ever been a successful double spend attack on the Bitcoin network? If not, is it really necessary to wait for confirmations?\nhttp://sourceforge.net/mailarchive/message.php?msg_id=27899173\nhttp://sourceforge.net/mailarchive/message.php?msg_id=27964471\nCan bitcoins be counterfeited?\nhttp://bitcointalk.org/index.php?topic=69520\n\n", "terminology - What are Tonal Bitcoins?": "\nAfter taking a quick look over the Tonal Book (free PDF) and the Wikipedia article it appears to be an early attempt at constructing a number system in base 16.  \nProgrammers will immediately recognise this as hexadecimal. For non-programmers hexadecimal uses the following representations: 0,1,2,3,4,5,6,7,8,9,A,B,C,D,E,F. Note that decimal 10 to 15 are represented by the single letters A to F, such that FF is decimal 255 or (16 * 15)+(1 * 15). To differentiate a decimal number from a hexadecimal number the conventions 0x10 (decimal 16) or 10h are widely recognised.\nThe Tonal bitcoin representation attempts to offer an alternative representation of BTC known as TBC (Tonal Bitcoin) and uses the various Tonal letters to represent them. The Tonal alphabet is more complex than the hexadecimal system and requires special fonts to be available on the systems using it.\nIt is unlikely that this archaic approach to base 16 is ever likely to gain traction when much more widespread approaches are available.\nUnits covering powers of 2 in computing\nIt should be noted that in 1998 the International Electrotechnical Commission (IEC), Institute of Electrical and Electronics Engineers (IEEE) and the International Committee for Weights and Measures (CIPM) adopted a purely \"powers of 2\" approach for some use cases. Notably the representation of computer storage and data transmission rates. \nThis gives rise to 2 unit systems - one base 10, the other base 2:\nThe primary power of 10 notation we're all familiar with:\n\n1 kilo byte (kB) = 10 ^ 3 bytes\n1 mega byte (MB)= 10 ^ 6 bytes (historically 1000 * 1024 for some storage cases)\n1 giga byte (GB) = 10 ^ 9 bytes\n\nThe alternative power of 2 notation:\n\n1 kibi byte = 2 ^ 10 bytes\n1 mebi byte = 2 ^ 20 bytes\n1 gibi byte = 2 ^ 30 bytes\n\nThus there is even less reason to use the Tonal system since a widespread alternative with well-defined prefixes has already been ratified for some time.\n", "What are the key differences between different ways of embedding messages in the blockchain?": "\nThere are multiple places one can embed messages in the block chain. Any field that takes arbitrary values can be used.\n\nNonce - nonce is a field in the header that can take 4 bytes of data. Not the best place to embed much, but it does not bloat the block size\nCoinbase string - probably the best place to embed messages. It takes an arbitrary length and doesn't have to adhere to any rules. Main problem is that there is only one coinbase string per block, which usually means one would have to mine the block oneself in order to encode the string. Another important thing to note is that one should not use the exact same coinbase string all the time, as it might make the output irredeemable (if the transaction hash is duplicated)\nTransaction outputs - The Tx message outputs can be used to encode messages in the form of output addresses and possibly Bitcoin transfer amounts. This can create irredeemable transactions (if the transfer amount is higher than 0). The overhead of encoding transactions in this way is not too big, in case of 0BTC transactions it would be 10 wasted bytes for about 23 bytes sent (total transaction size is about 33 bytes).\nTransaction script - Probably the best way to encode messages, although it is not widely supported (requires custom transaction script creation). Messages are created by adding two script operations - OP_PushData and OP_Drop in the output script of any transaction, and adding the message body in between the two operations. In order to embed messages in this way one would add just a couple bytes in order to send fairly large body of text.\n\nOne could also try creating partial SHA collisions that would encode to some short message, although this method would require a lot of computing, yielding short message encoding.\n", "business - Does IBB make money? Where does its earning come from?": "\nAs stated by what appears to be the founder (or a key person) in this thread in the bitcointalk forums, calling himself senbonzakura: \"profit from the bank must be halal (permissible). So if the bank lends at interest, the interest then is profit for the bank, and that would mean muslims(or jews/christians) cannot buy shares in the company as the bank deals with interest, which makes it non-permissible/haram.\"\nThe motivation for running the IBB seems to be somewhat charitable, with this (edited) comment from the same person: \"The problem that those 3 religions is trying to solve is human greed. Under that philosophy it does rightly condemn interest, for the reason that interest places the 'haves' infront of the 'have nots'.... From a humanitarian-philosophical perspective [the IBB] makes perfect sense, from a capitalist perspective it doesn't\".\nHowever, it is being run as a business. The IBB website says it's listed on the GLBSE, and it has asset, revenue, and dividend figures. The website doesn't go into much detail about what the bank does, but if you were to read the above linked forum thread you'd probably learn a lot more about it. Since the bank is paying out dividends, I doubt that those purchasing stock in IBB are doing it purely as a donation.\nSo, to summarise:\n\nThe IBB is profit based, but doesn't earn money from interest.\nIf you assume their revenue chart is accurate, it earns money\nTheir revenue stream includes (complete list so far): Shares/Dividends, Arbitrage, Gratuity\nEven though IBB doesn't charge interest, they accept donations from borrowers. Depending on the culture of the customers, this could be considered to be like making optional interest payments.\n\n", "Merge Bitcoin Mining with Fold at Home!": "\nFolding@home work is not compatible with the required properties of the work that needs to be performed for bitcoin. In particular, the computation work required for bitcoin mining needs to assure:\n\n(a) difficulty of getting a 'good' result\n(b) ease of verification of a good result once it is found\n(c) precise scaling of difficulty depending on total network power.\n\nThe folding@home problems provide neither assurance of difficulty nor are in any way easy to scale depending on network power (since each folding problem is unique). They probably do meet the (b) ease of verification, but not the other criteria.\n", "mining pools - P2Pool crashes the Bitcoin client": "\nI wrote a solution to this problem two days ago:\nHow to use p2pool with an accompanying standalone bitcoind\n(since the windows gui version of bitcoin 0.5.1 crashes frequently when used with p2pool)\nAssumptions:\nOS: Windows 7\nBitcoin: Latest stable release installed and working - http://sourceforge.net/projects/bitcoin/files/Bitcoin/bitcoin-0.5.1/bitcoin-0.5.1-win32-setup.exe/download\np2pool: you'll be slightly off the beaten path with this\n   configuration as you're specifying the bitcoin address to send\n   generated bitcoins and not using the second bitcoin processes wallet\n\nDownload latest current p2pool code and extract to\n\"%programfiles%\\p2pool\" -\nhttps://github.com/forrestv/p2pool/zipball/master\nDownload and install latest Python 2.7 (if you get 64bit, you'll need\n64bit versions of the packages below) -\nhttp://www.python.org/download/\nDownload and install python extension package twisted -\nhttp://www.lfd.uci.edu/~gohlke/pythonlibs/#twisted\nDownload and install python extension package zope.interface -\nhttp://www.lfd.uci.edu/~gohlke/pythonlibs/#zope.interface\nDownload and install python extension package pil -\nhttp://www.lfd.uci.edu/~gohlke/pythonlibs/#pil\nDownload and install python extension package pygame -\nhttp://www.lfd.uci.edu/~gohlke/pythonlibs/#pil\nOpen your Bitcoin GUI client if it is not running and generate a new\naddress, take note of the generated address and close your Bitcoin\nGUI client\nEdit your existing \"%appdata%\\bitcoin\\bitcoin.conf\" and unless you\nknow what you're doing, change what ever is there to this and if the\nfile does not exist - create it:\nlogtimestamps=1\n\nCreate the folder \"%programfiles%\\p2pool\\bitcoind-data\"\nCreate \"%programfiles%\\p2pool\\bitcoind-data\\bitcoin.conf\" with your\n favorite text editor and populate it with this:\nserver=1\nlogtimestamps=1\nport=18333\nrpcport=18332\nrpcuser=bitcoinusername\nrpcpassword=bitcoinpassword\nrpcallowip=*\n\nTake note of the folder name of the latest current p2pool code - it\n is in \"%programfiles%\\p2pool\"\nCreate \"%programfiles%\\p2pool\\p2pool.cmd\" with your favorite text\n editor and populate it with this:\n@echo off\ntitle p2pool\necho.\necho running p2pool ...\necho.\nC:\\Python27\\python.exe \"%programfiles%\\p2pool\\folder-name-of-the-latest-current-p2pool-code\\run_p2pool.py\" --net bitcoin --address yourbitcoinaddresshere --bitcoind-address 127.0.0.1 --bitcoind-rpc-port 18332 --bitcoind-p2p-port 18333 bitcoinusername bitcoinpassword\necho.\necho p2pool stopped.\necho.\npause\n\neg.\n@echo off\ntitle p2pool\necho.\necho running p2pool ...\necho.\nC:\\Python27\\python.exe \"%programfiles%\\p2pool\\forrestv-p2pool-4f6c2e2\\run_p2pool.py\" --net bitcoin --address 12uN6G1uAtn7G29qfTdLD9des4y63Whr61 --bitcoind-address 127.0.0.1 --bitcoind-rpc-port 18332 --bitcoind-p2p-port 18333 bitcoinusername bitcoinpassword\necho.\necho p2pool stopped.\necho.\npause\n\nCreate \"%programfiles%\\p2pool\\bitcoind.cmd\" with your favorite text\neditor and populate it with this:\n@echo off\ntitle bitcoind\necho.\nif exist \"%programfiles%\\bitcoin\\daemon\\bitcoind.exe\" (set programfilesx86=0)\nif exist \"%programfiles(x86)%\\bitcoin\\daemon\\bitcoind.exe\" (set programfilesx86=1)\nif %programfilesx86%==0 (goto :programfiles)\nif %programfilesx86%==1 (goto :programfilesx86)\necho ERROR! bitcoind.exe not found in either \"%programfiles%\\bitcoin\\daemon\\\" or \"%programfiles(x86)%\\bitcoin\\daemon\\\" - giving up!\necho.\npause\ngoto:eof\n:programfiles\necho running bitcoind.exe from \"%programfiles%\\Bitcoin\\daemon\\\" ...\n\"%programfiles%\\Bitcoin\\daemon\\bitcoind.exe\" -datadir=\"%programfiles%\\p2pool\\bitcoind-data\"\necho.\necho bitcoind stopped.\necho.\npause\ngoto:eof\n:programfilesx86\necho running bitcoind.exe from \"%programfiles(x86)%\\Bitcoin\\daemon\\\" ...\n\"%programfiles(x86)%\\Bitcoin\\daemon\\bitcoind.exe\" -datadir=\"%programfiles%\\p2pool\\bitcoind-data\"\necho.\necho bitcoind stopped.\necho.\npause\n\nList item\nCopy blk*.dat from %appdata%\\bitcoin to\n %programfiles%\\p2pool\\bitcoind-data\nRun \"%programfiles%\\p2pool\\bitcoind.cmd\"\nRun \"%programfiles%\\p2pool\\p2pool.cmd\"\n\n\nYou should now be able to mine on your machine to 127.0.0.1:9332 or to your machines IP on port 9332 on your LAN :)\n", "bitcoin core - P2Pool - I get only rejects": "\nThis might mean your internet connection is too slow. With p2pool, you are basically competing against all the other miners for internet latency. If you have bandwidth-intensive software running (downloads, uploads) try stopping it.\n", "Installing Bitcoin-Qt on Ubuntu": "\n\nsudo add-apt-repository ppa:luke-jr/bitcoincore\nsudo apt-get update\nsudo apt-get install bitcoin\n\n", "bitcoin core - How do I know my wallet.dat actually already contains 100+ addresses ready to be used?": "\nyou can check by directly exploring the content of your wallet.dat file, which is a bdb database. there are various tools for exploring the wallet, one of which is gavin's bitcointools: https://github.com/gavinandresen/bitcointools\nAnother exporter is pywallet.py.\n", "currencies - How can I convert Bitcoins for withdrawal to PLN": "\nIntersango trades BTC/PLN and offers free domestic withdrawal as PLN.\n\nhttps://intersango.com/fees.php\nhttps://intersango.com/orderbook.php?currency_pair_id=4\n\n", "security - How secure is calling bitcoind JSON-RPC?": "\nYes, they can. Unless you enable RPC-over-SSL, the username and password are send Base64 encoded as a header in the HTTP request, which is easily decoded.\n", "security - Is it safe to email an encrypted wallet to myself?": "\nThe wallet.dat contains not just encryption keys but addresses as well.  If you are using the encrypt feature from the Bitcoin client to encrypted the keys then mailed to yourself those keys in the wallet would be secure assuming you used a strong passphrase and that passphrase is not used elsewhere.  \nBut the transactions in that wallet can be viewed by anyone with access to the backup file.\n", "bitcoin core - Is two-phase encryption planned for the standard client?": "\nNo, it is not planned.\nI'd suggest writing some JSON-RPC proxy code that takes RPC commands, checks to see if they're safe (or checks to see what password was given), and if they are authorized forwards them to bitcoind and passes through the result.  There is a lot of good Python code for json rpc clients and servers, although JSON-RPC is a simple enough protocol it shouldn't be hard to create a proxy in any language.\n", "protocol - Miners - HTTP JSON-RPC or JSON-RPC?": "\nThe miner uses JSON-RPC 1.0, for which only the HTTP transport was defined.\n", "bitcoind - What's the best way for a website to detect payments from green addresses?": "\nIt is now possible to determine the list of addresses that sent a transaction using the raw transaction JSON-RPC API calls that were released with bitcoind and bitcoin-qt version 0.7. The pseudo-code to accomplish this is:\ntxid = <relevant transaction id>\naddresses = []\nraw_tx = decoderawtransaction(getrawtransaction(txid))\nfor(input in raw_tx['vin']) {\n  input_raw_tx = decoderawtransaction(getrawtransaction(input['txid']))\n  addresses.push(input_raw_tx['vout'][input['vout']]['scriptPubKey']['addresses'][0])\n}\n\nOnce you have the list of sending addresses stored in the addresses array, you can compare these addresses to a list of pre-approved green addresses. In most cases, you should expect there to only be a single unique address in the addresses array.\nIn order to get a list of suitable green addresses, you could hard-code it into your application, or you could use a dynamic source, such as Deepbit's JSON feed. This feed however, is notably missing Mt. Gox's Green Address\n", "transactions - What is the best way to exchange MTGUSD to USD?": "\nYou can sell MTGUSD directly at bitcoin-otc or at bitcointalk. If you deal with reputable members, the risk of a receiving a chargeback is minimal.\nNote that you don't need to register at bitcoin-otc to do this. Just drop by the channel and announce that you are selling.\nBitinstant used to have paypal withdrawals, but they aren't working at the moment.\n", "blockchain - Can I get an overdraft?": "\nBitcoins are like tangible cash in a sense that you can't overdraft. If you want to spend more Bitcoins than you have, you have to get more Bitcoins first. To achieve that either B has to send A some Bitcoins, or A and B have to create a transaction together (A created one input, signs it, B creates another input, signs it, and then someone needs to do some balancing of how much Bitcoins go where).\nAlternatively, one can expect to see some Bitcoin banks in the future that allow you to overdraft from their shared address, and later charge you for it. This solution is not hard to implement, but I don't know if something like this is available anywhere currently (maybe through IBB). The main problem with this solution is trust between parties and how effective debt collecting would be.\n", "bitcoin core - API calls - \"not yet implemented\"?": "\nExactly two RPC calls can't be called when Bitcoin-Qt is running:\nencryptwallet\nstop\n\nstop isn't yet implemented because there is work to be done to get the GUI and all of bitcoin's internal threads to shutdown in the right order (get the order wrong and we get crashes during shutdown).\nencryptwallet isn't yet implemented because stop isn't yet implemented, and properly encrypting the wallet means re-writing wallet.dat and then shutting down cleanly so any database files are cleaned up properly (and any unencrypted private keys don't get left on the disk).\nI'm not sure what you mean by \"not available in any client\" -- as far as I know, the original \"Satoshi\" client is the only one that supports the JSON-RPC interface at all.\n", "Creating a custom transaction?": "\nThe prices you present are pretty steep, but hopefully this is just for clarity;).\nIf you don't want to run a daemon yourself in a loop, you can always try using Strongcoin's API:\nhttps://strongcoin.com/blog/bitcoin_micropayments_with_strongcoin\nIt sends notification to your website when a transaction that you are interested in appears (whether it is to one of your addresses or anyone else's). It might not necessarily be exactly what you want (say, if you require 6 confirmations), but it definitely is a good place to start if you just want some notifications.\n", "protocol - Bitcoin pool and getwork data validity": "\nThe GetWork request includes only the block header, containing exactly the fields shown here and no others.  This is all the miner ever sees.  Notice that the transactions are not in the block header -- just their (Merkle) hash.  The miner doesn't actually know what transactions it is mining.\nThe pool checks that the block header of the submitted work exactly matches the header of some GetWork previously issued by the pool.  Some pools (Eligius) give the miner permission to alter the timestamp field only, and only according to very strict rules.\nThe pool always checks that the block's hash ends with 32 zeroes (note that this is \"below\" difficulty zero!  Every block in the chain has more than 32 trailing zeroes in its hash).\nSome pools check other things (for example, that you didn't request work using one account and submit it using a different one), but the checks above are the only ones that are both mandatory and universal.\n", "automation - What public data sets are available that could used for correlation in bitcoin analytics?": "\n\nHistoric trade data is available from the Bitcoin Charts Market API\nBitcointalk.org forum stats, impression stats for ads, e.g. new member sign-ups per day\nGoogle Trends data for bitcoin. (Can be exported as a CSV file with links at bottom of the page)\nBlockexplorer.com stats query page\nBlockchain.info API\nThe Bitcoinstatus.RowIT page has graphs on the number of bitcoin hosts connected, client version and data on hosts/country. Don't see an API but some data is in tables so probably easy enough to scrape.\nChris Moore's answer to this question provides a lot of useful stats. \nOf course the blockchain itself.\n\n", "bip - Why are the majority of miners not voting on on P2SH?": "\nHere is my personal opinion as to why:\n1) There are no release binaries available for the new client, so it must be compiled from source. Some of the smaller pools and P2Pool users may not have the technical knowledge how to do this.\n2) If you are running a modified client merging the changes from the latest P2SH code is not straight forward. Nobody wants to spend time upgrading when the changes might have to be reverted if the vote doesn't get past. \n3) Downtime during the upgrade process is bad for business, particularly for large pools.\n4) No votes ultimately count as votes against, as you say perhaps they don't like either proposals enough to care.\n5) Voting hasn't officially started yet - It is based on the last 1000 blocks so should begin sometime on the 24th Jan.\n", "Why does my wallet need to download the whole transaction history?": "\nThe short answer to your question is \"no\". The reason is actually pretty simple: Without the entire block chain, there is no way to know that funds that are claimed to have been sent to you weren't actually sent to someone else. There is no way to prove the absence of a conflicting transaction, other than to check every valid transaction.\nWith a bank, the bank clears your checks for you. Here, you clear your own checks. Without knowing every check an account has received or sent out, how can you know the account has sufficient balance to cover your check?\nOf course, you don't have to run the Bitcoin client. Your alternative is trust someone else with your coins.\n", "mining pools - What .dat files are safe to be accessed while the Bitcoin client is running?": "\nNone of them are safe to access while bitcoind is running.  The only one that is critical to backup is wallet.dat, and the backupwallet rpc command will do that safely while bitcoind is running.\n", "wallet - How many addresses does bitcoind use for Bitcoin generation?": "\nIf you generate a new block with \"getwork\" then bitcoind will always use a new address each time.\nIf you generate a new block with \"getmemorypool\", then you decide. You can do whatever you want because you are creating the block data yourself. \"getmemorypool\" is new with bitcoind 0.5.\n", "bitcoind - What files one should backup when running a pool or other Bitcoin service?": "\nYou need to back up your wallet.dat regularly. If your pool uses \"getwork\" for generating work and later generating blocks, then each block is generated with a new crypto key. Also, when you send coins out to pay your miners, the \"change\" is always sent to a new address. So your bitcoind is always generating new crypto keys, and you must back them up so you don't lose any coins.\nSo any bitcoin service that sends coins or generates new blocks with \"getwork\" must back up wallet.dat regularly. A bitcoind that only receives coins can be backed up only once. A bitcoind that doesn't handle coins obviously needs no backup (rare case, but can be useful).\nApart from that, of course back up your database and anything else you don't want to lose.\nUpdate: I just want to add that bitcoind has a pool of unused keys. It makes new keys when the pool runs out. Most of the time it just takes fresh keys from the pool - and you backed those up. So you don't have to run backups once per minute to be safe. If you want to do this the best way possible you could give bitcoind the \"keypoolrefill\" command (and wait for that to finish) before backing up wallet.dat. This way you always back up a full pool of unused keys, and the backup will \"last\" as long as possible. That is to say, it will take as long as possible before the pool runs out and bitcoind generates new keys for the pool that you don't have in the backup.\nThere is some info on the key pool here: https://en.bitcoin.it/wiki/Key_pool.\nUpdate 2: I'm actually unsure if \"keypoolrefill\" only has an effect if you resize the keypool. If you don't change the size of the pool, I think bitcoind generates a new key for the pool each time it takes a key out of it. Someone correct that if it's wrong.\n", "How can one know which way mining pools will vote for P2SH?": "\nYou should check out this page:\nhttp://blockchain.info/p2sh\nIf you want to verify if a given pool operator has indeed mined the blocks for the votes, he or she can sign some message with the private keys corresponding to the public addresses that were the recipients of the block reward.\n", "bitcoind - Bitcoin RPC SSL error": "\nAfter a bit of mocking about with this problem, I figured the certificate files were in a wrong folder. As I was running Bitcoin on testnet, the directory in which it looks for certificates is different, than on the main net. On the other hand, it loads the Bitcoin.conf from the same place...\nThe folder bitcoin looks for the certificate in is the folder containing wallet.dat, which for testnet is in .bitcoin/testnet/ folder\n", "client - How can Open Transactions benefit Bitcoin?": "\nMarket exchange\nOT includes bid/ask markets, allowing for trade between assets. And unlike most exchanges, the voting pools feature makes it impossible for the server to steal the coins.\nUntraceable transactions\nOT incorporates Chaumian blinding (untraceable cash), meaning it can provide anonymity and untraceability, similar to what the Bitcoin community strives for with existing mix services. (Bitcoin by itself is publicly-audit-able, which is a strength, but is also the opposite of untraceable. Its benefit is censorship-resistance, not untraceability, which can be added separately using OT.)\nInstant settlement\nOT has instant finality of settlement (instead of waiting 10 minutes to an hour for a transaction to clear.) This can be useful where merchants and and shopping carts are involved.\nMicro-transactions\nMicro-transactions will be more feasible on transaction servers than they would be on the blockchain.\nCash streaming protocols\nCash streaming protocols, in general, should become more prevalent and help to solve issues of resource allocation on mesh networks, anonymous networks, etc. Virtual Tahoe LAFS hosting and so on will eventually become more available, whether via OT or some similar system. (This would help protect the lives of Syrian bloggers murdered by snipers, and the lives of Chinese bloggers unjustly imprisoned to decades+ of hard labor--and to protect the anonymity of Mexicans who otherwise risk being disemboweled and strung from a bridge when following a \"Real Names\" policy.)\nOperates securely on low-trust servers\nOT cannot lie on your receipt. It cannot change your balance or forge any of your transactions. (Bitcoin also is like this, but it's still worth mentioning.) Combined with an auditing protocol, this makes it possible to run low-trust servers.\nNo transaction history\nOn OT, unlike most other systems, and unlike the blockchain, you will be able to prove which instruments are valid, and which transactions are cleared, without storing any transaction history, as long as you keep your last signed receipt. This is useful to all parties, and also reduces the cost of running a transaction server.\nFull range of financial instruments\nOT supports a full gamut of financial instruments, including cheques, transfers, cash, cashier's cheques, receipts, recurring payments, market offers and trades, and smart contracts (scriptable clauses - write your own.) You will have to decide for yourself how to best use these capabilities.\nYou could use OT to write a market exchange, or online wallet or personal wallet. (Of course these exist already, but I'm just saying...)\nSmart contracts\nOT makes it possible to create custom-scripted agreements between parties, to be executed on the server side.\nYou could use OT to offer escrow services. You could devise your own escrow contract in script form, and then OT will process it. \nClient-side scripting\nOT also supports client-side scripting, meaning that people can combine \"Unix scripting\" with \"financial transactions\". The possibilities are endless, but that part is really up to the developer community.\nYou could use OT to build a digital ticketing system, printing out tickets with QR codes or whatever.\nIn-game representations of real-world financial environments\nYou could use OT to build a full financial transaction system into an online game or virtual universe. (Gold duplication can get to be a real issue on games.) People on the game would be able to open accounts, withdraw and deposit cash, write cheques, trade on markets, just like people in real life. People would even be able to issue their own currencies, and trade in basket currencies.\nProtection against online wallet fraud\nAt some point OT will support Bitcoin voting pools, meaning it would be impossible for any single server to just disappear with your Bitcoins. (A problem currently endemic to the Bitcoin world.) This will be a protocol between OT servers based on existing features in the Bitcoin script language (like multi-sign.)\nThis capability goes beyond mere auditing or proof-of-reserves, since it actually prevents a server--or a malicious employee, or a hacker--from stealing the coins.\n", "bitcoin core - What is bitcoind.pid?": "\nIsn't it the file containing (the current running instance of) bitcoin's pid,\nhttp://en.wikipedia.org/wiki/Process_identifier#Pidfile?\n", "Thin client list": "\nCurrently, there is one light client that works on a Mac - MultiBit. This client seems to be around for awhile and is open-source, so should be trustworthy.\nThere a couple wallets working on Android, like Bitcoin Wallet and Bitcoin. Personally, can't say much about trustworthiness of either, asides the fact that some high-reputation people on the forum seem to be promoting it.\nAlternatively, you can try using eWallets, as they can be accessed on any device.\n", "Why \"Open Transactions cannot lie on your receipt\"?": "\nIt is not possible for the OT server to forge your signature because you retain the private key. Sure, it could issue fakes but anyone actually checking the signature would immediately see that it is incorrect and reject the transaction.\n", "Underclock GPU Memory below \"Recommended\" Limits on Linux": "\naticonfig respects the settings set in your video card's firmware by your card's manufacturer (frequently, although incorrectly, called a BIOS). However, AMDOverdriveCtrl can clock memory down much farther, depending on the card.\nRadeon 5xxx, 67xx, and 68xx series cards should be clocked down to 1/3rd of the core speed (ie, 750mhz should have a memory speed of 250), 69xx cannot clock down far enough to be worth it, and GCN (79xx, 78xx, 77xx) seem to have a limit of 150 mhz less than core (however, although it is not worth underclocking on 69xx, it is worth underclocking on GCN due to automatic memory voltage control done by the hardware/driver; on my 7950 @ 1125mhz, going from 1375 down to 975 dropped my GPU temps 3-4 degrees celsius).\n5xxx and 6xxx series cards also have a problem where they will instantly lock up if memory speed is set between around 400mhz to around 600mhz (depending on core speed), so your mileage may vary as always.\n", "websites - Is it possible to give a public read only access to a Bitcoin account?": "\n\nIf you want the person to see the balance of each address, give them an encrypted wallet used by you. This way they can see any transaction coming in, but they won't be able to spend anything. However, this requires them to run a Bitcoin client themselves, which can be a pain at times.\nUse the Block Explorer and search for the single address you will be using. Case in point - all donations made to Wikileaks - http://blockexplorer.com/address/1HB5XMLmzFVj8ALj6mfBsbifRoD4miY36v (warning, this page can load for awhile).\n\n", "client - debug.log file size": "\nbitcoind 0.5.99-beta was running and my debug.log was 26MB.  After\nbitcoind stop\n(wait 30 sec. or so for stop)\nbitcoind -daemon\n\ndebug.log was 201KB.\nMac OS 10.6.7\n", "bitcoin core - Can one send bitcoind transactions that will only be valid after a certain amount of time?": "\nThe bitcoin.org client will allow you to spend coins after just one confirmation has been received.\nThe Bitcoin protocol has no restriction that would prohibit you from spending immediately (o/unconfirmed) so it simply would be up to the client supporting it.   \nThe My Wallet from http://www.blockchain.info/wallet  supports spending immediately after receipt.\n", "bitcoin core - What happens when an encrypted wallet runs out of keys?": "\nIf the key pool is empty and the wallet is locked it will use an old key instead of generating a new key. When wallet encryption was implemented the block creation code was changed to make sure different coinbase transactions are generated in that case.\n", "protocol - Will any of the proposed Scripts (OP_XXX) allow subscription/recurring type payments?": "\n\nIn order to send someone Bitcoins, you need to sign a transaction with your private key.\nEach transaction on your set of coins refers to the previous transaction. It is possible to create a daisy chain of transactions like this, but if you'd perform any operation in between the start and the finish of such sets of payments, the remaining transactions would be invalidated.\n\nThis makes it impossible under current model of transactions to perform such an operation. You could define a new OP that would allow one to redeem coins only after a certain amount of time, but then you'd be paying the full amount up front anyway.\nYou could, however, create a client that would be scheduling payments. But there is a problem - it is generally advised to keep your private keys encrypted, so nobody could steal your coins. A client can't sign a transaction with an encrypted key, so you'd have to be prompted for passwords every time. On the other hand, one could imagine a single address in a wallet to be kept unencrypted for such transactions. In the end though, it is not a matter of creating a new OP in the protocol, but new functionality in a client.\n", "mining theory - Is there any point attempting to vote when my hash power is so marginal?": "\nYou can still vote by supporting a pool voting in the same way as you.\nVoting is rather fair, as bigger pool operators have a bigger responsibility to their miners to keep the software up to date and operating according to their best interest. Thus mining in a pool is like voting for your representatives - you give your trust to them so they can work on benefiting you.\n", "bitcoin core - Can the blockchain be included in future packages of the standard client?": "\nYou can download the transaction history separately (don't have the link on me currently). Adding it to the client would also be disencouraging - 1GB of a \"program\" doesn't appear too user-friendly.\nAlternatively, one can use a lightweight client (like Multibit or Electrum), or an eWallet (like StrongCoin).\n", "mtgox - Pros and cons of using Mt. Gox as an e-wallet": "\n\nBecause Mt.Gox has to abide by anti money laundering laws they require at least some form of identification. Although this is a requirement for Fiat to Bitcoin conversion there is no need to link your normal bitcoin transactions to your Bank Account / Identity. Wallet services that deal solely with bitcoin do not need to comply with AML laws and hence require no identification or bank details.\nMt.gox doesn't support many features that My Wallet does: Export private keys - Generate New Address - Unconfirmed transactions - Alerts - Multi Recipient Transactions - Paper Wallets - Labelling Addresses.\nEven though Mt.gox is the largest and most trusted exchange you are still using them as a bank and are not in control of your own private keys. One of the key advantages of bitcoin is it allows you to be in control of your money without needing a third party. With the new javascript based wallet services your keys are encrypted and decrypted inside your own browser so you never share your keys with the server. Some trust is still required unless you use a paper wallet, but it is at least a happy medium.\nWithdrawal limits.\nNo way to know if Mt.Gox actually has your funds and is not operating as a fractional reserve.\n\nDisclaimer: I am biased because I operate My Wallet\n", "What is the cheapest Bitcoin -> prepaid VISA/Mastercard service?": "\nThat's quite a lot of money to try to load onto a prepaid card and likely not something you'll find easily done.\nSome options are:\n\nhttp://www.okpay.com/en/services/debit-card/index.html\nhttps://www.aurumxchange.com/cards Expect to get their cards program back soon.\n\nWith OKPay, you can reload using bitcoins, which OKPay will exchange into USDs for you (the cost of this was just reduced from 5% to 2.5% of transfered amount). \nWith AurumXChange, you can reload using USDs from Mt. Gox codes.\nFor that amount though you'll probably be best arranging trades with some buyers willing to exchange Moneypak to you.  For instance, on the #bitcoin-otc there often times are traders looking for BTC and for larger amounts will go out and buy a MoneyPak to do the trade.\nYou can load a number of different prepaid cards with MoneyPak, up to $1,000 each.  See the Prepaid Cards section for the list: https://www.moneypak.com/WhoAccepts.aspx\nAlong the same lines, you might find a trader that would deposit cash at Western Union to reload a Western Union prepaid card.\n", "mining pools - What is an explanation of the P2SH voting in layman's terms?": "\nThe answers to your questions, in order:\n\nThe fee paid for a transaction is determined by the size of a transaction.  Currently, if you want to do fancy things with bitcoins, you need to put a script in the transaction that sends them -- each output includes a script giving the conditions under which it may be used as an input.  OP_EVAL, p2sh and CHV (check-hash-verify) all provide ways of putting the script in the transaction that receives the coins.\nThis lets you have coins sent to you and do arbitrarily complicated things with them without imposing a fee burden on the sender.  The coins are yours once they're sent, but you'll have to pay the fee the next time you try to do anything with them (no free lunch here...).  The most important use-case here is to have wallets from which you can spend coins only by using two different devices (for example, both your laptop and your cellphone).  Even if both devices are \"virus infested\" it's highly unlikely that any single malicious entity has compromised both of your devices.  The hope is that this will put an end to the rash of coin thefts, or at least make it much harder for botnet operators to steal coins from the people who own the machines they've taken over.\nThe voting takes place during the blocks found during the seven days preceding 01-Feb-2012.  No timezone was specified.\nThe original vote was \"yes/abstain\".  Gavin put code into the \"master\" branch of the bitcoin client that would cause anybody who upgraded to the latest version to automatically vote \"yes\".  This angered some people, who added a new option for a \"no\" vote.  However, what really matters is whether or not 50+X% vote \"yes\" -- an \"abstain\" counts as a \"no\" vote for the purposes that matter.  If a minority of the hashpower were to enable p2sh a single malicious user could cause a permanent blockchain split, so it's important that this not be enabled until we are dead certain that a comfortable majority of the hashpower is on board.\n\nMost of the controversy is over how quickly this proposal was put together and rushed through the approval process.  The general idea, and the predecessor (OP_EVAL) have been around for a while, but this latest incarnation is very new.\nAlso, at the moment the mining code in the bitcoin client has a funny concept of a \"standard\" transaction which is not part of the bitcoin protocol at all -- it's just a gentleman's convention by which some (but not all) mining pools voluntarily choose to omit transactions that use advanced bitcoin features -- if you want to use those advanced features you have to wait longer since there's only one big pool (and several small ones) that will take them (once mined into the chain, however, all clients respect these transactions -- it's just a question of getting them into the chain).  The p2sh specification forces the \"standardness\" concept to become part of the protocol -- miners will be forced to use transaction templates whether they want to or not.  Many consider this to be infringing on the miners' jurisdiction.  Others consider it an affront to aesthetics and an invitation to headaches in the future.\n", "protocol - Why are p2sh and CHV forward-compatible but not backward-compatible?": "\nRequiring everybody to upgrade is just not realistic for such a small feature.\nAnd clients must already rely on miners to fully validate transactions, because it is always possible a transaction they think is valid is actually half of a double-spend. Never accept 0- or 1-confirmation transactions unless they are from somebody you can trust.\n", "mining pools - What are some reasons that a rational miner won't switch to P2Pool?": "\n\nVariance. Raw connection to p2pool will always have variance for a typical miner - if the pool is small there will be large pool-based variance, if it is large the share difficulty will be high and there will be large share-based variance.\nRunning a Bitcoin node is already nontrivial and going forward will become impossible for at-home miners. For example, some mining rigs run on a cheap USB flash drive, which may soon become insufficient to hold the blockchain.\nNormal mining pools have additional features such as worker monitoring, SMS notifications, automatic conversion of NMC to BTC and so on.\nSome of p2pool's suggested advantages are a bit exaggerated. The recent P2SH woes are a non-issue since miners who want to vote can simply go to a pool that votes as they want. The more generic concentration of power problem can alternatively be solved with smart miners (miners who generate blocks themselves or from an independent party, and submit shares with Merkle branches of the generation transaction which are accepted if it credits the pool).\n\nBecause of these reasons, I believe the future will be small PPS pools which act as a proxy to p2pool (with or without the use of independent block-issuing nodes). These will have low fees, no variance, as many features as the pool operator wants to implement, and will not be highly centralized. Until we see more of these I don't think there's much justification for p2pool going mainstream.\n", "Sendmany transaction fees": "\nThe transaction fee is based on the size of the transaction (in bytes), among other factors. Each output adds some length to the transaction, so more destinations will mean a higher fee. With the current transaction fee schedule, roughly every five destinations adds an additional .0005 BTC to the standard fee.\n", "protocol - How is the bitcoin 21 million cap implemented?": "\nEvery node in the Bitcoin network checks every block it receives and validates any transactions in it. As coin generation is a transaction that is included in the block, it is also checked. Same as a node would not accept a transaction that does not balance its inputs and outputs (for example, by spending more coins than it has), neither would it accept a block reward different, than the one that is scheduled to occur (50 coins currently, half of that for some number of blocks, and then other fractions of that amount). The nodes know what rewards to expect based on the block number, as it is set to half based on that number.\nTo change it you would have to (convince people to) change all the clients, exactly like any other protocol change.\n", "How do I monitor the performance of my P2Pool instance?": "\np2pool has a higher difficulty, so you won't be submitting many shares, with 30MH/s you will have a greater variance.  p2pool is not the perfect solution for those of us with a low hashrate unfortunately.\nThe p2pool tells you how many shares you submitted but it's in the lines above the one you pasted, look for where it says Shares: 3 (2 orphan, 0 dead)\nAlso compare the Pool stales to your own stales.  To have a reliable number, keep p2pool open for at least 24h, but the numbers should be almost the same.  If your own stales percentage is higher than the pool's, you are earning less than you should.  If it is below, you are earning more than you should.\n", "Can you run P2Pool without having to keep the blockchain updated?": "\nYou could run the Bitcoin client on a separate machine, and connect to it over the network.\n", "network - How can the number of peers from the same IP address be counted?": "\nThat monitoring page states that it counts hosts from 'addr' messages seen on the bitcoin network. \nAn 'addr' message contains the IP number & port number of a bitcoin client. Since all bitcoin clients use the same listening port number the IP number is the only information to count by. \nWhen a bitcoin client connects to a peer it does send out an extra number to identify it by. However there is no friendly way to force all clients behind an IP number to connect to you so you cannot capture that number for all those clients.\n", "adoption - How big is the bitcoin community 1st of Feb. 2012?": "\nHave a look at:\nhttp://bitcoinstatus.rowit.co.uk/\nNibor on the bitcoinj mailing list has created a whole series of charts about the bitcoin p2p network. \n", "doublespend - How does Open Transactions solve the double spend problem?": "\nWhen I withdraw 10 clams, my client software generates a random ID:  lkjsdfoiu\nIt then chooses a random blinding factor, which it keeps secret.\nIt then blinds the random ID using the blinding factor along with the server's 10-clam public minting key, producing (say): 897345jh\nThis random, and now blinded, ID is then sent to the OT server along with my withdrawal request.\nOnce the server verifies that it has successfully withdrawn 10 clams from my account, it uses its 10-clam private minting key to sign the blinded ID:  897345jh SIGNED: Server.\nThe server returns this to me. My client unblinds it using its secret blinding factor along with the server's 10-clam public minting key:  lkjsdfoiu SIGNED: Server.\nWhen you ask, \"Ah-ha-ha, but how can the server's signature still verify, when the ID has changed from 897345jh back to lkjsdfoiu again?\" (since it was unblinded) ==> The answer is, that is the whole point of blind signatures. They still work, even after they are unblinded. That is the whole magic of digital cash. (I encourage you to Google \"homomorphic encryption\" to learn more about the applications for this concept.)\nAt this point:\n1. My client now has a random ID with a valid server signature on it.\n2. The server has no idea what that ID is, since the ID was blinded when it was signed.\n3. Therefore I and I alone am the only person who knows that ID.\n4. When I give the token to Bob who redeems it at the server, the server can see that the token is good (since it has a valid signature.) The server also knows that it's worth 10 clams, since only the 10-clam public key can verify that signature. But the server has no idea where it came from.\nOnce the server redeems the token for Bob, it records the token's ID (lkjsdfoiu) in a spent token database. This way, if the token is ever redeemed twice, the server can see that it is no good, because it has already been used.\nOT expires and rotates cash tokens and mints, in order to allow the server operator to erase its spent token database every few months. Otherwise, the server operator would be forced to store a growing database forever, which is not feasible for a server operator.\n", "adoption - Is the Bitcoin network slowly closing down?": "\nIt could be that this host specifically is getting less connections, although that might not be the case.\nThere has been a similar drop in hashing power and stock price. The most likely cause of this is the lack of press-attention and a low amount of things you can do with Bitcoins. Another possible explanation is the increased usage of online-wallets reducing the need for locally running clients and therefore the total number of hosts connected.\nOverall, no need to worry about the Bitcoin network closing down. In fact it seems to be about to grow faster again.\nSome backing for my claims is here:\nhttp://bitcoin.sipa.be/\nAlthough it's hard to say anything from these charts\n", "Bitcoin Explorer - Truth or did i just got my wallet stolen?": "\nAccording to a post by grue, the program from the website adds another executable to system startup, so it certainly behaves like a virus. You should get your computer checked.\nAdvise for the future - don't trust any .exe file unless you know the source or the owner. If you're not sure whether to trust someone or some website, ask either here, or on the forum. The community is quite sensitive about security and you can be pretty sure to get some good feedback if you ask.\n", "legal - Do you have to pay taxes on Bitcoin revenues?": "\nIn Denmark (Europe) I have looked into this with a friend of mine, and we came to this conclusion.\nHere, you will have to pay tax and do an invoice regardless of the currency. It is trade taking place within Danish borders, and therefor tax applies.\nAlthough, these are rather old laws, and not very well updated. For example, a trade between two Danes going through a PayPal service, should technically be treated as a foreign trade, since the payment leaves Danish borders.\nBut modern day lawyers have no need to go after this, and as far as I can tell, no one have ever been \"caught in trouble\" with the legislation like this.\nA interesting ruling was that the Danish tax authority once started creating accounts inside the game Second Life, and demanded tax cuts on the currency, even though it was \"fictitious\" and digital...\nAlthough, they did not have much success with this.\n", "exchanges - Automating service with income from VISA and expenses in Bitcoins": "\nVisa and Mastercard have been pressuring any merchant transaction processors to not support Bitcoin.\nHowever, there is already at least one service that allows you to deposit Bitcoins and withdraw USD through a Visa debit card: OKPAY recently announced their support of Bitcoin, although I don't know how long they will last.\n", "development - What are the February 20 changes to the Bitcoin protocol?": "\nReally old versions of Bitcoin did not use checksums in network messages (Satoshi incorrectly assumed that the TCP checksum was sufficient). When Bitcoin was changed to start using its own checksums in network messages, version and verack messages could not be immediately updated to use checksums because old clients would be unable to understand checksum-protected messages from new clients and the network would split. Satoshi's solution was to keep using non-checksummed version and verack messages for two years and then have clients automatically start checksumming version/verack messages. At midnight UTC on February 20, this change will happen.\nVersions of the official client later than 0.2.9 will apply the change automatically. Older versions will stop working. Existing connections will not be broken due to the change, so there should be very little disruption at the time of the change. It will probably only cause problems for alt clients and users with seriously-off clocks.\n", "client - How to redeem deposits to my wallet": "\nYour client won't show the transaction until it's received the block the transaction was included in. This website has the block count in the header: http://bitcoincharts.com/charts/ \nRight this moment, there are 164472 blocks (and I'm responding to your question quickly) so there's clearly still some downloading to do. Try to determine whether the block download is still occurring, and work from there. There should be a percentage complete figure for the block download in the bitcoin-qc client.\n", "scalability - Are there any studies into the size of the blockchain scaling over time?": "\nSatoshi Nakamoto addressed this issue in the original crypto forum thread.\n\nLong before the network gets anywhere near as large as that, it would be safe \n  for users to use Simplified Payment Verification (section 8) to check for \n  double spending, which only requires having the chain of block headers, or \n  about 12KB per day.  Only people trying to create new coins would need to run \n  network nodes.  At first, most users would run network nodes, but as the \n  network grows beyond a certain point, it would be left more and more to \n  specialists with server farms of specialized hardware.  A server farm would \n  only need to have one node on the network and the rest of the LAN connects with \n  that one node.\nThe bandwidth might not be as prohibitive as you think.  A typical transaction \n  would be about 400 bytes (ECC is nicely compact).  Each transaction has to be \n  broadcast twice, so lets say 1KB per transaction.  Visa processed 37 billion \n  transactions in FY2008, or an average of 100 million transactions per day.\n  That many transactions would take 100GB of bandwidth, or the size of 12 DVD or \n  2 HD quality movies, or about $18 worth of bandwidth at current prices.\nIf the network were to get that big, it would take several years, and by then, \n  sending 2 HD movies over the Internet would probably not seem like a big deal. \n\n", "mining pools - Why does P2Pool show up on BitcoinWatch.com if it's P2P?": "\nBlockchain.info (the source of the graph) uses the \"First relayed\" method to attempt to determine a block's owner. The site has a database of ip addresses that belong to the major mining pools and tries to connect to each of those. If a block is received from one of those ip's first then that pool is deemed to be the owner.\nFor P2Pool I occasionally join the p2p network and scrape a list of \"addr\" messages containing the ip's of the nodes in network. These are inserted into the database under the collective \"P2Pool\" name.\nThere is actually a better way to detect P2Pool blocks as the first output of each coinbase tx is strange e.g. http://blockchain.info/block-index/857086\n", "protocol - Why are m-of-n transactions not used today?": "\nThere are some m-of-n transactions in the blockchain (blockchain.info - block explorer) but they have only been recently added to the standard transaction types.\nHowever the reason why they are probably not in wide spread use yet is there is no gui based client that can construct one. My Wallet will be able to construct them soon, I don't know how much demand there will be for usage.\nThe way I see it BIP 16//17 and m-of-n have different use cases. The drawback of P2SH is that you need to share the script with the recipient in order for them to know they have received a payment - you also need to store the script. While this might be ideal for split key wallets, (where the wallet owner already has the script) it is awkward for use with escrow transactions. If you receive an M-Of-N escrow payment notifications can work out of the box and you can use existing vanity addresses.\n", "transactions - Why I haven't received my transfer from BTCGuild?": "\nAccording to the Blockexplorer, you should see all of those transactions when you reach block 163971. Your client probably needs to finish synchronising with the network, as the first transaction is the newest one. If you see the second transaction, then you still have about 7 days at most to synchronise. Just leave your client on for a couple hours and you should see your last 0.2 Bitcoins arrive.\n", "Which Bitcoin developers are referred to as saying that \"users have no say in the system's core development\"": "\nYou misunderstand what the developers are saying. They are not saying that they object to pubic scrutiny and participation. They are saying that being a user of Bitcoin does not somehow specially qualify you to comment on the design or implementation of the Bitcoin system.\n", "bitcoin core - Address creation in standard client - random library?": "\nIn addition to microsecond time, Bitcoin seeds the random number generator with GUI events, /dev/urandom on Unix, and HKEY_PERFORMANCE_DATA on Windows (very random, constantly-changing data).\n", "bitcoin core - What is the current (Feb 2012) \"bus factor\" of the standard client?": "\nAs of today, perhaps 20\nGenerally what makes a \"core developer\" as opposed to a \"contributing developer\" is an ongoing interest in the codebase that typically equates to near full-time employment. Should all core developers fall under the wheels of this continent-spanning bus of doom then Bitcoin would suffer a significant blow.\nFor a while.\nThen various contributing developers (of which there are legion) would likely step up to act as replacements. The discussions on the forums, IRC channels, mailing lists and version control systems will be read and acted upon. Bugs will be fixed and life will go on. \nEdit: So where does this number \"20\" come from? Well it's based largely on my experiences from reading the development mailing list, IRC logs and various Google+ circles. There is no real exact number, though, activity varies over time and various people are \"core\" to a particular issue as it passes through. \n", "alternatives - Should fractional reserve banking be prohibited through the bitcoin protocol or otherwise, and how could such a change be implemented?": "\nNo, you can't prevent fractional reserve banking technically. For example, IOUs can circulate just like Bitcoins and there's no technical means to stop it. Essentially, anything worth X Bitcoins (once risk and the like are factored in) can act just like X Bitcoins, even if it's not X Bitcoins. And since it's not Bitcoins, nothing Bitcoins can do can stop it.\nUnless you foresee some massively powerful central coercive authority that prohibits it, you will always have fractional reserve banking. It just makes too much sense. It will happen absent the use of massive amounts of force.\nThere are trivial technical fixes to the \"run on the banks\" problem. However, there is still the very real \"the bank is a crook\" problem and the \"the bank goes broke due to fundamentally unsound loans\" problem.\n", "transactions - How many Bitcoin addresses are/have been carrying a balance?": "\nI calculated the answer by starting with Gavin's \"bitcointools\" and modifying it to track account balances.\nHere's what I found.  Each line shows the number of addresses after the specified block was found, at the end of each month.  So the 1st line is saying that after block 2543 was found at the end of Jan 2009, there were 2,439 funded addresses, and all 2,569 were 'active' in January 2009.  The 'active' number is the number of addresses involved in a transaction in the preceding month, and can be bigger than the number of addresses which remain funded at the end of that month.\n-block  --date--  --total--   ---used--%total-   -active---%total---%used-\n  2543  Jan 2009      2,569     2,439 (94.94%)     2,569  100.00%  105.33%\n  5923  Feb 2009      5,975     5,646 (94.49%)     3,447   57.69%   61.05%\n  9389  Mar 2009      9,444     8,868 (93.90%)     3,486   36.91%   39.31%\n 12831  Apr 2009     12,893    12,125 (94.04%)     3,495   27.11%   28.82%\n 16214  May 2009     16,288    15,388 (94.47%)     3,424   21.02%   22.25%\n 18450  Jun 2009     18,528    17,543 (94.68%)     2,267   12.24%   12.92%\n 20375  Jul 2009     20,456    19,347 (94.58%)     1,973    9.65%   10.20%\n 21939  Aug 2009     22,021    20,749 (94.22%)     1,639    7.44%    7.90%\n 24098  Sep 2009     24,180    22,647 (93.66%)     2,212    9.15%    9.77%\n 26224  Oct 2009     26,311    24,374 (92.64%)     2,231    8.48%    9.15%\n 28441  Nov 2009     28,533    26,411 (92.56%)     2,262    7.93%    8.56%\n 32489  Dec 2009     32,611    29,827 (91.46%)     4,420   13.55%   14.82%\n\n-block  --date--  --total--   ---used--%total-   -active---%total---%used-\n 37493  Jan 2010     37,647    34,342 (91.22%)     5,304   14.09%   15.44%\n 43096  Feb 2010     43,329    37,274 (86.03%)     7,009   16.18%   18.80%\n 48297  Mar 2010     48,615    40,329 (82.96%)     6,308   12.98%   15.64%\n 53875  Apr 2010     57,806    42,688 (73.85%)    10,839   18.75%   25.39%\n 58815  May 2010     63,368    44,620 (70.41%)     6,762   10.67%   15.15%\n 63561  Jun 2010     69,540    47,011 (67.60%)     7,056   10.15%   15.01%\n 71436  Jul 2010     94,992    53,227 (56.03%)    27,957   29.43%   52.52%\n 77452  Aug 2010    107,172    55,995 (52.25%)    14,162   13.21%   25.29%\n 82997  Sep 2010    120,562    56,490 (46.86%)    16,883   14.00%   29.89%\n 88892  Oct 2010    135,952    58,428 (42.98%)    18,921   13.92%   32.38%\n 94801  Nov 2010    155,639    60,615 (38.95%)    22,307   14.33%   36.80%\n100409  Dec 2010    176,326    65,622 (37.22%)    23,377   13.26%   35.62%\n\n-block  --date--  --total--   ---used--%total-   -active---%total---%used-\n105570  Jan 2011    210,243    69,030 (32.83%)    37,989   18.07%   55.03%\n111136  Feb 2011    267,542    78,813 (29.46%)    62,381   23.32%   79.15%\n116038  Mar 2011    353,093    90,304 (25.58%)    92,321   26.15%  102.23%\n121126  Apr 2011    443,112    99,090 (22.36%)    99,144   22.37%  100.05%\n127865  May 2011    631,480   132,152 (20.93%)   203,052   32.15%  153.65%\n134121  Jun 2011  1,061,590   196,975 (18.55%)   462,886   43.60%  235.00%\n139035  Jul 2011  1,548,806   380,056 (24.54%)   531,002   34.28%  139.72%\n143408  Aug 2011  1,930,979   487,833 (25.26%)   428,095   22.17%   87.75%\n147565  Sep 2011  2,205,926   533,670 (24.19%)   318,294   14.43%   59.64%\n151314  Oct 2011  2,411,298   546,269 (22.65%)   241,105   10.00%   44.14%\n155451  Nov 2011  2,601,999   553,251 (21.26%)   225,012    8.65%   40.67%\n160036  Dec 2011  2,768,500   568,177 (20.52%)   199,879    7.22%   35.18%\n\n-block  --date--  --total--   ---used--%total-   -active---%total---%used-\n164780  Jan 2012  2,956,869   580,453 (19.63%)   236,927    8.01%   40.82%\n165643  6 Feb 12  2,994,694   583,126 (19.47%)    62,300    2.08%   10.68%\n\nSo the number of non-empty addresses has been around 600,000 since September 2011.\nAs of block 165643, the ten most common values for addresses to store were: \n 0.00000000 (in 2411568 addresses)\n50.00000000 (in   40631 addresses)\n 0.00000001 (in   35921 addresses)\n 0.05000000 (in   22806 addresses)\n 0.00100000 (in   22439 addresses)\n 0.02000000 (in   18160 addresses)\n 0.01000000 (in   13178 addresses)\n 1.00000000 (in   11636 addresses)\n 0.00500000 (in    9502 addresses)\n 0.00000002 (in    7628 addresses)\n\nThe next 43 most common values after that were the 43 values from 3 satoshis to 45 satoshis, with between 5472 and 5799 addresses having each value.\nI don't know what's special about 0.00000045 and not 0.00000046, but only one other value with a non-zero 8th decimal digit occurred in more than 25 addresses.  That was 0.00000703, which occurred in 101 different addresses.\nI also found a bunch of weird looking addresses, which nobody will ever be able to spend from.  http://blockchain.info/address/871a40e5e61b96b6171f1b435788082edadda7a8 shows a lot of transactions sending tiny amounts to human-readable addresses, spelling out paragraphs of text.\nAs of block 165643, from Mon Feb 6 2012:\n        2 addresses have 6 or more figures (100,000 <= x):\n            105,258.88 12WmWuSQCgpEkPQTZ4ABijQaz6TCV69ZpE and\n            105,555.00 1933phfhK3ZgFQNLGSDXvqCn32k2buXY8a\n       70 addresses have 5 figures (10,000 <= x < 100,000)\n      740 addresses have 4 figures (1,000 <= x < 10,000)\n    6,552 addresses have 3 figures (100 <= x < 1,000)\n   66,118 addresses have 2 figures (10 <= x < 100)\n   50,638 addresses have 1 figure (1 <= x < 10)\n  459,006 addresses have a fraction (0 < x < 1)\n2,411,568 addresses have 0 BTC\n\n", "mining pools - Which Bitcoin miners allow one to use paths in URLs?": "\nDiabloMiner allows both URLs and non-URLs. -l http://user:pass@host:port/ is the same as -u user -p password -o host -r port. URLs may contain paths.\n", "mining pools - Is the proposed \"Miner Promise\" method of accepting 0-confirmation transactions safe?": "\nThis could work in most situations, as long as the pool is trustworthy. However, the whole notion of \"relatively safe\" 0-confirmation transactions can still be risky if there are any miners that want to be malicious. For example, if one was to accept such transactions, and someone wanting to exploit their trust by double spending and trying to mine their own block with only the second transaction. Even if 99% of the pools would confirm the transaction, the one that wouldn't could cause a lot of problems if exploited by malicious party. Combating such a rogue pool would also be hard if one wants to avoid forks in the blockchain (for example, by rejecting blocks without a given transactions).\nIn short, this approach offers slightly more security, if widely adopted it can work as intended, but it is not 100% attack-proof.\n", "investing - What are the perceived advantages of bitcoin as a store of value?": "\nBitcoin has several advantages over other means as a store of value.\n\nThey take no space. This means that you can store them in a USB as well as a backups online for example in an email. \nYou do not need to pay anything for storing the Bitcoins. There is no need to pay for a secure bank account since they can be stored online or in USB or even in your brain if you use a deterministic wallet. In this case you only need to remember the passwords.\nThis also means that you can bring them to any country easily without paying any fees.\nThey are easy to hide. Nobody will know how much you store or how to get them.\nThis will make them impossible to steal. \nYour funds cannot be seized by any bank or government.\n\nThe downside is the fluctuation in value.\nBut if Bitcoins are here to stay they will increase in value over the years, \nperhaps outperforming many other assets. \nThere is also a small risk that they might get replaced by a more efficient cryptocurrency though; so far several have tried but none have succeeded. \n", "exchanges - How can I change BTC into normal cash?": "\nBitcoins are a purely electronic currency. If you want to sell them in exchange for dollars or euros, you can do that. But as Bitcoins, they exist purely electronically. There are physical Bitcoins but basically, they're just the key to an electronic account printed in some form.\nI think you're missing the concept that Bitcoins act like a currency or commodity. You can have 10 Bitcoins just like you can have 10 ounces of gold. The key difference is that the Bitcoins exist electronically rather than phyiscally. If you have Bitcoins and want dollars, you have to find someone who has dollars and wants Bitcoins, then you exchange with them.\nBitcoins are not a payment or fund transfer system for national currencies like PayPal and Western Union are. Bitrcoins are a currency that has an efficient built-in transfer system.\n", "security - How long would it take a large computer to crack a private key?": "\n\nhow long in bytes the private key is\n\n32 bytes, or 256 bits\n\nthen how many combinations of numbers it will contain\n\nThere are 2^256 different private keys.  That's a little larger than a 1 followed by 77 zeroes.\n\nwhat is the fastest computer or network of supercomputers\n\nAt its peak around August 2011, the Bitcoin network was checking 15 trillion sha256 hashes per second.  (See http://bitcoin.sipa.be/)\n\nhow long it would take to crack a private key using that computer\n\nIf we assume it takes the same time to run an ECDSA operation as it takes to check an sha256 hash (it takes much longer), and we use an optimisation that allows us to only need 2^128 ECDSA operations, then the time needed can be calculated:\n>>> pow(2,128) / (15 * pow(2,40)) / 3600 / 24 / 365.25 / 1e9 / 1e9\n0.6537992112229596\n\nIt's 0.65 billion billion years.\nThat's a very conservative estimate for the time taken to break one single Bitcoin address.\nEdit: it was pointed out that computers tend to get exponentially faster over time, according to Moore's Law.  Assuming computing speed doubles every year (Moore's law says 2 years, but we'll err on the side of caution), then in 59 years it'll only take 1.13 years. So your coins are safe for the next 60 years without a change to the algorithms used to protect the blockchain. However, I would expect the algorithms to be changed long before it's feasible to break the protection they provide.\n", "hash - How are transaction hashes calculated?": "\n\nTaking the sha256 hash of that hash gives\n3b a3 ed fd 7a 7b ..............\nBut the real transaction hash according to blockexplorer.com is\n.............. 7b 7a fd ed a3 3b\n\nThe answer I was getting was correct, but bytewise reversed.  I need to get used to Bitcoin using little-endian storage.\n", "scalability - How well does P2Pool scale?": "\nThere are two problems with scaling P2Pool:\n\nThe sharechain difficulty goes up as the pool gets bigger to maintain the rate of finding shares at around every 10 seconds.  If everyone was using P2Pool then the difficulty of finding a share would only be 60 times less than the difficulty of solo mining, and so varience would go right up.\nAs more miners join, it's likely that the latency goes up.  Since the share that the pool is working on changes every 10 seconds or so, a delay of just a few seconds is very significant.\n\nIn order to scale, there needs to be multiple P2Pools.  Maybe they can be nested in a tree structure: a level 1 P2Pool sets its difficulty so it finds shares every 5 minutes.  100 different level 2 P2Pools feed into it, finding shares every 1 minute, and 100 level 3 pools feed into each of the level 2 pools, finding blocks every 10 seconds.  Ideally this would all be managed automatically by the p2p network if that's possible.\n", "trading - Can I CPU mine other coins to win Bitcoins?": "\nThis is largely what the sCrypt() based forks are intended for - both utilizing un-tapped CPU power on dedicated rigs or allowing casual miners to use their CPUs. At present, the difficulty on the Bitcoin network is so high that it's not even a question of profitability but capability - even with pooled mining, CPU mining is so slow that you may not actually submit even a single share for each round. That said, let's do the math. I'll use Tenebrix (TBX) as an example since I have numbers handy for it.\nKeep in mind that the numbers presented are based on difficulties and exchange rates right now and as such will change. I will provide sources for all values and calculations so that you can re-calculate at any time.\nA decent dual-core CPU will net you about 3 kH/s on Tenebrix (0.003 MH/s) and our friend the Bitcoin Mining Calculator says that at the current difficulty of 0.288 you should mine 10.48 TBX per day. BTC-E has the current TBX/BTC exchange rate at 0.000195, so that's worth 0.0020436 BTC per day. The same math could be done for FairBrix, LTC or any other sCrypt() derived forks.\nNow for the BTC side of the fence: At the current difficulty of 1379647.43921 (auto-populated in the calculator, but available from the same blockexplorer clone I linked earlier) the same CPU will run about 3 MH/s on the Bitcoin network worth approximately 0.00219 BTC, roughly the same result.\nSo there's your (hopefully future-proof) answer: let the math guide you. As of this exact moment, mining TBX about the same efficiency though you'll probably see smoother returns with an sCrypt() fork (i.e. more shares per hour)\n", "hashpower - How to quickly check your mining speed?": "\nVery good question. Today I created a page at my pool for this purpose: http://bitminter.com/test\nYou don't get paid without registering and entering a name and password. But it is useful for the purposes you stated in the question. Just click the \"test start\" button. You need Java installed, and of course GPU drivers with OpenCL support if that's what you want to test.\nPS: Thanks for the idea for this.\n", "protocol - Miner username and password - does it need to be unique in the major pools?": "\nUsually the worker's username is appended to your account username. So if my pool username is nmat, my workers will be named nmat_rig1, nmat_rig2, nmat_FPGA, etc.\nCreating multiple worker accounts is useful to control the performance of your rigs, but is not mandatory to use a different identifier for each machine. You can have all your rigs mining with the same username/password and the money will still end up in your account.\n", "Bitcoin protocol / algorithm scalability": "\nIt will not scale (to mass-market adoption) if you want to put all transactions directly into the blockchain. \nThere needs to be a hierarchy of services built on top of the core protocol. In addition to improving scalability, they can also offer all kinds of features that some people need, such as reversible transaction, instant (no-confirmation) transfers, verified accounts, or anonymity. The blockchain would be used as a clearing house between those services. Most people would not need to interact directly with it, but they can still rely on the guarantees it provides to the economy backed by the chain.\nJust because the underlying protocol is radically peer-to-peer does not mean that you cannot have hierarchies layered over it. Just because git is peer-to-peer does not mean that anyone has the same impact on Linux kernel development. In the Bitcoin world, there will still be banks for example, and credit cards, and insurance companies. The difference is that no matter how powerful those become, they cannot mess with the money supply (and create coins for themselves out of thin air). If they screw up enough that a large number of people stop trusting them, they can be cut out of the loop.\n\nBecause of how a transaction ALWAYS needs to be confirmed (at least 6 times?) over P2P, the transfers are effectively far from instantaneous. There is a built in delay. Isn't this a problem? \n\nThe confirmations make it impossible for someone to double-spend. If you trust the other party enough, you do not have to wait for this. Same if you have other ways to get back at them if they do cheat. If you are a merchant, you can just calculate a percentage of fraud due to loss. Or take an insurance policy. Shop owners already do that in the real world (to mitigate theft), as do credit card processors. If you provide a service to them (like one month VPN), you can stop doing that if the payment \"bounces\". If you ship physical goods, you can wait three hours for confirmation easily. You can buy and sell currencies instantaneously on trading platforms like MtGox (so you don't need to trust or even know who you are trading with, as long as you trust the platform).\nWaiting for confirmations allows you to (in an automated fashion) accept payment from someone who you know nothing about, without trusting anyone else to vouchsafe, either. That is a nice extra feature of Bitcoin, but it comes in addition to \"real-world\" guarantees you already have.\n", "exchanges - What's the simplest way to deposit BTC into US Banking account with minimal fees?": "\nAre you saying you don't want an intermediary because of the time required to administer the transactions?\nIf so, then here's a solution for automating that.\nMagicalTux from Mt. Gox was acknowledging the need for the API to support creation of a bitcoin address where any coins received at that address are immediately sold at market.  Also discussed was the need for an account to be able to specify that once daily the account's USD balance would be swept to Dwolla.\nThat combination will be among the least expensive methods for converting BTCs to USDs in an automated manner.\nToday the closest you can get to that is to create a separate account on Mt. Gox with no bitcoins and then create a large market sell order.  Whenever coins are received and confirmed, they will automatically be sold at market because of the open sell order.  Moving the funds to Dwolla periodically remains a manual step though.\n", "wallet - Interoperability of Bitcoin clients": "\n\nYou can use online wallet, like StrongCoin, then it doesn't matter where you access it from.\nYou need to use an Android client that allows for private key import/export. I'm not sure which Android client does this, but for Windows/Linux you either can look for some tools for altering the wallet.dat for the standard Client, or use an alternative client with import functionality (as far as I remember, MultiBit can do that, but I'm not 100% sure).\n\n", "bitcoind - How to merged mine with getmemorypool RPC command?": "\nMost of what you need is explained at https://en.bitcoin.it/wiki/Merged_mining_specification\nWhen you construct the block for the primary chain (e.g. bitcoin) you need to include a merged mining header in the generation transaction (coinbase). The format of this data is explained at the URL above under \"Merged mining coinbase\".\nIf, while hashing the primary chain, you get a hash that is below the target for the auxiliary chain (e.g. namecoin) you can create a block on that chain using getmemorypool (assuming the daemon for that chain supports getmemorypool).\nTo submit a merged mining block, for namecoin you need to do two things that you wouldn't do when mining non-merged.\nThe first is to set the auxpow bit in the version field of the block header. \nBLOCK_VERSION_AUXPOW = (1 << 8)\nThe second difference is that you insert an auxpow between the header and the transactions. The binary layout of the auxpow is explained at the URL above under \"Aux proof-of-work\".\nThe auxpow bit in the version field tells namecoin that after the block header there will be an auxpow before the transactions.\nIn theory other alt coins may need to have their merged blocks formatted differently and/or submitted differently to their daemon.\n", "bitcoind - Getwork - can the miner increment timestamp?": "\nYes, the miner can increment the time stamp by a limited amount, but only if the pool advertises X-Roll-NTime as a feature. DiabloMiner and CGMiner both support this.\nSee the official spec for more information.\n", "Is there a limit on the number of orphan transactions a node can cache?": "\nThe 0.6 release includes fixes for a couple of denial-of-service vulnerabilities, including this one (see commit 142e6041).\nDisconnecting peers that send \"too many\" orphans might be implemented in a future release.\nIn the future, if you find a DoS or security vulnerability in a Bitcoin implementation it is best to email the developer or developers so they know about the problem as soon as possible.\n", "security - Why would you need to \"catch up\" in the 51% attack?": "\nYou're exactly right; there's no need to catch up if you don't start off behind.\nAs soon as I get 51% of the network's hashing power, I start building my fork in private, then buy something on the 'real' fork and allow the purchase to get as many confirmations as it needs.  It will be a lot, because I'll be buying something really expensive.  I take care not to include my transaction in the private fork.\nThen, once the goods are shipped I publish my secret fork and get my coins back.\nThe Finney attack is only good for double spending when the recipient accepts unconfirmed transactions.\n", "protocol - In Getwork, how does one calculate the value of Hash1?": "\nhash1 is a uint256 zero, padded to a multiple of 64 bytes by FormatHashBlocks() in main.cpp, and then reversed in 4 byte chunks.\nFormatHashBlocks() puts a 0x80 right after the 32 zero bytes, and a 4 byte bit count at the end (00 00 01 00, meaning 256 bits).\nthe uint256 zero is:\n0000000000000000 0000000000000000 0000000000000000 0000000000000000\n\nit's padded to 64 bytes:\n0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000000000000000\n                                                                    ^^^^^^^^^^^^^^^^ ^^^^^^^^^^^^^^^^ ^^^^^^^^^^^^^^^^ ^^^^^^^^^^^^^^^^\nhas the 80 in the first byte of padding:\n0000000000000000 0000000000000000 0000000000000000 0000000000000000 8000000000000000 0000000000000000 0000000000000000 0000000000000000\n                                                                    ^^\nand the length at the end:\n0000000000000000 0000000000000000 0000000000000000 0000000000000000 8000000000000000 0000000000000000 0000000000000000 0000000000000100\n                                                                                                                               ^^^^^^^^\nand then has each group of 4 bytes reversed: 12 34 56 78 -> 78 56 34 12\n0000000000000000 0000000000000000 0000000000000000 0000000000000000 0000008000000000 0000000000000000 0000000000000000 0000000000010000\n                                                                    ^^^^^^^^                                                   ^^^^^^^^\n\nA better question might be \"why is hash1's value calculated like this\"?\nYou didn't ask, but the data field returned by getwork is formatted the same way.  Instead of a uint256 zero though, the input is:\n\nversion (4 bytes)\nprevious block's hash (32 bytes)\nmerkle root (32 bytes)\ntime (4 bytes)\nbits (related to difficulty) (4 bytes)\nnonce (4 bytes)\n\nThat's a total of 80 bytes, which is padded to 128 bytes by FormatHashBlocks().\nExample:\n00000001 (version)\n0863bcb701d52fea 0e0c7b0d4696d7e7 8feb125a84e0911b 0000043e00000000 (prev hash)\nbc656fe91e44907c 32d1704f900bd7a6 c2fa06386174477f a8b145addebc8d00 (merkle root)\n4f35dde3 (time)\n1a0c290b (bits)\n00000000 (nonce)\n0000008000000000 0000000000000000 0000000000000000 } (padding)\n0000000000000000 0000000000000000 0000000080020000 } (80 bytes = 640 bits = 0x280)\n\n", "mtgox - Why do both Mt. Gox and Intersango use Polish banks?": "\nAs for Mt. Gox, they got their polish account when they bought up bitomat.pl, after it lost its private keys. They continue to support accounts from that other website, so they allow easy money transfers to that account (although it takes them a couple days to credit the account).\nAs for Intersango, I presume they might want to cater to that part of the market (bitomat was dealing solely in PLN and it was the third largest Bitcoin exchange at a time). It could also be related to the fact that poles often work in UK (where the exchange is located) and transfer their money back to Poland - wire transfers between countries are quite expensive, while sending Bitcoins is cheap.\n", "security - Are there any transaction-related artifacts left in the database?": "\nSome (one?) of the *.log files are connected to your wallet.dat address database, knowing your bitcoin addresses implies knowing your transactions.\nOne (debug.log) is free format debugging text and may contain all kinds of identifying info.\n", "bitcoin core - Why does the initial blockchain download get stuck part way through?": "\nRestart OS, restart Bitcoin, try forwarding port 8333 on your router to your machine.  If there is no progress after that, you might consider deleting all the files in your Bitcoin data folder except wallet.dat (if you have made any transactions, deleting wallet.dat will make you lose your Bitcoins). If you just want to use Bitcoins casually, or don't want to wait for the client to sync, you can consider using an eWallet.\n", "hashpower - How fast is the Bitcoin (mining) network?": "\nAccording to Bitcoin Charts, it is equivalent to 127.25 PetaFLOPS currently. This would make it faster than 500 fastest supercomputers in the world (58.9 PetaFLOPS), or Folding@home (4.1 petaFLOPS) [reference]. However, this is only equivalent computation speed, if you would measure actual amount of FLOPS of Bitcoin mining it would be... 0, as Bitcoin does not use floating point operations. Moreover, I'm not exactly sure how Bitcoin Charts computed that figure.\nHowever, objective measure of how fast Bitcoin is in computational sense, would be it's current hashrate - 9.738 Thash/s. At peak rate it was estimated to be over 15Thash/s.\nAs a side note, one might also be interested in the speed of propagation of blocks in Bitcoin network, which is estimated to be close to 2 seconds.\n", "protocol - How to calculate new \"bits\" value?": "\nWhat does the bits field represent?\nFirst of all, we need to understand what the 'bits' field means.\nBits is in 'compact' format.  This is kind of like a floating point format, but it represents big integers rather than arbitrary real numbers.  The first byte indicates the number of bytes the represented number takes up, and the next one to three bytes give the most significant digits of the number.  If the 2nd byte has a value greater than 127 then the number is interpreted as being negative.\nTo convert a positive integer to 'compact' format, we:\n\nconvert the integer into base 256.\nif the first (most significant) digit is greater than 127 (0x7f), prepend a zero digit\nthe first byte of the 'compact' format is the number of digits in the above base 256 representation, including the prepended zero if it's present\nthe following three bytes are the first three digits of the above representation.  If less than three digits are present, then one or more of the last bytes of the compact representation will be zero.\n\nExample 1 - Convert 1000 to 'compact' format\nFor example, to represent 1000 in 'compact' format, we convert to base 256:\n1000 = (0x03)*256 + (0xe8)*1\n\nSo we have a 2 digit base 256 number:\n03 e8\n\nThe first digit is not greater than 0x7f, so we don't prepend a zero digit:\n03 e8\n\nThen the compact representation becomes:\n02 03 e8 00\n\nExample 2 - Convert max target to 'compact' format\nThe minimum difficulty has a target of 2^(256-32)-1.  Let's represent that in 'compact' format.  First we convert it to base 256:\nff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n\nThat's 28 0xff digits.  The first digit is greater than 0x7f, so we prepend a zero digit:\n00 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff\n\nNow it's 29 digits long.  hex(29) = 0x1d.  So the 'compact' representation of this is:\n1d 00 ff ff\n\nNotice we've lost a lot of 'ff' digits there.  We've only kept 2 bytes of precision, what with the size byte and the prepended zero byte using up two of the four available bytes.  If we were to convert back from 'compact' format to see what number we've actually stored, we get:\nff ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00\n\nwhich is in fact the maximum target used by Bitcoin.  This is what a difficulty of 1 sets the block hash target to be.\nHow is the value of the bits field calculated?\nNow that we know what the bits field means, we can look at how its value is decided.  In the official client, the bits value is calculated by function GetNextWorkRequired() in src/main.cpp, which does the following:\n\nif we're working on a block that's a multiple of 2016 (every 2 weeks)\n\nlook at the timestamps on the last block, and the block 2015 blocks before it\ncalculate the difference in these two timestamps\nif the difference is greater than 8 weeks, set it to 8 weeks; this prevents the difficulty decreasing by more than a factor of 4\nif the difference is less than half a week, set it to half a week; this prevents the difficulty increasing by more than a factor of 4\nmultiply the difference by the current target (ie. the current bits converted from 'compact' representation to the target it represents)\ndivide the result by 2 weeks\nif the result is greater than the maximum target (2^(256-32)-1), set it to the maximum target\nconvert the result to 'compact' form, and use that as the new bits value\n\notherwise (we're working on a block that's NOT a multiple of 2016\n\nif we're on testnet and it's later than 15 Feb 2012\n\nif it's been more than 20 minutes since the last block was found\n\nset bits to its highest possible value, 0x1d00ffff, which represents a difficulty of 1; this is the 'special-min-difficulty rule'\n\notherwise\n\nset bits to the same as in the last non-special-min-difficulty rule block\n\n\notherwise (we're not on testnet, or it's before 15 Feb 2012)\n\nset bits to the same as in the last block\n\n\n\n", "protocol - Pool getwork \"target\"?": "\nI just started up a miner connecting to slush's pool.  The getwork my miner sent was answered with this:\n{\"id\": \"1\",\n \"result\": {\"hash1\": \"00000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000010000\",\n            \"data\": \"00000001c5993e03c08cea1b78a2190865f68698c069a8033d60e5e70000082a00000000e0884a966424aac62b4997dc0bae1c60fab2ba12887fa842f07c9cacaf24b4534f3b53931a0c290b00000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000080020000\",\n            \"midstate\": \"390b85042008bac15b6ce310d791c8612610a0c5ee441b252ee6abee70bf742a\",\n            \"target\": \"ffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000\"\n           },\n \"error\": null\n}\n\nThe target it gave me is 64 hex digits long.  That's around 2^256, and as such is bigger than the maximum target of 2^(256-32)-1.  Then I realised the target is 'little-endian', meaning it's byte-by-byte backwards.  Reversing it gives:\n00000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n\nwhich is exactly 2^(256-32)-1, the maximum target.\nSo slush's pool at least is asking me to solve blocks of difficulty 1.\nI know P2Pool sets the difficulty to be higher, so that shares on the P2Pool sharechain will be found around every 10 seconds.  Currently to achieve that it's giving out work with difficulty 609.82, but it changes every few seconds based on the recent rate of finding P2Pool shares.\nEdit: I just checked, and it turns out I'm wrong.  Here's a getwork from the P2Pool instance I'm running:\n{\"error\": null,\n \"jsonrpc\": \"2.0\",\n \"id\": 0,\n \"result\": {\"hash1\": \"00000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000010000\",\n            \"target\": \"ffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000000\",\n            \"submitold\": true,\n            \"identifier\": \"15578\",\n            \"data\": \"000000011e90271e3071e27e4b16142162e54a68776176deeef5fe6e000001a800000000534e460eb3798f9d4149c56dddf486610512007201745fefd7661cedbde821fa4f3b5c461a0c290b00000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000080020000\",\n            \"midstate\": \"acb6f89399060ab343bbd17e3a6cccb89c2211af189bec8da15284a1d5e87b29\"\n           }\n}\n\nNotice the target is the same as on slush's pool.  It represents a difficulty of 1.  So the miner thinks it's looking for shares of difficulty 1, but P2Pool rejects any share the miner submits which has a difficulty of less than 609.82, or whatever the pool's difficulty is at the time.\n", "address - How to instantly give people a pre-filled wallet to introduce them to Bitcoin?": "\nI would suggest starting a wallet at My Wallet (blockchain.info). \n\nIt's dead simple, all you have to provide is a password\nYou don't have to enter any personal info about the person that you want to give the wallet to.\nAs opposed to e.g. Instawallet your friend can change that password so that you no longer have access to the wallet.\nIt is \"mobile friendly\" so you can do it from your phone, as you requested\nIt has a sleek and professional look so it won't scare away new users\n\n", "protocol - Getwork and GetMemoryPool - why is previous block hash different?": "\nThe value of previousblockhash in getmemorypool output is the block hash in big-endian order.\nThe value of data in getwork output is formatted as I described in this answer to your question about how hash1 is calculated.\nThis byte order reversal on 4 byte words is done by a function called FormatHashBuffers in main.cpp.  It's only done for the data and hash1 fields of the getwork output.  There's no comment explaining why it's done.\n", "key selling points - Is there any good reason to buy Bitcoins?": "\nFor speculation, you would buy when the price is low in anticipation that the price will rise in the future.\nThere are some signs that the currency is seeing wider use and has greater potential in the future.  For instance:\n - http://blockchain.info/charts/n-transactions\nConcluding that that growth means that a bitcoin will be worth $4 or $2 or $32 by any certain date is more or less speculation though.  \nAs far as why you might want to buy bitcoins today?\nHow about to participate in an online lottery where the jackpot payout return is 99% of the total wagers.  Beats the heck out of doing a scratch-off at the gas station.  Tickets are about $1 each.\n - http://www.bitlotto.com\nHow about for the novelty.  Have you ever bought a quart of pure maple syrup direct from the farm?\n - https://bitcointalk.org/index.php?topic=55594.0\nor Alpaca socks?\n - http://www.grasshillalpacas.com/alpacaproductsforbitcoinoffer.html\nor a Blue Canary Night Light:\n - http://bluecanarynightlight.com\nHow about to prove your brilliance?  Bets of Bitcoin is a predictions market.\n - http://betsofbitco.in\nMaybe you want to purchase something and would rather that purchase not show on your credit card bill.  Or not.\nOr maybe you want to make a purchase from someone on Craigslist and don't know if you can trust that they'll ship your order.  There are escrow services (with dispute resolution) available using bitcoins (compare BTCrow's 1% to escrow.com's $25 minimum fee):\n - http://www.btcrow.com\nMaybe you want to send a few bucks to someone in another country as an expression of appreciation.  Bitcoin transfers are nearly instant and know no borders.\n", "mining pools - Which miners support generating their own midstate?": "\nYou can see which miners support what features here:\nhttps://en.bitcoin.it/wiki/Getwork_support\n\"midstate\" is the feature you are looking for in this case.\n", "How to setup testnet-in-a-box on Mac OSX?": "\nYes, run bitcoind instead of bitcoin.\nIf bitcoind isn't working, but bitcoin-qt is working, then do this instead:\nbitcoin-qt -server -datadir=1\nbitcoin-qt -server -datadir=2\n\nThis will only work if you run the commands from inside the testnet-box folder.  Alternatively specify full path names to the 1 and 2 folders: datadir=/home/chris/testnet-box/1 etc.\nYou need to download the testnet-box.zip file and extract it.  That will make you the two folders 1 and 2.  Both folders have testnet blockchain files, a wallet, and a bitcoin.conf.\nFolder 1's bitcoin.conf says:\nrpcpassword=123   # Set this yourself.\nnoirc=1\ntestnet=1\n\nso it will run a testnet instance, not connect to IRC, and set the password to '123' for RPC connections.\nFolder 2's bitcoin.conf says:\nrpcpassword=123   # Set this yourself.\nnoirc=1\ntestnet=1\nrpcport=19332\nnolisten=1\nconnect=127.0.0.1:18333\n\nwhich is the same as the other except that it listens for RPC connections on a different port, doesn't listen for incoming P2P connections at all, and only connects to the other instance.\nThere shouldn't be a port conflict.  The first will be listening on port 8332 for RPC connections and port 18333 for P2P connections.  The second will be listening on port 19332 for RPC connections, and not listening for P2P connections at all.\nNote: if you're running the 0.6.0 release candidate, the nolisten=1 in node 2's bitcoin.conf won't work.  You'll need to change it to listen=0 due to a bug I found and reported while researching this answer.\n", "exchanges - What is a bid wall?": "\nTraders often view the market depth using real-time graphical tools like btccharts or mtgoxlive.  These display the bids and asks as sloping lines moving up and away from the current price.\nWhen there is a large bid or large ask, the sloping line goes vertical, resembling a wall.\nIn the example below, from btccharts.com, we can see a bid wall at $3.90, where someone is offering to buy 10,000 bitcoins for $3.90 each:\n\nI think you must be misunderstanding the Bitcoin forums.  People use all kinds of strategies when trading on the Bitcoin markets.  One such strategy (known as spoofing) is for a trader to put up a large bid wall, making it look like there's a huge demand, with the sole intention of driving the price up by tricking other speculators into buying.  Once the price has risen, the trader cancels his large bid wall and sells his bitcoins at an artificially inflated price.  If the price starts to fall instead of rise, the bid walls will often be taken down before they are sold into, indicating that perhaps they were never genuine offers to buy in the first place.\nIt's often said that the presence of walls in the orderbook don't really give a clear indication of future price movements in either direction, since they are so easy to create if you have deep enough pockets.\nEdit: I just noticed this forum thread in which people are discussing \"the wall at 3.9\".  That's the one I took the photo of!  :)\n", "blockchain - Who obeys discouraged blocks?": "\nI suspect what will happen is that most of the mining pools will use the official client, and so will use the discouragement policy as set by Gavin et al.  This will make it in each pool's best interest to not have their blocks be discouraged.\n", "history - What are some of the Bitcoin inaccuracies in the CBS Show \"The Good Wife\"?": "\n\nIs there a Bitcoin manifesto written by Mr. Nakamoto?\n\nNot really. Satoshi wrote some political stuff, but not much. Mostly he focused on the technical issues. This article is the most political thing Satoshi wrote, and it sounds kind of like a manifesto:\nhttp://p2pfoundation.ning.com/forum/topics/bitcoin-open-source\nThe line from the show was very unlike anything ever written by Satoshi, though.\n\nIs it possible to embed a character string in the block chain?\n\nYes. Anyone can do it. Run strings -n 20 on blk0001.dat and you'll see all of the strings that people have put into the chain.\nNotably, the very first Bitcoin block (created by Satoshi) contains this text:\n\nThe Times 03/Jan/2009 Chancellor on brink of second bailout for banks\n\nAlso, after The Good Wife someone actually put \"Stack is innocent\" into the chain. :-)\n\nWas Bitcoin incorporated?\n\nNo. Still isn't.\n\nWas there a lawyer involved who paid people to write code?\n\nAs far as is publicly known, no one was ever paid for Bitcoin coding until after Satoshi left.\n", "alternatives - How can I identify the coin type from its address?": "\nThere is a list here, and a more detailed one here. 3 is indeed for a Bitcoin script hash.\n", "payment - Is there a Bitcoin gateway for PrestaShop with these specific features?": "\nCheck this http://www.prestashop.com/forums/topic/123451-module-free-bitcoin/ it says is free and works without integrating with online payments processors\n", "blockchain - Are competing blocks a problem to weak participant of the network?": "\nThis isn't something that can happen unintentionally. If everyone plays by the rules, someone who has x% of the hashrate will find x% of the blocks, no matter how small or large x is (of course, for very small x the variance will be substantial, but without any change in the expectation).\nYou can attempt a double spend even without having >50% hashrate, but the probability of success is small. The chance improves as your hashrate approaches 50%. What's special about >50% is that you are guaranteed eventual success, no matter how many blocks the receiver waits.\nThere's a little-known hashrate amplification attack (discussed here and here) that allows you to find more blocks than your hashrate normally allows, which doesn't require >50%. It still requires a relatively large hashrate, about 41%. For example, with 46% of the hashrate you can get 51.29% of the total blocks. For >50% hashrate you get 100% of the blocks.\n", "domain registering - Namecoin: Is it possible to move a name_new to another wallet? How?": "\nEach name registered in Namecoin is associated with an address. When updating a name with name_firstupdate or name_update operations, Namecoin wallet will automatically transfer it to a new address within the wallet.\nBetween name_new and name_firstupdate, there is no way to transfer a name to a different address (but it is still possible to register the same name a second time). However, it is possible to transfer an address to a different wallet. You would need to find which address the name_new operation is associated with (for example, by using block explorer). Then export the private key associated with that address and import it into another wallet. Now you would be able to issue name_firstupdate command from that wallet (you will need to use the four-argument form of the command). This will transfer the name to a different address, so the old address would not be used anymore.\n", "exchanges - How can I buy Bitcoins with Australian Dollars?": "\nThis question answers the more general question \"How do you obtain Bitcoins?\"  Most commonly, people use a Bitcoin exchange to exchange local currency for Bitcoins.\nHere is a list of exchanges split by currency and whether they're currently active or not.\n", "bitcoin core - What can I do when the blockchain synchronization is stuck at a specific block?": "\nI had this happen to me once. It was apparently caused by an incompatible peer node. \n\nDelete $HOME/.bitcoin/peers.dat\nRestart bitcoind\n\nAfterwards, new compatible peers will be found, and hopefully, you'll start processing blocks as expected again.\n", "exchanges - Dollar cost averaging approach to Bitcoin investing?": "\nThere is also https://www.bitcoinbuilder.com/\nThis allows an easy setup where you spread your bitcoin buys over a time. Currently only works with mtgox. You create trade-only rights for the bot, so that no high trust for the site is required.\n", "Is pruning transaction history implemented in Satoshi's bitcoin client?": "\nSince Bitcoin Core v0.8.0, the validation database (\"chainstate\" or \"UTXO set\", or \"account balance sheet\") is separated from the blockchain. When a new block comes in, its effects (removing spent inputs, and adding outputs) are applied to the database. This means blocks are still downloaded and verified like before, but they aren't used for validation anymore afterwards. Blocks are still stored on disk in order to send them to other nodes that are synchronizing, or to rescan for old transactions.\nSince Bitcoin Core v0.11.0, it is also possible to run in a true pruned mode, where the blocks on disk are actually deleted after a while. Since v0.12 it is possible to use the wallet while running in pruning mode. Since v0.14 it is possible to manually prune (by issuing an RPC command rather than have the application decide).\nNote that neither of these mechanisms rely on the mechanism described in the Bitcoin whitepaper.\n", "bitcoind - How to broadcast a transaction anonymously": "\nHere is the solution I found to broadcast transaction on the bitcoin network without revealing your IP: connect bitcoind over the Tor network. Here is my guide.\nEdit your torrc file to add .onion bitcoin nodes:\nmapaddress 192.0.2.2 ijzt2eeizty3p5xe.onion\nmapaddress 192.0.2.3 j43z65b6r2usg3vk.onion\nmapaddress 192.0.2.4 pvuif6nonbhj3o3r.onion\n\nStart Tor\nEdit .bitcoin/bitcoin.conf to connect bitcoind over the Tor network. Add: \nproxy=127.0.0.1:9050\nconnect=192.0.2.2\nconnect=192.0.2.3\nconnect=192.0.2.4\n\nWhen Tor is started (green onion) you can launch bitcoind.\nMore infos \nhttps://en.bitcoin.it/wiki/Fallback_Nodes \nhttps://bitcointalk.org/index.php?topic=50547.0;all \n", "protocol - Where can I find some guidelines on how to program a merged mining transaction?": "\nI'd suggest looking at the merged mining spec at the bitcoin wiki.\nWhen I was writing my merged mining implementation I also looked at the source code of namecoind, bitcoind and merged-mine-proxy. \nAs far as I know there is still no easier documentation on how to implement merged mining, so you will likely be looking through existing source code a lot to figure out the details. The merged mining spec was a big help for me though, even if it is a bit slim.\n", "Why is Script needed?": "\n\nWhy can't any transaction be simply \"move X BTC from key K to key I signed by private key K\"?\n\nThen you couldn't (easily) do the P2SH stuff being implemented right now without getting everyone to upgrade. You also couldn't do escrow, multisig, secure cross-chain trading, secure high-frequency trading, etc. These features are very valuable; Script-based escrow, for example, will be the first escrow system ever which requires no trust in third-parties.\nScript is, in my opinion, one of the greatest innovations in Bitcoin. I would prefer a much more powerful, Turing-complete version of Script in Bitcoin, actually.\n", "genesis block - How did the first 50 Bitcoins come into being?": "\nThe first block is known as the \"genesis block\" or \"block 0\".  It was mined using the same hashing algorithm as any other block, but at difficulty 1.  It contains only one transaction, the coinbase, which gives 50 BTC to address 1A1zP1eP5QGefi2DMPTfTL5SLmv7DivfNa.\nOnce the block had been successfully mined its hash was hardcoded into the Bitcoin client's source code so that it and it alone would be accepted as the official genesis block.\nsrc/main.cpp contains this line:\nuint256 hashGenesisBlock(\"0x000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\");\n\n", "database - Cache the Bitcoin Datadir to Improve Performance? Increase Bitcoin DB Cache Size?": "\nThe very recently released bitcoin v0.6.0 has modified bdb cache settings (25 megabytes by default), and provides a way to change this via the command-line option -dbcache=N, with N a number in megabytes.\nThis change caused a very significant speedup for synchronizing the block chain indeed.\n", "litecoin - How to connect to RPCPORT=9332 via LAN": "\nIf you want to allow connections from any machine, use:\nrpcallowip=*\n\nIf you want to allow connections from one specific IP address, put that IP address instead of *:\nrpcallowip=192.168.0.101\n\nYou can have as many of these lines as you like.  Use one for each IP address you want to allow.  And wildcards are also allowed:\nrpcallowip=192.168.0.*\nrcpallowip=10.*\nrcpallowip=192.168.*.100\n\n", "protocol - How soon does bitcoind incorporate locally solved blocks into its 'getwork' output?": "\nbitcoind will act on the block you submit immediately. But there is no \"right after that\". Anything can happen between two requests to bitcoind. The responses you get from bitcoind represent a snapshot in time. In between two requests there could be a block reorganization causing not only your new block to be orphaned, but several blocks back in the chain could disappear, being replaced by blocks from a different fork.\nYou will usually see your new block at the top of the chain, but don't rely on that or you will have race conditions in your code.\n", "protocol - Proper getmemorypool data endianness?": "\nThe \"data\" is not a number (only numbers have endian issues), but the raw byte data of a valid block. You may wish to read over BIP 22, which is the Draft-status standard detailing the getmemorypool protocol.\n", "miner configuration - Radeon HD 6750 running at 120 Mhash/s table shows 167Mhash/s": "\nIf you are using ATI Drivers 11.12 or 12.0 or above you need to set the worksize to 64.\nAlso the new drivers are a bit slower then pre 11.12 drivers.\n", "buy bitcoins - Who made the weusecoins intro video?": "\nIf you would pause the video a couple seconds from the end, you could see that the voice is done by Chris Rice, motion graphics by Fabian R\u00fchle, music and sound design by Christian Barth, and production by Stefan Thomas.\nAlso, if you check the Active Bounties page on Bitcoin Wiki, you will see that they made 13622.05 BTC doing it (although it was back when Bitcoins were quite cheap in comparison to what they are now).\n", "doublespend - Is there any software available for testing of Bitcoin security?": "\ntestnet-in-a-box is a simple way to set up your own testnet network, separate from the main one.  That lets you mine your own blocks easily because the difficulty will stay low.  Then you can play around with double-spending your own coins to yourself without inconveniencing others, and without needing large amounts of hash power.\n", "security - How would one inject a blockchain fork to the Bitcoin network?": "\nJust pass the blocks one at a time to your official bitcoind program, and it will broadcast them to the network.  You don't need to do anything tricky, except for somehow manage to hash faster than everyone else combined.\n", "Two blocks, two transactions, same hash": "\nThe transaction would be valid - there is nothing in the protocol that forbids this. \nThis is also the cause of the \"duplicate coinbase\" bug in the Satoshi client which I discovered a few months ago. If you create a block with a duplicate coinbase and that block then becomes orphaned it will cause the both the original and duplicate tx to be removed from the database.\n", "security - Bitcoin transaction anonymity": "\nMaking a transaction\nWhen you make a new transaction sending Bitcoins, you broadcast the transaction to the peers you're connected to, then they send it on to their peers, etc.  There's no way for anyone to know for sure whether you created a transaction they get from you, or whether you're just relaying a transaction you received from someone else.\nIf I was able to connect to all the peers in the network then it's likely that the first one to send me a transaction is the one who created the transaction, but that's not certain, and it's also not possible to connect to all the peers.\nReceiving a transaction\nWhen someone sends Bitcoins to your address, your client isn't involved at all.  You don't even need to have your computer turned on to receive Bitcoins at your address.  So there's no way anyone can find your IP address when you receive Bitcoins.\n", "wallet - How to restore locally a MyWallet backup?": "\nI wrote a small Python script which can be used to decrypt your encrypted MyWallet.  It does the same as the MyWallet JavaScript, only in Python.\nEdit: the code below seems to be outdated, here's a working version as of May 2012.\nCopy the following into a file, make it executable, then run it:\n#!/usr/bin/env python\nimport base64, hashlib, hmac, json, sys, getpass\nfrom Crypto.Cipher import AES\nfrom Crypto.Hash import RIPEMD, SHA256\n\nbase58_chars = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\ndef prompt(p):\n    return getpass.getpass(p + \": \")\n\ndef decrypt(encrypted, password):\n    encrypted = base64.b64decode(encrypted)\n    iv, encrypted = encrypted[:16], encrypted[16:]\n    length = len(encrypted)\n    encrypted += ' ' * (15 - (length-1)%16)\n    hash = (hmac.new(password, iv + \"\\x00\\x00\\x00\\x01\", hashlib.sha1).digest() +\n            hmac.new(password, iv + \"\\x00\\x00\\x00\\x02\", hashlib.sha1).digest())[:32]\n    clear = AES.new(hash, AES.MODE_OFB, iv).decrypt(encrypted)[:length]\n    return clear\n\ndef base58_decode(v):\n  value = 0; ret = ''\n  for c in v: value = value*58 + base58_chars.find(c)\n  for i in range(32):\n      ret = \"%c\"%(value%256) + ret; value /= 256\n  return ret\n\ndef base58_encode(v):\n    value = 0; ret = ''\n    for c in v: value = value*256 + ord(c)\n    while value > 0:\n        ret = base58_chars[value%58] + ret; value /= 58\n    return ret\n\ndef to_sipa(s):\n    version = 128 # or 239 for testnet\n    key = chr(version) + base58_decode(s)\n    return base58_encode(key + SHA256.new(SHA256.new(key).digest()).digest()[:4])\n\nclear = decrypt(prompt(\"encrypted wallet\"), prompt(\"password\"))\nobj = json.loads(clear)\n\nif (obj.has_key('double_encryption')):\n    print(\"wallet uses double encryption\")\n    password = obj['sharedKey'].encode('ascii') + prompt(\"2nd password\")\n    for key in obj['keys']: key['priv'] = decrypt(key['priv'], password)\nfor key in obj['keys']: key['priv_sipa'] = to_sipa(key['priv'])\nprint(json.dumps(obj, indent=4, sort_keys = True))\n\nIt will prompt for the wallet backup and one or two passwords, depending on whether the wallet is single or double encrypted.  Paste the wallet backup in rather than saving it to a file.\nYou'll probably need Python 2.x.  I've been unable to find a package of the pycrypto stuff for Python 3.  Apparently it will be available in the upcoming 'precise' Ubuntu release.\nEdit: It seems the backup format has been changed and so this script doesn't work on recent backups.\n", "alternatives - What is fairCash?": "\nI don't know anything about this in particular, but there is nothing new about centralized cryptocurrency. Satoshi in his paper references the state of the art at the time, which is digital signature based tokens which have to be verified by a mint for authenticity. They can use Chaumian blinding for anonymity, as in Digicash - OpenTransactions also implements this.\nBitcoin is of course completely different in that it's decentralized. Ben Laurie has somewhat infamously demonstrated his failure to grasp the concept of decentralization:\n\nA friend alerted to me to a sudden wave of excitement about Bitcoin.\nI have to ask: why? What has changed in the last 10 years to make this work when it didn\u2019t in, say, 1999, when many other related systems (including one of my own) were causing similar excitement? Or in the 20 years since the wave before that, in 1990?\nAs far as I can see, nothing.\n\nSo fairCash isn't any more a rival to Bitcoin than other similar companies that have failed in the past, and is likely to join the list Laurie is talking about.\n", "security - Is there any way to measure relative occurrences of wallet theft over time?": "\nThe only way you can measure something like that, is if users would first of all know if their wallets get stolen, and second of all, if they reported that problem. Besides that there is no real way to know if a wallet actually got stolen, nor are there any means of verifying that it did.\nOn the other hand, if one was to steal a wallet from some big Bitcoin website (say, a pool, an exchange, or an eWallet), one probably could notice a change of pattern of transactions, and we might hear some official statements from website owners about the theft. In this case though, it would probably be more of \"quality over quantity\" theft, as in we wouldn't see many cases like this appear.\n", "How to get statistics about Bitcoin users?": "\nThe number of downloads metrics provided from the sites where the clients are downloaded is probably about as close as you are going to finding something that will help you in measuring the number of users.\nThen maybe some of the hosted services, such as My Wallet - http://BlockChain.info/wallet would volunteer totals.\nThe downloads numbers won't help come up with estimates that are anywhere near accurate but the exercise might help show trends (e.g., twice as much downloads month over month might give the ability to estimate a 25% increase in users, for instance.)\n", "encoding - What is a 130 hex character public key?": "\nBitcoin private keys are 32 bytes, but are often stored in their full OpenSSL-serialized form of 279 bytes. They are serialized as 51 base58 characters, or 64 hex characters.\nBitcoin public keys (traditionally) are 65 bytes (the first of which is 0x04). They are typically encoded as 130 hex characters.\nBitcoin compressed public keys (as of 0.6.0) are 33 bytes (the first of which is 0x02 or 0x03). They are typically encoded as 66 hex characters.\nBitcoin addresses are RIPEMD160(SHA256(pubkey)), 20 bytes. They are typically encoded as 34 base58 characters.\n", "Simple bitcoin mining algorithm": "\nThe simplest miner would work like this:\n\nRequest a new Getwork from a given pool/bitcoind with specified credentials\nFor nonce=0;nonce<0xFFFFFFFF;nonce++\n\nSet Getwork Data nonce\nSHA-256 hash the Getwork Data (block header)\nCheck if hash result is smaller than Getwork Target, if so, submit a share\nIf more than 1 second passed since you received Getwork, stop the loop\n\nGOTO: 1\n\nNow, if you want something that could rise up to par with currently used miners, you need to consider:\n\nOpenCL calculations, without this you will never get the high hashrates of graphic cards.\nMidstate, or in other words hashing optimization. First half of Getwork Data doesn't change, so no point in calculating midstate for each hash.\nLongpolling, makes you calculate less stale blocks.\nRollntime, minimizes communication with the pool.\n\n", "doublespend - How does blockchain.info detect double spends?": "\nAll valid transactions are relayed through the network. A client does not know which transactions will be a part of a block, so it stores and relays both double-spent transactions. If you regularly poll your bitcoind, you can see every transaction before it is put in a block. Then it is just a matter of checking txin data for duplicate inputs.\n", "currencies - How can I get a new Bitcoin exchange up and running?": "\nIn order to have a functioning exchange, you will need buyers of your Profit points and for that kind of interest there will need to be dividends(best paid in BTC). GLBSE could be useful to you but you could also handle such trading by creating an exchange to establish value for the company.\nI think your idea is fantastic and could revolutionize certain kinds of businesses. Given that you have a model of being able to pay members in points, it might make sense to set this as a high-priority project since it addresses the incentive folks have to get involved.\n", "address - What is a compressed Bitcoin key?": "\nA compressed key is just a way of storing a public key in fewer bytes (33 instead of 65). There are no compatibility or security issues because they are precisely the same keys, just stored in a different way. The original Bitcoin software didn't use compressed keys only because their use was poorly documented in OpenSSL. They have no disadvantages other than that a little bit of additional computation is needed before they can be used to validate a signature.\nIf you think of a public key as a point somewhere along a giant letter U, an uncompressed key is the x and y coordinates of the point. A compressed key is how high up on the U the point is along with a single bit indicating whether it's on the left or right side. As you can visualize, they both encode precisely the same thing, but the compressed form requires half as much space plus one bit. (Of course, they're really points on elliptic curve secp256k1, but the concept is the same.)\n", "wallet - 0/unconfirmed and cannot find my bitcoin folder (Mac)": "\nThe standard command-line client keeps it in ~/Library/Application Support/Bitcoin, at least on 10.6.\nI don't know about bitcoin-qt, but some very broken applications keep the data inside the .app itself (right click, \"show package contents\").\nAnother typical unix configuration spot is ~/.program_name.\n", "security - How could the protocol or client be altered to mitigate a timejacking attack?": "\nSolution number 1 would mitigate this problem, but the attacker could try creating enough nodes to flood the network anyway (see cancer nodes). It would not be likely that the attack would be performed, but it would still be possible.\nSolution number 2 would help with this problem, although it would cause a lot more problems with everything else. Imagine the excess traffic caused by tens of thousands of Bitcoin clients dropping all of their connections each minute and reestablishing them with new peers. You would need to exchange a lot of information this way you wouldn't normally have to (version, verack and inv messages during each such reconnection at the very least). As the attack does not appear a likely threat for the Bitcoin network, such overhead would be unjustifiable.\n", "privacy - How can I hide my bitcoin transactions to protect anonymity?": "\nIt is possible to trace Bitcoins all the way back to the blocks they were mined, although it might be a hard task. Similarly, one can also trace them back to any withdrawal from MtGox, as long as we know which transaction to look for. No matter how many times you send them from one address to another, it is still possible to trace them back to that transaction, especially if you send the full amount each time.\nIf you want to make it way harder for someone to trace the transaction, you'd need some service that would take your Bitcoins, send them to some address that is used in many transactions and send them back to some other address you own. There have been many services like this started, but I don't know of any that had the traffic volume necessary to obscure anything. This option assumes that the service would not keep track of the finished transactions, thus not being able to reveal information about you.\nYou can also try \"laundering\" your Bitcoins by paying someone to send you Bitcoins from another address. Similarly, you could pay someone to mine a fresh block of Bitcoins for you. Similar as above, it only works if the person would not keep information about you.\nLastly, you could just order some physical Bitcoins. Trading them is completely offline, so nobody can trace who you gave the coins to. I'm not sure though if Casascius keeps any order data, which could be later linked to the person that redeemed the coins at some point in the future.\n", "testing - Reduce difficulty on testnet-in-a-box?": "\nChanging these 2 lines gets what you want.  Note that it's quick and dirty and will break non-testnet, so don't use this for anything but testnet:\ndiff --git a/src/main.cpp b/src/main.cpp\nindex a9311e2..b3496a1 100644\n--- a/src/main.cpp\n+++ b/src/main.cpp\n@@ -780,7 +780,7 @@ int64 static GetBlockValue(int nHeight, int64 nFees)\n }\n\n static const int64 nTargetTimespan = 14 * 24 * 60 * 60; // two weeks\n-static const int64 nTargetSpacing = 10 * 60;\n+static const int64 nTargetSpacing = 10;\n static const int64 nInterval = nTargetTimespan / nTargetSpacing;\n\n //\n@@ -1784,7 +1784,7 @@ bool LoadBlockIndex(bool fAllowNew)\n     if (fTestNet)\n     {\n         hashGenesisBlock = uint256(\"0x00000007199508e34a9ff81e6ec0c477a4cccff2a4767a8eee39c11db367b008\");\n-        bnProofOfWorkLimit = CBigNum(~uint256(0) >> 28);\n+        bnProofOfWorkLimit = CBigNum(~uint256(0) >> 15);\n         pchMessageStart[0] = 0xfa;\n         pchMessageStart[1] = 0xbf;\n         pchMessageStart[2] = 0xb5;\n\nHere's some debug.log output with those changes.  I'm generating a block every 2 seconds or so.  If that's too fast, increase the \">> 15\" accordingly.  Each increment there doubles the time between blocks.\n03/05/12 07:21:54 Flushing wallet.dat\nFlushed wallet.dat 132ms\naskfor block 000000935f454d1641e5   0\nsending getdata: block 000000935f454d1641e5\nreceived block 000000935f454d1641e5\nSetBestChain: new best=000000935f454d1641e5  height=23  work=559980566\nProcessBlock: ACCEPTED\naskfor block 00000c4d375ce8f92166   0\nsending getdata: block 00000c4d375ce8f92166\nreceived block 00000c4d375ce8f92166\nSetBestChain: new best=00000c4d375ce8f92166  height=24  work=561029143\nProcessBlock: ACCEPTED\naskfor block 000007e863a6d86bfb1d   0\nsending getdata: block 000007e863a6d86bfb1d\nreceived block 000007e863a6d86bfb1d\nSetBestChain: new best=000007e863a6d86bfb1d  height=25  work=562077720\nProcessBlock: ACCEPTED\n03/05/12 07:21:59 Flushing wallet.dat\n\n", "What happen if the Bitcoin network is down, or all miners stop keeping records?": "\nBitcoin network works on a Peer-to-peer mode, so \"taking the network down\", would require taking at least a good portion of the Internet. Should something like this happen, Bitcoins might not be the biggest of your worries.\nA Bitcoin miner stores little to no information about the network itself. It works in a simple terms of fetching data, calculating some hashes and returning results. It does not need much more than that, so miners going offline for awhile wouldn't hurt the network much, asides slowing down block generation for awhile.\nA Bitcoin client on the other hand stores all the data from the Bitcoin network. Should it go offline, it still stores all the data on the hard drive and will try to reconnect when it can. Should a good chunk of the network go offline, the blockchain might fork, as each part of the network would try to work only with the data it possesses. Some parts of the network might see only a part of the transactions, while others would see other transactions. When such \"islands\" would meet, all the clients will try to establish which blockchain is the longest. The shorter blockchain will have all its transactions extracted from it and if there is no double-spend, those transactions might be included in future blocks.\nAll in all, it is very hard for the Bitcoin network to go down, and the main Bitcoin client is prepared for possible network segmentation.\n", "trust - Using Bitcoin contracts to run a betting site without the need for deposits?": "\nGiving the operator the power to control the identity of the recipient won't work, since he can participate himself and declare himself the winner. A majority vote also isn't too good because an attacker can make multiple entries, which is cheap to do if he knows he can guarantee a win.\nIt is necessary that the winner will be decided according to public data (such as the hash of a future block), and that the operator (or majority) will not be able to secure funds before sending payment to the agreed winner.\nThe only way I can think of is burn-escrow. Each participant sends a tentative payment to the operator which cannot be reversed, it can either be carried through or burned (with a deposit that incentivizes carrying through). Then the operator sends to the winner using his own funds. Then every participant forwards the payment. If the operator does not send to the winner, participants burn the payment and refuse to do business with the operator again.\nThere is some risk that the operator will be honest but participants will neglect to forward payments, or that the operator will be fraudulent but participants forward payments anyway to get the deposit. But with a properly calibrated deposit, these risks can be mitigated and entered into the pricing.\n", "Checking pending (not yet in the blockchain) transactions": "\nEven transactions with no confirmations will show in the results (unless the transaction has been sitting unconfirmed for some time and then the service stops tracking it):\n\nhttp://www.BlockChain.info\n\n", "What would happen to people's money if the Bitcoin project was discontinued?": "\nBitcoin exists on a few levels. One is the protocol which evolves through a proposal process. Second is the Bitcoin client and bitcoind project which is an implementation of the protocol. Third is the currency managed by what's referred to as the Satoshi-blockchain. All of the above are available under free software licenses or are, at the very least, public information (in the case of the blockchain and protocol). It is therefore unlikely for any part of Bitcoin to be meaningfully discontinued.\nShould everyone in the world stop using Bitcoin, the transactions and private keys to spend again would still exist so you could say the money will stay right where it is. The exchange rate wouldn't fare well but the Bitcoins would all just be there in deep freeze until someone started mining again. Once you know more, you'll see how unlikely any kind of discontinuation would be. \n", "websites - How can I process Bitcoin transactions in my store?": "\nStrongCoin has developed a PHP script for fast handling of micro transactions. You can read more on it here:\n\nhttps://strongcoin.com/blog/bitcoin_micropayments_with_strongcoin\nhttp://www.thebitcointrader.com/2011/12/monetizing-blog-with-bitcoin.html?m=1\n\n", "mining profitability - Does the size of a pool affect the number of invalid shares?": "\nThere's no reason pool size should affect the number of invalid shares. If you're seeing different amounts of invalid shares on different GPUs, the most likely explanation is that the GPU is too hot, improperly overclocked, or failing.\n", "Can Scripts be used to implement Chargebacks?": "\nThe discussion on Bitcoin Talk pretty much convinced me that \"elective Chargebacks\" (where some tx be reverrsed, but not all) is essentially meaningless.\nIf a shop would choose to give a customer the ability to do chargebacks for a limited time, this is equivalent to just postponing the payment. Since this is the main use case, and the other use case of chargebacks is personal wallet security, for which there are better alternatives, I'll accept this answer and consider the matter closed.\n", "Can I use current Bitcoin protocol and Bitcoin client to create my own controlled currency?": "\nBitcoin is a decentralised cryptocurrency, meaning there is no central authority to control it. What you need to look into are centralized currencies. If you want to go for the easiest route, all you need is knowledge of programming websites and databases and you can easily make some database storing arbitrary numbers representing an amount of your currency belonging to someone. This, however, would be like Facebook credits, Microsoft Points or the like, not really a cryptocurrency. You could look into centralised cryptocurrencies, like loom.cc . Also worth noting are Open Transactions.\nOne could, however, create an alternative decentralised cryptocurrency, like SolidCoin, LiteCoin and dozen of others, but that doesn't create as much solutions as it causes problems. If you'd modify the source code you could make it so that only one address is allowed to create coins, but the whole system would be vulnerable to numerous attacks as your computing power might not be enough to secure the system.\nAll in all, it is not hard to create a centralised currency, but Bitcoin model might not be the best to use for this problem.\n", "economic theory - Will Bitcoin suffer from a mining Tragedy of the Commons when mining fees drop to zero?": "\nThere will definitely be a tragedy of the commons problem if things stand as they are now. This was discussed at some length here and elsewhere.\nThere are some proposed ways to address this and make transaction fees nonzero (block size limit, hardcoded fees, insurance entities, mining cartel, gentleman's agreements which are maintained for fear defection would beget more defection, etc.), but I don't think either results in the combination of competitive transaction fees and a level of hashrate which is enough to offer reasonable security.\nThis means that there must be some way to improve the network's security at a given hashrate. The only way I know to do that is by augmenting proof-of-work with proof-of-stake, discussed for example here. This is based on the observation that obtaining a majority of the bitcoins in existence is orders of magnitude more difficult than obtaining a majority of the hashrate.\n", "blockchain - Which blocks get to be checkpoints?": "\nAt least in Bitcoin Core, none. Checkpoints are legacy and will likely be removed at some point.\nCheckpoints were originally introduced as a way to enable skipping of signatures in the historical chain, without being vulnerable to accepting an alternate history. That role has now been overtaken by the assumevalid concept (a block hash that is known to be good, but doesn't prevent accepting another chain).\nCheckpoints have also been used as a heuristic to know what block headers are acceptable before validating an entire block. That role was removed with headers-first synchronization in 0.10. We now only download a block after we already know its proof of work and difficulty are acceptable.\nThey have also been used as a measure for validation progress (so Bitcoin-Qt can show a progress bar during validation). That role has been replaced with just statistics data that doesn't affect validation.\nThe only thing checkpoints still serve for is preventing a low-difficulty headers attack, where your node gets spammed by a large number of long, low difficulty chain branches, making it go out of memory. Due to the existing checkpoints (up to height 295000), this is a very costly attack already.\n", "block - Bitcoind statistics": "\nYou probably need to read: \nhttps://en.bitcoin.it/wiki/Original_Bitcoin_client/API_calls_list\nYou'll probably like the methods getblockcount and getblocknumber.\nI don't think the API can give you the latest blocknumber until it's been updated, but you can find it on http://bitcoinwatch.com/ -> blocks -> count.\n", "protocol - Is proof-of-stake a viable alternative / augmentation to proof-of-work?": "\nThis answer might be enough to make proof-of-stake not needed.\n", "exchanges - What is the most effective way to buy bitcoin from swiss francs?": "\nSwitzerland takes part in the SEPA (Single Euro Payment Area); the Bitcoin exchanges that do SEPA transfers will probably be the ones with lowest costs for you. \nI expect your bank will charge you for converting between CHF and EUR. If you want to convert often you may want to open a euro denominated account instead.\n", "Are there any attempts at creating ASIC for bitcoin mining?": "\nThe closest thing to ASIC seems to be the BitForce series which has just been released and customers it seems are just begining to receive their first orders.\nFrom the website:\n\nIs your system based on FPGA or ASIC technology?\nThe BitForce processor card is a proprietary implementation of both\n  FPGA and ASIC technology.\n\nAs far as I'm aware, the actual chip design won't be released, but it seems legit now that people have begun testing the potential.\nhttp://www.butterflylabs.com/\n", "blockchain - Bitcoin client behavior in event of a fork": "\nTransactions you've sent will be resent forever (every 30 minutes or so), even if they have no chance of getting in the chain because they are now invalid. The same transactions are sent -- new ones aren't created.\n", "How can I enable more GPUs in Ubuntu for poclbm?": "\nlspci lists PCI devices. ./poclbm.py lists OpenCL devices. If the former finds the device but the latter does not, your second GPU must not be registering as an OpenCL device.\nUbuntu 11.10 has a notorious reputation for multiple-GPU bugs. (See here and here.) I personally have had issues with 11.10 mining that were resolved simply by switching to another release. I would suggest you instead use Ubuntu 11.04 (Natty Narwhal); it is generally regarded to be the most reliable Ubuntu version for mining.\nIf that is not an option, or installing 11.04 doesn't fix the problem, try the following steps:\n\nUninstall whatever version of Catalyst/SDK you have (make sure to remove all configuration files) and install\nCatalyst 11.6 and SDK 2.4.  \nRun aticonfig -f --initial --adapter=all again. Make sure it runs without errors.\nRun aticonfig --list-adapters. You should see two. \n\nThose steps should fix any configuration issues. If your problem persists, it's either a hardware issue (or an Ubuntu 11.10 issue).\n", "hash - How can I generate a vanity Bitcoin address?": "\nI guess you mean Vanitygen:\nhttps://bitcointalk.org/index.php?topic=25804.0\nFrom that page:\n\nVanitygen is a command-line vanity bitcoin address generator.\nVanitygen accepts as input a pattern, or list of patterns to search\nfor, and produces a list of addresses and private keys.  Vanitygen's\nsearch is probabilistic, and the amount of time required to find a\ngiven pattern depends on how complex the pattern is, the speed of your\ncomputer, and whether you get lucky.\n\n", "hardware wallet - What is the \"Bitcoin stick\"?": "\nSee http://www.youtube.com/watch?v=IavQ-Wc8S1U\n\nClemens Cap of Uni Rostock explains the Electronic Bitcoin wallet\ndevice he's working on. It's based on adafruit microtouch device.\nThis\nis a small takeout of Clemens' talk at the Bitcoin Conference in\nPrague 2011\n\n", "websites - Bitcoin Dictionary": "\nhttps://en.bitcoin.it/wiki/Vocabulary\n", "litecoin - g++ problem compiling litecoind on Ubuntu Server i386": "\nThe file ~/litecoin/doc/build-unix.txt contains build instructions.  The one you're missing is on line 61:\nsudo apt-get install libboost-all-dev\n\n", "Easiest way to buy Bitcoin from Montreal/Canada": "\nDeposit cash at a bank is a deposit method for CAVirtex.   TD or CIBC banks.  You don't need to have an account to deposit.\n\nhttps://en.bitcoin.it/wiki/VirtEx\n\nUpdate:\nCaVirtEx no longer allows cash deposits at any bank. You now make a Bill Payment to an established Payee, and CaVirtEx credits your account about 2-3 days later.\n\nhttps://www.cavirtex.com/news\n\nThere is a new service called harborly which allows you to buy and sell bitcoins in Canada directly with your bank account.\n\nhttps://harbor.ly\n\n", "exchanges - What function does Mt. Gox's \"Open Transaction\" withdrawal option perform?": "\nI just asked on the #mtgox IRC channel, and was told:\n06:36 < dooglus> what does the \"Open Transaction (6 Confirmations)\" option\n                 do when withdrawing BTC?\n06:48 < Cory> If the Bitcoin address you're withdrawing to is a MtGox address,\n              it will use the network and blockchain anyway.\n06:49 < Cory> Otherwise, if that option is not checked, they will only internally\n              transfer the funds.\n06:53 <@MagicalTux> and instantly\n\nSo there you have it.\nI suggested they should label it differently:\n07:13 < dooglus> it would be better to use some different text for that option -\n                 like \"use bitcoin network even for transfers to mtgox deposit\n                 addresses\" for instance\n07:19 <@MagicalTux> dooglus: it use to be something like that, but people were\n                    complaining it was not clear enough\n\n", "webminer - Are there any Bitcoin miners that run from a web page and use the GPU?": "\nThe rather new WebCL technology enables this, unfortunately WebCL is not directly supported by browsers yet. \nSee http://www.coined.com/ and http://webcl.nokiaresearch.com/jsoclbm/ for examples of such miners. I expect more will follow in the coming months.\n", "exchanges - How do MtGox redeemable codes work?": "\nThe code is effectively just a long random string.  When you create a redeemable code, a random string is selected, entered into the database at the exchange and associated with a currency and an amount.  That string is your redeemable code.  The string is long enough to make it very unlikely that anyone would be able to guess it in a reasonable length of time.\nThe first person to attempt to redeem the code gets the amount credited to their account on the exchange, which causes the database entry on the exchange for that code to be marked as having been redeemed.\nThe way to tell whether a code is valid is to try redeeming it.  If it works, you're the first to try it.  If not, you're either not the first to try using it, or it was never a valid code to start with.\nThe exchange should prevent \"double-spending\" by making sure that the \"look up whether code is spent; credit account; make code as spent\" sequence is an atomic operation.  We don't want two users both running through that same sequence at the same time, where both pass the \"look up whether code is spent\" check, then both accounts get credited, etc.\n", "mining hardware - What hash rate can a Raspberry Pi achieve? Can the GPU be used?": "\nThere is a nice wiki page here: https://en.bitcoin.it/wiki/Mining_hardware_comparison\nThe raspberry pi is listed by its processor in the arm section: ARM1176JZ(F)-S. It gets 0.2 Mhash/s when clocked at 800 MHz.\n", "blockchain - How did these 3 tx make it into a block in the main chain?": "\nThe script page of the bitcoin wiki tells us that:\n\nA transaction is valid if nothing in the combined script triggers failure and the top stack item is true (non-zero)\n\nTo validate a transaction's input, first the input's scriptSig is run, then the scriptPubKey of the output it's trying to spend is run.\nThe transactions in question have a scriptSig of '1' and the outputs they're spending have a  scriptPubKey of OP_DUP OP_DUP OP_DUP.  Running these will cause a '1' to be put onto the stack, and then for the '1' to be copied three times, ending up with a stack of: [1, 1, 1, 1].  The top stack item is non-zero, so it's fine.\nTo address your question about crypto signatures, while it's true that any OP_CHECKSIG in either script has to pass there was none in these scripts, so none of them were bad.\nThe current version of the client rejects \"non standard\" scriptPubKey scripts in the individual transactions that it receives from the network, and refuses to pass them on, but doesn't appear to do the same for transactions in already-mined blocks that it receives.  So this block was likely mined by the person who made this transaction, using custom software.\nAnybody seeing those outputs could have immediately claimed them.  Note however that these easily-redeemed outputs were created and redeemed in the same block, leaving no risk of someone else redeeming them.\n", "mining software - How can I code a Bitcoin JSON-RPC \"getwork\" request in Java?": "\nThe JSON-RPC protocol is very simple.  You POST to the mining pool (or the bitcoind client):\n{\"method\": \"getwork\", \"params\": [], \"id\": \"anything\"}\n\nand get back:\n{\"result\": {\"data\": \"hex bytes....\", \"target\": \"hex bytes...\", ...}, ... }\n\nYou just need the first 80 bytes from result.data - you change the last 4 bytes (nonce) and compute the hashes.  Then, when you find a hash that is less than \"target\" (generally a hash with the high order 32 bits equal to zero), you call getwork again to report your hash (and earn a share in the pool):\n{\"method\": \"getwork\", \"params\": [\"hex-header\"], \"id\": \"anything\"}\n\nThere a bunch on wonky byte-order encoding in the standard getwork call.  You'll generally want to reverse the bytes is each long integer (4 bytes) before hashing it, and do the same before reporting your found block back to the pool.  See the sample pyminer for a simple reference implementation of a miner (in python). Inside the Miner.work() function is where the magic happens. The work function takes two parameters: datastr, this is the value stored inside result.data and targetstr this is the value stored inside result.target.\nOne other thing - most pools require that you use Basic Authentication when you POST, so you'll need to include your username and password in the header of your request.\n", "Relation between Network Hash-Rate & bitcoin value?": "\nThe network hash-rate is mostly reflective of Bitcoin's exchange rate.  If the exchange rate goes up, then mining's hash rate will follow.  It will lag, but it will mostly follow the direction and to a lesser degree, the magnitude of the change in the exchange rate.\nWhile there are some who will mine regardless of profitability, each additional bit of hashing has the effect of lessening profitability -- displacing those who are mining for economic gain.\nSo as a whole, the network hash rate itself doesn't say much about the currency's health.  Now for each individual that goes and spends $20K worth on mining hardware, you can assume that one individual believes in bitcoin's future enough to risk that kind of an investment, if profit was the reason for pursing such a venture.\n", "marketing - How do I get started in finance & market analysis?": "\nMarket analysis usually consist of Fundamental Analysis and Technical Analysis.\nI recommend http://www.babypips.com to get started with the the Technical Analysis.\nFundamentals consist of understanding how the economy is effected by news and business. Social psychology to specific events and can vary depending on what market your looking into.\n", "What information does a wallet contain?": "\nFrom looking at the code, the wallet.dat can contain entries of the following types:\n\nname - an address book name\ntx - a transaction\nacentry - an accounting entry\nkey - a pair of public and private keys\nmkey - a master key\nckey - an encrypted key\ndefaultkey - the default receiving address' key\npool - a keypool entry\nversion - the version of the software that wrote this wallet\nminversion - the earliest version of the software that can read this wallet\ncscript - a script\nbestblock - a pointer to the end of the best blockchain seen\nwkey - a private key (no longer used)\nsetting - used to store user interface settings (no longer used, except to hold an invalid setting to stop pre-0.4.0 versions of the client which don't understand minversion from loading wallets that are too new for them)\n\nSee also this answer.\n", "money supply - What is the rationale behind Bitcoin mining?": "\nWhy do we mine?\nWe need to all agree on who owns which coins.  If your idea of who owns what is different than mine then how can we trade?\nTo achieve this, the Bitcoin protocol keeps its ledger of all transactions in a series of blocks, with each block recording a collection of transactions.  Since we don't have a central authority to declare which blocks are valid, we run a 'lottery' instead.\nEach miner bundles up all the new transactions he knows about, adds in an extra transaction which creates some coins out of thin air and pays them to the miner, mixes in a random number and hashes the whole thing.  If he gets a hash less than a certain number, he wins and his block is added to the blockchain.  If not, he tries with a different random number, over and over.  Everyone else can verify that his random number with his transactions hashes to a low enough number, so they accept his block.  The network periodically adjusts what this target \"low enough number\" is, in an attempt to keep the average speed of block generation at about 10 minutes.\nWhy do we need a GPU, not a CPU?\nYou generate coins by calculating hashes.  Each hash you calculate has a certain chance of making a block, and earning the associated reward, which is currently 50 coins.  The faster you can calculate hashes, the more chance you have of generating 50 coins.  It just so happens that ATI GPUs have the right kind of hardware in them to calculate sha256 hashes many times faster than an Intel CPU can do it.  That's why people use GPUs instead of CPUs.\nThe Bitcoin network automatically adjusts the \"chance per hash\" to try to keep the global rate of generation at one block every ten minutes.\nIn the beginning, before GPU mining started in earnest and not many people were mining, CPU mining worked just fine.  But as more people joined the network and hash rates became faster, the network difficulty increased to keep the blocks coming along every 10 minutes or so.  As a result, CPU mining became less rewarding per CPU.\nThen when it became more common for miners to use GPU hardware to mine because it is so much faster and more energy efficient than CPU mining, the global network hash rate increased still further eventually making it completely useless to mine with a CPU; the expected rewards are less than the power consumed by the CPU.\nMaybe one day FPGAs or ASICs will render GPUs useless for mining, like GPUs already did to CPUs.\n", "Why did Bitcoin first start to gain economic value?": "\nSatoshi created a system that:\n\nAllowed users to trust transactions without having to trust any single entity.\nOpened it up so that anyone could participate and exchange computation power for Bitcoins.\nIs designing with a fixed size (21 million Bitcoins), he created an incentive for users to get involved early while Bitcoins are relatively cheap to generate; there is less risk of future inflation reducing the value of early adopters.\n\n", "exchanges - Ogrr market size": "\nWell, I don't know what the transaction volume is - only the site owner would be able to give you that information. As far as your other questions:\n\nHow do members deposit/withdraw BTC to their accounts in the forum?\n\nSame as you generally deposit/withdraw btc from any site. You go to your account, click the 'deposit' or 'withdraw' button, and it either gives you the address to send btc to to fill up your account, or it tells you to input the address to which you would like to withdraw. \n\nHow much is the fee?\n\nI understand there's currently no fee being charged by the site.\n\nDo you think this forum will help raising the price of Bitcoin?\n\nAny venture that results in more people using bitcoin will, ceteris paribus, raise the price of bitcoin.\nHope that was helpful. :)\n", "mac bitcoin wallet question. Private keys?": "\nYour wallet program doesn't show the private keys because you usually don't need to see them.  In the same way that you almost never see your password to any website you use.  If it did show them then someone could take a photograph of them and later spend the content of your wallet.\nIt probably doesn't let you delete addresses because of the potential for harm.  If you ever gave that address to somebody and they some day transfer coins to the address, you'll wish you hadn't deleted it.  If you send someone an address and they use it to pay you, and then you think \"that transaction's completed, I'll delete the address now\", you'll lose the coins that were sent to you because they're still sitting in that address.  There's too much risk of people not understanding the system and losing coins as a result.\nTo send money from one computer to another:\n\nfirst go to the computer that's going to receive the money, run the wallet program, go to the 'receive coins' tab, pick any of the addresses that are shown, optionally edit the 'label' field to make a note of who you're going to give it to.  In this case \"My Mac\" might be a good label.  Then copy the address to the clipboard and email it to yourself at the Mac.  Or write it down if you like.\nthen go to the Mac, run the wallet program, go to the 'send coins' tab, put the address from the previous step in the 'pay to' field, and the amount in the 'amount' field.  Optionally put a label in the 'label' field.  \"My PC\" might be a good label for this.  Click \"Send\".\n\nI just noticed you want to send from a specific account on the Mac.  Do you mean you want to send from a specific address?  That's not yet supported in the standard client.  A patch has been submitted that adds this feature.  There's a description and video going into more detail.\nEdit: it occurs to me that you really to mean \"account\" in your question.  Don't confuse accounts with addresses.  You don't need to send from a specific address to send from a particular account.  There's no support for accounts in the bitcoin-qt client though I don't think.\nThe upcoming 0.6.0 version of the Satoshi client adds a command to export an address' private key, so if you want to print it out and keep it somewhere safe you could use that.  But typically people just make sure they have a copy of their whole wallet.dat file instead.\n", "client - Read only blockchain in bitcoind , patch ideas": "\nI already did working prototype for one bitcoind (with one copy of blockchain) managing multiple wallets: https://bitcointalk.org/index.php?topic=71542.msg96212 It is IMHO easiest thing to to with current codebase and it would fulfill the goal to provide for multiple users' wallets independently while using resources for only one running bitcoind.\nBut the discussion around it died somehow, looks like nobody tried the prototype and I got only some private inquiries.\n", "alternatives - It is possible to build a P2P system to trade Bitcoins?": "\nI think the answer to this question is currently unknown.  There's currently an ongoing discussion about it on the bitcointalk forums.\nI'll update this answer if anything comes of it.\n", "client - How does Alice know she is receiving the correct address?": "\nThe problem itself is not Bitcoin-specific per se. It's a matter of being able to verify the sender of some data. Bitcoin addresses are only designed to be immune to typos (they contain a checksum), but otherwise the protocol does nothing.\nOne can, however, do a couple things to make sure a proper address is sent and received:\n\nOne can use a vanity address that is hard to generate and clearly is related to the situation. Using 1Bob... would not be the best choice, but 1BobEveryman..., or 1ThankYouAlice... can be better (examples chosen for clarity, normally you'd be using base 58 alphabet). Generally, if it takes more than a couple minutes to generate an address you know it either came from the original sender, or someone deliberately wanted to steal Bob's identity (by spending a lot of time beforehand generating the address).\nOne can try checking the history of the address in the Bitcoin Block Explorer. If the address has been used a couple times, it is less likely it will be fake. Being Eve I probably wouldn't want to use the same address for scamming people more than once, and generating a history of transactions would take some time.\nOne can ask Bob to provide his Bitcoin address wrapped in Bob's digital signature. The main problem with this is securing Bob's signature in the first place, which is basically the same problem as we are solving right now.\nOne can look for address received on the internet. A lot of people have a habit of including the Bitcoin address they use in places like forum signatures, their websites and the like.\nIf Alice knows Bob, they might decide on using some information only they would know to create an ECDSA keypair and use that for transmitting Bitcoins. Such information might be for example be the movie they saw when they first met, some information from the school they attended and so forth. Generally, something that they remember and would be hard to find out. Alice can use that as the private seed of the keypair, generate the public address to send the Bitcoins to, and make the transfer. Bob then would have to repeat the same process and withdraw Bitcoins on their end. The main problem with this approach is whether Bob an Alice know each other beforehand and trust themselves with handling private keys.\nWhen all else fails, one can always meet Bob in person and get their address that way.\n\nAll in all, there are many ways to prevent a man in the middle attack in the descried scenario.\n", "Bitcoin-qt -how does it choose the address to take money from when sending btcs": "\nAddresses are not accounts. The quantity of coins in a given address is usually meaningless, and only in specialized circumstances there exists a reason to choose a particular address to send from.\nFor example, if your first Bitcoin transaction ever was receiving 100 BTC, and then you sent 1 BTC, the balance of your receiving address will be 0, because the other 99 BTC will be sent to a new change address which you've never seen. Also, the \"total balance\" of an address is an abstraction on top of the collection of unspent outputs to this address.\nThe Bitcoin client chooses which outputs to use for sending with some algorithm designed to make the transaction as simple as possible (See What is the coin selection algorithm? for discussion of the algorithm).\nThe Bitcoin command line (but not the GUI) supports accounts, which are an internal abstraction not recognized by the network. In addition you can use multiple wallet files, and Armory supports this with the GUI.\n", "transactions - Identifying sender": "\nThere is nothing messy or difficult to keep track of about generating a new address for each transaction. Generating an address is a very cheap operation and you can generate thousands of them in advance if you want. The way Bitcoin is designed, there is no different between using the same address for multiple transactions or using a new address for each transaction. It makes no difference to the system at all.\nThat said, I think the Bitcoin system should have permitted you to put an identifier in the transaction. 16-bits would have been sufficient.\n", "exchanges - What are the quicker ways to use my bitcoins for paying in usual shops (off- or online)?": "\nYou can find a less automated exchange (like that one (in Russian)) and negotiate a transfer to WebMoney, and a WebMoney account can be associated with a Qiwi account, and you can reload your plastic cards through Qiwi. \n(The reloading of one of my cards, issued by Tinkoff Credit Systems bank, through Qiwi is instantaneous. So, there can remain delay with the exchange to WebMoney, and with negotiating the exchange with the person running the exchange, since it's not automated..)\n\nAnother similar exchange to WebMoney: http://www.btcwm.ru/?p=1#comments (in Russian; at work days from 8-00 till 17-00)\nOne more (in Russian).\n\n", "economic theory - Why destroy bitcoins?": "\nCertain escrow techniques rely on one party being able to \"destroy\" these bitcoins, without being able to steal them. For example I could put 10 bitcoins in escrow, giving a second person the ability to destroy them. Now if that second party lends me, say, 5 bitcoins, I can't simply run away from my debts without incurring a loss larger then the debt itself, once the other party destroys the bitcoins. There are variations of this scheme for a number of other purposes.\nYou don't want to actually destroy bitcoins in such a scheme, but you want the threat of destroying them.\nBut \"destroy\" in this context isn't necessarily an actual destruction, as long as \"destroyed\" bitcoins are a loss for both parties. Donations to trusted organizations are an alternative.\n", "services - Where can I register a domain and pay with bitcoins?": "\nNote that all services need to be checked by you somehow to decide whether you can trust them!\nThere is a list of such services at https://en.bitcoin.it/wiki/Trade#Domain_Name_and_DNS_Hosting; for example:\n\nhttp://www.domains4bitcoins.com (com, net, org, co, co.uk, in, biz, us, eu, mobi, asia, name, tel, co.in, tv, me, info, ws, bz, cc, org.uk, me.uk, net.in, org.in, ind.in, firm.in, gen.in, mn, us.com, eu.com, uk.com, uk.net, gb.com, gb.net, de.com, cn.com, qc.com, kr.com, ae.org, br.com, hu.com, jpn.com, no.com, ru.com, sa.com, se.com, se.net, uy.com, za.com, gr.com, co.nz, net.nz, org.nz, com.co, net.co, nom.co, ca, de, es, com.au, net.au, xxx)\nhttp://bitdomain.biz (biz, com, com, org, info, us, eu, in, mobi, asia, name, tel, tv, me, ws, bz, cc, mn, ca, de, es, com.au, net.au, xxx)\nhttp://www.cinfu.com/domains/ (com, net, org, biz, info, eu, in, us, de, ru, es, asia, bz, ca, cc, co, mn, mobi, name, me, tel, tv, xxx, *.uk, ws, la, tw, cn, ac, io, sh, nu, be, tc, vg, ms, gs, jp, at, am and more 2nd level domain)\nhttp://www.exoware.net/domainregistration.xhtml (com, eu, me, org, me.uk, de, es, co.uk, net, name, info, org.uk, cc, tel, ca, biz, tv, co)\nhttps://www.kalyhost.com/domain.html (many different top-level domains\nhttps://clients.microtronix-tech.com/domainchecker.php (not so many top-level domains)\nhttps://secure.orangewebsite.com/cart.php?a=add&domain=register (not so many top-level domains)\nhttp://www.privacyshark.com/ (anonymous, but not clear which top-level domains are offred)\nhttp://www.frankdomains.com/btc (all top-level domains and all European TLDs e.g. .com, .xxx, .travel, .at (Austria) through to .com.ua (Ukraine) and all countries inbetween Also all New gTLDs as they come online)\nhttps://www.namecheap.com/support/payment-options/bitcoin.aspx (Namecheap: Many TLD's)\n...\n\nMore offers:\n\nhttps://www.domenburg.com (Instant registration after 1 btc confirmation, 500+ TLDs: ru, com, net, org, co, pro, in, biz, us, eu, mobi, asia, name, tel, co.in, tv, me, info, ws, bz, cc, ca, de, es, ...)\n\n", "services - Where can I register a .RU domain and pay with bitcoins?": "\nThere is a list of domain registration services at https://en.bitcoin.it/wiki/Trade#Domain_Name_and_DNS_Hosting. Among them, I could find .RU registration only at:\n\nhttp://www.cinfu.com/domains/ ($9.17/year)\nhttps://www.kalyhost.com/domain.html (for 18 EURO a year = 4.45BTC)\n???\n\n", "wiki - What does script operation \"OP_IFDUP\" do?": "\nIt duplicates the top stack item if the top stack item is not 0 and not negative 0. I'm not sure where this would be useful.\n", "trading - How do dividends work on GLBSE?": "\nDividends do indeed go into your GLBSE account balance, which you can withdraw to a Bitcoin address if you so wish. (Source)\n", "If Fees Were Paid In US Dollars, What Would They Be?": "\nInstead of asking what would be the fees if they were paid in US dollars, I think you meant to ask \"what will be the purchasing power of the transaction fees, measured in today's US dollars\".\nThere's some discussion of this at How much will transaction fees eventually be? but the short answer is that nobody knows. Left to their own devices the fees will be close to 0, which is a problem. No consensus has been achieved on how to fix the problem. Personally I think the goal should be fees on the order of 0.1% + 1 cent.\n", "mining reward - Who currently pays the miners for processing transactions?": "\nAccording to the list of available charts, that chart is showing \"miners revenue divided by the number of transactions\".  That is, it's the average amount a miner earns for each transaction they process.  \"Bitcoin mining cost per transaction\" isn't a very good title for the chart.\nSo far, the vast majority of miners' earnings comes from the 50 BTC per block rewards, with a tiny fraction coming from the transaction fees paid by the people creating transactions.\nSo to answer your question, nobody pays the vast majority of the cost; it is created out of thin air as the reward for mining a block.  You could see it that each new block generated inflates the money supply and so devalues all existing Bitcoins, in which case you could argue that everyone holding Bitcoin is paying via inflation.  But the inflation is predictable, and so already priced in.\n", "How has the problem of waiting for confirmations been eradicated?": "\nPerhaps they are referring to the green address technique.  Some exchanges support this now:\n\nhttp://en.bitcoin.it/wiki/Green_address\n\nOr they might be referring to the ability to protect against a race attack by listening to many nodes so as to learn of any double spend race attack attempts.  That doesn't eliminate the risk entirely but helps to bring it to a level that the merchant can manage.  There has been progress towards doing this listening with varying results ( http://www.transactionradar.com and http://blockchain.info/double-spends ) but there is no service built yet for merchants that provides transaction monitoring and alerting when double spend attempts are detected:\n\nhttps://bitcoin.stackexchange.com/a/2625/153\n\n", "bitcoinj - Is there a known way to export my wallet private key from the \"Bitcoin Android\" app (com.bitcoinandroid)?": "\nI wrote up a detailed answer to this some ago. Essentially, you will need to root your phone and extract the wallet file with apd. \nAfter you've got that you can decode it by looking within the serialized wallet with a Java debugger attached looking for an ECKey reference. Then, once you have the private key you can simply hand it over to MtGox who will do the decode for you and then you can transfer the bitcoins wherever you like. \nAlso, the BitCoinJ project contains several useful example tools in the source tree. Perhaps using one of those will help you with the deserialization. \n", "json rpc - Running Miner as embedded system (No OS) - Can it be done?": "\nThat's about all there is to it.  You don't need to handle the Bitcoin protocol or worry about the blockchain, the mining pool does all that for you.  Just issue a request for 'work' to the pool using the JSON-RPC interface.  Hash the supplied work with different nonces over and over until you get a hash less than the given target, and use the JSON-RPC interface to submit successes.\nYou might want to poll for new work in a separate thread, so you know when the block you're working on has been found by someone else.\n", "development - Getmemorypool example?": "\nHere's an example.\nFirst we call getmemory pool without arguments to get some data for our block:\n{\"method\":\"getmemorypool\",\"params\":[],\"id\":1}\n\nbitcoind answers:\n{\n    \"result\": {\n        \"version\":1,\n        \"previousblockhash\":\"0000000009a9a1c729d51337bf32ff300eeb59a5b3fbca99fc21c32e939c45f3\",\n        \"transactions\":[\"01000000084e8cf9dc5f88ca1491dbfb39cff0d404ce806d399304f10b33074dc7aa17903e000000008b48304502204a5e08b84c37d2fa0d2f0408dc0c57b3f32053b2cf36dec01ed4c74faa99a3dd022100ba7615866be25f117f27d122e2382e444c2dd008d225a0cfdff01f1a211d908d014104f137a019c7aabd0dd14072e3fb48b8052a2418908ab80bcc1644864d862da8230dee295fc0ffe99f2193a4399376f28a9a7017ac4a3512050685e68e153d06e1ffffffff67e9547d3ab191df75a26c05aa7b6c8728480fe45a6b6f894831fd37b0e58712000000008c4930460221009cf693f9044f567c9d0c79e1a00cf0042fc521cac7cfeb391387d7c192840ad3022100f11f8c6c941110621c486bb536cef52448200785abbc766dc18055ff1e7e56ae01410406b695afbaa14941464271fb3040d36fabcd7aa703b93ccf646563e8770a0125fd4da87da429295caf3169a8ccf65da93ce77c15265d0543d3113aae326637f8ffffffff9551e2f50386d363a4d330c58cb22375f29466a11e96891f243c2af2db13c3ba000000008b483045022100b81fa91fa57dd0e14698284d1c8ad7ec13cdc1c23c4d83f94af89f9e00d1c86502207602b111f6451bbfca2157d78462305080806cd1666973a711b7017b771b6f700141042b6a18abc6115d6a999438ec65c4dd123a11e36da7fa8ba0ff5696a7f7e1dc83dc25d3f0128dd4517f15478ca0dce69544ab432372c263d36348a6f44bd16f3fffffffffa6b94d37196d09375fcb0a71d689dddc1d05fe79d1ce0481017d7ad26c03802d000000008c493046022100efe3d5b1d50e27ec4c6655c01b43a7a7a231844ae619bccb8edd5e7f808aefd8022100997ce38e04ce2563ff7e03ee1088cafc50b80b10d6d37812dc71321af4bbc0a4014104820055b30b38ee0a90a14262b98ea434b422dccab78f27e3ed9612337b4b9fd4f59ac14be5e95b33d76230b1652ba1265c387225c0c254f397ef50655b72a418ffffffffbc0b100b9bbcd3fd55a125da9d16bcadea60349725c8592fac6453346ff93608000000008a47304402207e89ce7e140d65546c9700034c5541815d2bc310530e4938ff9b50ed184822d202202576dc9cf0a6fc42058e78f5164d465868939706ad396d3e5b57d8ea0c508073014104d67138f23a4768d3a204a3a273ee1ca6945853ef8c9a2cd8cfd506e47b3b248f213603aef904473af018ed1ff4ef74e4cdb0ff9c2deacf9823a049078a76fedaffffffffc1f5241c12f37a5c3aa47a21c41f3434be91080c7f41e75c0555a0e36200726e000000008b483045022028de22ecd4914df28e39495ea0b143386d74ae13d4b04dbd5fe3e0ee3713c9aa022100fafeadd20075d325ea600a91decd6da9aac41c8298afa41378a05b2734d2d40f014104c779a30cbac10723e95586317608eea86fca983e3c19c9522aa002a336d834646856bd83c36c10fea338cee142d4018766d518440c34bca4560f4c9e321ab5b5ffffffffda732f6cde3aee7312e4d79c736c5e2371054a622e62761f5fb0656bb2343d59010000008c49304602210081d74a79a96f265a9b02b60deb07c22c2c48e7ab3810933a7d0e58ee8681a163022100cbfc11072669baf26fa9ae8d3ba791f2244afa1f93a5f319d8a424d6f39ea290014104bbc1028f6a3236b2957eaec0db8421218666c89373f7763a60932c546be95da5549e610f878f5f6f33002aafeb2d7d64594abcaa04eef8d58f655116d1e66f67ffffffffe49412db7ac64a044ba85b23c9970993c5745e8675ab98d4b7b7ff11702d9fb3000000008a473044022051d1f52323d24daf64473455500734c0f3c4cdebcbcbc254ddb213d9cf98c71902200bf7886b991c7c402fc93f5218f0fc77423837319da361853e9b522ac3b5b6e8014104e6345517e6ed1484774a7e39639b3bd8754f6dff329851405529cb33e6ba73f7c428da905b3155e1e43593b6e5ff2bbe72d68b85f3215ff074c3f452bf179387ffffffff0200cc5501000000001976a914b6392bdac0e2d257dae6c2158a15483189765cd988ac8094dd3a000000001976a9148d3aa39648b3d1c15f3d254f2085ab213cb4e7bd88ac00000000\",\"0100000002ae529af0f0f566f29797c4bfa36f8d9a058adb8c8925d416a08292b27b630d69000000008c493046022100c88e1af2c4981da9e3092ac0cef618786bf4e0dcc275da73af4391a33dda8924022100f85f46672e6d179615f6066093e2898a8b8a91572eaae945e29c4b9334fd9ec10141045ffdf42a00c23bf08493832db37148bb554429acf381d97718b4b01f274fe8d7be3007816f7e64dc31fc409ec477c3674aabad3a0e7c29ecf746ebdaa47bcb56fffffffff64d9d7326670b1d8d6e7c78a8e604145cf1dd0eb9ec9ea46167670667169486000000008b483045022069f2c8fa082e7cdbf4de64eeb81a6bdf33e0f2d7d66dc96b4541fdbe89c17b69022100cfb9f1f9e12797913e379516d1d666908c2f9f3ebb6caff809ea1fae656da46701410434931cfbcd7c3710ba80d0ff4f1280c7fa1d03424c97718990b4b8ab7cd7530a8a09c744ca9db299017543ad006b088726b5259b6578d9b76046a936ddb51f73ffffffff022a316300000000001976a9146e850eec4dc5c1777ca398d2d54eb3420d19975e88ac90b25b07000000001976a9146f25c165604201878a228a4feae39fa207b77eee88ac00000000\"],\n        \"coinbasevalue\":5000000000,\n        \"coinbaseflags\":\"062f503253482f\",\n        \"time\":1350579878,\n        \"mintime\":1350577150,\n        \"curtime\":1350579878,\n        \"bits\":\"1c2f36c0\"\n    },\n    \"error\":null,\n    \"id\":1\n}\n\nNext to create the block. We send:\n{\"method\":\"getmemorypool\",\"params\":[\"01000000f3459c932ec321fc99cafbb3a559eb0e30ff32bf3713d529c7a1a909000000009f83f0d0dc047481466529d0d1b2aacaba8ab1347497f5a9c5b65d0fb938cceaac368050c0362f1cb4cceac60301000000010000000000000000000000000000000000000000000000000000000000000000ffffffff5603db5e01094269744d696e746572062f503253482f13657531020000000000000001000000000000002cfabe6d6db057e134bd9a65e5b7fd3e65082debdf4313eaf44feb0e5932db67e10e60e9b60100000000000000ffffffff0100f2052a010000001976a9146f25c165604201878a228a4feae39fa207b77eee88ac0000000001000000084e8cf9dc5f88ca1491dbfb39cff0d404ce806d399304f10b33074dc7aa17903e000000008b48304502204a5e08b84c37d2fa0d2f0408dc0c57b3f32053b2cf36dec01ed4c74faa99a3dd022100ba7615866be25f117f27d122e2382e444c2dd008d225a0cfdff01f1a211d908d014104f137a019c7aabd0dd14072e3fb48b8052a2418908ab80bcc1644864d862da8230dee295fc0ffe99f2193a4399376f28a9a7017ac4a3512050685e68e153d06e1ffffffff67e9547d3ab191df75a26c05aa7b6c8728480fe45a6b6f894831fd37b0e58712000000008c4930460221009cf693f9044f567c9d0c79e1a00cf0042fc521cac7cfeb391387d7c192840ad3022100f11f8c6c941110621c486bb536cef52448200785abbc766dc18055ff1e7e56ae01410406b695afbaa14941464271fb3040d36fabcd7aa703b93ccf646563e8770a0125fd4da87da429295caf3169a8ccf65da93ce77c15265d0543d3113aae326637f8ffffffff9551e2f50386d363a4d330c58cb22375f29466a11e96891f243c2af2db13c3ba000000008b483045022100b81fa91fa57dd0e14698284d1c8ad7ec13cdc1c23c4d83f94af89f9e00d1c86502207602b111f6451bbfca2157d78462305080806cd1666973a711b7017b771b6f700141042b6a18abc6115d6a999438ec65c4dd123a11e36da7fa8ba0ff5696a7f7e1dc83dc25d3f0128dd4517f15478ca0dce69544ab432372c263d36348a6f44bd16f3fffffffffa6b94d37196d09375fcb0a71d689dddc1d05fe79d1ce0481017d7ad26c03802d000000008c493046022100efe3d5b1d50e27ec4c6655c01b43a7a7a231844ae619bccb8edd5e7f808aefd8022100997ce38e04ce2563ff7e03ee1088cafc50b80b10d6d37812dc71321af4bbc0a4014104820055b30b38ee0a90a14262b98ea434b422dccab78f27e3ed9612337b4b9fd4f59ac14be5e95b33d76230b1652ba1265c387225c0c254f397ef50655b72a418ffffffffbc0b100b9bbcd3fd55a125da9d16bcadea60349725c8592fac6453346ff93608000000008a47304402207e89ce7e140d65546c9700034c5541815d2bc310530e4938ff9b50ed184822d202202576dc9cf0a6fc42058e78f5164d465868939706ad396d3e5b57d8ea0c508073014104d67138f23a4768d3a204a3a273ee1ca6945853ef8c9a2cd8cfd506e47b3b248f213603aef904473af018ed1ff4ef74e4cdb0ff9c2deacf9823a049078a76fedaffffffffc1f5241c12f37a5c3aa47a21c41f3434be91080c7f41e75c0555a0e36200726e000000008b483045022028de22ecd4914df28e39495ea0b143386d74ae13d4b04dbd5fe3e0ee3713c9aa022100fafeadd20075d325ea600a91decd6da9aac41c8298afa41378a05b2734d2d40f014104c779a30cbac10723e95586317608eea86fca983e3c19c9522aa002a336d834646856bd83c36c10fea338cee142d4018766d518440c34bca4560f4c9e321ab5b5ffffffffda732f6cde3aee7312e4d79c736c5e2371054a622e62761f5fb0656bb2343d59010000008c49304602210081d74a79a96f265a9b02b60deb07c22c2c48e7ab3810933a7d0e58ee8681a163022100cbfc11072669baf26fa9ae8d3ba791f2244afa1f93a5f319d8a424d6f39ea290014104bbc1028f6a3236b2957eaec0db8421218666c89373f7763a60932c546be95da5549e610f878f5f6f33002aafeb2d7d64594abcaa04eef8d58f655116d1e66f67ffffffffe49412db7ac64a044ba85b23c9970993c5745e8675ab98d4b7b7ff11702d9fb3000000008a473044022051d1f52323d24daf64473455500734c0f3c4cdebcbcbc254ddb213d9cf98c71902200bf7886b991c7c402fc93f5218f0fc77423837319da361853e9b522ac3b5b6e8014104e6345517e6ed1484774a7e39639b3bd8754f6dff329851405529cb33e6ba73f7c428da905b3155e1e43593b6e5ff2bbe72d68b85f3215ff074c3f452bf179387ffffffff0200cc5501000000001976a914b6392bdac0e2d257dae6c2158a15483189765cd988ac8094dd3a000000001976a9148d3aa39648b3d1c15f3d254f2085ab213cb4e7bd88ac000000000100000002ae529af0f0f566f29797c4bfa36f8d9a058adb8c8925d416a08292b27b630d69000000008c493046022100c88e1af2c4981da9e3092ac0cef618786bf4e0dcc275da73af4391a33dda8924022100f85f46672e6d179615f6066093e2898a8b8a91572eaae945e29c4b9334fd9ec10141045ffdf42a00c23bf08493832db37148bb554429acf381d97718b4b01f274fe8d7be3007816f7e64dc31fc409ec477c3674aabad3a0e7c29ecf746ebdaa47bcb56fffffffff64d9d7326670b1d8d6e7c78a8e604145cf1dd0eb9ec9ea46167670667169486000000008b483045022069f2c8fa082e7cdbf4de64eeb81a6bdf33e0f2d7d66dc96b4541fdbe89c17b69022100cfb9f1f9e12797913e379516d1d666908c2f9f3ebb6caff809ea1fae656da46701410434931cfbcd7c3710ba80d0ff4f1280c7fa1d03424c97718990b4b8ab7cd7530a8a09c744ca9db299017543ad006b088726b5259b6578d9b76046a936ddb51f73ffffffff022a316300000000001976a9146e850eec4dc5c1777ca398d2d54eb3420d19975e88ac90b25b07000000001976a9146f25c165604201878a228a4feae39fa207b77eee88ac00000000\"],\"id\":1}\n\nbitcoind answers:\n{\"result\":true,\"error\":null,\"id\":1}\n\nWhat happens is that we use the data we get from the first RPC call to construct a block and then send a hex representation of that block to bitcoind. Going over every byte in the data above is a bit much to do here, but the big chunk of data that represents our block follows the bitcoin protocol binary layout for blocks, which can be found at https://en.bitcoin.it/wiki/Protocol_specification#block.\nThe block above exists at height 89819 of the testnet used by bitcoind 0.6. You may not be able to see it if you are on a different testnet.\n", "protocol - Getmemorypool responses": "\nBIP 22 is the draft specification for getmemorypool, and should answer all the questions you asked.\n", "protocol - Transaction signature generation": "\nHere and in the following articles I explain how to build and sign a Bitcoin transaction from scratch. There are also C code examples attached:\nhttps://davidederosa.com/basic-blockchain-programming/inside-transactions/\n", "ios - Can a merchant using Square Register accept bitcoins?": "\nBit-Pay has a mobile app that allows acceptance of mobile payments. It's not native for the iPad, but it should work, albeit at a lower resolution. There are a few other iPad apps, but none that implement any sort of payment functionality. \n", "What is Bitcoin?": "\n\nIs it a new payment merchant like PayPal?\n\nNo.\nPayPal is a company, Bitcoin isn't.\nPayPal deals with existing currencies like US dollars, Bitcoin doesn't.\nPayPal holds your balance for you, can freeze your account and can stop you from sending your money to people it doesn't like.  With Bitcoin, nobody can freeze your account or tell you how to spend your bitcoins.\n\nIs it a virtual currency like LindenDollars that can't be really used as money? (put money In, but not Out)\n\nWhether it is a currency or not isn't clear, but it is virtual.  Some say it's more like a commodity than a currency.  It acts a lot like gold, in that there is a finite supply of it, it's valued by some people, and it can be used as money anywhere that accepts it.  Also, it can be bought and sold for US dollars and many other currencies.  At the time of writing 1 bitcoin is worth 470 USD, and there are plenty of people willing to buy them from you at just under that price or sell them to you at just over that price.  The price is decided by the market. The price bitcoin trades at is the one people think it is currently worth.\n\nIs it a new currency system, where people exchange bitcoin addresses instead of real money?\n\nIt acts a lot like a currency and can be used to trade with anyone who accepts it.  It is very cheap to transfer between any two points in the world, and very fast compared to transferring US dollars or other currencies.\nSee this introductory video for a slicker introduction.\n", "What's the most popular Namecoin exchange?": "\nAlmost everyone seems to use the Bitparking Namecoin Exchange.\n", "bitcoin core - When does the main client relay its knowledge of TXs in INV message?": "\nThreadMessageHandler2() calls SendMessages() every 100 seconds, which causes inv messages to be sent to the client's peers.\nOne peer is picked at random to receive inv messages which reference all the pending transactions that we know about and it doesn't, including the ones we created ourselves.  The rest of the peers receive a inv messages which only reference around 25% of the pending transactions that we know about and they don't, not including any of the ones we created.\nA comment in the code explains that this \"trickling\" of transaction inventory is to protect privacy.\nEdit: I just noticed this thread which also describes the process of advertising transactions.  Luckily it agrees with my description here.\n", "mining pools - Are big miners a threat for Bitcoin?": "\nThose aren't miners, those are mining pools.\nThere is the risk of disruption (e.g., rejecting all transactions) if a miner (or cartel) has 50% + 1 of the hashing power.  But the pools are dependent on individual miners using the pool.  If a pool were found to be cooperating in such an attack, miners would go elsewhere and that pool's hashing strength would disappear quickly.  Thus the 50% foothold would erode and be lost.\nSo there is a risk of temporary harm should your scenario play out.  Whether or not that could be permanent harm depends how determined the attacker is at controlling 50% + 1.  Doing so is not only not profitable, it would also require a tremendous outlay of money.  Attempting to attack Bitcoin with 50% could be performed only at a tremendous financial loss.\nHere are more details on what the attacker could do:\n\nhttps://bitcoin.stackexchange.com/a/662/153\n\n", "Official DiabloMiner.app": "\nIt's hosted at github.\nDownloads are here.\nIt's open source, so you can check the code to see how safe it is.\nThere's an old but still active thread on the bitcointalk forums.\nIt looks like the program is java code and so doesn't need compiling for OSX, and also that there's a script DiabloMiner-OSX.sh that runs it on OSX.\n", "mining pools - Why does the BFL Single produce ~50% stales with P2Pool?": "\nThe BFL single produces high stale rates on P2Pool because of the way its firmware is designed. The BFL does 2^32 hashes and then reports any shares found. This takes it about 5 seconds.\nWith solo mining or typical pools, the work unit you get is valid for several minutes or until a new block is found (on average, one every ten minutes). So the average delay of 2-1/2 seconds between when you find a share and when it's reported has no effect. But P2Pool operates with an effectively much higher block rate because you're building blocks for the P2Pool chain.\nEssentially, it comes down to which races you're trying to win and whether an average 2-1/2 second handicap matters.\nSolo mining: You're trying to find a block before someone else does. That happens on average every 10 minutes. So your 2-1/2 second handicap costs you about .4%.\nConventional mining pool: You're trying to find a share before the block is invalid. You can find multiple shares inside the same work unit. Work units typically last at least 4 minutes. Worst case, your 2-1/2 second handicap costs you about 1% (usually less, especially if the pool has a forgiving stale policy).\nP2Pool: You're trying to mine a P2Pool block before anyone else finds a share. Multiple shares in a work unit are useless as only one block can come next on the P2Pool chain. The average time to find a new P2Pool block is 10 seconds. Your 2-1/2 second handicap (plus loss of additional shares per block) costs you about 25%.\nUnfortunately, all these penalties should be doubled because the same penalty hits you when a new block is first found. All your units spend, on average, an extra 2-1/2 seconds finishing their work on the old block. (Effectively, the entire 5 seconds spent on a work unit while a new block is found is wasted. Any shares found before the five seconds are over are wasted since it's too late to use them, and any shares found after the five seconds are over are wasted since they were based on the wrong block.)\nThe fix would be a simple firmware change to make the FPGA report a share as soon as one is found. That would solve half the problem. The next change would be to allow the FPGA to start working on a new work unit when a new one is available without having to finish the previous. That would solve the other half of the problem.\n", "history - What is the largest transaction by value to date for bitcoin currency?": "\nProbably this one, 550,000 BTC transferred at one time.\n\nhttp://blockexplorer.com/tx/29a3efd3ef04f9153d47a990bd7b048a4b2d213daaa5fb8ed670fb85f13bdbcf\n\nNow the question, was it a transfer from one person to another, or was it a transfer simply to, for example, another wallet once the passphrase encryption feature was made available.\n", "blockchain.info - What client-side checks does blockchain's android client do?": "\nThe quote in the documentation is a remnant from the http://code.google.com/p/bitcoin-wallet/ which the app was forked from. \nAt present it does not do any blockchain validation. I would like to have it so instead of downloading the full transactions from blockchain.info the client asks for the block hashes that contain transactions of interest. It can then download the full blocks from the p2p network and only the headers for other blocks to verify the proof of work. However this is not currently implemented.\n", "terminology - What does BIP mean?": "\nBIP = Bitcoin Improvement Proposal. The suggestion to use the concept of BIPs is BIP 1.\n", "currencies - How does Ven work compared to Bitcoin?": "\nIt appears to be completely unrelated (hence the close vote I just casted).\n\nVen is a digital social currency used to share, buy, sell and trade in\n  the world of Hub Culture and beyond. The value of Ven floats against\n  other currencies and the price is based on a basket of currencies,\n  commodities and carbon futures.\n\n,\n\nCan I trade my Ven back to national currencies like the Dollar, Euro or Pound?\nNo\n\nApparently it's just a bad-old centralised virtual currency.\nNothing new, nothing special, nothing relevant. And definitely nothing related to Bitcoin.\nsince I just skimmed over it, I might have got something wrong, but as far as I've read that's unlikely\n", "currencies - How can Bitcoin work with Ven?": "\nAt present I'm not aware of any ways that Bitcoin and Ven interact, but from what little I know of Ven there's no reason they couldn't interact in the same ways as any traditional currency. I see no compelling reason why a Bitcoin<->Ven exchange couldn't be opened, though I don't know if Ven allows chargebacks. Ven might also be useful as an analysis tool, since it essentially represents a \"basket of currencies\" and therefore the price of Bitcoin in Ven might be a better indicator of Bitcoin's actual worldwide value since differences in value of local fiat currencies would have less of an effect on the BTC/VEN price than say BTC/USD or BTC/PLN.\nUpdate: Apparently, Ven is a private, local currency which cannot be converted back into other currencies, so the above may be inaccurate. Ven does allow private exchanges, though, so it may still be possible to build an exchange.\n", "client - Bitcoin will not open instead I see: error loading blkindex.dat": "\nClose the client, go to C:\\Users\\(Your Username)\\AppData\\Roaming\\Bitcoin and delete everything in the folder except for wallet.dat - do not delete wallet.dat under any circumstances (and empty your Recycle Bin), then restart the client. Somehow your block index file became corrupted.\n", "Bitcoin wallet for Symbian operating system?": "\nCuteCoin might help\nThere is a project in GitHub that apparently provides a Symbian3 Bitcoin client using InstaWallet. See https://github.com/Matoking/cuteCoin for source code.\nThere is also some supporting discussion about Symbian on the forums here:\nhttps://bitcointalk.org/index.php?topic=26154.0\n", "encryption - Are there Bitcoin password crackers I can use to recover forgotten passwords?": "\nRevalin made available a sript that you can try running:\n\nhttp://bitcointalk.org/index.php?topic=85495.msg942171#msg942171\n\nThere may not yet be anything else, but you'ld probably find someone willing to write one if you offered to send your wallet along with what you think the pass phrase might be and ask only for a fraction of the wallet's bitcoins back once cracked.\n", "doublespend - Double spend attack by sending higher fee transaction directly to the pools possible?": "\nBitcoin's security rests on the assumption that the majority of the hashing power follows the protocol. If instead miners/pools break protocol for a quick buck by switching to a conflicting transaction which is clearly a double-spend attempt, this assumption no longer fully holds.\nOne can only hope that the mining pool (or any block issuing agent) will refrain from this because they realize that supporting double-spends undermines the validity of their own stake in the Bitcoin ecosystem.\n", "e wallet - When I use InstaWallet.org, do I get my own Bitcoin address?": "\nThat address only receives deposits to your account. Otherwise, they'd have no idea what account to credit when funds wound up in that address.\nBut you can't use blockexplorer to monitor your balance, only to monitor the total amount of deposits you've made. InstaWallet will remove funds from that account as they wish to aggregate your funds with other deposits and service withdrawals.\nAlso, when you make a payment, even if InstaWallet uses your coins to make the payment, the \"change\" will be sent to a different address. For example, if you deposit 20 bitcoins and then withdraw 10, even if InstaWallet did use your 20 bitcoins to fund the withdrawal, the remaining 10 bitcoins would go to a different bitcoin address even though it's still in your InstaWallet account.\nIf, say, you're expecting someone to send you some Bitcoins, you could use blockexplorer to see if they've made that payment. But the balance you see won't really mean anything, it's just some number equal to or less than the total amount you've ever deposited through that address.\n", "hashpower - What can be done about the no-transaction block relayer (currently 71.123.170.150)?": "\nThere are too many issues rolled up into this question, I'll try to address each separately.\n\nThe fact that the miner does not include transactions is not a problem. Miners have a right to exclude transactions, even all transactions. Senders can include tx fees if they want to improve the chances of being included quickly (if the miner excludes transactions due to its nature of operation an individual fee won't help much, but if the general fee level increases, 0-tx miners will be much less profitable and thus less influential).\nThe fact that there is a mining botnet is a problem insomuch as we don't want Bitcoin to be an enabler of harmful activities, but it does not harm Bitcoin itself. It is likely that new FPGA- and ASIC-based mining products will make CPU-based botnets less effective.\nOrphaned blocks are a normal occurrence in the functioning of the network, and an occasional orphan by this particular miner is of no concern.\nIf the miner starts rejecting longer branches (as in a 51% attack) it is a problem, but it is a heavily discussed core problem which is not specific to botnets and is not yet resolved. I am of the opinion that a proof-of-stake system can drastically mitigate the problem (and will probably make botnets less effective miners).\nIf we want as a matter of principle to discourage blocks that have little or no transactions, we can include some measure of transaction volume in the branch selection criterion. One such measure is Bitcoin days destroyed. It is resistant to manipulation by sending the same coins to oneself again and again, because such coins will only destroy few days each time.\n\n", "mining pools - Under what circumstances would a server submit new work to a miner?": "\nThe problem you are describing could be due to pool optimisation, as it is easier to prune 1 minute old shares than probably it is to look through 10 minutes of shares in order to validate them.\nAs for why a miner would request new work from a pool, other than as a result of longpolling or finishing a work, might be due to the work becoming invalid with time (with standard protocol a miner would request work every second). Alternatively, the miner is trying to be malicious and trying to make the pool do extra work.\n", "security - What are the safety guidelines for using the Sign Message feature?": "\nThe signing mechanism is a way of proving that a particular message was signed by the holder of an address' private key.  A merchant could ask that you sign a message stating where you want your order shipped to, using one of the addresses your payment originated from.\nYou should sign a statement saying \"I, Jane Doe (jane.doe@email.com) sent 1.23 BTC to Acme Corp at 12:34pm, 1st Jan 2012 in payment for product XYZ for delivery to 456 High Street, Anytown, USA\".\nYou shouldn't sign a vague statement saying \"yes, I sent that money; send the product to the address I emailed you\", because anyone seeing a copy of that signed message can then pass that on to the merchant with his own postal address and get the product you paid for, in the same way as you wouldn't put your signature to a piece of paper saying \"I agree to the above\" where the above was left blank.  The postal address part won't be signed, but perhaps the merchant won't care.\n", "exchange rate - How does bitcoin's price volatility compare to commodities/stocks with comparable market capitalizations?": "\nI compared the standard deviation of (USD-denominated) price of bitcoins and the Russell Microcap Index Fund (IWC) which is an ETF (read: basket) of 1359(!) stocks with ca. 300million USD in market cap (each). This is a total apples to (buckets of) oranges comparison, but the results are as follows:\nIWC std dev:            3%\nMtGox BTCUSD std dev:  12%\nFWIW, over the last 6 months, the USD-denominated price of bitcoins has been 4 times as volatile as a basket of approx. 1000 stocks with similar market caps. \nFor a slightly better comparison, the volatility of BTCUSD is about 10x that of EURUSD. \nIn my opinion, bitcoin is quite stable, especially considering the ubiquitous press of it being so unstable. \nRegarding trading fees:\nMt Gox's lowest fees are very high (~0.4%) compared to competitive stock brokers, such as Interactive Brokers (~0.1% max). This is similar for commodity futures.\nRegarding the speculative nature of bitcoins and market depth:\nStocks (esp. \"microcap\" stocks) are very speculative too, so stocks and bitcoins are similar in this regard. Similarly for any depth of market argument for stocks vs bitcoins, both can be moved by relatively small orders and have only a percentage available for trading on an exchange.\n", "history - What is the longest blockchain fork that has been orphaned to date?": "\nShort answer: 4 [Prior to the March 12, 2013 fork]\nThe Value Overflow incident seems to be the longest ever blockchain split. The problem with blockchain forks is that once they are resolved the only trace they leave is a log entry.\nTo reconstruct the following I used the printblocktree output that theymos gave me in this question and the information from Blockchain.info.\nAs far as I can see from the printblocktree there have been 90 blockchain forks observed by theymos in the blockchainrange [90392-189512].\nThis dataset has the following forks:\n\n1x block length 4 (starting from block 174161)\n1x block length 3 (starting from block 174120)\n4x block length 2 (starting from blocks 93669, 174233, 179217 and 179639)\n87x block length 1 (starting from blocks 90392, 90676, 90858, 91405, 92094, 93047, 93088, 93619, 93642, 93669, 93670, 93671, 93855, 94671, 98529, 99365, 100740, 101902, 102674, 105401, 109912, 117103, 118553, 120406, 123583, 128501, 130077, 130200, 155180, 157929, 161673, 162257, 163959, 165439, 165519, 166890, 167283, 167620, 167742, 167863, 168920, 169517, 171064, 173494, 174102, 174104, 174121, 174174, 174182, 174185, 174187, 174232, 174242, 174291, 174307, 174313, 174330, 174343, 174414, 174452, 174531, 174593, 174605, 175998, 176210, 176478, 177854, 178119, 178293, 179791, 179890, 180143, 181230, 181591, 181618, 182210, 182321, 183193, 183405, 183500, 183519, 184932, 186561, 187866, 188347, 188682 and 189512)\n\nBlockchain.info does have quite a few more orphans in their database, apparently because they connect to a lot more nodes, but their history does not go back as far as theymos' printblocktree.\nThe first blockchain fork that bitcoin.info observed was based on block 142257 since then we observed 540 forks:\n\n2x block length 4 (starting from blocks 174161 and 173927)\n4x block length 3 (starting from blocks 174120, 174056, 174050 and 173956)\n14x block length 2 (starting from blocks 183873, 179639, 179217, 176924, 175847, 175226, 174233, 174093, 173988, 173985, 173691, 170059, 165518 and 155180)\n520x block length 1 (far too many to put them here...)\n\nThe problem is quite evident: while both see forks, theymos' set has a smaller view of the network and misses or misinterprets forks (the one starting from 155180 is marked as a length 1 fork in the first results and as a length 2 in the second). We cannot be sure that blockchain.info catches all of the forks but we can be pretty certain that there was no fork longer than 4, as the fork would survive longer and would be seen by more nodes.\n", "services - What external systems is Bitcoin commerce dependent on?": "\nWhereas Block Explorer might be a useful tool, Bitcoin could survive without it.\nMost important parts of the Bitcoin ecosystem, asides the main client that is, are the exchanges. They give the currency its value and without them, Bitcoin would become a fringe technology (no merchants would deal in it, as they couldn't pay their taxes with it.\nThen we have the mining software and to a lesser degree the hardware (FPGA boards and the like). Should those be gone or less available it would be easier to launch a 51% attack on the network.\nAfter that there are the mining pools. If they would disappear the miners would have a harder time earning a predictable wage. This dependancy has been mitigated with P2Pool though, so the impact is smaller than it was earlier.\nAfter that the services are less essential. Losing the Bitcoin Forum, Wiki, SE, WeUseCoins or the like might make it harder for new people to get into Bitcoin, but wouldn't make it less functional.\n", "bitcoin core - How to set the language/localization in the standard client?": "\nClose the Bitcoin client and add this line:\nlang=en\n\nOn a line by itself to the end of the file:\nC:\\Users\\YourUserName\\AppData\\Roaming\\Bitcoin\\bitcoin.conf\n(Replace \"YourUserName\" with your windows user name.)\nNow restart the Bitcoin client.  Done!\n", "address - Is a wallet just a collection of private and public keys?": "\nA wallet can be as simple as just a private key by itself even as software that has access to that can derive the public address from it.  So yes, that data alone can be considered a bitcoin wallet.\nBut you asked if that is all you need to send and receive so for that you will need software that uses the private key to spend the funds.  Sometimes the term \"wallet\" is used to refer not to just the data stored but transaction data as well, along with the software that can create transactions and do the accounting for them as well so that you can know your balance.\nProper vocabulary would describe wallet software as being a bitcoin client.  The bitcoin client from Bitcoin.org (also referred to as the \"Satoshi\" client) does this, and has a local wallet as well.\nMy Wallet from http://BlockChain.info/wallet is managed through a server, but the wallet itself is stored in your browser.  That type of wallet and client is termed a Javascript-based wallet.  Sometimes the term \"hybrid wallet\" is used, since to spend using My Wallet you need to use their hosted service where the transaction gets processed.\nAnother type of wallet is an e-wallet where the wallet data is stored by the service's operator.  An e-wallet can also be referred to as a \"hosted wallet\".  InstaWallet is one of these.  The just-launched Paytunia is another.  An account at an exchange which hold bitcoins for you is another type of e-wallet service.  Using a hosted wallet incurs risks involving trust extended to the wallet's operator.\nBut the simplest form of a wallet comes from http://BitAddress.org\nIt gives exactly what you describe -- a private key and a public address.  This happens to provide one of the most secure wallets as well.  The html source can be copied to a thumb drive and then used to create paper wallets from an \"air gapped\" system (such as a computer running a secure operating system perhaps using a LiveCD linux distribution) that has no connection to the network and is used for printing out paper wallets.\n", "What happens to my bitcoins when I die?": "\nThis depends a lot on how you handle your wallet. If you are careful about it and make sure you have an off-site backup of your wallet (or use a deterministic or paper wallet, etc) then you can easily pass your wallet and all the coins it contains to anyone you choose in the same ways that you can pass on other property.\nOf course if you're the only person with access to the wallet and have not planned anything then yes, your bitcoins will be \"lost in the network.\"\n", "Detecting dishonest merged-mining pool": "\nThe only way to know for sure would be if you mined for the pool and you mined a Namecoin block for them. You would find the particular header you had submitted as a share used as a solved, merge-mined Namecoin block.\n", "transactions - In which Block was Len Sassaman memorialised?": "\nBlock 138725\nTransaction 930a2114cdaa86e1fac46d15c74e81c09eee1d4150ff9d48e76cb0697d8e1d72\n", "confirmations - Help regarding an online wallet to local wallet transaction?": "\nTry looking for your online and offline addresses here:\nhttp://blockchain.info/\nThis block explorer lists transactions that are not yet part of a block. If that transaction is found there, it probably will become part of a block soon.\n", "transactions - How to redeem a basic Tx?": "\nIn this answer, I will go through the steps necessary to redeem the second output of the transaction listed above. The answer will be limited to redeeming an output of the particular type present in this transaction (an output which requires providing a new transaction signed with a private key whose corresponding public key hashes to the hash in the script of the output in question), as this answer is already fairly long, even without taking into account other output types.\nShort summary: We begin by constructing a new transaction, with a scriptSig containing the scriptPubKey of the output we want to redeem. The scriptPubKey of this transaction will contain a script that pays to a hash of a public key (Bitcoin address). We perform a double-SHA256 hash on this transaction with the four-byte hash code type SIGHASH_ALL appended to the end. We sign this hash with the private key supplied above. The scriptSig of this new transaction is then replaced with a script that first pushes the DER-encoded signature, plus the one-byte hash code type SIGHASH_ALL, to the stack, followed by the DER-encoded private key's corresponding public key.\nStep-by-step description:\nWe start creating a new raw transaction which we hash and sign.\n\nAdd four-byte version field: 01000000\nOne-byte varint specifying the number of inputs: 01\n32-byte hash of the transaction from which we want to redeem an output: eccf7e3034189b851985d871f91384b8ee357cd47c3024736e5676eb2debb3f2\nFour-byte field denoting the output index we want to redeem from the transaction with the above hash (output number 2 = output index 1): 01000000\nNow comes the scriptSig. For the purpose of signing the transaction, this is temporarily filled with the scriptPubKey of the output we want to redeem. First we write a one-byte varint which denotes the length of the scriptSig (0x19 = 25 bytes): 19\nThen we write the temporary scriptSig which, again, is the scriptPubKey of the output we want to redeem: 76a914010966776006953d5567439e5e39f86a0d273bee88ac\nThen we write a four-byte field denoting the sequence. This is currently always set to 0xffffffff: ffffffff\nNext comes a one-byte varint containing the number of outputs in our new transaction. We will set this to 1 in this example: 01\nWe then write an 8-byte field (64 bit integer) containing the amount we want to redeem from the specified output. I will set this to the total amount available in the output minus a fee of 0.001 BTC (0.999 BTC, or 99900000 Satoshis): 605af40500000000\nThen we start writing our transaction's output. We start with a one-byte varint denoting the length of the output script (0x19 or 25 bytes): 19\nThen the actual output script: 76a914097072524438d003d23a2f23edb65aae1bb3e46988ac\nThen we write the four-byte \"lock time\" field: 00000000\nAnd at last, we write a four-byte \"hash code type\" (1 in our case): 01000000\nWe now have the following raw transaction data:\n01000000\n01\neccf7e3034189b851985d871f91384b8ee357cd47c3024736e5676eb2debb3f2\n01000000\n19\n76a914010966776006953d5567439e5e39f86a0d273bee88ac\nffffffff\n01\n605af40500000000\n19\n76a914097072524438d003d23a2f23edb65aae1bb3e46988ac\n00000000\n01000000\n\n(signing stage) Now we double-SHA256 hash this entire structure, which yields the hash 9302bda273a887cb40c13e02a50b4071a31fd3aae3ae04021b0b843dd61ad18e\nWe then create a public/private key pair out of the provided private key. We sign the hash from step 14 with the private key, which yields the following DER-encoded signature (this signature will be different in your case): 30460221009e0339f72c793a89e664a8a932df073962a3f84eda0bd9e02084a6a9567f75aa022100bd9cbaca2e5ec195751efdfac164b76250b1e21302e51ca86dd7ebd7020cdc06 To this signature we append the one-byte hash code type: 01. The public key is: 0450863ad64a87ae8a2fe83c1af1a8403cb53f53e486d8511dad8a04887e5b23522cd470243453a299fa9e77237716103abc11a1df38855ed6f2ee187e9c582ba6\nWe construct the final scriptSig by concatenating:\n\nOne-byte script OPCODE containing the length of the DER-encoded signature plus 1 (the length of the one-byte hash code type)\nThe actual DER-encoded signature plus the one-byte hash code type\nOne-byte script OPCODE containing the length of the public key\nThe actual public key\n\nWe then replace the one-byte, varint length-field from step 5 with the length of the data from step 16. The length is 140 bytes, or 0x8C bytes: 8c\nAnd we replace the temporary scriptSig from Step 6 with the data structure constructed in step 16. This becomes: 4930460221009e0339f72c793a89e664a8a932df073962a3f84eda0bd9e02084a6a9567f75aa022100bd9cbaca2e5ec195751efdfac164b76250b1e21302e51ca86dd7ebd7020cdc0601410450863ad64a87ae8a2fe83c1af1a8403cb53f53e486d8511dad8a04887e5b23522cd470243453a299fa9e77237716103abc11a1df38855ed6f2ee187e9c582ba6\nWe finish off by removing the four-byte hash code type we added in step 13, and we end up with the following stream of bytes, which is the final transaction:\n01000000\n01\neccf7e3034189b851985d871f91384b8ee357cd47c3024736e5676eb2debb3f2\n01000000\n8c\n4930460221009e0339f72c793a89e664a8a932df073962a3f84eda0bd9e02084a6a9567f75aa022100bd9cbaca2e5ec195751efdfac164b76250b1e21302e51ca86dd7ebd7020cdc0601410450863ad64a87ae8a2fe83c1af1a8403cb53f53e486d8511dad8a04887e5b23522cd470243453a299fa9e77237716103abc11a1df38855ed6f2ee187e9c582ba6\nffffffff\n01\n605af40500000000\n19\n76a914097072524438d003d23a2f23edb65aae1bb3e46988ac\n00000000\n\n\nPython example code:\nI have created an example Python script which does all the above. It is intentionally as verbose as possible, and heavily commented, with as few functions as possible, in order to resemble the step-by-step guide above. The number of code lines can easily be reduced to one half, but I choose to post it in this verbose format as I judge that it's the easiest to follow (ie. no 'jumping' backwards and forwards through functions). The script contains 76 non-empty, non-comment lines.\nThe script depends on bitcointools (for serializing and deserializing transactions, and base58 encoding/decoding) and ecdsa_ssl.py from my fork of joric's brutus repository (for constructing public/private EC key pairs and ECDSA signing). The easiest way to get the script to run is to clone bitcointools into a folder, and put ecdsa_ssl.py from the above URL in the same folder along with this script, and executing the script from there.\nYou will want to replace the address in the SEND_TO_ADDRESS variable in this script with the address you want the coins sent to, unless you're feeling generous :).\n\n#bitcointools\nfrom deserialize import parse_Transaction, opcodes\nfrom BCDataStream import BCDataStream\nfrom base58 import bc_address_to_hash_160, b58decode, public_key_to_bc_address, hash_160_to_bc_address\n\nimport ecdsa_ssl\n\nimport Crypto.Hash.SHA256 as sha256\nimport Crypto.Random\n\n#transaction, from which we want to redeem an output\nHEX_TRANSACTION=\"010000000126c07ece0bce7cda0ccd14d99e205f118cde27e83dd75da7b141fe487b5528fb000000008b48304502202b7e37831273d74c8b5b1956c23e79acd660635a8d1063d413c50b218eb6bc8a022100a10a3a7b5aaa0f07827207daf81f718f51eeac96695cf1ef9f2020f21a0de02f01410452684bce6797a0a50d028e9632be0c2a7e5031b710972c2a3285520fb29fcd4ecfb5fc2bf86a1e7578e4f8a305eeb341d1c6fc0173e5837e2d3c7b178aade078ffffffff02b06c191e010000001976a9143564a74f9ddb4372301c49154605573d7d1a88fe88ac00e1f505000000001976a914010966776006953d5567439e5e39f86a0d273bee88ac00000000\"\n#output to redeem. must exist in HEX_TRANSACTION\nOUTPUT_INDEX=1\n#address we want to send the redeemed coins to.\n#REPLACE WITH YOUR OWN ADDRESS, unless you're feeling generous \nSEND_TO_ADDRESS=\"1L4xtXCdJNiYnyqE6UsB8KSJvqEuXjz6aK\"\n#fee we want to pay (in BTC)\nTX_FEE=0.001\n#constant that defines the number of Satoshis per BTC\nCOIN=100000000\n#constant used to determine which part of the transaction is hashed.\nSIGHASH_ALL=1\n#private key whose public key hashes to the hash contained in scriptPubKey of output number *OUTPUT_INDEX* in the transaction described in HEX_TRANSACTION\nPRIVATE_KEY=0x18E14A7B6A307F426A94F8114701E7C8E774E7F9A47E2C2035DB29A206321725\n\ndef dsha256(data):\n   return sha256.new(sha256.new(data).digest()).digest()\n\ntx_data=HEX_TRANSACTION.decode('hex_codec')\ntx_hash=dsha256(tx_data)\n\n#here we use bitcointools to parse a transaction. this gives easy access to the various fields of the transaction from which we want to redeem an output\nstream = BCDataStream()\nstream.write(tx_data)\ntx_info = parse_Transaction(stream)\n\nif len(tx_info['txOut']) < (OUTPUT_INDEX+1):\n   raise RuntimeError, \"there are only %d output(s) in the transaction you're trying to redeem from. you want to redeem output index %d\" % (len(tx_info['txOut']), OUTPUT_INDEX)\n\n#this dictionary is used to store the values of the various transaction fields\n#  this is useful because we need to construct one transaction to hash and sign\n#  and another that will be the final transaction\ntx_fields = {}\n\n##here we start creating the transaction that we hash and sign\nsign_tx = BCDataStream()\n##first we write the version number, which is 1\ntx_fields['version'] = 1\nsign_tx.write_int32(tx_fields['version'])\n##then we write the number of transaction inputs, which is one\ntx_fields['num_txin'] = 1\nsign_tx.write_compact_size(tx_fields['num_txin'])\n\n##then we write the actual transaction data\n#'prevout_hash'\ntx_fields['prevout_hash'] = tx_hash\nsign_tx.write(tx_fields['prevout_hash']) #hash of the the transaction from which we want to redeem an output\n#'prevout_n'\ntx_fields['output_index'] = OUTPUT_INDEX\nsign_tx.write_uint32(tx_fields['output_index']) #which output of the transaction with tx id 'prevout_hash' do we want to redeem?\n\n##next comes the part of the transaction input. here we place the script of the *output* that we want to redeem\ntx_fields['scriptSigHash'] = tx_info['txOut'][OUTPUT_INDEX]['scriptPubKey']\n#first write the size\nsign_tx.write_compact_size(len(tx_fields['scriptSigHash']))\n#then the data\nsign_tx.write(tx_fields['scriptSigHash'])\n\n#'sequence'\ntx_fields['sequence'] = 0xffffffff\nsign_tx.write_uint32(tx_fields['sequence'])\n\n##then we write the number of transaction outputs. we'll just use a single output in this example\ntx_fields['num_txout'] = 1\nsign_tx.write_compact_size(tx_fields['num_txout'])\n##then we write the actual transaction output data\n#we'll redeem everything from the original output minus TX_FEE\ntx_fields['value'] = tx_info['txOut'][OUTPUT_INDEX]['value']-(TX_FEE*COIN)\nsign_tx.write_int64(tx_fields['value'])\n##this is where our scriptPubKey goes (a script that pays out to an address)\n#we want the following script:\n#\"OP_DUP OP_HASH160  OP_EQUALVERIFY OP_CHECKSIG\"\naddress_hash = bc_address_to_hash_160(SEND_TO_ADDRESS)\n#chr(20) is the length of the address_hash (20 bytes or 160 bits)\nscriptPubKey = chr(opcodes.OP_DUP) + chr(opcodes.OP_HASH160) + \\\n   chr(20) + address_hash + chr(opcodes.OP_EQUALVERIFY) + chr(opcodes.OP_CHECKSIG)\n#first write the length of this lump of data\ntx_fields['scriptPubKey'] = scriptPubKey\nsign_tx.write_compact_size(len(tx_fields['scriptPubKey']))\n#then the data\nsign_tx.write(tx_fields['scriptPubKey'])\n\n#write locktime (0)\ntx_fields['locktime'] = 0\nsign_tx.write_uint32(tx_fields['locktime'])\n#and hash code type (1)\ntx_fields['hash_type'] = SIGHASH_ALL\nsign_tx.write_int32(tx_fields['hash_type'])\n\n#then we obtain the hash of the signature-less transaction (the hash that we sign using our private key)\nhash_scriptless = dsha256(sign_tx.input)\n\n##now we begin with the ECDSA stuff.\n## we create a private key from the provided private key data, and sign hash_scriptless with it\n## we also check that the private key's corresponding public key can actually redeem the specified output\n\nk = ecdsa_ssl.KEY()\nk.generate(('%064x' % PRIVATE_KEY).decode('hex'))\n\n#here we retrieve the public key data generated from the supplied private key\npubkey_data = k.get_pubkey()\n#then we create a signature over the hash of the signature-less transaction\nsig_data=k.sign(hash_scriptless)\n#a one byte \"hash type\" is appended to the end of the signature (https://en.bitcoin.it/wiki/OP_CHECKSIG)\nsig_data = sig_data + chr(SIGHASH_ALL)\n\n#let's check that the provided privat key can actually redeem the output in question\nif (bc_address_to_hash_160(public_key_to_bc_address(pubkey_data)) != tx_info['txOut'][OUTPUT_INDEX]['scriptPubKey'][3:-2]):\n   bytes = b58decode(SEND_TO_ADDRESS, 25)\n   raise RuntimeError, \"The supplied private key cannot be used to redeem output index %d\\nYou need to supply the private key for address %s\" % \\\n                           (OUTPUT_INDEX, hash_160_to_bc_address(tx_info['txOut'][OUTPUT_INDEX]['scriptPubKey'][3:-2], bytes[0]))\n\n##now we begin creating the final transaction. this is a duplicate of the signature-less transaction,\n## with the scriptSig filled out with a script that pushes the signature plus one-byte hash code type, and public key from above, to the stack\n\nfinal_tx = BCDataStream()\nfinal_tx.write_int32(tx_fields['version'])\nfinal_tx.write_compact_size(tx_fields['num_txin'])\nfinal_tx.write(tx_fields['prevout_hash'])\nfinal_tx.write_uint32(tx_fields['output_index'])\n\n##now we need to write the actual scriptSig.\n## this consists of the DER-encoded values r and s from the signature, a one-byte hash code type, and the public key in uncompressed format\n## we also need to prepend the length of these two data pieces (encoded as a single byte\n## containing the length), before each data piece. this length is a script opcode that tells the\n## Bitcoin script interpreter to push the x following bytes onto the stack\n\nscriptSig = chr(len(sig_data)) + sig_data + chr(len(pubkey_data)) + pubkey_data\n#first write the length of this data\nfinal_tx.write_compact_size(len(scriptSig))\n#then the data\nfinal_tx.write(scriptSig)\n\n##and then we simply write the same data after the scriptSig that is in the signature-less transaction,\n#  leaving out the four-byte hash code type (as this is encoded in the single byte following the signature data)\n\nfinal_tx.write_uint32(tx_fields['sequence'])\nfinal_tx.write_compact_size(tx_fields['num_txout'])\nfinal_tx.write_int64(tx_fields['value'])\nfinal_tx.write_compact_size(len(tx_fields['scriptPubKey']))\nfinal_tx.write(tx_fields['scriptPubKey'])\nfinal_tx.write_uint32(tx_fields['locktime'])\n\n#prints out the final transaction in hex format (can be used as an argument to bitcoind's sendrawtransaction)\nprint final_tx.input.encode('hex')\n\n", "protocol - How does Bitcoin decide which Alert messages to forward?": "\nAs described in the Alerts article on the Bitcoin wiki:\n\nOnly alerts that are signed by a specific ECDSA public key are\n  considered valid. A copy of the private key is held by at least\n  Satoshi, Gavin, and theymos.\n\nAll alerts that have not expired are relayed but the client displays only the highest priority alert that hasn't yet expired and wasn't cancelled, I believe.\n", "bitcoin core - What are the limitations of a Client connecting to the Network through TOR?": "\nThe Bitcoin client is designed as a peer-to-peer network. To join the network, you need to make a connection to a node that accepts incoming connections. To protect against certain types of Sybil attacks, a client tries to make 8 outbound connections to geographically diverse nodes.\nIf you connect to the network through tor, you cannot accept inbound connections. You will consume 8 inbound connection slots that were available on the network (with the outbound connections you make), but you will not add any yourself. This can cause the network to run out of inbound connection slots, reducing the reliability of the network. The Bitcoin network, in the past, has had problems with shortages of available inbound connection slots. It's not clear exactly why, but one possibility is intentional malicious consumption of those slots.\nThe reason you can't fully trust clients that connect inbound to you is that an attacker can trivially consume all your inbound connection slots and all those connections can be from conspiring nodes operated by the same user. However, you have complete control over who you make outbound connections to.\nIn general, so long as at least one of your connections goes to a well-connected node that is not conspiring with all the other nodes you are connected to, you should be safe.\n", "Multiparty transaction": "\nThere is something like this described on the wiki.\nUpdate: As Meni wrote in a comment below, this is more flexible than you require, since you already know who should pay, and how much.\nSo we can create a single transaction with 2 inputs, one from Alice and one from Bob, and a single output to the recipient of the payment.\nAlice and Bob need to both have an input in their wallet of the right size, so we don't worry about who gets the change.  Then Alice tells Bob what input she's going to use.  Bob makes a transaction including both Alice's and Bob's input, and signs his input with SIGHASH_ALL, meaning that his signature isn't valid unless Alice also signs her input.  He then sends the incomplete transaction to Alice for her to sign, she signs her input, and sends the result to the network.\n", "security - Can a mobile be protected against the \"Linode problem\"?": "\nIf your private key is compromised your coins are gone\nSo the short answer is that the \"Linode problem\" where your entire private key is at the mercy of a third-party capable of root access to your system is somewhat intractable. As others have stated you can limit your key's exposure, but malware is patient.\nOff topic, but possibly of interest, is a project by the MultiBit team to use a HP50G scientific calculator as an item of trusted hardware capable of signing transactions. Not much use out in the field like a mobile would be, but handy for a small business reconciling small volumes of transactions.\n", "security - How to secure one's Bitcoin Client from packet sniffing?": "\nA hacker that has physical access to your network and computers can always find a way to abuse that access but SSL is a very good deterrent and is supported by bitcoind.  Click here to see a guide on enabling SSL for bitcoind.\nFor securing the communication between nodes you might want to try tor.  It basically makes sure that all traffic on your network is encrypted but still allows you to connect to an encryption-less service.\n", "Why is bitcoin-qt not launching?  Using linuxmint-12-lisa": "\nThere is a bin folder that contains the binary. There are two folders in that folder, \"32\" and \"64\". You have to know what type of system your mint/computer is. It either a 32 bit system or 64 bit system. If you click on on a 32 bitcoin-qt on a 64 bit computer it will not start and vice versa.\n", "transactions - Does 'simplified payment verification' work?": "\nSimplified payment verification can't help much with 0-confirmation transactions. But once the payment has several confirmations, this fact alone (which the SPV client can verify) implies that the transaction is accepted by the network, so the payment is secure.\nSPV can also be used in conjunction with a server node that has the blockchain and can verify against double-spending. The client will still want the block headers and the Merkle branch of the transaction to keep the server node honest. Without this, the server can falsely report that the client received payment; with the simplified verification, the server would have to collude with the sender.\n", "How do I put bitcoins in my \"Wallet\"?": "\nWhen new Bitcoins are issued (7,200 per day, on average) they go to those who are mining for bitcoins.  At one point in time, mining to acquire bitcoins was something that was relatively easy to do.  That is no longer the case.  So now to acquire bitcoins one would normally buy bitcoins at an exchange.\nWhat options are available to you will differ based on where you are, what payment methods you have available, how quickly you need the bitcoins and how many you intend to buy.\nFor instance, in the U.S., the fastest method to buy bitcoins is to use the service BitInstant where you deposit cash at a bank and they send the funds to an exchange.   The cheapest method is to do a bank transfer using Dwolla as intermediary -- however that is not very fast.  Other methods are shown here:\n\nhttp://en.bitcoin.it/wiki/Buying_bitcoins\n\nThen once you have purchased the bitcoins at the exchange, you would simply withdraw them and send them to a bitcoin address from your own wallet.  Using the Bitcoin.org client you would click the Receive bitcoins button and generate a new address.  That is the address you would copy and then from the exchange paste that address when asked from their withdrawal page. \n", "ecommerce - Does an eBay listing that accepts Bitcoin violate their payments policy?": "\nUnder \"Payment methods not allowed on eBay\" we can see:\n\n\nSend cash or money orders through instant, point-to-point cash transfer services (that are not banks) such as Western Union or MoneyGram\n\nPay using online or other payment methods not specifically permitted in this policy\n\n\n\nSo we have two points against using Bitcoins, technically making it a violation of that policy. This question, however, would be better asked directly to eBay.\n", "Do any pools discriminate against some transactions?": "\nYes; many pools only include transactions based on fees and/or whether the transactions have standard forms. Most pool operators require that transactions have certain fees based on the size (in bytes, not BTC) of the transaction, and I believe that most require the transactions to be in a standard \"Pay to address(es)\" or \"Pay to IP(s)\" form. Eligius, for example, generally includes transactions if they have 40.96 \u00b5BTC of fees per 512 bytes of transaction, but it could be more or less if they think the transaction seems like \"spam\" or you make arrangements with the pool operator.\n", "How often does Bitcoin connect to the fallback nodes?": "\nBitcoin only connects to them specially when you don't have enough nodes, and then it will disconnect as soon as the seednodes give you a nodelist. Bitcoin might choose to connect to seednodes as regular peers as well, but they're not given any preference.\n", "bitcoin core - What is the exact formula for calculating transaction fees?": "\nSee GetMinFee() in main.h for the code which determines the minimum transaction fee.\nThe part you're describing is implemented as follows:\n// Raise the price as the block approaches full\nif (nBlockSize != 1 && nNewBlockSize >= MAX_BLOCK_SIZE_GEN/2)\n{\n    if (nNewBlockSize >= MAX_BLOCK_SIZE_GEN)\n        return MAX_MONEY;\n    nMinFee *= MAX_BLOCK_SIZE_GEN / (MAX_BLOCK_SIZE_GEN - nNewBlockSize);\n}\n\nwhere:\n\nnBlockSize depends on who we are:\n\nif we're a user making a new transaction, nBlockSize is 1\nif we're a node deciding whether to relay an incoming transaction, nBlockSize is 1000\nif we're a miner deciding which transactions to include in a new block, nBlockSize is the size of the block we're building before adding the new transaction\n\nnNewBlockSize is the size of the block including the new transaction\nMAX_BLOCK_SIZE_GEN is 500kB\nMAX_MONEY is 21 million BTC (all the money in the world)\n\nso it's saying:\n\nif we're either deciding whether to relay or mine the transaction, and adding the transaction would make the block over 50% full:\n\nnever allow a transaction that makes the block 100% full\notherwise scale the fee up by a factor of 500kB / (500kB - nNewBlockSize)\n\n\nNote: by rearranging the symbols, we get exactly what Meni wrote in his answer:\nFee = Normal fee / ((500kB - size) / 500kB)\n         = Normal fee / (1 - size / 500kB)\n", "confirmations - Why do some transactions take months to get into a block?": "\nFrom what I have read about Bitcoin transaction confirmation (aka mining), a transaction may not be included in a block for any reason, but the most common is that the fee is too low for the size of the transaction. A higher fee increases the chance that the transaction will be included in a block by a miner. A transaction with no fee may eventually be confirmed, but it could take a long time to do so.\nCertain transactions cannot be included in a block because they violate the Bitcoin protocol and will be discarded. Among others, these are transactions that attempt to spend more Bitcoin than is in an account and tranactions that try to double spend an accound balance. Transactions that depend on other transactions that have not been confirmed yet and are retained until either it is dropped because it would violate the Bitcoin protocol, or it is added to a confirmed transaction block.\n(source: https://www.rugatu.com/questions/42/why-do-some-transactions-take-months-to-get-into-a-block)\n", "bitcoin core - How popular are alternative clients?": "\nMultibit download stats\nMultiBit is a thin-client based on the BitCoinJ library. It is written in Java and comes with installer packages for Mac, Windows and Linux. It is intended to be used by the general public who don't have a great deal of knowledge about Bitcoin and just want to send and receive payments in the simplest manner possible. \n", "bitcoin core - How does the standard client prioritize transactions?": "\nThe priority of a transaction is (the sum of (coin age in blocks * coin value in satoshis) over all the inputs in the transaction) divided by the size of the transaction in bytes.\nHere's a random example transaction copied from http://bitcoincharts.com/bitcoin/txlist/:\n\nIt has 2 inputs (both of which have since been spent in other (confirmed) transactions rendering this transaction unconfirmable):\n\none for 0.1005 BTC from block 165774\none for 0.0995 BTC from block 165777\n\nIt is 439 bytes long, and has a priority of 432,232,688.\nThe most recent blocks in the blockchain is 175262 at the time of writing.\nI sum the (age * values) for each transaction and divide by size.  The + 1 is because transactions confirmed in the newest block are considered to have an age of 1, not 0:\n>>> current_block = 175262\n>>> ((current_block - 165774 + 1) * 0.1005e8 +\n     (current_block - 165777 + 1) * 0.0995e8) / 439\n432232687.92710704\n\nAs you can see, the priority of a transaction will go up as new blocks are found.\n", "bitcoin core - How would we know the real Satoshi?": "\nHe has a PGP public key which he can use to sign things.\n", "bitcoin core - What can a person do with special private keys?": "\nAs far as I know, the alert key is the only special one with a public key hardcoded in the client.\nTechnically, the public key of the genesis block's output is also hardcoded in the client, but it grants no special privileges. The genesis block cannot even be spent.\n", "development - How can I programmatically know when someone sends me Bitcoins?": "\nBlockChain.info provides a push notification API:\n - http://blockchain.info/api_websocket\n", "hash - How does the rate of getwork requests correlate with the hashrate of a miner?": "\nThe standard getwork protocol forces the miner to send a new request every second. This means that if a miner takes longer than 1 second to check all nonces in a given getwork (2^32), it will be making a new request before it checks all values in a given request, thus giving you 1 getwork request per second regardless of the hashrate.\nIf the miner can solve the getwork faster than that, it would be making requests more often. In theory, you could use this formula to calculate the hashrate:\nHashrate = noncemax/time\nWhere time is the interval between the getwork requests and noncemax is the size of nonce field (2^32). However, this assumes no time delay due to the network lag and so forth, so it's an ideal scenario. Moreover, some miners discard unfinished work after submitting a share, so it would appear they are doing more work in your configuration than they actually are.\nIf you intend on using getwork extensions, specifically noncerange and rollntime, you could calculate the hashrate more accurately. Noncerange would change your noncemax to whatever size you set, and rollntime would allow you to measure time intervals greater than one second. However, not all miners support the extensions.\n", "Sale and Purchase Transaction Limits": "\nThere is no technical limitation. However, to perform a $15,000 transaction, you need $15,000 worth of Bitcoins. There are times when it's hard to acquire that many Bitcoins without moving the market in unfavorable ways. It's worse if you need to cash out. However, if you're willing to buy and sell the Bitcoins slowly or under favorable market conditions, the transfers are not a problem.\n$15,000 is not a huge problem right now. $300,000 definitely is. Just remember, if you have to buy bitcoins with dollars and then the other party has to sell them for dollars (or another currency), you'll take a sextuple transfer hit. You'll pay two half-spreads plus two conversion fees. Then, as you buy, you'll move the market up. And as you sell, you'll move the market down. This is a huge issue with Bitcoin today. Just the spread and conversion fees add up to about a 2% loss, assuming prices don't change -- that still beats credit cards.\nBitcoin transaction fees for transferring Bitcoins are based on the size of a transaction in bytes, not the number of Bitcoins transferred. What makes a transaction \"expensive\" (though we're usually talking a few pennies if even that) is having to \"gather\" funds from a lot of sources or \"scatter\" funds out to a lot of different destinations. So your $15,000 transaction will likely cost less than a penny.\nSo in sum, moving the Bitcoins from one account to another will probably be less than a penny. But in most applications, you have to factor in the cost of buying Bitcoins on one end and selling them on the other.\nIn the most recently-mined block at the time I wrote this answer, there was a transfer for about $16,000 worth of Bitcoins. The transaction fee was about a quarter of a penny. And currently you can process transactions without paying any fee if you're willing to wait an extra 30 minutes or so. (Because many miners don't care about transactions fees and will include any valid transaction so any valid transaction will get into a block eventually.)\n", "hashpower - Miner speed conversion": "\nThe approximate ratio which is usually used in calculations is 2^32 hashes per share. If you want the exact ratio, it's 2^48/(2^16-1).\n", "blockchain - Has any illegal data been saved in the Block Chain?": "\nWhile working on my master thesis I used the AACS encryption key (09 F9 11 02 9D 74 E3 5B D8 41 56 C5 63 56 88 C0), considered an illegal number, as a basis for creating a fake Bitcoin address - 1ujTAfEQh2obwdt72GrmXonakx2RxvYpX. A 1 Satoshi transaction was sent to that address from address 17TQLZvXjKTrUyRnV9DuQs4RVDgNjUPeXQ. The transaction was encoded in block 177653.\n", "exchange rate - Is there a Bitcoin gadget for Windows 7?": "\nThis is the one I'm using: http://www.domchi.cc/mybitcoins/\n", "blockchain - Is there a way to change the wallet.dat location without changing the entire data directory?": "\nA symlink will do it on Linux.\nOn Windows there's a symbolic link method as well:\n\nhttp://en.wikipedia.org/wiki/Symbolic_link#Windows_7_.26_Vista_symbolic_link\n\nA -walletdir= feature has been requested before:\n\nhttp://bitcointalk.org/?topic=2730.0\nhttps://github.com/bitcoin/bitcoin/issues/68\n\n", "Does Bitcoin still use the IRC channel?": "\nThe IRC bootstrapping method is deprecated and default off since the 0.6 release. It's still implemented and can be enabled using the -irc command line option.\nThe function of the IRC bootstrapping system will get replaced by DNS seeding and peer exchange, however.\n", "I sent money to a bitcoin wallet from Blizzcoin and there's nothing there?": "\nAccording to blockchain.info the coins weren't sent yet.\nHere's a post from another blizzcoin customer saying that it took 2 days for his purchased coins to be sent:\n\napparently because I Manually transferred money to them instead of ordering through their web interface, it wasn't an instant transfer of bitcoins.\n\nCould that be your problem too?  How long has it been since you sent the money to them?\n", "development - Is there a reliable way to measure bitcoin wealth distribution?": "\nThe protocol gives no information about who controls an address. In an extreme case, every address could be controlled by just one person, or every address could have a unique owner. However, a degree of traffic analysis is possible, and if you have access to other data from outside the Bitcoin network, you could correlate transactions with these non-Bitcoin events and infer who the real-world owners of the addresses are.\nFor example, if you had access to ISP records of who uses an IP address that has just mined a block, you could start to build profiles of the owners of new coins.\nBut there are many barriers to achieving the total information awareness that you would need to build a comprehensive profile of all coin owners, so the short answer is no, there is no reliable way to measure Bitcoin wealth distribution.\n", "immature coins - Why do mining pools require 120 confirms for a solved block before payout?": "\nThere is a protocol rule which prohibits generated BTC from being spent until it has 100 confirmations. The Satoshi client has an additional safety margin: it won't let you spend generated BTC until it has 120 confirmations. The purpose of this rule is to prevent long chain splits from invalidating lots of transactions that spend newly-generated BTC. For example, this rule prevented non-coinbase transactions from being invalidated after the overflow incident invalidated 50+ blocks.\nSome pools (e.g. Eligius) pay people by putting the payments in generation transactions. The recipients still won't be able to spend this BTC for 100 blocks, but at least the payments will appear in their Bitcoin clients right away.\n", "asic - Is there time-to-failure data available for any of the BFL products?": "\nIt has now been confirmed by ngzhang that BFL is using Altera Stratix III EP3SL150 FPGAs in their singles. Since Altera has made product reliability data available, we now at least have the appropriate info available for the chips themselves.\nThe EP3SL150 testing gives it a FIT rating of 15.1 which corresponds to roughly one failure per 66,226,166 hours or ~7,555 years. I don't think we need to worry about the FPGA being the point of failure.\nThat said, we have precisely zero data about the other parts or failure rates thereof nor do we know how often BFL messes up on their soldering, power supplies or any of the other links in the chain that could contribute to the overall failure rate of the BFL single. I did, however, email BFL and recently received this email from Nasser G at BFL:\n\nDear David,\nNo Failure data is available. So far, none of our units have failed,\n  and all units go under strict quality control measures before they are\n  shipped. We've had like 4 or 5 PSU failures among all the units that\n  we've shipped.\n\nOf course this is from BFL's mouth so whether it's entirely true or just marketing I can't say with certainty. Lacking data on the overall number of units sold or how long those units have been running (though we could estimate that as 24/7 since they've arrived if we had the other data) it's very difficult to estimate failure data based on BFL's comments, even if we assume them to be completely accurate.\n", "trading - Historical transaction/trade ratio. Available? Useful?": "\nYou can access the data for each currency on each exchange with the Markets API from BitcoinCharts:\nFor example, for USD:\n\nhttp://bitcoincharts.com/charts/chart.json?m=thUSD\nhttp://bitcoincharts.com/charts/chart.json?m=mtgoxUSD\n\n", "terminology - What does PPS mean/stand for?": "\nWhere I've seen it, it refers to the mining payment method \"Pay per share\". \nThis question has an answer that describes what a \"share\" is.\nOn some mining sites that have existed, the earnings for a share have been essentially paid immediately. However, this method exposes the pool operator to a possibility of loss in the case that, on average, they find less that the expected number of blocks. This can be made much worse by a large miner participating in the pool and performing a block-withholding-attack. To prevent these problems, most pool operators prefer slightly modified pay-per-share methods of payment, such as SMPPS (Shared Maximum Pay Per Share).\nA payment method is not strictly Pay Per Share if the earnings aren't available for payout immediately, or if risk is passed on to the miner. Note also that it may not always be clear how much of a fee is being charged by a pool operator; it can be as low as 0% or as high as 7% (but if they tell you the payment per share, you should be able to work it out by dividing the block reward of 50BTC by the current difficulty and comparing it with what the pool pays).\nA pool would not payout 105% or 110% except perhaps as a promotion when it is trying to increase its number of participants and offers an increased reward such as 55BTC per block (ie 110% of what is earned) at its own cost.\nUpdate: The discussion you linked to in your comment is regarding the issue of mining \"bonds\" where the issuer promises to pay 110% of the shares mined. Each bond appears to be selling for around 0.6BTC, and represents 2Mh/s of mining speed. Given that the bonds are \"perpetual\", presumably the issuer has allowed for equipment replacement and maintenance costs, and power etc. Payouts are advertised as \"currently 110% of PPS\", so it is presumably a promotional offer. The issuer must be earning a margin somewhere along the way to cover the cost.\n", "security - Is an attack on a local bitcoind via an img or embedded flash viable?": "\nThis page says that a Flash applet can only access the port and hostname of the URL from which it was downloaded:\n\nAdobe Flash, a plugin believed to be installed on about 99% of all\n  desktops, incorporates a security model generally inspired by browser\n  same-origin checks. Flash applets have their security context derived\n  from the URL they are loaded from (as opposed to the site that embeds\n  them with  or  tags), and within this realm, permission\n  control follows the same basic principle as applied by browsers to DOM\n  access: protocol, host name, and port of the requested resource is\n  compared with that of the requestor, with universal access privileges\n  granted to content stored on local disk. That said, there are\n  important differences - and some interesting extensions - that make\n  Flash capable of initiating cross-domain interactions to a degree\n  greater than typically permitted for native browser content.\n\nBut apparently that applies to the result of a request not the request itself, so it's possible a Flash applet could send a request to your bitcoind to transfer coins, but not check to see whether it worked or not.  Using wallet encryption would help mitigate this.\nI've been able to find balances using simple HTTP 'POST' requests:\n$ echo '{\"method\":\"getbalance\",\"params\":[\"\"]}' | POST http://$user:$pass@localhost:8332/\n{\"result\":-6203.99412537,\"error\":null,\"id\":null}\n\nI don't know if it's possible using just a regular 'GET' request.\nEdit: I just tried 'guessing' the wrong password 100 times in a row, and then getting it right.  bitcoind didn't stop accepting guesses or slow down at all, and accepted the final correct guess:\n$ i=100; while ((i>0)); do ((i--)); echo $(echo $i; date;\n  echo '{\"method\":\"getbalance\",\"params\":[\"\"]}' |\n  POST http://$user:guess$i@localhost:8332/ 2>&1 | grep -i body);\n  done; echo '{\"method\":\"getbalance\",\"params\":[\"\"]}' |\n  POST http://$user:$pass@localhost:8332/\n99 Tue Apr 24 09:10:10 PDT 2012 <BODY><H1>401 Unauthorized.</H1></BODY>\n98 Tue Apr 24 09:10:10 PDT 2012 <BODY><H1>401 Unauthorized.</H1></BODY>\n[...]\n1 Tue Apr 24 09:10:53 PDT 2012 <BODY><H1>401 Unauthorized.</H1></BODY>\n0 Tue Apr 24 09:10:53 PDT 2012 <BODY><H1>401 Unauthorized.</H1></BODY>\n{\"result\":-6203.99412537,\"error\":null,\"id\":null}\n\n", "blockchain - Bitcoin client 0.4.1.1 stuck at block 176947": "\nI just downloaded version 4.4.1.1 to try to reproduce your problem, but couldn't.  Here's the beginning, and relevant mid-section of the debug.log file when I ran it on a machine which I hadn't used for a month or so:\nBitcoin version 0.4.1.1-beta\nDefault data directory /home/user/.bitcoin\nBound to port 8333\nLoading addresses...\ndbenv.open strLogDir=/home/user/.bitcoin/database strErrorFile=/home/user/.bitcoin/db.log\nLoaded 19026 addresses\n addresses              1337ms\nLoading block index...\nLoadBlockIndex(): hashBestChain=000000000000052e27b6  height=173760\n block index           13603ms\nLoading wallet...\n[...]\nSetBestChain: new best=0000000000000959beb5  height=176945  work=302325188992488282894\nSetBestChain: new best=000000000000011c616f  height=176946  work=302331966182716897933\nSetBestChain: new best=000000000000052c233f  height=176947  work=302338743372945512972\nSetBestChain: new best=00000000000002c5eaa8  height=176948  work=302345520563174128011\nSetBestChain: new best=000000000000089bf6dd  height=176949  work=302352297753402743050\n\nMaybe you could show us yours?  I tend to agree with Stephen that it's likely a disk space problem.\n", "client - GUIMiner stuck at 99% Done for over 1 hour": "\nNetwork issues were preventing this from completing. \n", "security - What can a pool operator do with their miners' hashpower?": "\n\nCommit double-spends, either themselves or for hire. If the transactions reversed are accepted with 0 confirmations, they don't need a very high hashrate to do this with some effectiveness.\nDoS attack on Bitcoin, by including no transactions in blocks and rejecting all other blocks. This requires ~50% to be done effectively.\nSimilar attacks on alternative blockchain-based currencies, which is easier since they are usually smaller.\nMerged mining - not nefarious in itself, but should be done only at the agreement of miners.\nCoin mixing - paying generated coins to people in need of fresh coins, receiving from them independent funds to be paid to miners. (Illegal if done for the purpose of money laundering)\nInclude too few transactions, making it harder for people to have their transaction accepted.\nInclude too many transactions in a possible future scenario where a transaction fee equilibrium is obtained by a gentleman's agreement not to include transactions too cheaply.\nThings unrelated to Bitcoin, such as password cracking (generally possible only with custom mining software).\n\n", "speculation - What type of hedging might CoinLab be employing?": "\nBitcoins are easy to hedge against delivery by pre-selling, provided your working capital calculations are properly sorted, and you understand timing constraints throughout the systems you're dealing with.\nWe will sometimes be delivering digital goods through an intermediate currency as well, and we will use existing financial markets to sort/hedge that leg.\nShorting on Bitcoinica is another possibility, although it doesn't remove the need to manage your working capital (or credit lines)\n", "marketplace - Is there any Bitcoin Exchange that doesn't have fees for euro SEPA deposits/withdrawals?": "\nWould a non-bank transfer work?  How about getting a realoadable prepaid debit card and using that for spending / ATM use?\n", "backup - What happens when the same wallet (private key) is used on several machines?": "\nA wallet is a combination of private keys, and transactions that spend from/to it.\nSince somewhere in the 0.3 series, bitcoin will detect transactions from a key of yours that you did not create yourself, and count them as spends.\nThis means that if you duplicate your wallet on several machines, they will all be able to do spends, and observe spends by others. Probably as much as you would hope for, but there are a few caveats:\n\nThe wallet contains 100 pre-generated keys to simplify backups, so the first 100 new keys used by both clients will remain the same, but afterwards they will diverge, i.e. start using different keys. You do not want this to happen, which means you will need to synchronize the wallet files at least once every 100 transactions (i.e., copy from one place to the other).\nIf one of the clients is not yet aware about a spend done by the other (for example, it was offline at the time of the transaction submit, and hasn't caught up with the block chain yet), it may produce a transaction that uses the same input, in other words: a double spend. The software is not able to deal with this, as it will consider its own transactions unquestionably valid. This will probably result in an unusable wallet.\n\nIn short: there are some provisions for detecting spends by copy of a wallet, but it's certainly not an encouraged or supported use case.\n", "bitcoin core - What client to use for an alternative special purpose blockchain?": "\nThis answer presumes that you need to retain the resilience of a P2P network where there is not a single point of failure.  It also presumes that you need an authoritative source that has the ability to maintain control so that the network is not vulnerable to a 51% attack. \nI suppose you could fork the stock bitcoin client without too much effort to create an alt-chain that accomplishes this.\nOn the fork, add to the block verification a step to also check that each mined block includes a transaction from one of the authorized miners.  The way to tell if the block came from an authorized miner is to have the miner include a spend transaction that comes from a private key assigned to that miner.  (Miners would never broadcast these transactions, so if the transaction appears in a block it would mean only an authorized miner solved that block.)\nThere are a number of ways the client could learn the list of public addresses for the \"authorized miners\" list.  This list could be hard-coded into the client even, initially, if needed.\nThere's the risk of how to handle the situation where an authorized miner ends up compromised or otherwise needs to be removed from the list.\nMaybe there's an approach here that kills two birds with one stone.  \nHave the master node broadcast a heartbeat transaction periodically.  This could be done by having the master mine a block that inserts a chunk of data, similar to how an altcoin that does merged mining works -- it has an exception as to what it considers as a valid proof of work.  In this case, any block that is from the master node is considered as a valid proof of work.  The method to use as proof that the block truly is from the master node is for the block to include a spend transaction from the public address owned by the master node. \nThat heartbeat from the master could also include a checkpoint hash (e.g., \"confirmed by the master authority\") -- to limit the damage a compromised miner could do.\nThus the end result is:\n\nNormal nodes cannot mine but will exist as P2P nodes that store blocks and relay transactions.\nMiners that are authorized do compete, on a proof-of-work basis.\nA master node has power of authority and can intervene (i.e, always has 50%+1 majority) if needed.\nFrequent checkpoints from the master can limit the risk from compromized miner nodes.\n\nOnly miners who are trusted would mine but even if one of them goes bad, the master can clean up by rewriting all the way back to the last checkpoint.\nSo it doesn't seem to be too much effort to fork the bitcoin trunk to work in this manner.  Centralized systems are always much easier than decentralized.\n", "Does it take longer to generate an address when I stop and restart vanitygen?": "\ntl;dr If you stop vanitygen for 5 minutes, on average you've added 5 minutes to the time it will take to complete.\nWhile it is running, vanitygen tells you how much longer it will take until you have a 50% chance of finding a suitable address.  About half the time, that countdown will reach zero, and then the countdown starts again, but this time showing the time until you have a 75% chance.  And so on.\nThis gives the impression that it is making \"progress\" towards finding a suitable address, but that is misleading.  Every second that vanitygen is running is has a certain chance of finding an address.  There's no progress being made, in the same way that you don't \"make progress\" towards winning the lottery if you play it every week.  Just eventually if you play enough times, you win.\nSo if you stop the program running and start it again, you've lost nothing other than that you've wasted the time between stopping and restarting when it could have found a solution.\n", "mtgox - Which exchanges are Tor-friendly?": "\nBitInstant seems like a nice Tor-friendly option (they even accept deposits in cash): https://www.bitinstant.com/\n", "websites - Which notable Bitcoin-related sites offer referral rewards?": "\nBetween TradeHill, Bitcoin7 and a couple others the offering of affiliate rewards ended up spawning a spamfest.  Fortunately, TradeHill added terms and conditions that included no spamming and withheld commissions to spammers and the problem mostly went away.\nCamp BX apparently is one that offers a referral.  10% discount on trading fees for them and 10% commission for you.\nAfter login, click on \"My Profile\" (or https://campbx.com/in/userinfo.php )\nthen scroll down to Affiliate Program Link.\nOthers:\n\nhttp://clients.microtronix-tech.com/aff.php\n\n", "websites - What is the state of Witcoin?": "\nWitcoin was written and run by mizerydearia. At some point he became unable to run the site, but he was/is unwilling to give the witcoin database or wallet to anyone else. (Someone else owns the domain name.) Mizerydearia was very intelligent, honest, and active, but it seems likely that he's developed some sort of mental illness (as you'll see if you read his forum posts). It's very sad. Hopefully he'll someday recover enough to run witcoin again or at least refund the BTC.\n", "When I have a problem running the bitcoin client, where can I go to get help?": "\nI think you have mentioned them all:\nbitcointalk, \nbitcoin.stackexchange, \ngithub issues page, \nbitcoin-dev.\nFor commercial companies offering bitcoin client support see Stephen Gornick's answer. \n", "security - Was a timejacking attack ever performed?": "\nFor those of you who are wondering what TimeJacking is, please consider the following:\nIn order for computers and machines, separated by vast distances, to work in tandem, they usually have to be synchronized. If the time and date aren't isn't synchronized, this can lead to issues relating to security, usability, and overall response time. According to NTP.org:\nhttp://www.ntp.org/ntpfaq/NTP-s-def.htm\n\"If you have communicating programs running on different computers, time still should even advance if you switch from one computer to another. Obviously if one system is ahead of the others, the others are behind that particular one. From the perspective of an external observer, switching between these systems would cause time to jump forward and back, a non-desirable effect. As a consequence, isolated networks may run their own wrong time, but as soon as you connect to the Internet, effects will be visible .... Even on a single computer some applications have trouble when the time jumps backwards. For example, database systems using transactions and crash recovery like to know the time of the last good state.\"\nThis also applies to online security certificates (in browser). If the time and date is wrong, strange things may happen (invalid certificate error).\nWhile this appears to apply only to the Network Time Protocol, I assure you otherwise - networked systems need to stay synced in order to function. BlockChain and other cryptocurrency handlers have this exact issue because they are handling electronic transactions over vast distances, across time-zones.\nOh wait - in case you don't know what a bitcoin node is:\nhttp://www.coindesk.com/bitcoin-nodes-need/\nNow that we know how the system crack can occur, let's delve into the process (good source, BTW - ThePiachu):\n(Presented by culubas: Timejacking and BitCoin - Blogspot)\n\"Each node internally maintains a counter that represents the network time. This is based on the median time of a node's peers which is sent in the version message when peers connect. The network time counter reverts to the system time however if the median time differs by more than 70 minutes from the system time. A very reasonable way to estimate the median network time.\nAn attacker could potentially slow down or speed up a node's network time counter by connecting as multiple peers and reporting inaccurate time-stamps. (A relatively small number of Tor clients could send enough messages to take over the node's median time.)\"\nAs usual, time is used for security and validation on these monetary hardware servers and nodes. If the time is off, bad things can happen. For more info on how an actual cracking attempt could occur, read the section labeled \"Creating a 'Poison Pill' Block\" of culubas blogpost cited above.\nIn short, an attempted hack would create a perceived time gap between the mining machines and node targeted, by lagging part of the system until one of three things occur: either an unaffected node or the target itself creates a block, clocks are reset, or operators intervene. As such, valid blocks could be dropped, and money could be lost or stolen. Please read the original article for more info.\nNow, as for the question at hand, I wasn't able to find any confirmed instances of TimeJacking so far. That could be due to a variety of reasons, but I personally think that no one has chosen to target the cryptocurrency yet. In that case, I can't wait to see what a new API update would look like - especially with some new security patches for P2p time-keeping and network certificates. Sadly, it could be just a matter of time.\n", "attack - What is the story behind MyBitcoin?": "\nThey had a minimal confirmation count of a single block. This meant that someone could create a bad transaction and confirm it him/herself, that would trick the MyBitcoin software into thinking the transaction was certain (as it has a confirmation). The attacker then transacted Bitcoins away from the MyBitcoin service. When one or two[1] truly legitimate blocks had been created truth would catch the lie, but the Bitcoins were already out of MyBitcoin's reach.\n[1] the longest blockchain is considered the valid one. As long as most generation happens on a legitimate chain that chain will become the longest without fail. That means that someone can fake a single block when he's lucky, but a second block building upon that block would be significantly more difficult, as he's now racing with the legitimate blockchain. Assuming the attacker doesn't manage to outrace the legitimate chain his chain will still be one of the longest if the legitimate chain has only a single extra block.\nThe minimal confirmations used in bitvau.lt is 3. Some services are using even more. It is effectively a security vs. usability tradeoff. The difference in computing power required for generating 3 blocks in a burst is quite significant and would most likely be noticed. If it is not burst-computed it could be would be quite expensive.\nTheir stoy? They had this error, it got exploited and they decided to give those that claimed it their coins back. In the end a lot of coins were stolen.\n", "utxo set - How many unspent transaction outputs are there?": "\nAs of block 177778 (Apr 29, 2012 6:17:33 PM):\n\n2944702 transactions\n6904591 transaction outputs\n5376092 transaction inputs\n1528499 unredeemed outputs left\n642432 addresses with non-zero balance\n\n", "Is support@pi.uk.com the real blockchain.info's support address?": "\nThat's the address I used to contact Ben Reeves (blockchain.info's author) a few months ago, so it should be correct. Whether it is still in his control is a different question. He is also known as piuk in the bitcointalk forums.\n", "backup - How to import a private key to an encrypted wallet (on standard client)": "\nSince 0.6.0, key import/export are available in the client itself, though only through RPC. The commands are called dumpprivkey and importprivkey. For example (on testnet):\n\n$ ./bitcoind getnewaddress\nn2JjZgLeCUgfubswxDm9zAaBGSLLHSLdNv\n$ ./bitcoind dumpprivkey n2JjZgLeCUgfubswxDm9zAaBGSLLHSLdNv\ncR4RtpaeAZY8MwrNvTQGX9PZ9pdCgFoLxuo4Pkwqx61broC4Gb4y\n\nAnd on another wallet:\n\n$ ./bitcoind importprivkey R4RtpaeAZY8MwrNvTQGX9PZ9pdCgFoLxuo4Pkwqx61broC4Gb4y\n$ ./bitcoind validateaddress n2JjZgLeCUgfubswxDm9zAaBGSLLHSLdNv\n{\n      \"isvalid\" : true,\n      \"address\" : \"n2JjZgLeCUgfubswxDm9zAaBGSLLHSLdNv\",\n      \"ismine\" : true,\n      \"pubkey\" : \"029e3a934cfc9f89d7a1c15f99b98479cabc81964f4972e7b8fa3989a788261695\",\n      \"iscompressed\" : true,\n      \"account\" : \"\"\n  }\n\n", "ubuntu - Error loading wallet.dat: Wallet corrupted": "\nVersion 0.6.0 introduced more strict validity checks on the keys when loading a wallet, to prevent silent further corruption. It seems like you have a wallet where one or more keys are corrupted (the private and public one don't match, for example). You can try moving the funds away using an older version, but there is a chance that will fail.\nI intend to add a sort of \"recovery mode\" in 0.7.0 for situations like this.\n", "peer discovery - How do Bitcoin clients find each other?": "\nBitcoin clients use several methods to locate other clients. The primary method is a list of nodes from a previous connection to the network. The works very well for everything but your first connection or a connection after a very long period of disconnection.\nFor the case where you have no previous known IPs or they aren't usable, the primary fallback method is by DNS seeds. Several host names (such as dnsseed.bluematt.me) are maintained that resolve to a list of IP addresses known to be running nodes. Should that fail, the client has a list of IP addresses believed to point to stable nodes hard-coded into it.\nOne method that used to be used, but that has since been abandoned, was having the clients locate each other using an IRC server. That worked similar to a BitTorrent tracker.\nOnce you are connected to the network, you will begin to receive lists of IP addresses and ports of known clients.\n", "mining hardware - How do I mine with FPGAs?": "\nThe very basic idea of an FPGA is that it can be loaded with a specific firmware (a layout of logical gates, in essence). That page contains the firmware you'd need to load onto a Xilinx FPGA (A Spartan 6) in order to use it as a mining device. ZTEX refers to a suite of the FPGA, and various IO controllers (USB, etc.).\nRoughly speaking, the steps you'd need to follow would be:\n\nBuy device\nPlug in device to your computer\nLoad firmware onto device from your computer\nRun a piece of software on your computer that interfaces with the firmware now loaded on the FPGA\nProfit (in a couple years)\n\nTo answer your questions: yes, the device would need to be plugged in to a computer using the method in your link, and yes, you can \"chain\" them - i.e. have more than one plugged in. I've greatly oversimplified steps 3 & 4, by the way.\n", "security - How secure are the DNS servers for Bitcoin?": "\nThere are some differences between DNS seeding and the IRC method. IRC used to function as a meeting point; essentially a centralized broadcast system to let (all) other nodes know about your existance, but it failed to answer the query \"who is online now?\". This means that when using IRC as a publically reachable node, you would often see a peak of incoming connections quickly, but little activity afterwards. Obviously, it was also vulnerable to DOS attacks as a centralized point of failure.\nDNS seeds are much more intended to work as seeds: they provide nodes with a few reliable entry points into the network, but let the actual discovery of new nodes be done by the network itself (peers exchange other peer's IP addresses). Futhermore, the DNS system is capable of server much larger numbers of nodes. \nTo answer your actual question: the DNS servers themselves may be be vulnerable to attacks, but it is important to realize that they are far less essential to the network than IRC was. Also, the 4 active DNS seeds are operated by different people, and managed quite differently:\n\nJeff's node (bitseed.xf2.org), is currently a static list, updated mostly manually and infrequently, but hosted very reliably.\nMatt's node (dnsseed.bluematt.me), is served by a BIND server (typical DNS server software), which is fed a fresh list of reliable nodes by a crawler every few minutes or seconds.\nLuke's (dnsseed.bitcoin.dashjr.org) and my node (seed.bitcoin.sipa.be) run a custom DNS server+crawler system, which reports a random set of reliable nodes for each query.\n\nOne further remark on your question: the DNS seeding system was introduced in v0.3.21 (april 2011), and turned on by default in v0.3.24 (juli 2011). Since 0.6.0 (march 2012), IRC seeding is off by default. As of 0.8.2 (not yet released), IRC support will be removed entirely.\n", "security - Do the DNS servers make Bitcoin more secure than the IRC channel?": "\nThe DNS system is vastly more scalable than an IRC channel. It has its downsides, in particular it is only unidirectional. However, given enough seeds it is much harder to knock out than a centralized IRC server.\n", "address - Linking a transaction to a Bitcoin user": "\nThis article was written regarding the alleged theft of 25,000 BTC in July 2011. A similar analysis could be done using known addresses and identities, I would imagine.\n", "bitcoin core - Who made Gavin project leader?": "\nSatoshi essentially named Gavin project lead by putting his contact info on bitcoin.org, giving him a copy of the alert key, giving him control of the SourceForge project, etc. Not many people have a problem with this, since Gavin has done a great job. I don't think anyone else in the Bitcoin community could have done better. \nGavin doesn't have exclusive control over many assets, so development can continue without too much trouble if he disappears without \"naming a successor\". Releases can even now be created and published on bitcoin.org without Gavin. bitcoin.org and the Bitcoin Forum are owned by Sirius, not Gavin. I have a copy of the alert key.\nIf Gavin disappears, I'd expect the project to continue reasonably well without a clear leader for a while before someone steps up to Gavin's responsibilities and is recognized by the community.\n", "history - What are the most notable attacks on pools?": "\nExploits / Hacks resulting in BTC theft:\n\nThe Linode Incident - 46,000 BTC were stolen due to the compromise of a single employee workstation.\nSlush's Backup Hacked - 3094 BTC stolen after a backup of Slush's pool was compromised.\nMt.Gox Database Theft - a reported 100,000 BTC were stolen, and another 400,000 BTC reported 'missing'. Mt.Gox shuts down and stops honoring trades of compromised coins.\n\n[D]DoS Attacks ([Distributed] Denial of Service):\n\nSlush's Mining Pool DDoS - A DDoS attack which lasted nearly 2 days before being recovered from.\n\nThis is a CW entry in the hopes of creating a clean index of info about all known (and notable) attacks against mining pools. Please maintain it as new information becomes available.\n", "security - How can one download the initial Blockchain data files securely?": "\nSo far as I know, there's no conceivable attack model if you're going to use the block chain to seed the regular Bitcoin client. It won't accept an invalid block. And it understands that the \"longest\" block chain wins. So a compromised file that was longer than the official block chain cannot exist, and a compromised file that was shorter would just be rejected as soon as the client connected to the network.\nOn startup, the client checks to make sure the chain is basically valid and contains the most recent checkpoint.\nIf there is any attack that works in this way, it's a defect in the client. Because someone could send you the same \"broken\" blockchain over the network too.\n", "What is the most cost effective GPU mining rig?": "\nHere are some guidelines to choosing hardware for an effective GPU rig.\nCPU: The cheapest you can find. Low-end AMD CPUs are good for this.\nRAM: The cheapest you can find.\nODD: Unnecessary, install the OS from a USB flash drive.\nHDD: Unnecessary, use a USB flash drive, the cheapest you can find which can hold the OS.\nGPU: Basically any ATI series 5XXX+ is suitable. https://en.bitcoin.it/wiki/Mining_hardware_comparison has a list of the hashrate to expect from each. You need to choose one based on the price in which you can get it, the hashrate, and the power (which has implications for electricity costs, and the need for proper PSU and cooling). You need to consider the whole system - using multiple cheap cards can increase the cost of the peripherals.\nPSU: Needs to be a good brand and have sufficient power for all the hardware, with some to spare. A 80+ gold PSU is more expensive but could be a good idea, especially if you pay for power. If you're using many graphics cards you can even use multiple PSUs.\nCase: If you're using a standard case, it can be cheap but it should have sufficient room and cooling for the cards. Bottom and side fans can help. But the most effective is to use a custom case or no case at all and just custom mounting for the cards.\nMotherboard: Needs to be compatible with the CPU and RAM, and depends on the number of cards and the case. If you use a standard case you need PCIe x16 slots with enough spacing between them, and a motherboard with more than 2 suitable slots can be expensive. With a custom case you can use every PCIe slot, including x1, with extender cables - even cheap motherboards have about 5. The available bandwidth for the slots doesn't matter. Other than that there are no special requirements.\n", "Where can I find a graph of average transactions per block over time?": "\nFor a chart of the average number of transactions per block per day:\n\nhttp://blockchain.info/charts/n-transactions-per-block\n\n", "How does one make multisignature transactions with the bitcoin client?": "\nBitcoin version 0.6.1 doesn't have useful multisignature support yet, either in the GUI or via the RPC interface, because there is no support for partially signing a multisignature transaction.\nWhat is supported:  creating a multisignature transaction (using addmultisigaddress), and sending to a multisignature address (either your own or somebody else's).\nTesting spending of multisignature transactions-- if all of the private keys required to spend a multisignature transaction are in the wallet, then those coins are added to the wallet's total bitcoin balance and that transaction will be spent if the normal coin-selection code decides to use them for a spending transaction.\nPull request 1456 adds low-level support in the RPC interface for multi-device/multi-person multisignature transactions.\n", "network - Looking for a better way of listing all my peers": "\nUse the getpeerinfo RPC command (available since v0.7.0).\n", "Will transaction confirmation time be reduced as the network size increases?": "\nNo. The average time per confirmation will always be about 10 minutes (but it's possible that the variance will be lower in the future). And the number of confirmations required to prevent double-spending by an agent with a given hashrate will also not change (6 is an arbitrary number reflecting a \"low enough\" probability for someone with a \"high enough\" hashrate).\nWhat will change is services to bridge the gap. There will be split-key eWallets which cannot steal your money on one hand, and can have trusted green addresses on the other; and there will be insurance agents such as https://zipconf.com/ that absorb confirmation risk based on their model of the probabilities of double-spending.\n", "algorithms - Is there a guaranteed hash for every block?": "\nThere's no guarantee that you can solve a block just by adjusting the nonce.  But there are other things you can change in a block that also change the hash.\nThis question is pretty much an exact duplicate of your question.\n", "Can I invest in GLBSE on GLBSE?": "\nGLBSE (or BitcoinGlobal, to be exact) has shares, but the shares aren't managed on GLBSE yet and the current bylaws prevent the shareholders from selling shares to non-shareholders without a majority vote. Moving the shares to GLBSE is planned, and I expect public trading to be allowed eventually.\n(I'm treasurer of BitcoinGlobal and a shareholder.)\n", "security - Which Bitcoin-related services are certified secure by external parties?": "\nI've asked my mom (whom I know to be reliable) and she agreed that my service, bitvau.lt, was indeed entirely secure and functional. She also said she was proud of me and that she didn't think I'd ever earn anything with it.\n", "gpu mining - When was the first GPU miner made available publicly?": "\nThis post from SmokesTooMuch seems to be the first time GPU mining was suggested:\n\nSuggestion :\nSince the coins are generated faster on fast machines, many people will want to use their GPU power to do this, too.\nSo, my suggestion is to implement a GPU-computing support using ATI Stream and Nvidia CUDA.\n\nHere's satoshi in December 2009 asking for people not to use GPUs to mine:\n\nWe should have a gentleman's agreement to postpone the GPU arms race as long as we can for the good of the network.  It's much easer to get new users up to speed if they don't have to worry about GPU drivers and compatibility.  It's nice how anyone with just a CPU can compete fairly equally right now.\n\nSo it seems the idea was around for a long time before the savages broke the gentleman's agreement.  :)\n", "history - What article started the Bitcoin bubble?": "\nPress inquiries to me really picked up after the Forbes article came out in the print edition of that magazine. I think that \"mainstream press\" mention started the publicity avalanche that fueled the bubble, although I'm a pattern-matching monkey like everybody else so take my opinion with a big grain of salt.\n", "blockchain - What is the highest recorded difficulty in the main net?": "\nAs at 9th May 2012, the highest recorded difficult has been:\n1,888,786.705353 first reached August 01, 2011.\nBlocks 139,104 through 141,119:\n\nhttp://blockexplorer.com/b/139104\nBitcoin Difficulty History\n\n", "transactions - create a node, issue new money": "\nNot really. If you want to establish a fixed exchange of Bitcoin, it would be pretty hard. You could set the minimum, but the maximum would be up to the sellers. Similarly if you'd want to establish a fixed rate for gold.\nYou could create an alternative cryptocurrency owned only by yourself, but it would be way too much hassle for what you need.\nIf you want to use Bitcoin for tracking transactions, it can also be a bit problematic. It all depends on what do you want to do exactly. Bitcoin will definitely be a way to cut costs of international transactions and allow transparent tracking.\nAll in all, issuing your own money with Bitcoin is very hard, using Bitcoin as a means of exchanging money is very useful. If you want some more specific help, please describe your problem or current use in more detail.\n", "Can I remove the passphrase from my Bitcoin Wallet?": "\nThe Bitcoin.org client does not yet have the feature to remove encryption from a wallet.  You can use a single space as the encryption key but there no way to get it to no longer use encryption.\nThat is expected to be implemented in a future release.\nIn the meantime, those that want this will create a new wallet and leave it unencrypted, and send their coins from the encrypted wallet to it.\n", "architecture - Formal security analysis of Bitcoin": "\nCurrently I'm in the process of finishing my master thesis on the topic of Bitcoin security, and I know there is one more person making a similar master thesis. While it might not be as in-depth of an analysis as a professional cryptography expert might perform, it should be fairly extensive.\nOver the course of working on the subject I haven't found any article more comprehensive than the Bitcoin wiki page on Weaknesses of Bitcoin. A lot of problems have been covered in depth on this Stackexchange, as well as some topics on the Bitcoin forum.\nEDIT:\nMy master thesis is available to read in this thread on the Bitcoin forum. It covers a wide analysis of many aspects of Bitcoin, from its cryptography algorithms, through the protocol, the standard client, Bitcoin-related applications, and even users' behaviours. I hope that answers your question better.\n", "miner configuration - Is there a way to set the aggression for the OS X Diablo Minor?": "\nThere's really no point in mining on a MacBook. It'll get super hot and the GPU will be totally bogged down. If you reduce the aggression, then you kill the point of mining altogether on your machine.\n", "address - Why are Bitcoin addresses hashes of public keys?": "\nIt's just to get shorter addresses. Regular public keys are 65 bytes long, which is much too long to be convenient. Compressed public keys are 33 bytes and could potentially be used instead of hashes, though these are a little longer than 20-byte hashes. It also seems likely that Satoshi didn't know about compressed public keys or wasn't comfortable with using them when he designed Bitcoin.\nHashes seem to help against certain attacks (some attacks against ECDSA, for example), though they also open up the possibility of other attacks (such as attacks against RIPEMD-160). It's not clear to me that they do improve security overall.\n", "client - turn OFF coin generation": "\nAs far as I know the option is off by default in the new versions. To make sure you can add a line\ngen=0\n\nto your bitcoin.conf file.\n", "transactions - How to do precise accounting with bitcoind?": "\nThat feature has been requested but is not implemented in the Bitcoin.org client:\n\nhttps://github.com/bitcoin/bitcoin/pull/283\n\nArmory may be getting this feature.  See discussion in the README:\n\nhttps://github.com/etotheipi/BitcoinArmory#readme \n\n", "Pool mining through the TOR network?": "\nYou could mine over TOR, but I would expect you would get much higher stales & downtime due to the high latencies of the TOR network.\nYou can use the application ProxyChains to force any application on your computer to use a proxy (or a combination of proxies), simply add a new proxy to ProxyChains, 127.0.0.1 as IP and your TOR software's port as port, and then setup Proxychains to force your mining application to use that proxy.\nhttp://proxychains.sourceforge.net/\n", "Can an SHA256 hash be used as an ECDSA private key?": "\nWhile the question isn't an exact duplicate, the answer essentially is, so I'm going to quote this answer by Pieter Wuille:\n\nAs is normal when doing Elliptic Curve encryption, a private key is\n  simply a random number. In the case of secp256k1, the elliptic curve\n  used by Bitcoin, it has to be a number between 1 and\n  115792089210356248762697446949407573529996955224135760342422259061068512044368\n  (or in hexadecimal, between 1 and\n  FFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551.\nThis private key is converted to a public key by performing an EC\n  point multiplication with the curve's base point. The result is an\n  (x,y) coordinate pair, which constitutes the public key.\nFinally, RIPEMD160(SHA256(pubkey)), where pubkey is a serialization of\n  those coordinates, is computed, and encoded in base58, together with a\n  checksum. This becomes the address.\n\nSo the short answer is yes, as long as the resulting hash is less than or equal to FFFFFFFF00000000FFFFFFFFFFFFFFFFBCE6FAADA7179E84F3B9CAC2FC632551 any SHA256 hash is an acceptable privkey.\nAs for a canonical method of mapping a passphrase to a privkey, I don't believe there is one - after all, this functionality isn't built into the Satoshi client (at least not yet) so there cannot, by definition, be a canonical method. The closest thing I can think of would be the mini private key format used by Casascius physical bitcoins, which could easily be used with a passphrase instead. Indeed Casascius' Bitcoin Address Utility is often the app of choice for those wishing to make \"mental wallets\" from memorized passphrases rather than random inputs.\n", "taxes - Any multi-currency accounting ledger that lets me use BTC?": "\nJust found Kashoo.  Freemium, or $10/month.  Haven't used it yet though.\n\nhttp://www.kashoo.com\n\nAlso, what might work, Aqilla:\n\nhttp://www.aqilla.com/multi-currency-ledger\n\nInfinity PFM (Personal Finance Manager) can read transactions from the Bitcoin.org client:\n - http://launchpad.net/infinitypfm\nLedger:\n\nhttp://www.ledger-cli.org  <-- Command line only, no GUI.\nhttp://www.reddit.com/r/Bitcoin/comments/155gw5   <--- Writeup \n\n", "Is there a forum-like exchange for trading Bitcoins person-to-person?": "\nI think what you are looking for has just been released.\nBitcoinary. https://www.bitcoinary.com\n\n", "Does any pool accept higher-fee transactions of a double spend, instead of the earlier one?": "\nIt seems as if there is such a pool now, advertising the behavior as a feature to allow \"reverting mistaken payments\":\nBitUndo\nThey also supply a patch to bitcoind.\n", "bitcoind - Is there a list of mining pools' Bitcoin nodes IPs?": "\nThe following list will have inaccuracies. I have not been maintaining it as much recently. Some ips are known not to belong to a particular pool but are marked as such because they located nearby (e.g. same datacenter).\nhttp://pastehtml.com/view/c7rf4x1gc.rtxt\n\nAgain no guarantees of accuracy *\n\n", "hashpower - How do mining pools figure out the hashing speed of the connected miners?": "\nSince pools only receive successfully calculated shares they must approximate your actual hashrate based on the number of shares submitted.\nAssuming we're talking about difficulty 1 shares, you should be able to approximate hashrate via H = S * 2^32 / T where H = hashrate, S = shares submitted and T = time in seconds. Your estimate will be more accurate for larger values of T.\nIt takes approximately 2^32 hashes to find a share and each share has a 1/D (D = difficulty) chance of correctly solving the block. From that, with some simple math, you should be able to calculate almost every important thing about mining.\n", "Which mining pools use custom mining software?": "\nBitMinter offers its own mining software, but also gives the option of using other programs by connecting to mint.bitminter.com:8332 .\n", "testing - Relative performance of various mining software?": "\nI think the closest thing is the bitcoin mining hardware comparison:\nhttps://en.bitcoin.it/wiki/Mining_hardware_comparison\nMiners have different performance with different hardware architectures, so which miner is fastest for you depends on which hardware you have (AMD GCN/VLIW4/VLIW5, NVIDIA, different FPGAs).\nIt might be an idea to start a wiki page for a mining software comparison. Alternatively, adding more measurements on the hardware page could do the same thing (but might bloat the page a bit).\n", "mining pools - What is the P2Pool?": "\nP2Pool is a distributed bitcoin mining pool.  First, consider checking out the P2Pool Wiki for the latest information. \nI think it would help to briefly explain it in terms of differences between p2pool, traditional pools, and solo mining.\nSolo Mining\nWhen you solo mine bitcoins, you have control of all aspects of mining.  You decide which transactions get included in your block and you decide where the block reward goes (usually you decide to send it to one of your own addresses).  However, unless you have a very large mining operation, you'll be highly affected by variance.  For example:\nAt a the current difficulty (1733207), the average time for a 5 GH/s miner to find a block is just over 2 weeks.  And it is not uncommon for you to take 3-4x longer than the average occasionally when you are unlucky.  As a result, you can go long stretches without earning anything.\nTraditional Pooled Mining\nTo solve the problem of high variance, the mining pools were created.  In a traditional mining pool, many people all agree to combine their mining efforts and split the rewards according to their contributions.  A sufficiently large pool may then have enough combined mining power that their average time to find a block may only be a couple hours instead of a couple weeks.  As each block is found the block reward is distributed between the pool's miners.  Each miner then gets smaller payments more regularly instead of one large 50 BTC payment every few weeks.\nIn a traditional pool, the pool operator sets up a website that miners connect to to receive mining work at a much lower difficulty so that each miner will find a valid solution every few seconds.  These easy solutions, or \"shares\" are counted and rewards are distributed based on the proportion of shares that each miner found using one of several reward schemes.  In the traditional pool, the pool operator is the one who decides what transactions go into each block and how the rewards are distributed.  Typically, the pool sends all rewards to itself and then pays miners out of the pool's funds periodically.\nP2Pool\nP2Pool is sort of a cross between these two worlds.  Like solo mining, p2pool miners are creating their own blocks and choosing which transactions go into blocks.  Like pooled mining, rewards are shared between everyone who is part of the pool.  \nWith p2pool, each miner runs a p2pool node and these nodes form a peer to peer network amongst themselves similar to how bitcoin, itself, does.  Participants then connect their mining software to their local p2pool node and is given low difficulty work just as with a traditional pool.  As each share is found, it is communicated to other miners on the p2pool p2p network so that all nodes are aware of who is contributing to the collective mining effort and in what capacity.  \nEach share also includes the reward transaction that will be used in the event that a share ends up being a valid block.  That reward transaction includes directly payments to all of the recent contributors to the p2pool network.  So as blocks are found, contributors directly receive their payment just as they would have with solo mining.  \nTo ensure that everyone is playing fair, shares are assembled into a share chain in the same way that bitcoin blocks are assembled into a block chain.  Each share that someone finds builds on all of the previous shares. All miners that are following the same set of established rules end up creating shares that other miners are willing to include in the share chain.  Miners that don't follow the rules end up creating shares that get excluded from the main share chain and so they don't get paid when blocks are found by the other miners.  In order to make it practical for nodes to be  constantly passing shares around the  p2p network, the share difficulty is tuned so that shares are only found 1 every 10 seconds across the entire p2pool network.  The result is higher variance than at a traditional pool, but still much less variance than with solo mining.\nSummary\nIn summary, the benefits over a traditional pool include...\n\nMiners get paid directly and so do not have to trust a pool operator to eventually pay them.\nMiners get to choose their own transactions.\nThere is no single person that has centralized control of the pool that can abuse the power of the combined mining capacity of the pool.\n\nThe drawbacks are higher variance than at traditional pools (particularly for small miners), and extra complexity in initial setup because miners have to install and configure bitcoin and the p2pool software in addition to their mining software.\n", "exchanges - What stops someone from faking a rating on OTC web of trust?": "\nThe global ratings are fairly easy to manipulate as you describe, and it has been done before. There is some minor protection provided by the requirement that you need a positive OTC rating to rate anyone else.\n#bitcoin-otc also supports \"trust rating\" (example) which can't be easily manipulated.\n", "security - What is the story behind the \"Linode problem\"?": "\nThe \"Linode problem\" is storing Bitcoins on a managed device.  That managed device might be server hosting from Linode, for example, or a cloud server at RackSpace for another example.  In both instances, by simply gaining root access using the service provider's systems, tens of thousands of bitcoins were stolen.\nThe incident in which the \"Linode problem\" term was coined, more than 46K BTC were stolen in a security breach at Linode, including 43K from Bitcoinica's wallet alone.\nLinode hasn't disclosed the exact scenario but it is believed that an employee's system was compromised remotely and that system had access to a back door that allowed administrative access to every Linode host.  With administrative access. wallet.dat's are vulnerable.\n\nhttp://arstechnica.com/business/2012/03/bitcoins-worth-228000-stolen-from-customers-of-hacked-webhost/\nhttp://bitcoinmagazine.net/the-bitcoinica-linode-theft-and-what-it-means-for-bitcoin/\n\nThere are all sorts of managed systems.  Most enterprise computing systems have administrative access for not only their systems in their data center but also for managing their employee's devices.  This might allow a thief, or rogue employee or contractor even to gain access to Bitcoins.\nEven mobile devices could be totally vulnerable.\n", "security - How do mining pools protect their wallets?": "\nIf a pool makes a payout, the mechanism that performs the payout must have use of a private key. Therefore I don't believe there can be any secret to securing this private key beyond good operational security best practises. This would include operating with a minimum of \"cash-on-premises\", so the wallet used by the payout mechanism would only have enough BTC to cover payouts for the next few days, relying on refills performed by an entirely separate, manual process.\n", "How do I move a client/wallet to a different machine?": "\nCopy the wallet.dat onto another machine, put it in the appropriate folder and either sync your Bitcoin from the Genesis Block with the network, or run it with -rescan option.\n", "security - What are the most notable cases of coins or wallet thefts?": "\nIn order of date:\n\n13th June 2011, 25,000 BTC stolen from an early adopter \"allinvain\": A single user claims they were hacked and lost an enormous quantity of Bitcoins.\n15th June 2011, 650 (?) BTC stolen from MtGox exchange: This attack probably made the news more than any other because the apparent market price plunged to $0.01/BTC, but withdrawal limits actually prevented a major loss. There was however substantial downtime and confusion amongst users while security issues were resolved. MtGox remains the largest exchange despite the issues, as at the time of writing.\n31st July 2011, 27,000 BTC stolen from mybitcoin.com: This was a website that worked like an online wallet. After the website disappeared for several days, the owner reappeared claiming the site was hacked and is closing the site down, with a plan to refund 49% of each user's previous balance. There has been speculation that the owner of the site scammed the users.\n1st August 2011, 17,000 BTC lost from Bitomat exchange: A surprisingly large Polish exchange was mistakenly (due to a technical misunderstanding) set up in an unstable hosting environment and lost its wallet file when the server crashed. The MtGox exchange took over Bitomat's business with an agreement to try to restore users Bitcoins.\n1st March, 2012: More than 43,000 BTC were stolen from bitcoinica.com due to a Linode exploit, and another 3,000 from an individual programmer. The same exploit was used against Slush's Pool to steal 3094 BTC.\n11th May, 2012: 18,547 BTC were stolen from bitcoinica.com. \n\nI'm not aware of anyone being caught for any of these thefts.\n", "Namecoin: is there any rationale behind the (apparently foolish) choice of having the domains cost an irrelevant price?": "\nA question concerning a similar problem has been asked awhile ago. Researching an answer for it, I couldn't find any justification for the imbalance of Namecoin domain price versus reward, nor did anyone from the Dot-bit forum mane any statement about the situation.\n", "legal - How do I legally set up an exchange?": "\nI don't think StackExchange is the best place to ask for legal advice.\nLogically, one would set up a company, get a business bank account and start their operations. However, it is very advisable to consult a lawyer first, as there are some legal concerns one should keep in mind, like the money laundering regulations that one should adhere to.\n", "exchanges - Can I convert BTC to USD without a bank account?": "\nTo my knowledge, Steam does not support BTC (at least yet). Moreover, Steam does not allow one to send another user money transfers, so you can't really exchange your funds with other people. You could, however, purchase a game gift for another person and sell that gift for Bitcoins, but that would probably be against Steam's policy.\nIf you generally want to exchange Bitcoins for any currency without having a bank account, you could always try finding another user that also wants to trade like that and exchange money with them, either in person or through services like Western Union. This way however, is less reliable than using a Bitcoin exchange.\n", "How can I run Bitcoin-QT client behind a restrictive firewall using a putty tunnel?": "\nThe easiest way to make this work would be to install cygwin on your windows machine, specifically ssh client package.\nThen from a cygwin shell, run ssh -D 8080 user@linuxHost.\nNow you can point the qt client to localhost:8080 as the socks proxy. \n", "wallet - What is the best way to recover from an accidental double-spend?": "\nThe problem is that the Bitcoin wallet implementation is written with the assumption that the transactions it created itself are always valid. If they do not get confirmed, it simply keeps trying to submit then to the network until they get confirmed.\nHowever, since the introduction of dumpprivkey and wallet tools, it's easy enough to create other wallets with the ability to spend from the same key, resulting in potential double spends.\nThe current best solution is removing the double transaction from the wallet (maybe via a wallet tool, or by dumping the bdb file, removing the transaction line, and importing it again). On a slightly longer term, we plan to make wallets detect transactions that conflict with the block chain, and consider them rejected.\n", "blockchain - Bitcoin client only has 1 connection?": "\nMaybe the client is having a hard time finding peers.  If you close it and remove the addr.dat then restart, it will go through the dnsseed process again.\n\nhttp://en.bitcoin.it/wiki/Data_directory\n\n", "protocol - Why can we have small fractions of a Bitcoin?": "\nBitcoin amounts in the protocol and software are expressed as an integer number of \"satoshis\". 1 BTC is defined as 10^8 satoshis. So a block reward that is internally represented as 5*10^9 satoshis is displayed in the GUI as 50 BTC.\nSplitting bitcoins to even smaller fractions will require a change in the protocol and software, and may be done when their value becomes much larger.\n", "client - Multibit vs Electrum - which is more mature and secure?": "\nAt the moment the Electrum client is more secure as the wallets are password protected. \nI am the lead developer on MultiBit and am working on wallet encryption but it will take me a few weeks yet. There are a number of changes to make. \n", "backup - Why can't I connect to bitcoind on localhost?": "\nIn the end it had nothing to do with keypool=10000. For some unknown reason my local interface was down. I fixed it with:\nifconfig lo up\n\nI killed the bitcoin daemon with kill $PID, started it again and within a minute I could do bitcoind getbalance.\n", "Public key with 142 characters?": "\nThe public key is the 2nd word in the scriptSig but you're looking at the first word.  That's the signature.  Signatures are 71 to 73 bytes (142 to 146 characters) long.  I think you must have miscounted when you wrote that the one you found had 140 characters.\nIn the example you're looking at, the public key (i.e. the 2nd word in the scriptSig) is:\n04\n73769dda763e1f3f0ff1ca65343ed27279d73a63eaf88ca93714f0605d5d06bd\n6d57cc6c3097909c5e0947341201d4960e4e16598687aa29c7b6c4675b7d66b6\n\nand is 65 bytes long, as expected.\n", "client - Trouble compiling bitcoind on OSX with homebrew": "\nUpdate: These instructions or similar are included in the bitcoin source as of 19 February 2013. See doc/build-osx.md for details. As such, the below instructions may fall out of date. Alternatively, make it easy on yourself an use WyseNynja's homebrew tap with brew tap wysenynja/bitcoin && brew install bitcoind.\nBuilding bitcoind on OSX 10.8 with homebrew\nI got bitcoind working using these instructions. For reference, I'm on OSX 10.8.2 with homebrew 0.9.3. I've made an assumption throughout that homebrew is installed in /usr/local. I've also assumed that you've installed the Xcode command line utilities and any other packages that are essential to building code. If you build any code regularly, e.g. you have RVM installed to build ruby occasionally, you're probably OK!\nInstall some necessary libraries from homebrew.\nbrew install boost miniupnpc openssl\n\nRevert berkeley-db formula to an older version\ncd /usr/local\ngit checkout e6a374d Library/Formula/berkeley-db.rb\n\nYou may have to unlink it if you've already installed the latest version.\nbrew unlink berkeley-db\n\nInstall berkeley-db 4.8 now that you've got the right formula in place.\nbrew install berkeley-db\n\nCheckout from Github.\ngit clone https://github.com/bitcoin/bitcoin.git\n\nEdit the makefile.osx to change it a bit. Here's a diff that shows what you need to change, or you can just use this as a patch by doing echo '$patch-text' | patch, where $patch-text is the patch text below.\ndiff --git a/src/makefile.osx b/src/makefile.osx\nindex 9629545..ffac9a3 100644\n--- a/src/makefile.osx\n+++ b/src/makefile.osx\n@@ -7,17 +7,19 @@\n # Originally by Laszlo Hanyecz (solar@heliacal.net)\n\n CXX=llvm-g++\n-DEPSDIR=/opt/local\n+DEPSDIR?=/opt/local\n\n INCLUDEPATHS= \\\n  -I\"$(CURDIR)\" \\\n  -I\"$(CURDIR)\"/obj \\\n  -I\"$(DEPSDIR)/include\" \\\n- -I\"$(DEPSDIR)/include/db48\"\n+ -I\"$(DEPSDIR)/include/db48\" \\\n+ -I\"/usr/local/Cellar/openssl/1.0.1c/include\"\n\n LIBPATHS= \\\n  -L\"$(DEPSDIR)/lib\" \\\n- -L\"$(DEPSDIR)/lib/db48\"\n+ -L\"$(DEPSDIR)/lib/db48\" \\\n+ -L\"/usr/local/Cellar/openssl/1.0.1c/lib\"\n\n USE_UPNP:=1\n USE_IPV6:=1\n\nStart the build.\ncd bitcoin/src\nmake -f makefile.osx DEPSDIR=/usr/local\n\nIt's now available at ./bitcoind. We have to first create the rpc configuration file, though. Run ./bitcoind to get the filename where it should be put, or just try the below text.\necho \"rpcuser=bitcoinrpc\nrpcpassword=HdAseQSRkirfoNuUSzqzixyL9sM1T6ABfzV1nyNmbuwg\" > \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\nchmod 600 \"/Users/${USER}/Library/Application Support/Bitcoin/bitcoin.conf\"\n\nWhen next you run it, it will start downloading the blockchain, but it won't output anything while it's doing this. This process may take several hours.\nMine appears to be working fine, but it's still downloading the blockchain. I'll be able to tell after some testing if it's working normally or not, but I suspect that it is!\nInspirations:\n\nhttps://github.com/WyseNynja/homebrew-bitcoin/blob/master/bitcoind.rb\nWhat are the steps in building bitcoind on Mac OS X 10.6?\nTrouble compiling bitcoind on OSX with homebrew\n\n", "security - Has someone compared the cost of mining vs. that of brute-forcing addresses?": "\nThe chance of generating the key of a very rich address is effectively zero. That is, in the entire history of humanity, nobody has come anywhere close to accomplishing such a feat. \nLet's consider 1 Bitcoin a score. Since there can never be more than 21 million bitcoins or so, you need to hit on one of at most 21 million accounts. Let's say you could try 2 trillion accounts per second. Your odds of matching an account in a hundred years are approximately one in 11 billion billion.\nGood luck.\n", "trading - How exactly does short selling with Bitcoins work?": "\nShort selling is essentially an agreement between you and Bitcoinica where Bitcoinica pays you if the BTC/USD price decreases, and you pay them if the price increases, in an amount equal to the price difference multiplied by the number of bitcoins you sold short.\nPresumably you trust Bitcoinica to hold up its end of the deal, but they don't know you and don't trust you, so they require you to make a deposit which they deem more than enough to be able to cover your obligations. It may happen that when the price changes they are no longer confident your deposit is enough; they will then do a forced liquidation, settling the agreement up to this point and only allowing you to make a smaller agreement going forward.\nThe deposit can be in either BTC or USD. If you have BTC, however, you may want to consider first selling the BTC (which is functionally equivalent to taking a short position), which may be done cheaper than in Bitcoinica, and then short-sell on Bitcoinica.\nAn alternative view of short-selling is that you borrow bitcoins from Bitcoinica, offering a deposit as collateral, and then selling them. With Bitcoinica out of the picture for now, short-selling can be done by literally finding someone to borrow bitcoins from.\nYou can also learn more about Margin trading in general on Wikipedia.\n", "mac - Diablo Miner on OSX Lion": "\nThe BitMinter miner also works on Mac OS X. Go to http://bitminter.com and click the \"engine start\" button. There's no installation, it starts from the browser. It requires Java.\nAs to what is going wrong with DiabloMiner, I don't know. If it is mining without errors then it should be getting you shares at the pool.\n", "economic theory - what is the relationship between the blockchain size and the transaction volume on the network?": "\nThe Bitcoin wiki page on scalability looks at what things would be like if transaction volume was similar to that of Visa. It states:\n\nToday the Bitcoin network is restricted to a sustained rate of 7 tps\n  by some artificial limits. These were put in place to stop people from\n  ballooning the size of the block chain before the network and\n  community was ready for it. Once those limits are lifted, the maximum\n  transaction rate will go up significantly.\n\nThe page also contains various calculations on what the implications are of the Bitcoin network matching Visa's rate of transaction processing (which the page states as being around 2,000 transactions/sec). Figures on storage required for the blockchain are included in the calculations, but it's clear that as Bitcoin grows the core backend nodes will require commercial levels of investment in hardware & systems.\n", "bitcoind - What if ISP's block port 8332?": "\nBitcoin can be configured to handle any port for both peer-to-peer communication, as well as JSON RPCs. However, as Bitcoin clients do not encrypt their messages, it would still be fairly easy to filter out Bitcoin-related activities. One could then switch to using Bitcoin through TOR, or the developers could implement message encryption if needed be.\n", "Will transaction fees eventually make microtransactions not worthwhile?": "\nA change to the 500KB per-block limit can be done with updating the client without causing a fork, but that only goes up to a 1M block size.  To exceed that 1M limit would require a hard fork and thus it is possible when that limit approached, a larger limit might never happen.\nBitcoin could hit those limits before really even \"taking off\" even.\nBitcoin was never architected to be a microtransaction system.  It works fine as one for now but eventually that use might no longer be feasible.\nThere are currently methods to use bitcoins for microtransactions without touching the blockchain.  For example, Mt. Gox BTC redeemable codes have no fee (currently) and could be used, presumably, for microtransactions.  Various approaches will solve the microtransactions problem better than Bitcoin does.\nIn the meantime, businesses that do use microtransactions can get off the ground by taking advantage of the fact that Bitcoin's is still well below the per-block capacity limit and thus microtransactions are nearly free.\nBuild a customer base in a market today, solve the technical problems tomorrow.\nWith Satoshi Dice's growth, for instance, there might soon be enough demand to launch a alternate blockchain for its microtransactions with properties that are useful for that special case.\n", "transactions - Who has this many BTC?": "\nThat is DeepBit's payout address. Whenever DeepBit pays its miners, it sends one transaction per miner, and each transaction comes from 1VayNert and sends change back to 1VayNert. The change from these thousands of small transactions adds up to create huge \"total BTC received\" amounts. 1VayNert has never actually contained anywhere near 10 million BTC -- that's just how much BTC it has sent to itself in change from transactions.\n", "Does Bitcoin prefer broadcasting transactions crediting it?": "\nAccording to the Satoshi client transaction exchange behavior, this does not seem to be the case. However, that page isn't written well.  Looking at the actual source code, I cannot see any special behavior for transactions to an address in your wallet, but I do see special behavior for transactions from such an address.\nThus, I do not think the behavior you observed is actually valid, and is more likely a pattern you noticed because human beings are too good at noticing patterns for our own good.\n", "Where can I see my Bitcoin address?": "\n\nOpen the standard client\nGo to \"Receive coins\" tab\nYou will have a list of addresses you can use\n\nIf you want to create a new address, just click \"New Address...\" on the bottom of the window.\n", "Are there any super nodes in the network?": "\nThere is a node that will relay all transactions, regardless of whether a fee is paid:\n\nhttp://en.bitcoin.it/wiki/Free_transaction_relay_policy\n\nThere are well-connected nodes that are recommended for use by merchants to avoid risk to a race attack.  Some of them have inbound connection whitelists so as to lessen the risk of intentional address list poisoning.\n", "bitcoin core - What are seednodes?": "\n\"Fallback nodes\" is a page on the Bitcoin Wiki which lists some reliable Bitcoin nodes. \"DNS Seeds\" are DNS servers hard-coded into Bitcoin which return IP addresses of Bitcoin nodes which can be used for bootstrapping. \"Seednodes\" are Bitcoin nodes which have their IP addresses hard-coded into the Bitcoin client (see list here); they're used as an alternative bootstrapping method.\n", "bitcoind - How can I create a multi signature 2-of-3 transaction?": "\nActually, both receiving funds at and spending funds from a multi-sig address is already supported.\nYou can find the code to do so, plus comments, by Gavin:\nTwoOfThree.sh\n", "What are multi-signature transactions?": "\nA multi-signature address is an address that is associated with more than one ECDSA private key. The simplest type is an m-of-n address - it is associated with n private keys, and sending bitcoins from this address requires signatures from at least m keys. A multi-signature transaction is one that sends funds from a multi-signature address.\nThe primary use case is to greatly increase the difficulty of stealing the coins. With a 2-of-2 address, you can keep the two keys on separate machines, and then theft will require compromising both, which is very difficult - especially if the machines are as different as possible (e.g., one pc and one dedicated device, or two hosted machines with a different host and OS).\nIt can also be used for redundancy to protect against loss - with a 2-of-3 address, not only does theft require obtaining 2 different keys, but you can still use the coins if you forget any single key. This allows for more flexible options than just backups.\nIt can also be used for more advanced scenarios such as an address shared by multiple people, where a majority vote is required to use the funds.\nMulti-signature transactions are often conflated with BIP 16 and 17. In fact they are not directly related. Multi-signature transactions have been supported by the protocol for a long time; but implementing them would require a special output script.\nWhat BIP 16/17 do is offer a standard way to encapsulate a script within an address; this makes it easier to use advanced scripts, with the most prominent example being multi-signature transactions.\n", "How to clear invalid transactions from one's wallet?": "\nThis question was answered before for someone to clear a too low fee transaction that wasn't accepted by the network. https://bitcoin.stackexchange.com/a/2415/1461\n", "transactions - Sending and Receiving Mechanics": "\nThe coin selection that the client does is performed behind the scenes, the client takes care of the details.\nBut if you are curious to know what happens behind the scenes:\nINPUT:\n\nAddress: A  1.0 BTC\nAddress: B  1.0 BTC\n\nOUTPUT:\n\nAddress: C  2.0 BTC\n\nFEE (derived as inputs - outputs): 0.0 BTC\nThis is assuming you didn't pay a fee.\n\nLet's say instead you only were to pay 1.5 BTC, and a 0.0005 BTC Fee.\nINPUT:\n\nAddress: A  1.0 BTC\nAddress: B  1.0 BTC\n\nOUTPUT:\n\nAddress: C  1.5 BTC\nAddress: D  0.4995 BTC\n\nFEE (derived as inputs - outputs): 0.0005 BTC\nAddress D was an address from your own wallet that the client chose to receive the change transaction.  Your balance in your wallet will then show 0.49995 BTC.\n\nHere's a technical explanation:\n\nhttp://en.bitcoin.it/wiki/Transactions\n\n", "security - When MtGox was hacked on 15th June 2011, how many bitcoins were actually stolen?": "\nAccording to MtGox, the hacker got about 2000 BTC.  A few real customers also appear to have purchased bitcoins at an artificially low price during the incident, withdrawn them, and kept them. This is estimated to amount to less than 650 BTC.\nThe details given at the above link are:\n~June 2011 Mt. Gox Incident\nTime: 2011-06-19T18:00 \u00b1 1 h (theft), days ensuing (hacks & withdrawals)\nVictim: Mt. Gox (some claim also customers)\nStatus: Thief uncaught\nAmount:\nStolen by thief: 2000 BTC (official estimate)\nAdditional withdrawn from Mt. Gox: 643.27 BTC (lower bound)\nTotal: Lower bound 2643.27 BTC\nEquivalent USD: 46970.91 $ (used last trade value; actual price at the time was not reliable)\nTransactions: none released officially\nThe event's scale was widely disputed; some report a theft of almost 500000 BTC due to related account hacking. At this time, these reports seem to be unfounded and closer inspection puts the losses at closer to 2500 BTC. Some additional money was stolen by traders capitalizing on the dropping price and withdrawing in time, including toasty of the bitcointalk.org forums. Mt. Gox claims it has reimbursed customers for this theft.\n\n", "security - Is bitcoinica.com planning to reopen after the 11th May 2012 theft?": "\nZhou tong has stated here that reopening is being considered, with a time frame of several months.\nHe has also stated that deposits will be refunded; Most recently, he has stated that a claim page has been opened at https://claims.bitcoinica.com/, but at the time of this writing it seems to be unavailable.\nUpdate: I can now access it.\n", "wallet - What is the longest known vanity address generated?": "\nIt's impossible to say for sure what's a vanity address and what's generated purely at random, but 1CFBdvaiZgZPTZERqnezAtDQJuGHKoHSzg is 34 characters with no digits in it other than the initial '1'.  That may well be a vanity address.  Then again on average 1 in every 515 34-character addresses you generate won't have any digits in them other than the leading 1, so possibly not.\nThe address with the longest initial list of lower-case letters is 1yaniraswqyghuJKCRrGwJUA2HakWtRad, and is clearly a vanity address since it appears in the same transaction as many other vanity addresses.\nEdit: I just found this one:\n1QBDLYTDFHHZAABYSKGKPWKLSXZWCCJQBX\n\nIt belongs to etotheipi, author of the Armory Bitcoin Client, and was found using vanitygen, as he said in a bitcointalk forum post:\n\nYessir!  I got a little crazy with vanitygen and succeeded.  It\n  should've taken about 70 days of computation time but I got lucky and\n  found it in about a week...  (notice no digits either, only uppercase\n  letters).\nUnfortunately, it's so cool that people don't even recognize it as a\n  Bitcoin address :)\n\n", "client - Error on Installing Multibit for Windows 7?": "\nGoogling for that error there is a similar one at:\nhttp://trac.jajuk.info/ticket/1549\nThere they suggest it could be something to do with the installed Java Runtime Environment. This is what the installer uses to run. \nYou could try making sure the Java installation on your machine is 100% by installing the latest version from:\n http://java.com/en/download/index.jsp \nThen try the installer again. \n", "transactions - Does Satoshidice benefit the wider Bitcoin ecosystem?": "\nThere is value added by this service:\n\nOver the past 15 years, downtown Las Vegas has seen its slot machines\n  tighten from a 1996 average of 4.8 percent to 2010\u2019s 6.4, a \u201ccost\u201d\n  increase of almost 32 percent. That means, on average, players see\n  fewer jackpots and spent less time on their machines. In short,\n  they\u2019re not getting a lot of bang for their slot buck.\n\n\nhttp://weeklyseven.com/news/2011/march/17/loosening\n\nOnline wagering can be a little lower house edge, but rarely will you find a house edge of just 1.5% like SatoshiDICE offers and the 1% that BitLotto offers.  Here's some background:\n\nhttp://www.beatingbonuses.com/slotgames.htm\n\nTo play SatoshiDICE you need bitcoins, so that means there will be additional activity at the exchanges (both in purchases of bitcoins and cashing out by those who lady luck was nice to).  The player base won't be just existing bitcoiners as this payout level is such an attraction it will spread by word of mouth -- or virally even.\nMost Bitcoin software, websites, documentation and media or press has been for an English-speaking audience.  With translations for multiple languages, Bitcoin will reach for the first time many users who would not otherwise learn of it.\nOf course, every bitcoin that is held by a SatoshiDICE gambler is a bitcoin that is not sitting in a trader's wallet, waiting for the first hint of a selloff before it gets dumped (i.e., volatility is lower when the coins are not concentrated as much primarily with those speculating.)\nAfter reaching a level where using Bitcoin becomes comfortable, those gambling at SatoshiDICE might find other goods and services that their bitcoins are useful for instead of just cashing out.\nAdditionally, with this unprecedented success for a Bitcoin startup there will be competition.  The technique employed by SatoshiDICE (payouts using same coins as the wager, thus can be paid out using 0/unconfirmed) is novel but easily replicated.\nSatoshiDICE is a for-profit venture, and a chunk of those profits will likely be reinvested back into that business (perhaps building a mobile app for it, as an example), and/or other Bitcoin-related endeavors.\nThe blockchain pruning feature was something Bitcoin's developers hadn't had as top priority but with this level of growth and added data to the blockchain that may become top-of-mind.  This may be a feature that will help Bitcoin and SatoshiDICE might be responsible for having it occur sooner than it might otherwise have.\nFor Bitcoin, SatoshiDICE has win written all over it!\n", "trade - Is Wuala (LaCie) the largest company to accept Bitcoins?": "\nIt is fantastic to see companies accept Bitcoin, even if it is just an \"alpha / trial\" like the method Wuala provides.\nWhile Lacie (Wuala) is likely the largest company to accept bitcoins directly as payment, that is a specialized product of interest to a smaller subset of the bitcoin community.  Their volume of bitcoin commerce probably is a fraction of that for other bitcoin businesses which are needed by a wider customer base.  The larger dollar amounts where bitcoins are used directly for purchases might be in categories such as web hosting, dedicated servers, anonymous VPN, etc.\nThe largest companies to benefit from Bitcoin commerce though are the companies that offer vouchers or e-gift codes that can be used for payment.  These include NewEgg Vouchers (purchased on BTCBuy.info) and Amazon Credit and eBay Gift Codes (purchased on SpendBitcoins.com).   Those are, by far, where the largest amount of Bitcoin commerce is occurring.  Some day these companies will simply cut out the middle man and start accepting bitcoins directly (or through a payment intermediary such as Bit-Pay).\n", "mtgox - To use Dwolla with Mt. Gox I need to become Verified. Do I need Apostille?": "\nAn apostille is only required for level 2. Their original announcement of the change was confusing, but they have since clarified it on the forum - https://bitcointalk.org/index.php?topic=60074.msg716245#msg716245.\nEdit: You also need a bank account linked to your Dwolla account that has been verified over 30 days.\n", "blockchain - What will be required to increase the \"soft\" 500KB per-block data limit": "\nThe 500kB limit is related to the fee rules. Miners won't include transactions into their blocks unless they have at least some minimum fee. The Satoshi client determines the minimum fee (for miners -- relayers and senders use slightly different rules) like this:\n\nWhen the block currently being mined is less than 27kB, certain transactions are allowed without any fee.\nWhen the block currently being mined is less than 250kB, the fee is 0.0005 BTC per kB of transaction size.\nAfter 250kB, the fee per kB increases as the block size increases to an asymptote at 500kB. At 500kB and beyond the fee is infinite and no more transactions will be accepted.\n\nTo increase the limit, we'd only need a few significantly-sized miners to change their fee policies. DeepBit already doesn't use the Satoshi client's dynamic fee increase after 250kB, though I think they still have a limit at 500kB.\n", "data security - What could be the impact of the distribution of \"tainted\" Bitcoinica coins?": "\nI don't think there's really any need to do this to evade \"Bitcoin police\". Bitcoins are fungible and one is as good as another. Any attempt to track tainted Bitcoins is, at least in my opinion, doomed to fail.\n\n[Imagine] if the FBI regularly published a list of serial numbers of currency that would no longer be honored. Banks would refuse to accept bills on the list, and soon so would grocery stores and so on. That hundred dollar bill you got from the bank, now sitting in your wallet, could appear on that list at any time because the person who deposited it at the bank right before you withdrew might have stolen it.\nThink about what using currency would be like in such a world. Could you even have ATM machines? In fact, it would be the death of cash -- forcing people to use cash only for small amounts of money they could afford to lose. Such \"tainting\", if it hit the Bitcoin world, would similarly be the death of Bitcoin if it caught on in any significant way. - Tainted coins - Who dictates that a coin is tainted?\n\nThis also suggests an interesting way to defeat any attempt to taint Bitcoins, assuming such an attempt wasn't doomed anyway. Just take a chunk of the tainted coins and start transferring them to random, active accounts. The standard client doesn't make it particularly easy to quarantine coins nor does it hold newly-received coins separately from old ones. So when you make your normal payments, you pretty much can't help but spend some of the coins you received unsolicited. Soon lots of innocent users would be spending \"tainted\" coins and innocent merchants would be redeeming them at exchanges, which have to resell them.\n", "economic theory - How do economists view Bitcoin?": "\nPaul Krugman, who is apparently the \"17th most widely cited economist in the world today\", wrote this article in Sep 2011:\nhttp://krugman.blogs.nytimes.com/2011/09/07/golden-cyberfetters/\nPersonally, I'm not convinced that Krugman fully understands Bitcoin though (after all, it has substantially different properties to other money), and I'm not the only one. Some responses to his comments are here: \n\nhttp://presentcynosure.wordpress.com/2011/09/10/krugmans-bitcoin-error/\nhttp://www.theatlanticwire.com/business/2011/09/paul-krugman-incites-bitcoin-cyber-geek-infighting/42188/\n\n", "legal - How do lawyers view Bitcoin?": "\nThere have been plenty of dollars spent on lawyers by Mt. Gox, BitInstant and others, but for specific legal issues.\nFor instance, a decision after Mt. Gox sued its bank in France:\n\nhttps://bitcointalk.org/index.php?topic=41317.0\n\nThere is the CryptoCurrency Legal Advocacy Group:\n\nhttp://en.bitcoin.it/wiki/Cryptocurrency_Legal_Advocacy_Group\nhttp://www.theclag.org\n\nThere is an argument that Bitcoin isn't a security (in the U.S.):\n\nhttp://www.lextechnologiae.com/2011/06/26/why-bitcoin-isnt-a-security-under-federal-securities-law\nhttp://www.lextechnologiae.com/2011/06/17/extending-real-world-laws-to-virtual-worlds-is-a-terrible-idea\n\nIs Bitcoin a commodity then? \n\nhttp://blog.bitcointitan.com/post/17789738826/what-u-s-regulations-apply-to-bitcoins-as-commodities\n\nOther links:\nRuben Grinberg's paper:\nBitcoin: An Innovative Alternative Digital Currency\n\nhttp://papers.ssrn.com/sol3/papers.cfm?abstract_id=1817857\n\nReal legal issues with virtual currencies:\n\nhttp://www.networkworld.com/newsletters/sec/2010/051010sec2.html\n\nQuora: Is Bitcoin Legal?\n\nhttp://www.quora.com/Is-Bitcoin-legal\n\nThere are even lawyers who accept bitcoin:\n\nhttp://en.bitcoin.it/wiki/Trade#Legal_Services\nhttp://bitcointalk.org/index.php?topic=65482.0\n\nBut that's about the extent of it, thus far -- at least what's publicly known.\n", "history - What is the story behind US senators wanting to \"crack down on Bitcoin\" in mid-2011?": "\nThere were some reports on Silk Road at the time, and they wanted action against Silk Road.\n", "exchanges - What will cause BTC/USD to shift substantially?": "\nMajor hacks or attacks on key exchanges or Bitcoin services can cause Bitcoin's price to fall quite dramatically.\nIncrease in popularity will slowly make the price rise. Another speculation bubble can cause the price to go up quickly.\nMajor investments made to Bitcoin can greatly increase the price.\nAll of those quick changes don't appear too likely at the moment. However, it is possible that the decrease in block reward that should happen roughly around the end of the year can double the price of Bitcoin, or make a lot of smaller miners drop out of the system.\n", "mac - GUI Miner for OS X?": "\nI guess you are referring to GUIminer.\nI would also recommend looking at the excellent BitMinter miner, which has a nice GUI and runs great on Mac OS X. I should probably mention that I made it. ;)\n", "history - What is the story behind MtGox and their French bank?": "\nThe important answer is on https://support.mtgox.com/entries/20568322-all-eur-transactions-will-be-temporarily-suspended-within-europe-with-immediate-effect\nquote : \n\n\"While Bitcoin at a European level is so far not directly impacted by\n  this decision, the Bank de France (France's central bank) has\n  confirmed that because of European banking rules, monetary transfers\n  (deposits and withdrawals) through a single entity are subject to\n  financial regulation and therefore can only be performed by licensed\n  financial institutions such as banks or Payment Service companies (the\n  European Equivalent to a Money Service Business). This decision has\n  forced us to find other payment processing partners within Europe that\n  will allow us to quickly resume all EUR transactions for our European\n  customers soon.\"\n\nTo be allowed to accept deposits, keep your funds, and allow withdrawals, mtgox ( and any other European based exchange, like virwox for example ) have to be registered as a Payment Service Company (the European Equivalent to a Money Service Business).\n Since virwox is in Europe, they are probably illegal if they dont have this Payment Service Company license\nThis is true for any website or company wanting to accept deposits, keep your funds, and allow withdrawals, bitcoin related or not\n This decision is not related with bitcoin, it applies to anyone.\nRegistering as a Payment Service company takes time and is very expensive.\nmore details for :\nMoney Services Business  : http://en.wikipedia.org/wiki/Money_services_business\nPayment Service provider : http://en.wikipedia.org/wiki/Payment_service_provider\n", "java - Load a transaction with bitcoinj": "\nBitCoinJ is a Simplified Payment Verification (SPV) client library\nThis means that it only downloads the headers for transactions, and only those that are relevant to the private keys contained in its wallet only. This greatly reduces the blockchain download (very quick to get started), but at the cost of not seeing all the other transactions (reduced overall network security).\nSo, in short, you can't download an arbitrary transaction through BitCoinJ.\nHowever, to answer your requirement have you considered just using the Blockchain.info API?\n", "currencies - Is Bitcoin a currency?": "\nTL;DR Bitcoin already is a currency because it's a generally accepted medium of exchange among certain communities. As those communities grow and usage spreads to other communities, its strength as a currency solidifies.\nThis requires a little bit of history. I am not a numismatist, but I have studied this a little even before the advent of Bitcoin.\nCurrency is a set of things that are a generally accepted medium of exchange.\nThroughout history, an accepted medium of exchange has been anything of value to both people involved in the transaction. Typically, these are physical goods that have some semblance of inherent usefulness and a degree of rarity. Also, there is typically a perceived finite supply of the thing. Lastly, the importance of portability is generally high: if it is cumbersome to carry enough of the thing to make daily purchases, it is less likely to be an acceptable medium of exchange because no one will want to carry it around with them!\nSo, I've set the stage for most world currencies: small, portable coins comprised of precious metals. The metals can be used in products and are rare in that it takes work to extract them from the earth. The supply is thus finite, until another deposit of the metal is discovered. That's when the overall value of the coin may drop compared to other things, but at its simplest explanation, it means that\nthe coin metal has become less rare.\nThis kind of coinage started organically. People could give each other a weight of metal and know what its value was to them. Eventually, as governments were established, governments would gather up all the metals they wanted by whatever means necessary, and then melt the metals in order to mint coins with an intended, consistent value because of their weight.\nAs the price of goods increased steadily, it was impractical for a person to carry a sack of coins, so someone contrived the bright idea of paper money, and later, a bank note.  These are simply a promise that a person can exchange that note for the coins related to it. Thus, this paper money or bank note used to be simply a proxy to more valuable coins or other forms of metal.\nHowever, this is prone to interference by those who print the notes and the governments that oversee it all. Eventually, paper notes became backed by promises for coins and metals that didn't exist. So, the value of the notes in relation to the coins and metals decreased. Then banks stopped accepting notes in exchange for coins.\nWhat resulted is called fiat currency, which has a value simply because some government declares it to have value. It is actually more closely related to debt, but that's a complex subject for another question.\nA chief problem of fiat currency is that a bank or a government can simply print more bank notes in order to create more money. This works in the short term, but any savvy person will realize the similarity of this to someone finding a new deposit of a metal. When there is suddenly more of something, what existed of that something is suddenly less valuable because it is less rare. This does not matter a whole lot when there is only one thing of value. When there are many things of value, e.g. silver, gold, platinum, diamonds, oil, other fiat currencies, the value of our something compared to those will be affected.\nAll of these things are usable as currency but some are more practical than others.\nBitcoin is similar, but more abstract. Bitcoin has no inherent usefulness: it's just data. It does have rarity: the supply is finite because only 21M coins can exist. The available supply is growing by the minute, but there will be a day when no more will be \"found\", thereby halting its inflation in value. Instead, at that time, its value will begin to deflate as coins are permanently lost for one reason or another.\nBitcoin's inherent uselessness as a physical good -- data -- contributes to another factor: its portability. It's just data and we can surely store a lot of data in a small physical space. This property makes it almost infinitely portable. A billionaire could carry their life savings in their pocket on a Flash drive and no one else could have control of the physical thing that is their life savings.\nCreating a currency when the physical thing has no inherent usefulness requires that initial participants assign a value to it. It's a fiat currency, but the value isn't controlled by any central authority. No central authority can create more of it. No central authority can destroy it. This is not to say that an authority cannot destroy it, because a government surely could pass laws to prohibit its exchange/possession/production.\nIn its infancy, Bitcoin has limited intra-economy value, that is, it has limited value as something that can be exchanged for payment for work or goods simply because not a lot of people have boldly decided to accept it with the hopes that they can spend it on something they need. This value grows daily as more businesses start and more people believe that they can spend what they accept in it.\nBitcoin at this stage is no different from arcade tokens, in-game currency, or Monopoly money used in schools to teach children how money works: it has a limited value to a limited audience. It is currency to those who participate in this limited audience, and its inherent value (not necessarily its value relative to other traditional currencies) grows as the audience grows.\nTo add another question to the original: How can the strength of Bitcoin as a currency grow? The answer is quite simple: use it! Find something to buy with it, find something to sell and accept it as payment. Keep this cycle going and get others involved.\n", "transactions - Fundamentals of a Bitcoin Lottery": "\nWhether or not a particular way to run a lottery is a good idea or not depends on a few aspects - whether it is fair, balanced, earns enough money, and whether the users think it is fun and rewarding. Generally, this is a question of game design, not Bitcoin. Probably it would be better asked on GameDev SE. What you described sounds cohesive, although you might want to adjust the fees depending on the costs you will be facing running the operation.\nThere are no issues with paying back an address that paid for the vote, as long as someone doesn't try to mine some Bitcoins directly onto your address, in that case sending the coins back would destroy them. This scenario is very unlikely.\nYou have to take into account the fees charged by the Bitcoin network - usually 0.01BTC per kilobyte. As your winnings might consist of potentially large amount of small Transactions in the future, this might take a toll on the profits. You should try simulating some heavier traffic and see how high the fees get for you.\nFrom a legal problems - it's gambling, which means you should get a gambling license. I don't think it would really be worth the trouble \"just for the heck of it\". Alternatively, you can operate it without a license and face possible legal consequences in the future.\n", "websites - What sort of service is Bitcoinica?": "\nFrom the Bitcoin wiki:\n\nAn exchange that enables leveraged speculation in its\n  contract-for-difference (CFD) market against the Bitcoin to USD\n  (BTC/USD) exchange rate.\nThe service charges no trading fees but instead earns from the trading\n  spread -- similar to how forex trading functions.\n\nThis was a powerful (and risky) service to provide to traders as leveraging allowed them to invest in more bitcoins than what they owned, and the contract-for-difference market allowed traders to take a position (gamble?) on exchange rate movements.\nThere appeared to be a strong appetite for such a service, because it grew in popularity very quickly - it was first mentioned on bitcointalk.org in Sep 2011 and by March 2012 was large enough to be holding BTC43,000 (when it was first hacked).\n", "services - What is the story behind Bitcoinica?": "\nI think this is a good summary: http://arstechnica.com/uncategorized/2012/05/bitcoins-worth-87000-plundered/\nEven more summarised thanks to freesummarizer.com:\n\nMore than $87,000 worth of the virtual currency known as Bitcoin was\n  stolen after online bandits penetrated servers belonging to\n  Bitcoinica, prompting its operators to temporarily shutter the trading\n  platform to contain the damage.\nFriday's theft came after hackers accessed Bitcoinica's production\n  servers and depleted its online wallet of 18,547 BTC, as individual\n  Bitcoin units are called, company officials said in a blog post\n  published on Friday.\nIn early March, a security lapse at cloud services provider Linode\n  allowed hackers to make off with about $210,000 worth of bitcoin after\n  they gained unauthorized access to bitcoin wallets stored by\n  Bitcoinica and seven other customers.\nStrong cryptographic controls ensure that once bitcoins are spent they\n  can't be taken back, although a recently published research paper\n  reports limitations that allow the same bitcoins to be double spent in\n  certain cases (which Bitcoin developers say they've long warned users\n  to avoid).\nThe March heist that hit Bitcoinica also affected several other\n  trading platforms that have also lamented the necessity of storing\n  large amounts of the currency in liquid form in \"hot wallets\" to\n  automatically cover payout requests made by customers.\n\n", "legal - The context of FBI involvement with Bitcoin": "\nThere was quite a hype in the US about how bad Bitcoin is, and how they were going to crack down on it. I suppose this report comes from those feelings. Liberty Reserve has actually been closed recently, by the police forces.\nTheir interest is chiefly identifying and, if possible, removing threats. The EU actually has a similar (but better) report, to assert the status of digital alternative currencies.\nThe red thread to all of these documents is \"Bitcoin is independent of law. Bitcoin cannot be legally prosecuted, and if it could it would be difficult to do it. Anonymity makes it suitable for criminals but it isn't fully anonymous, so maybe we can do something (because of the blockchain). Personally we think Bitcoin is pretty cool.\". They also somewhere seem to understand there is a legitimate purpose to Bitcoin, but it's unclear whether that matters or not.\nIt's very hard to look into the mind of a millions of people wide security organization. If we don't know something it probably exist but it's still classified. This document had only public sources, so did not need classified status. They likely have build a much more detailed document now with knowledge from the NSA (about cryptography) and from Bitcoin companies in the US.\nThe NSA, meanwhile, has likely been tracking Bitcoin usage very closely. It likely has a pretty good way to de-anonymize Bitcoin traffic. All the aforementioned are, of course, as unprovable as PRISM was.\nMost police forces in the world will have reports or accumulated knowledge about Bitcoin because it presents \"a novel challenge to law enforcement\". These reports will contain \"nothing we didn't already know\" and reflect the legal perspective of the agency, but only the mood the report writer thought his boss wants.\nGood luck people. The police are our friends. Sometimes in the \"Do not run, we are your friends\" kind of way, sometimes as the robot friend.\n", "history - What does the FBI think about Bitcoin, in brief?": "\nThe most interesting part of the document isn't that long, as half of the pages explain some terminology and how Bitcoin works.\nThe main points made are:\n\nBitcoin is the world's first decentralised currency, thus it is hard to audit and control it\nBitcoins can become popular among criminals as they offer a lot of anonymity\nBitcoins can be used to commit money laundering\nIt is very likely that people wanting to steal Bitcoins will target third-party services (such as exchanges), and users' wallets\nIt is hard to link user's identity to their Bitcoin address, but can be quite easy when they convert their Bitcoins into a fiat currency\n\nThere are also a couple other, smaller points made and it is generally a good read. As a side note, the paper appears to have a small mistake on page 4 - listing Bitcoin's lowest price since the bubble as 4$, whereas it was as low as 2$ at some point.\n", "wallet - How do I disable automatic address generation for the official bitcoin client?": "\nThe satoshi client still uses a previously unused address each time it needs to send itself change, and there's no option to prevent this.\nObviously since the client is open source you could change it to do whatever you like, or pay somebody with the appropriate skills to do it for you.\n", "blockchain.info - How exactly does MyWallet's Android client work?": "\nI think when you scan the QR code, your password is encoded in that barcode, so your Android phone stores it locally.\nI haven't tested it myself, but considering this I think you have to enter the secondary password to your Android phone as well. It will either require you to do it every time you make a transaction or remember it for you.\n", "address - What is the Bitcoin equivalent of /dev/null?": "\nProbably this address would be pretty acceptable - 1111111111111111111114oLvT2. It has a RIPEMD-160 hash of 0000000000000000000000000000000000000000.\n", "exchanges - What is the story behind Tradehill?": "\nBasically, Dwolla promised that they would never honor chargebacks. They in fact did and stole dollars back from their bank account after TH gave Bitcoins to the scammers. They lost a lot of money by this. I believe Dwolla is being sued for 2 million dollars as a result of this.\n", "history - Have there been cases of traditional money theft from Bitcoin exchanges?": "\nIt is unlikely you'ld find an exchange that hasn't lost funds due to theft.\nMt. Gox, before Tibanne bought it, used to accept PayPal for payment.  It was fraudulent PayPal transactions that assisted in driving the exchange rate from $0.06 per BTC (yes, that is correct) in October, 2010 to a level twice that in about two days.  PayPal closed the account and froze the funds, but the thief had withdrawn bitcoins.\nBitcoinGateway (now defunct) was the next up and experienced some fraudulent credit card charges (though their credit card merchant account got yanked once the it was figured out what the term \"digital goods\" really meant.) \nThen it was CoinPal's turn in which they battled a hack that made it appear the charge was successful, and bitcoins were paid out.  Later, fraudulent charges were experienced but were maintained at manageable levels -- before PayPal closed their account and froze the funds, causing the service to shut down.\nSome believe that Dwolla's actions against TradeHill (now defunct) were theft of dollars, but that was simply an accounting action where numbers for TradeHill's account with Dwolla were updated and there was not a hacking into TradeHill's systems.\nBitcoin7 (now defunct) claimed to have had to deal with a stolen bank funds at one time, I believe.  I don't remember the details.\nEven recently, BitPiggy, for instance, has suspended service due to their bank feezing funds after stolen monies were sent to the exchange.\n", "client - Moving the Bitcoin folder from AppData": "\nYou can create a directory junction (as i did to move the BitCoin data folder), or you can specify a different data folder location:\nBitCoin-qt.exe -datadir=d:\\BitCoinData\n\nWhich will be the long-term solution.\n", "security - What user data has been leaked from MtGox's database during June 2011 hack?": "\nIt was details of 61016 user accounts as a CSV file with fields UserID,Username,Email,Password.  The passwords are hashed, and most of them salted too, but some (the oldest) are simple md5 hashes.\nI just tried searching google for it and was unsuccessful.\nI have a copy, and could make it available for download but don't know if that would be legal.  I'm guessing not.\n", "Bitcoin-Qt icon not showing in Top Edge Panel (Linux Mint)": "\nKnown issue:\n\nhttp://github.com/bitcoin/bitcoin/issues/1242\n\n", "trust - What are the most notable cases of Bitcoin scams?": "\nHere's a list of the most notable scams, thefts, and hacks:\nhttps://bitcointalk.org/index.php?topic=83794\n", "Can I use an old Pentium 4 desktop for mining if I upgrade it with a good GPU?": "\nWith a decent enough GPU (or GPUs), your machine will be a fine miner. The only spec that ACTUALLY matters for mining is the GPU. RAM, CPU, etc don't have much of an impact. \n", "Why do news articles say that Bitcoins have failed?": "\nTaking a look at the recent history of Bitcoin, say, one year, one sees a lot of problems that could hamper most projects. There was the speculation bubble, big price drop, many hacks on high-profile websites, Bitcoin being accused of promoting drug trade and so forth. At the same time there were few cases when Bitcoin was seen in a positive light - perhaps only the Good Wife episode. From that one could conclude that the project is likely to fail.\nThe real state of Bitcoin project is a bit more complex than that. There is a lot of money tied up with it (miners and investors), and the standard client is a quite stellar piece of software, but at the same time there are few opportunities to actually spend Bitcoins in a meaningful way, and a lot of the Bitcoin ecosystem relies on dubious security of third party applications.\nGenerally, the Bitcoin project will probably go through a period of remission from the limelight, hopefully giving enough time for the third party applications to shape up, the userbase to grow slowly and so forth, and only then start becoming more noticeable again, when it will start replacing other online payment processors. Alternatively, some major Bitcoin solutions might be taken down and the whole project could suffer because of that (say, if MtGox stopped operating).\nBitcoin is not dead, and it probably won't be shaped by the bigger news articles.\n", "money supply - How to overcome the 21M limit of Bitcoins as adoption increases?": "\nA single Bitcoin is currently divisible up to 8 decimal places (giving you 21*10^14 units of money, or about 2.1 quadrillion units), nothing stops it from being divided further with small protocol change. In order to change the limit of Bitcoins created, one needs to change the protocol and force most of the Bitcoin network to adopt the change, which can be quite hard to do. This hard limit of the amount of Bitcoins is one of the features of the system, not a flaw - it is meant to fight against inflation. If for some reason you want a cryptocurrency without a limit (hint from Lohoris: you don't), try browsing for alternatives.\nAll in all, there will be enough Bitcoins to go around for everyone for a long while.\n", "security - Can one safely buy vanity addresses from a third party without risking one's coins from being stolen?": "\nFrom what it appears, yes, it is possible, and quite simple really to outsource vanity address creation to a third party without risking anything.\nBitcoin addresses are created from ECDSA keypairs. Their property is that if you take two private keys and add them together (with appropriate modulo operations), the sum will map to a public key that is the same one as one would obtain by adding the two public keys corresponding to the private keys.\nThis means that in order to outsource vanity key generation, one can create an ECDSA keypair, store the private key safely, and give out the public key to other people. They would then proceed to generate ECDSA keypairs, summing the generated public keys to the one provided by you, and checking whether they map to the appropriate vanity address. If it does, they need only to give you the appropriate private key, which you then need to add to your secret private key in order to obtain the private key that maps itself to the vanity address.\nJoelKatz explained it in his post, and I went ahead and implemented a \"vanity pool\" that enables such outsourcing. Moreover, I also created a simple testing suite for playing with combining the ECDSA keypairs. Currently there are no \"split key vanity miners\" available, nor any offline solutions for this problem, but they can follow shortly.\n", "vanity address - Why does it take a different time to generate a different pattern of the same length in vanitygen?": "\nEach leading 1 in an address after the first 1 represents a leading zero byte in the 160 bit hash of the public key, and so makes the search 256 times harder.  See the wiki page for Base58Check encoding for details.  Whereas any other character makes the search only around 56 times harder.\nEvery version 0 bitcoin address begins with a 1.  And 1 in 256 of them begin with two 1's.  However, I don't know where the 23 comes from.  Perhaps it's a result of Benford's law - we're changing to base 58, and so can expect more addresses to start with '12' than any other 2 characters.\nTo see this, suppose there were 256 addresses, from 0x00 to 0xFF, and that we converted them to base 10 to make addresses.  There are 256 different addresses, and 111 of the 256 begin with a '1' (1, 10, 11, ..., 19, 100, 101, ..., 199).  In bitcoin's base58 encoding, value 1 is encoded by character '2'.\nEdit: the above is kind of convincing until you see that:\n\n'12' through '16' all have difficulty 23,\n'17' through '1P' have difficulty 22,\n'1Q' has difficulty 65 and\n'1R' through '1z' have difficulty 1353.\n\n", "wallet - How many MB of data does my bitcoin client have to download to be fully sync'd?": "\nMy current Bitcoin folder, May 28th 2012, is 2.16 GB. Of which maybe 60MB is data personally to me like my wallet, addresses, logs and transaction history.\nSo basicly you will have to download a little over 2 GB for being in sync with the network.\nTo answer your second question: I think yes. Bitcoin exists out of a long chain with blocks containing all the transactions that were ever made. So the longer Bitcoin lives and the more it is used, the bigger this block chain will grow and the more data every user will have to download before they can use the Bitcoin client safely.\nEDIT: blockchain.info charts the pure blockchain size here: https://blockchain.info/charts/blocks-size\nIf this growth rate stays the same, bitcoin can get in trouble...\n", "client - How complex can my bitcoin wallet encryption key be?": "\nThe password must be at least 1 character long.  I've not been able to find a maximum length.  I set the passphrase to be a 100,000 character string, and that worked fine.  Missing the last character off the end of the long string didn't work, so the 100,000th character is significant.\nWhen first setting a passphrase the satoshi client requests that your passphrase be at least 10 random characters or 8 random words.  But it doesn't attempt to enforce its request.\n", "blockchain - What does a double spend look like?": "\nYou won't be able to see a double-spend in the block chain, because it is invalid. You will see one of the transactions included in the chain though. Blockchain.info has a page showing the most recent double-spends.\nDouble spend is just two (or more) transactions claiming the same input, so they will look like an ordinary pair of transaction. One of them will get included in a block, the other will eventually be forgotten by the network. A conflicting transaction to the one included in a valid block can never become a part of another block (at least until the first block will become invalidated by a 51% attack).\nThe standard client will not flag any invalid transactions, but it will reject any transaction that conflicts with a known transaction. It will, however, accept a transaction that is a part of a block, even if it conflicts with a 0-confirmation transaction that you know of.\n", "blockchain - What order do transactions appear in a block? Is it up to the miner?": "\nThe first transaction has to be the miner's reward.  The other transactions can't be miner rewards.  Transactions have to appear after any transactions upon which they depend.  Other than that the order is up to the miner.  Changing the order of the transactions is one of the things a miner can do to change the block hash once he has tried all possible values of nonce.\nI don't know what you're referring to with your \"regenerating the block for later retrieval\".  As far as I know blocks aren't regenerated.  They're created by a miner, passed around the network, and stored on disk.  There's no need to regenerate them.\n", "Why do small transactions without fees ever get processed?": "\n1) There is no motivation, asides your goodwill, or possibly wanting to support some useful Bitcoin tools, like the Bitcoin Faucet (transaction fees could eat up a lot of coins there).\n2) It's a matter of how their pools and clients are set up. Some want to support the community by allowing no-fee transactions to be included in a block (as it costs them nothing), while others want to encourage people to pay fees by only including transactions with fees.\n3) Technically, it might be less likely to be included if it gets really big in terms of data size (upwards to filling a block), but in most cases it won't matter (at least for now). Amount of Bitcoins sent doesn't really matter at the moment, but transactions on really small amount of coins can be discriminated against in the future should spamming them become more prevelent. \nAll in all, it is encouraged that you pay your dues when sending transactions, as it helps the Bitcoin project grow. If nobody was paying to get their transactions processed, the miners might soon not earn enough to get by (especially with reward halving slowly getting closer), which would result in them stopping their operations and weakening the Bitcoin network. It's not much of a threat yet, but in the future it can become important.\n", "development - Which programming languages support secp256k1?": "\nThe Bouncy Castle project allows for this and it runs on the Java VM (as was mentioned earlier) as well as the .NET Runtime. An example of using it in C# is shown in this blog post. You can use the .NET version from Visual Basic .NET (as well as any of the other languages on the CLR as well, obviously).\nFor C++, look at the Crypto++ library which supports secp256k1.\n", "exchanges - Using bitcoin for international travel": "\nYou should be wary when trying to travel only on Bitcoins, some people have failed in the past.\nAt the current stage of development, Bitcoin is not ready to be used to finance your local spending across multiple countries, as getting money to and from an exchange takes a long while. Moreover, you can't withdraw money easily this way into a foreign currency, so the model would work like holding all your money in your local bank and using a debit card to withdraw money at an ATM.\nYou could potentially have your fellow Bitcoin enthusiasts offer to sell you local cash for Bitcoins on the spot, but that would require a lot of preparation, contacting people, and trusting them to show up on time when you need the cash. Generally, not an ideal situation.\nAll in all, it can't really be done at the moment. Maybe in a couple years...\nUpdate: BitInstant has announced that they will be releasing an international MasterCard funded by Bitcoins in a couple months.\n", "mtgox - How did Bitcoinica get its prices?": "\nAs far as I know: \n\nYes, Bitcoinica's prices were based on MtGox ticker\nUsing the MtGox price, they had an algorithm to build their spread (you will always buy on bitcoinica at a higher price and sell at a lower price than the reference mtgox price, thats where a broker like bitcoinica makes profits).\nYes, Bitcoinica had some charts, where you could see the reference price, and the spread (the graph was called \"daily quotes\"), so yes you were able to check the price and spread and understand why you had been liquidated.\n\nNo guarantee on these answers, I'm not in the Bitcoinica code, this is just how I understand this.\n", "bitcoind - Mining pool software for home use": "\nYou can create a private mining pool with just bitcoind. All mining software will work with it: just point the mining software at bitcoind's RPC port and use the appropriate RPC username/password.\nbitcoind doesn't know how to do payouts or multi-user authentication, though, so public mining pools require additional software.\n", "privacy - Can bitcoins be traced by pool workers?": "\nWhen a miner in a pool finds a valid block, the pool receives a reward (currently ~50 BTC) in a special generation transaction in the block. The address receiving the generation reward in a given block is known, and pools publish statistics on which blocks they found (and even if not, the miner who found it can in theory know which blocks he himself found if his mining software keeps a record of it), so the generation rewards can be tracked (to the same extent that any other Bitcoin transaction can be tracked).\nThe mathematical operation done when mining is calculating SHA-256 hashes of variants of a block header. You can learn more about mining for example at What exactly is mining?\n", "transactions - For SIGHASH_SINGLE do the outputs other than at the input index, have 8 bytes or 9 bytes including a VarInt?": "\nTransaction outputs have a \"value\" field that's an 8-byte signed integer (always 8 bytes) indicating how many satoshis (0.00000001 BTC each) are available for that output.  That is the thing that gets set to -1 on the other outputs in SIGHASH_SINGLE mode.\nThis looks to be the code responsible for making this happen, from script.cpp:\n/** Serialize an output of txTo */\ntemplate<typename S>\nvoid SerializeOutput(S &s, unsigned int nOutput, int nType, int nVersion) const {\n    if (fHashSingle && nOutput != nIn)\n        // Do not lock-in the txout payee at other indices as txin\n        ::Serialize(s, CTxOut(), nType, nVersion);\n    else\n        ::Serialize(s, txTo.vout[nOutput], nType, nVersion);\n}\n\nIf we're in SIGHASH_SINGLE mode, and the index of the output is different from the index of the input, then the thing that we sign in this spot is just a dummy CTxOut object, whose parameterless constructor (in core.h) calls SetNull(), which sets the field called \"nValue\" to -1 (-0.00000001 BTC) and clears the scriptPubKey, which ensures that it's a 0-byte vector.\nWhen CTxOut gets serialized, it writes the nValue and scriptPubKey per this (core.h again):\nIMPLEMENT_SERIALIZE\n(\n    READWRITE(nValue);\n    READWRITE(scriptPubKey);\n)\n\nnValue serializes as the 8-byte twos-complement representation of -1, or 0xFFFFFFFFFFFFFFFF.\nscriptPubKey serializes as a 1-byte CompactSize that indicates that the script is 0 bytes long, or 0x0.\n", "webminer - Is there a mining software that I can run on my webspace (php, ruby, python)?": "\nYou should look into webminers - What is the status on webminers?\nBut generally, it's not really worth it. Unless you get a lot of high-end-graphic-card-owning users to stay on your website for a long while, you won't earn much. You can try running some of the webminers on your own machine and see how much you can earn for example by using my Mining Calculator. Having someone with a 100MHash/s graphic card (fairly decent for a non-dedicated miner) on for 24 hours would give you about a cent of revenue.\nAll in all, you're probably better off with adding some ads to your website.\n", "bitcoind - How to findout the sender of a transaction": "\nI just answered a similar question. The relevant parts are:\nIt is now possible to determine the list of addresses that sent a transaction using the raw transaction JSON-RPC API calls that were released with bitcoind and bitcoin-qt version 0.7. The pseudo-code to accomplish this is:\ntxid = <relevant transaction id>\naddresses = []\nraw_tx = decoderawtransaction(getrawtransaction(txid))\nfor(input in raw_tx['vin']) {\n  input_raw_tx = decoderawtransaction(getrawtransaction(input['txid']))\n  addresses.push(input_raw_tx['vout'][input['vout']]['scriptPubKey']['addresses'][0])\n}\n\n", "bitcoin core - How does \"Sign Message\" work?": "\nYou don't have to manually verify Bitcoins you receive - the according transaction is verified automatically by your Bitcoin client. If you see a green checkmark left to the transaction you received (in the Transactions view) then it means that the rest of the Bitcoin network has confirmed the payment as well and you can safely consider the coins yours.\nThe \"Sign Message\" feature is an advanced functionality of the Bitcoin client which allows you to sign arbitrary messages to prove to somebody that you are (were) in control of the funds of some Bitcoin address. For a usage example see this answer. You normally don't need this feature for day-to-day use of Bitcoin.\n", "bitcoind - Can I run p2pool with a thin bitcoin client?": "\nNo. P2Pool, unlike a normal pool, requires you to verify incoming transactions, and you can't do this without having all of the unspent transactions in the block chain.\n", "transactions - What are the risks of in-person private currency exchanging for travellers?": "\nI think that \"personal safety risks\" are outside the scope of this website, so I'll mention the technical risk - double spend. If you don't wait for one confirmation, a double spent attack can be performed, and you won't get your Bitcoins.\nLuckily, you'll only have to wait five ten minutes on average for a block to be found (blocks are one every ten minutes, so the expected delay until the next block is five minutes).\nAfter one confirmation, it's very unlikely such a small transaction will be double spent. If you want to increase your security, wait another block or two.\nTraveller A doesn't need to have internet, he can use a Pimpcoin-like card (link NSFW), with SMS notifications of incoming transactions.\n", "What is the expected time until the next block is found?": "\n10 minutes. Assuming, as you say, that the current network hashrate matches the difficulty - otherwise it is proportionally higher or lower.\nBlock finding is a Poisson process. The rate parameter \u03bb is chosen so that 2016 blocks on average are found every 2 weeks, and since in such a process the expected number of events is proportional to the time span, it means \u03bb is 1/(10 minutes).\nThe time until the next event (the next block found in our case) follows the exponential distribution with mean 1/\u03bb, which is 10 minutes. This distribution is memoryless - the amount of time spent waiting for a block has no effect on the amount of time left to wait. When a block is found the expected time until the next block is 10 minutes (which is intuitive), and it is also 10 minutes at any other time.\nIf blocks arrived once every 10 minutes like clockwork, the expected time until the next block at a random point would be indeed 5 minutes - but then we wouldn't have to worry about expectations, we'd know exactly when the next block will be found.\nIn the future, the decreased generation reward might cause the total hashrate to fluctuate as transaction fees accumulate, causing reduced variability in block finding times, and reduced expected waiting time.\n", "exchanges - What information will someone need to give me money?": "\nBitcoin relies on disclosing as little information about yourself as needed in order to accomplish its functions. In order to receive coins, you only need to provide a Bitcoin address, like such:\n1Br7vQZjkrJxhQEALt4ReL9hTqvQj4Xqge\nIf you are worried about your anonymity, you should generate a new address in the standard client that you will use only once. Should anyone wish for you to confirm that you own a given address, you can use the private key you have to sign some meaningful message.\nNote however, that it is possible to try connecting your Bitcoin address to your online identity if you are not careful. It is very unlikely, unless someone REALLY wants to find out who you are.\n", "exchange rate - Where can I find bitcoin price charts?": "\nhttp://bitcoincharts.com/charts/mtgoxUSD has historical charts.\nThese 3 all have 'live' charts:\n\nhttp://btccharts.com/\nhttp://mtgoxlive.com/\nhttp://bitcoin.clarkmoody.com/\n\n", "Bitcoin Transaction Fee": "\nBasically, one or a few number of inputs should make no real difference. But at some point the size of the transaction may grow so big that it will start to get less priority over other ones, because miners may prefer lower-sized transactions to get more transactions fees (assuming they would hit regularly the block size limit).\nAnyway the workaround you propose is pointless, moving bitcoins separately from several addresses to one unique address prior of the real transaction would cost you even more. The total size of all the transactions you need for that would exceed the size of a unique direct transaction with several inputs.\nBTW, notice that the virtual balance your client shows for each of your \u201caccounts\u201d may not reflect the real repartition as seen by the network for each associated address. (It costs nothing to move virtual amount from one account to the other, but it will also not change the way transactions will be build later by the client).\n", "trading - What are the implications of a decreasing trend of MtGox \"ask\" depth compared with \"bid\" depth?": "\nThere has been a rally in price of 10% or more since May, and there is constant supply of new bitcoins entering the market, so some of the cash from the order book has since moved into bitcoins.\nBut no doubt, a thicker order book (reflecting lots of buying interest) lessens the risk of a selloff.\nWhen Mt. Gox's BTC/USD represented 80% or more of the trading volume for all currencies at all bitcoin exchanges it was vulnerable to manipulation during times when there wasn't a thick order book.\nBecause it takes a length of time to move funds into the exchange (from hours for a wire transfer to several days for Dwolla, for instance) an aggressive seller can profit from manipulation.  The method is to sell heavily into a small order book, and then put in bids there at the lower level to buy back coins at from \"weak hands\" who fear a further selloff and sell into those bids.  By the time additional USD funds arrive at the exchange from other buyers, the manipulator might have been able to buy back the entire number of coins sold but at a lower price.\nNow that the BTC/USD market at Mt. Gox has dropped to a threshold near the 50% mark (of all currencies traded on all markets), a manipulator no longer has a vice-like grip on all bitcoin markets by controlling just the BTC/USD at Mt. Gox.\nInstead of the Mt. Gox BTC/USD market leading the price moves, it now sometimes lags.  Thus during a selloff, trading markets at other exchanges might have some order depth at higher levels and thus the manipulator doesn't get to buy back as many bitcoins because the sellers go elsewhere to get a better price.\n", "BitInstant - How do I trade my plain cash for Bitcoin at CVS, 7-11, Walmart": "\nBitInstant has teamed up with an already-existing payment processor. This payment processor is designed to allow those without credit cards make purchases online. The way it works is that you make your purchases, check out, and a special receipt is generated with a transaction ID. At this point the transaction is in a \"pending\" state, awaiting payment. You take that receipt to a participating location (thousands worldwide), they check the transaction ID from the receipt and your cash and then finalize the transaction.\nPurchasing bitcoins via BitInstant is really no different, except that your \"cart\" contains Bitcoins.\n", "economic theory - Has anyone patched the code to experiment with the currency supply model?": "\nThere have been various experiments in this regard. The Alternate Cryptocurrnecies sub-forum is full of them. If I recall, Tenebrix and/or GeistGeld removed the halving block sizes, resulting in a coin without a cap on the number of coins.\nAlso, there is EnCoin, and alt whose price is supposed to be based on the cost of electricity.\n", "block - Locating transactions by the relayed by IP in blockchain.info": "\nIt is possible, but it is also quite easy to hide your activity from such inquiries. For example, lets check Address 15VjRaDX9zpbA8LVnbrCAFzrVzN7ixHNsC:\nhttp://blockchain.info/address-relayed-ips/15VjRaDX9zpbA8LVnbrCAFzrVzN7ixHNsC\nWe can see that most often it appears in the USA, with a dominant IP being 69.164.218.197 . If we check that IP with another tool, we can see that it was owned by Linode. And indeed, this is the address of the Bitcoin Faucet, that used to be hosted on Linode.\nHowever, if you were to say, start your Bitcoin with -connect flag and specify an IP that you know will be running Bitcoin most of the time and not be malicious (such as a trusted pool, the Faucet, or the like), your transactions will appear to come from that IP. Switch the IPs every now and then, and you have a total control of what other people can see the origins as.\nSo yes, it is possible to infer some information about what IP owns which Bitcoin Address, but it is also possible to hide such data if there are any trusted nodes on the Bitcoin network.\n", "hashpower - Unknown factor in bitcoin pool breakdown": "\nIt is unlikely that we will account for most of the activity, as Bitcoin allows for high anonymity. Some of that hashing power is believed to come from some botnet, but one can't be sure. You could try looking for the owners of the IPs that relay the new blocks and check who they are, but that would be a tedious work that could be easily hidden, for example by relaying blocks through TOR.\n", "scalability - What is the maximum throughput of the Bitcoin network? (2013)": "\nThe current block size limit is 1MB, but this is likely to be changed in the future.\nTransactions are about 500B, so the current limit is 2000 transactions per block, or about 3 per second.\n", "blockchain - Does mining a block force others to restart their work?": "\nYes and no.\nWhen a new block is created, everyone on the network must discard old work and use the new information provided (assuming they don't want to create forks). It does lead to some small performance loss.\nOn the other hand, creating a block is more or less like playing a lottery - there is no real \"progress\" per se, you are just trying more and more tickets until you win something. When a new block is created you don't have a situation of \"10% left, I lost so much work\", as there is no telling whether there actually IS a solution to the particular configuration of a block you were creating.\nAll in all, yes, everyone must start over when a new block is created, but they don't lose much (aside from some small performance drop due to stale shares).\n", "How could the bitcoin protocol be changed? Has this ever occurred?": "\nEasy.  In the source code add a conditional.  For example, if the protocol were needing to be changed for all verifications after block 200,000 then the pseudo code for that is:\nIf block <= 200,000:\n # Do it the old way.\nElse:\n # Do it the new way.\nThe problem isn't technical it is political.  If that change causes me pain (e.g., inflate the currency at a higher rate) then I am not going to want to accept any version of the code that does something that I don't want to see happen.\nSo any change needs to get buy in (concensus), from the developers, miners and ... most importantly, those who will accept bitcoins under the new rules in exchange for something of value.\nIf an unwanted change is pushed forward without being widely accepted, a blockchain fork will occur, and the losing side (generally the fork with the new rules) essentially gets ignored as if it didn't even exist by the rest of the network.\nThere have been several changes to the protocol as well as changes to the implementation in the client. Some are planned well in advance (e.g., BIP 16), and some are in response to a problem (e.g., Aug 2010's value overflow).\n\nhttps://en.bitcoin.it/wiki/Incidents\n\n", "sha256 - Where can I see an input that will hash to a solution?": "\nOrdering the bytes that make up a block so that you can hash them seems to be fairly complex, but if all you're looking for is an arbitrary string that hashes to something beginning with a few zeroes, you can search using a simple shell command:\n$ i=0; while true; do echo -n $i | sha256sum | grep -q '^000' &&\n      echo $i $(echo -n $i | sha256sum); ((i++)); done\n  886 000f21ac06aceb9cdd0575e82d0d85fc39bed0a7a1d71970ba1641666a44f530 -\n 1039 00037f39cf870a1f49129f9c82d935665d352ffd25ea3296208f6f7b16fd654f -\n 3633 00039a15178b11924de22fd1a02f6efb00d8af33c171a6b67614871e8d6012da -\n 5848 000c15d0ea8224c9649c9adee30c3030ee769b2b5f6d6594f94d446adf60396b -\n12823 000b07fd81c1770b514fb2998527b682c4600e0e76868011bae89a265505f652 -\n20069 0002dc999ce736640267221e6a004da4b837667ca7de5c8eb92832927495013f -\n21098 0007256972781977cbceab0e2cbdc57e20512a6f2975296852029da5bc8aad30 -\n21244 0002a1cf14e9c1acaa8255fd6777d916d3aec6bc1f3c8a3d0a3a89a5eba87970 -\n22244 00092cab56c063b7dadedbb2282decacf40d6eb31319a7ef9a6e7e7a5e0d49b7 -\n23452 000f910e13e5d1b34df0a3a0fb537acaf513be60d650286e45dcdbd3d8e698f6 -\n30050 000954408f96d137e3cfe0711be7856f44c4b6821d5a5d4955c87748a34118ed -\n32754 000faf0e6178d6edb8490f90dcbbc33d33bf0de4783b5722bdcefff05d8748b1 -\n41697 000580eb995f2a45fffce7c2651e542668ea65c1b4b89f5057601698894009ae -\n48559 000eb4a177d716901148633ce477d51675b2677ba45fbc0da5125d35e1feb52b -\n51623 0006412efdac205d9da274bf441e567da353fc59ee098239255bf532c9562e90 -\n53278 0006220135126a47891f08c4dea54763bcb3675d322e49f064ed80c1491a422a -\n60147 000f008e65121d99595e27fcb7a6ba12bc85db5289bd36b00a2654170d8d8404 -\n64478 00060ae0df51bd4b2a190eb8d8bd927426601899b2bbee136a4d06dd1f39159b -\n65565 000b1e1a1268f245d534e7c9ea2cef6c7123e66c9ffa5ea8848e2319d163662f -\n77379 00064a5ab8c2a955d74b6b1e537d76314c61811323c803dd38cbe1c9ed111620 -\n84057 0006da78c87d0454d102ec03e609a7b1a22381693e020ab1ebdf0050af9f7a7c -\n86423 0009d671d687b1e712a501a25b1887bb93d091144d294a03e7368df35faeebfc -\n88484 0000a456e7b5a5eb059e721fb431436883143101275c4077f83fe70298f5623d -\n90947 000318ec4d26f57a5facb03401d2f879a4b5c3cb95bc2bdca378ce078833733d -\n91415 0001528a3705455624f234a9066cca979b7516cdc417f5e39845b32eb107d467 -\n94286 000846f85c9630becba208506e1585d2b09340e33860887403a56fd4eeaa7ea0 -\n96635 0001da624eada828c3f744b73bacd8e15cf0d3e288bd092d68167dd1bab66e76 -\n96952 00064ea7e7d6798cc16d9e7723150ee9a170416f05a61b7d45edd2c28ecd69f6 -\n\nHere I'm hashing digit strings and searching for hashes which begin with at least three zeroes.  You would expect to find one every 4096 attempts on average, but we got lucky and found three in the first 4096 attempts.  The shell command would run forever.  I cut off the output once after the first 100,000 attempts.\nWe would expect to find a hash beginning with 4 zeroes every 65,536 attempts, and it actually takes us 88,484 attempts to find the first one:\n$ echo -n 88484 | sha256sum\n0000a456e7b5a5eb059e721fb431436883143101275c4077f83fe70298f5623d  -\n\nThe '-n' flag to echo means 'just output 88484, don't put a newline on the end'.  The newline would change the hash.\nWe can also search through the list of words in the official Scrabble dictionary to find the five with hashes that begin with four or more zeroes:\n$ cat ~/sowpods.txt | tr A-Z a-z | while read x; do echo -n \"$x\" |\n      sha256sum | grep -q '^0000' && echo $x $(echo -n $x | sha256sum); done\ndebearded 0000fa20ee307c4f15a53bf69ae0ca1c66c675b0ae94781ff5b6f8cff90ebcca -\ngoaltenders 00002e68c9d3d1fc5d3178bee91040efbeb4ac9ea7722c834fa5d71b2e3845cd -\nguilefulness 0000d79e1c6964e6806e9bbdaaaecb63dfabdb498f72bf28944119de1fe90d63 -\nmismatchment 0000bb6ede9f29a01d35e15320229aa0fbd73cf8eb8bc0aac80d6a97fba63fee -\nsantalins 00008514dabda7cffdb10f57e492fadbd8e0cab00427e0bfa4f54248b602a4f0 -\n\nand the same for uppercase words:\n$ cat ~/sowpods.txt | while read x; do echo -n \"$x\" |\n      sha256sum | grep -q '^0000' && echo $x $(echo -n $x | sha256sum); done\nAPPLICANT 0000ca01adc973c2a5a8e6a30134f07396d088b6d65025292f6ff97b237cab4d -\nJACKEROOED 0000182955fd82edd0acc949ea5050a0f8c7107c5dbed07f94f474cc1c31be90 -\nKYE 0000331b9f8ffef05bbee59dca2a7b03e281e22bf1d3d9324f607ad8eb1fbb64 -\nRECREANCES 0000392b2a9f2d9ff2bbc35b8fddfdbb91f73cb7a43602782280ae69d13146e3 -\nSCHILLERIZE 000010f44bb61a7805f10dbd90c3c51a67da52001858ee45e0d015c38a344fb1 -\nSTRIVINGLY 000034f8005572e686cc2f4628107bd16e339d86cbe4d5309105ebb42e8b07dd -\nUNDETERRED 00006433ddbde4028b88a4ca8d6c578641462697134bd1936693a1f1b05b4224 -\nWIDDIES 000000c71f1bda5b63f5165243e10394bc9ebf62e394ef7c6e049c920ea1b181 -\n\nNotice WIDDIES is the only one with a hash starting with five zeroes (it actually begins with six zeroes - a 1 in 16.7 million chance), making it the (official British English scrabble) word with the lowest sha256 hash.\n", "theft - Why is Bitcoin so susceptible to credit card fraud?": "\nBitcoin strongly enforces two concepts - high anonymity and no chargebacks.\nBecause of high anonymity, it is nearly impossible to be 100% certain who you are sending Bitcoins to. In the end, the Bitcoin address is just an arbitrary string of characters.\nBecause of no chargebacks, once you send someone Bitcoins, they are irreversibly theirs (assuming no double-spends and no 51% attack). You can't later recall the money you sent this way.\nWhen someone would buy Bitcoins with a credit card, they could wait until the coins appear in their wallet, and then claim that their credit card was stolen used by someone else to purchase Bitcoins without their intent. They could get away with their chargeback claims, as it would be impossible for the seller to prove that they sold the coins legitimately to the person. Moreover, the seller wouldn't be able to get their Bitcons back due to \"no chargebacks\" rules.\nWhat makes it different from services like iTunes and the like, is that the value of the Bitcoins is close to how much it costs the seller to aquire and sell them, whereas iTunes' costs are marginal. For example, buying a 1$ song from iTunes would mean that they have to probably spend less than a penny processing everything and providing you content (logging transaction, letting you download the song, etc), whereas if you send 1$ in Bitcoins, you are sending about 1$ worth of goods. When iTunes gets charged back, they lose a penny and can still sell the song any amount of times. When a Bitcoin seller gets charged back, they lose a dollar and can't sell the same coins again.\nBitcoins can't be copied and distributed to multiple people at marginal cost, that's what makes chargebacks so costly for any potential sellers.\n", "zero confirmation - What nodes are best for lessening the risk of loss from a race attack": "\nIt would be recommended to connect directly to most of the major pools. This way one doesn't need to rely on any other nodes to relay the informations.\nHowever, you should note that the conflicting transaction could already be pre-mined, rendering such precautions useless.\n", "exchanges - How to convert my bitcoins to another currency": "\nBitcoins can be sold for other currencies at Bitcoin exchanges and exchange services. There are many exchanges all over the world (listed here), but the largest exchange with the greatest depth is Mt. Gox.\nYou can also use a merchant services provider such as Bit-Pay which will automatically handle for you both receiving Bitcoin payments and immediately converting them to other currencies.\n", "blockchain - Have there been attempts at a Bitcoin-powered general purpose database?": "\nThis is it - the CryptoSphere.\nIt uses some Bitcoin concepts, and might support paying for storage using Bitcoins. I believe that \"merge-mining it\" using the Bitcoin blockchain would be possible (it's too soon to tell, the design is preliminary).\n", "Is there a future-proof method of encoding messages in the blockchain?": "\nWith pruning as envisioned today, only spent outputs are pruned. By making a small transaction and never spending it, you can keep the encoded data intact.\nIn the future it may be that unspent outputs will still be pruned if they're old and low-value, for example as suggested here, in which case you can still extend the life of your message by putting it in an unspent transaction with a high enough value.\nIf the encoding is in the receiving address itself, this will also resist modifications such as forced consolidation of outputs - but if you want to also be able to salvage the committed coins, the message should be short and the address should be generated with a vanity address generator.\n", "protocol - What is a simple explanation for how the number of bitcoins in circulation is determined?": "\nYou could explain the coin limit like this:\nWhen Bitcoin started, its creator set a rule - \"No more than 21 million Bitcoins will ever be created, and they will be given out gradually for creating blocks\" (Add further explanation of block reward or proof-of-work here if needed). Everyone who joined Bitcoin knew about this rule, and they were all for it. As everyone can see all the money created by solving the blocks, everyone can check if someone tried to go against the rule and cheat. If cheating is detected, nobody will accept the solution, instead looking for one that follows the rule. Because everyone is checking everything, nobody can cheat and create more Bitcoins than is allowed.\n", "legal - Has Apple stated its view on legality of apps using alternative electronic payment systems?": "\nAs I read here Google does not allow 3th party merchanting services:\nhttps://stackoverflow.com/questions/10217727/apple-android-3rd-party-merchant-services\nI'm quite sure that Apple wouldn't allow them either.\nAlthough, by law, Bitcoin is not considered as a payment, since law does not recognize Bitcoin as a currency.\nSo by the rules i don't think they can ban you for using Bitcoin, but as we all know, Apple just decides itself what it allows and what not.\n", "attack - Does the protocol ensures that private keys are unique?": "\n\nHowever, what happens when my generated private key matches a private key that is already used?\n\nThen you got lucky, and can spend someone else's coins.\n\nDoes the protocol reject private keys if they are already used?\n\nNo, how should it? Keys can be used more than once in normal operation.\nFortunately, it is extremely unlikely that this ever happens. See also these two related questions.\n", "Which pools offer payouts via generation? (Eligius-style payouts)": "\nLuke recently posted that:\n\nFresh-mined coins for payouts were innovated by pools in the following\n  order: puddinpop, Eligius, BitPenny, p2pool.\n\n", "scalability - Can Bitcoin blocks be organized into shards?": "\nIf you mean whether block verification can be distributed so that one entity can participate without storing the entire blockchain, this isn't compatible with the current design, but maybe a new design can do that. Also, suggestions such as this aim to improve the ability of lightweight (SPV) clients, who do not store the entire blockchain, to verify transactions concerning them specifically, without changing the core protocol.\nIf you mean whether a single entity can distribute the blockchain among several machines on the same LAN, then this is possible. The basic operation needed for block verification is to look up the details of a previous output, so the natural sharding key would be output hashes. One could also cache the newest outputs which are the most likely to be used in the following transactions.\n", "bitcoin core - Is the \"official client\" crash-resistant?": "\nYes, mostly, but there are some things you should know.\nYour wallet is stored as a separate file. Your wallet file gets changes written to it as new blocks are received and transactions are made, etc. The chances of a crash occurring during a write to your wallet are probably minimal, but you should have a backup of your (encrypted) wallet anyway. This is by far the most important point. Once your wallet is encrypted with a very strong password (the client provides this function), you can store copies of it in insecure locations, so you always have a copy somewhere - store it in gmail, send it to your family etc. You should only need to make an additional backup every 50 transactions. Bear in mind the receiving address descriptions aren't encrypted though. Running the client with the -rescan option may fix minor issues.\nThe client will refuse to work if a failed attempt at double-spending is detected, but that's not really what you're asking. Besides, there appears to be a fix for the problem.\nThe block chain takes a long time to download, so there is a risk that a crash would required you to download it again. If the client is closed (gracefully) while it is downloading the block chain, it resumes where it left off with no issues; I would guess it would probably do the same thing in the event of a crash, but it's only your copy of the block chain that's really at stake. \nRealistically, once you've got your wallet encrypted with a strong password and backed up in multiple locations, the biggest remaining risk is from theft through a virus or malware. Quote from Gavin Andresen: \"If your computer is infected, then it cannot be trusted, and there is no software in the world that can keep your bitcoins safe if they are stored on it.\"\n", "banks - A different question about a kind of use": "\nBitcoin would be a poor choice for such a system because it doesn't really have a concept of account balances that are present in the blocks. You'll likely also need some central authority to decide who is part of \"everyone\". Otherwise, someone can create a million accounts and then pool all the money.\nAlso, Bitcoin is fundamentally secured against double spends by mining, and that makes it a poor choice for any currency that can't pay sizable enough rewards to produce real security.\nYou'd probably find it much easier using some scheme based around accounts with balances rather than unspent transaction outputs.\n", "How do I reset my wallet (bitcoin qt)": "\nGo to Bitcoin's Application Data directory (in Windows 7 it's UserFolder\\AppData\\Roaming\\Bitcoin) and delete the wallet.dat file.\n", "client - Where is the data folder for Bitcoin-Qt?": "\nIt is the same data folder as the non-QT version of the standard client used to use:\nLinux:\n~/.bitcoin/\nMacOS:\n~/Library/Application Support/Bitcoin/\nWindows:\n%APPDATA%\\Bitcoin\n(This defaults to C:\\Documents and Settings\\YourUserName\\Application data\\Bitcoin on Windows XP and to C:\\Users\\YourUserName\\Appdata\\Roaming\\Bitcoin on Windows Vista, 7, 8, and 10.)\n", "bitcoin core - What is the file wallet.dat.rewrite?": "\nSometimes the wallet file must be rewritten from scratch entirely (in particular when encrypthing it), to prevent unencrypted material to remain in old never-overwritten areas of the file. To do this, bitcoin writes a new file (wallet.dat.rewrite) and then renames it to wallet.dat. If this process is interrupted, it's possible that the wallet.dat.rewrite file remains. You can delete it safely.\n", "How do I backup my wallet?": "\nbitcoin-qt\n\nopen the File menu\nclick Backup Wallet...\nselect a file to save the backup as\n\nMultiBit\nFrom http://multibit.org/help_backupWalletUsingPrivateKeys.html:\n\nYou can export your private keys from a MultiBit wallet into a file\n  (using the 'Tools | Export private keys' option) and, as long as you\n  do not manually create new receiving addresses, you can use the\n  private key file as a backup for the wallet.\n\nArmory\nFrom http://bitcoinarmory.com/index.php/start-page/what-is-armory/features:\n\nNot only are the wallets determinstic, but there is a built-in dialog\n  for printing permanent copies of your wallet.  When you first create\n  your wallet, make sure your printer is on and click the \u201cPaper Backup\u201d\n  checkbox.\n\nElectrum\nFrom http://electrum.org/:\n\nYou do not need to perform regular backups, because your wallet can be\n  recovered from a secret phrase that you can memorize or write on\n  paper.\n\n", "attack - How can I find well-connected nodes?": "\nYou could try connecting to various mining pools, fallback nodes or seed nodes. Those should be well connected.\nThe best option, however, would be to host your own Bitcoin node on a server and set it to connect to a lot of outbound peers. This would also ensure that you would be able to see most transactions quickly and also broadcast the transactions that interest you to more peers.\nAll in all, it is best not to rely on third-party nodes if you can set up your own well connected node. Also, you should also consider a pre-mined double spend attack that would be undetectable no matter how many nodes you are connected to.\n", "Mining behind a proxy and restrictive firewall (only http ports allowed) - possible?": "\nAfter searching and searching I found these possiblites.\n\nUse bitminter Java client in Version 1.1.2 http://bitminter.com/client/1.1.2/bitminter.jnlp (current version doesn't work)\nMake your own miner which supports proxy\nUse a tool like Proxifier (I have not tested it personally, because it is commercial)\nUse simpleproxy on a remote machine simpleproxy man page\nUse stratumproxy.io (also supports SSL)\n\n", "exchanges - How can people in Indonesia use Bitcoins?": "\nYou can try https://www.bitcoin.co.id/ and use IDR. \nOr you can find seller / buyer in https://localbitcoins.com/places/570925/jakarta-id/ \n", "import - Which mobile apps allow me to redeem a private key from a QR code?": "\nMt. Gox mobile, available from Google Play and on jailbroken iPhones using Cydia allows you to redeem private key QR codes into your Mt. Gox account.\nAs a bonus, if any payments are made to that address in the future, Mt. Gox will automatically sweep those funds as well.\n", "performance - Why does Bitcoin make my computer lag/freeze?": "\nWhen you use the Bitcoin client for the first time, the client has to download the whole Bitcoin blockchain from the network. This can really (really!) take a while and because it is stored in your homefolder and therefore has to be encrypted, this take some CPU power as well. \nApart from this, while your client runs, it helps verifying new transactions offered to the network, just like every connected Bitcoin client does, these calculations can take CPU power as well.\nWhat CPU does your machine have?\nYou can try to use clients like MultiBit that do not download the whole blockchain, but only the part that is relevant to your coins.\n", "Transaction Records of MtGox?": "\nEDIT: I think I found what you are looking for here: https://en.bitcoin.it/wiki/MtGox/API/HTTP/v1#Multi_currency_trades\nAlso you can consider following the Streaming API which lets you stream all activity in real time: https://en.bitcoin.it/wiki/MtGox/API/Streaming\nIf the API does not offer this option, I don't think they offer it in an other format.\nAlthough, look at f.e. this page of BitcoinCharts.com: http://bitcoincharts.com/markets/mtgoxEUR_trades.html\nThey seem to have access to this data somehow. I see that MtGox publishes its full depth. Maybe BitcoinCharts just checks the depth at regular points of time and calculates the trade history from the difference.\nYou could consider doing the same for your purpose.\n", "development - Is it possible to run Bitcoin on Google App Engine? / alternatives?": "\nYou should have a look at this (my master thesis topic connected to running Bitcoin on GAE).\nWhile it is possible to run a Bitcoin-related application on Google App Engine, the service will inherently depend on another application to run. GAE only allows one to use the most basic ports for HTTP and HTTPS communication, whereas running an independent Bitcoin node requires the use of TCP/IP. It is possible to write a simple program to convert HTTP calls into TCP/IP ones, but that would need to be hosted elsewhere. If you want to use Bitcoind as the way to communicate with the Bitcoin network, things get significantly easier.\nI've tried writing my own implementation of a Bitcoin client on Google App Engine in Go, but was ultimately defeated by OP_Checksig and its lack of documentation. But honestly, I found using Bitcoind for everything Bitcoin-related to be a lot simpler.\nWhat you also need to consider are the costs of running apps on Google App Engine. I personally found the write and read operations to be a bit limiting if you want to stay on a free tier, but depending on what you will actually want to do, there can be other factors to consider.\n", "webminer - Has anyone tried mining with visitors' computers": "\nYou should have a look at this question about web miners.\nIn general, web miners use JavaScript and WebCL in order to perform operations on the GPU.\nHowever, it might not be as profitable as you think. Considering that most people have very poor GPUs. At the moment if you'd have someone with a decent 200MHash/s card on your website for 24h, you'd basically earn 3 cents. You can check how much you could earn by visiting my calculator. All in all, you're better with ads.\n", "protocol - Is there a maximum factor by which difficulty can change?": "\nThe difficulty never changes by more than a factor of 4 (except for in a special case that only applies on testnet).\nThe code that enforces this is here.\n", "Is the \"double geometric\" payout method for pooled mining fair to part time miners?": "\nYes. If you mine at a given point in time, you do not know when a block will be found, and thus your reward for shares you submit is a random variable. DGM is constructed so that the average reward for a submitted share is always equal to what you would get from it in PPS (assuming equal fees). The total reward for all shares you submit is additive - so it follows that the average reward you get in DGM is equal to what you would get in PPS, no matter what is your mining pattern.\nHowever, the reward you will get is random and has some variance, and the variance is greater if your mining is intermittent. The exact degree of this depends on the parameters used by the pool.\nMore background information about mining pool reward methods can be found in Analysis of Bitcoin Pooled Mining Reward Systems.\n", "mining profitability - Is FPGA more cost effective than GPU?": "\nFPGAs in general cost more initially per given computational speed, but use less power per MHash/s. Currently, the good GPUs have a faster return of investment time, but they are highly dependant on difficulty and Bitcoin price.\nTo be more specific, find your desired hardware in the \"Mining Hardware Comparison\" wiki page, and then do some calculations (you can for example use my mining calculator).\n", "mining setup - How many FPGA can be attached to one computer?": "\nFrom what I know, you can connect basically any amount of FPGA cards to one computer through USB hubs. Case in point:\n\n", "blockchain - Are there proposed hardfork changes that couldn't be made if the market was filled with ASIC miners?": "\nAs long as no changes are done to the structure of the block header, the ASICs should work just fine. There are some proposed changes that could alter it, like protecting the block chain against pre-mining, or adding a new field to the block header.\nSo yes, when the ASIC miners become the majority it will be hard to push those changes unless Bitcoin faces some serious issue that forces the change (for example, an attempt at a 51% attack).\n", "mining profitability - What's the current $/Mhash": "\n$/Mhash - that's a new one.  Well, the metric used elsewhere is Mhash/$ which answers the question how much hashing a dollar's worth of a piece of equipment will produce.  So if you really wanted $/Mhash (for referencing cost of certain equipment) then you could invert any Mhash/$ and get $/Mhash.  \nOr, perhaps you are asking how many dollars are earned for doing the work of a million hashes?\nIf so, here's how:\n1.) Determine the difficulty:\n\nhttp://blockexplorer.com/q/getdifficulty\n\nCurrently: 1,726,566\n2.) Compute total hashes per second:\n\nD * 2**32 / 600\n\n1,726,566 * 2^32 / 600 seconds = 12.4 Terahashes occurring per second.\nThere are 1,000 Ghash per Terahash, and there are 1,000 Mhash per Ghash.\nso there are 12,400,000 Mhashes occurring per second.\n(i.e., if all mining were done with AT HD 5830s, there would be about 45,000 of them hashing away.)\n3.) Determine the value of bitcoins issued per second (using current exchange rate):\n\nBTC/USD * 50 BTC / 600 seconds = BTC/USD per second.\n\nCurrently: $6.45 X 50 BTC per block / 600 seconds = value of $0.5375 USDs per second.\n4.) Determine value per Mhash\n$0.5375 / 12,400,000 = $0.000000043 $/Mhash\nThat's a pretty small number.  But that's the revenue $/Mhash at the current difficulty and exchange rate.\n\nSo your 5830 does in the range of 275 Mhash/s, so it generates (gross revenue):\n\n275 Mhash/s * $0.000000043 $/Mhash = $0.000011825 USD per second.\n\nPer day then:\nCompute number of seconds per day:\n\n60 seconds/minute * 60 minutes/hour * 24 hours/day = 86,400 seconds per day.\n\n86,400 * $0.000011825 = $1.02168 USD per day (or about 0.1584 BTC).\nSo each 5830 will see gross revenue (at current difficulty, exchange rate and block reward) of:\n$1.02168 USD/Day * 365 Days/Year = $372 / Year.\nWell ... not quite.   We know that around the beginning of December the block reward drops in half.  So that $372 in gross revenue now becomes about $273.\nOf course, you need to subtract your cost of electricity.  And since you don't know the future difficulty level or future exchange rate either, it cannot be known how long it will be before you break even.\nBut let's say you have a beefy power supply, mobo that can accommodate 5 PCI-e, and each 5830 drawing 175 Watts, plus fans say you consume a thousand watts.\n\n1,000 watts * 24 hours/day / 1000 Watts/kW = 24 kWh/day\n\nSo per-day, if you pay $0.15 (national average, residential power), your electricity costs:\n\n24 kWh/day * $0.15/kWh = $3.60 per day (for a rig with five 5830s)\n\nThe gross revenue for each 5830 is $1.02 per day X 5 = $5.10, leaving gross profit of $1.50 per day for all five together.\nBut then beginning in December, you cannot mine profitably.  Your cost of electricity remains the same, but the per-block drop means your gross revenue drops by half, to $.51 per day per 5830, or $2.55 for all five 5830s.   \nSo you would be paying $3.60 in electricity to earn $2.55 in bitcoins.\nThe only GPU mining operators left standing will be those whose electricity rate is significantly below average or those whose electricity is included in the rent that would be paid regardless.\n", "network - What might cause the Bitcoin client to take a long time to see a new, unconfirmed transaction?": "\nIs one of the clients disconnected when you send payment with the other? This often happens to me when I send a transaction to the other OS on a dual-boot system, meaning the receiving client is down when the transaction is broadcast.\nI'm guessing this happens because all nodes the client connects to when he comes online have already broadcast the transaction, so they won't send it again to him. He'll only get it as part of a block when it is found.\n", "asic - Is Butterfly Labs reputable / Should I preorder the SC Jalepeno?": "\nEDIT:\nMy original answer may have made sense back when the question was asked, but now it is clear that Butterfly Labs cannot be trusted.\nAs they say, \"fool me once, shame on you; fool me twice, shame on me\". After all the delays and controversies with their FPGA line, they have given their word that with the experience gained they really will be able to deliver their ASIC line on October 2012. 10 months later (and 20-fold difficulty increase later), even the first pre-orderers didn't get their orders in full. This didn't stop them from announcing a new line, with pre-orders and the same empty promises. Which, if they deliver, will be better performing than their first ASIC line, without any compensation to their loyal customers who have waited more than a year.\nThe fact that their CEO was shown to be a convicted felon doesn't help.\n", "json rpc - Why is bitcoind so slow on VPSs?": "\nbitcoind is often very slow when running over a remote disks (such as on a VPS), especially if that disk is slow.  Check the load of incoming transactions in debug.log, which lock cs_main during processing (which the RPC thread does as well).  If you have the memory, try tmpfs, or increase the bdb cache.\n", "alternatives - What is TimeKoin?": "\nReading the whitepaper, it lists its features as:\n\nBeing decentralised\nDisclosing of all information on balances and allowin everyone to check for fraud\nDecentralised money creating with difficulty adjustment, but apparently it can be done \"without requiring massive amounts of CPU speed\" (although some parts of the whitepaper appear to contradict this)\nEach transaction is secured with 1,536 bit OpenSSL RSA encryption, private keys will be used to decrypt them\nMoney is created by participating in the network, rather than performing the calculations (no exact explanation was given how this would prevent abuse)\n\nIn general, it appear to be an attempt at creating a Bitcoin-like currency that is to be not-computationally intensive no matter the size of the network. Other than that it appears to replace digital signature algorithms with encryption algorithms and doesn't appear to do much else.\nAs there is no real explanation of how will the system try fighting off abuse (say in a form of a botnet), or how exactly the reward system works without relying on computational power, I would currently label it as something that needs to get its facts straight and present them to be scrutinised. If I were to make a guess from the vague description I read, the system probably won't be as secure as Bitcoin. I'm guessing it tries to make all peers equal and reward them equally, which will probably never suffice.\n", "Demographics on Bitcoin users?": "\nI can't think of any known data about real demographics.\nBut here are some things you can consider to get an idea:\n\nBitcoinCharts' currency distribution: Gives you a view on what currencies are traded the most, most currencies are country- or region-specific so this can be a measure.\nBlockChain.info's real-time transaction mapping: You can literally see every new transmitted transaction appear on the map. (This is possible because all transactions are public and have an IP bound to them. But note that some users might use Bitcoin with tools like Tor so their location can be wrong.)\n\n", "Can different clients have different transaction fees?": "\nThe Bitcoin protocol does not require any fee to be paid.\nHowever, the standard client will require varying fees to be paid before the transaction is included in a block or relayed, all depending on the current load (up to 27kB transactions are free unless they are considered spammy, then fees get higher and higher).\nSome pools (like Eligius) don't include transactions without fees into their blocks, so that's another incentive to pay something.\n", "services - Bitcoin-related bounties": "\nI've seen some bounty sites pop up every now and then. Can't remember any of them. This fact alone suggests that you would not get anywhere the same kind as exposure as on the forum.\n", "currencies - What is the preferred way to denote orders of magnitude in BTC?": "\nI would write 36.2K BTC.\nOn the other hand, if I had 0.0362 BTC, I would write 36.2 mBTC.\n", "bitcoin core - New User, New Wallet": "\nUsing the default client (which it appears you are) transactions received while the client is online will usually appear immediately but transactions which occur while the client is offline will not appear until the block containing them is downloaded. Based on your description this appears to be what has happened, so your transaction should show up whenever that particular block downloads.\nYou could also try punching your address into http://blockchain.info and you should be able to see your transaction as well as what block contains it.\n", "transactions - What's the longest chain of orphan blocks? (How many confirmations have been necessary?)": "\nThe longest orphaned fork was created due the \"value overflow\" bug occurrence, ranging from block 74638 to 74691 (so 53 blocks). Such a situation is unlikely to ever repeat though.\nOther than that, as far as I remember 4 blocks were overwritten by some strange behaving miner (related question), but I might be mistaken.\nIn general, 6 confirmations is enough in most cases to prevent any double-spend attempts, and 120 confirmations is enough to give the developers time to release a fix for some major bug that might occur before the coin creation transactions are mixed in with everything else, creating a big mess.\n", "bitcoind - Will calling \"walletpassphrase\" twice in a short amount of time increase the time the wallet stays unlocked?": "\nAfter doing some experiments it appears that as calling the function results in an error, it is not processed, and thus the unlock time is not extended.\n", "websites - Is the new Google Compute Engine suitable (and affordable) for running a bitcoind instance?": "\nComparing the GCE's pricing to Amazon EC2's pricing for the cheapest tier, it appears that Google would be cheaper should the CPU usage be small (which in case of bitcoind it should be in most cases). However, as GCE is still early in development, few people could run benchmarks on it and the prices can change abruptly (much like the prices of Google App Engine changed after the early beta period).\nAs it stands, Google Compute Engine looks like a viable option for cheap hosting of bitcoind.\n", "services - Which VPS providers are the most popular or notable for hosting bitcoind instances?": "\nBitVPS offers a VPS with a pre-installed and synced bitcoind, and of course they accept payment in Bitcoin.  Email the owner (james@bitvps.com) for details.\n", "How does bitcoind generate a new address if the wallet is encrypted": "\nIt gets it from the keypool, which has 100 pre-generated addresses by default.  The next time you enter your passphrase, it will refill the pool with new addresses.\nHere's an example that shows the pool running out, and refilling when the password is supplied.  The following commands were performed by a trained professional.  Please don't try this at home (especially the first 2 commands):\n$ cd ~/.bitcoin\n$ rm wallet.dat\n$ bitcoin-cli -daemon -keypool=5\nbitcoin server starting\n$ bitcoin-cli encryptwallet mypass\nwallet encrypted; bitcoin server stopping, restart to run with encrypted wallet\n$ bitcoin-cli -daemon -keypool=5\nbitcoin server starting\n$ bitcoin-cli getnewaddress\n1Bf6TrgiBxzZhdtEWZuWuREkbfoAtmZ5xa\n$ bitcoin-cli getnewaddress\n1JzjmeH1LHzJ5JYzUu3wh36N7LWvfVeB2u\n$ bitcoin-cli getnewaddress\n1sjVdVJAAWB6JTsja4nEVezdnqiE6Ko3V\n$ bitcoin-cli walletpassphrase mypass 3600\n$ bitcoin-cli walletlock\n$ bitcoin-cli getnewaddress\n1DVZHRNbdBivqRKzas7iFT8emsb8EtcJT1\n$ bitcoin-cli getnewaddress\n1HBXkVkWCVhntzgkxdb9hnUxNeMdFqVssQ\n$ bitcoin-cli getnewaddress\n18n17UHshaufcufo5z1PBPAdErPWxesBhs\n$ bitcoin-cli getnewaddress\n1CofrGkqWrAmibBUgtLysknXdsBpDJARTs\n$ bitcoin-cli getnewaddress\n1NwWuba3khc31ebZU8fVAept2MDdnSndgV\n$ bitcoin-cli getnewaddress\n16QVdikDatH2FkQNkrRgGXrQ9LbEooHAPF\n$ bitcoin-cli getnewaddress\nerror: {\"code\":-12,\"message\":\"Error: Keypool ran out, please call keypoolrefill first\"}\n$ bitcoin-cli walletpassphrase mypass 3600\n$ bitcoin-cli walletlock\n$ bitcoin-cli getnewaddress\n1BSDX4PiHKvdssjAzDLVACAAQvwiijmETV\n$ bitcoin-cli getnewaddress\n1JJphgnC5gqunLtbbLAwtN8LXRnCUYWARm\n$ bitcoin-cli getnewaddress\n17UJqrpuakgPPuxPTLa8LeeWVAKijZW66x\n$ bitcoin-cli getnewaddress\n16itq5LpuwyhtfbiHbQxVzJYYdGE7nQRoz\n$ bitcoin-cli getnewaddress\n1QA4EnXPUHquK9WBxBppicfBTD2gYTB9ic\n$ bitcoin-cli getnewaddress\n12bgaABsakRouK9NZyUAK1RAD9nmDtHQKa\n$ bitcoin-cli getnewaddress\nerror: {\"code\":-12,\"message\":\"Error: Keypool ran out, please call keypoolrefill first\"}\n$ \n\n", "divisibility - Is the value of \"satoshi\" fixed or dynamic?": "\nThe value of a Satoshi is fixed.\nThe key word is \"currently\" (smallest currently possible).\nIf the divisibility is ever increased, a Satoshi will still be exactly 0.00000001 BTC, even though there exists unit representing an even smaller amount.\nThere would need to be new names for these new denominations that are even smaller than a Satoshi, but dSatoshi (1/10th of a Satoshi), cSatoshi (1/100th of a satoshi), and mSatoshi (1/1000th of a Satoshi), would likely suffice.\n", "Format of comment parameters on bitcoind sendfrom command unclear. Attempts result in 'error: type mismatch'": "\nIt appears that you are missing the field \"minconf\", probably setting that to any value would allow you to call the function properly.\n", "Is there a usable Namecoin e-wallet?": "\nI would recommend VirCurEx. You can use it as a wallet or trade between different currencies. \n", "address - Is there an Android app that will scan a QR code and show the balance?": "\nTo get the balance and list of transactions you could do an HTTP get to blockchain.info. E.g:\nhttp://blockchain.info/address/17w9uVZuPgsY7iLBVGB7qTZ1ZiZnTJKHLq\n", "transactions - Why can't I spend my bitcoins when they have been fully confirmed?": "\nI don't use MultiBit, but just checked its source code to see what the message you quoted means.\nIt turns out that the message is shown when the amount you're asking to send plus fees is less than the \"available balance\", which is defined as:\n\nBalance that can be safely used to create new spends. This is all confirmed unspent outputs minus the ones spent by pending transactions, but not including the outputs of those pending transactions.\n\nThe source code also says:\n\nConsider a real-world example: you buy a snack costing $5 but you only have a $10 bill. At the start you have $10 viewed from every possible angle. After you order the snack you hand over your $10 bill. From the perspective of your wallet you have zero dollars (AVAILABLE). But you know in a few seconds the shopkeeper will give you back $5 change so most people in practice would say they have $5 (ESTIMATED).\n\nSo my guess would be that your balance includes some unconfirmed change from your previous transaction(s), and that simply waiting for that change to confirm will solve your problem.\nIn other words MultiBit doesn't allow you to spend the $5 change until you have it back from the shopkeeper.  Note that the Satoshi client does allow you to spend unconfirmed change outputs.\n", "security - Which Two-factor authentication methods are available at which exchanges?": "\nBitcoin Currency Exchanges:\n\nMt. Gox: OTP using YubiKey or Google Authenticator\n\nOptions: [On Login] | [For WIthdrawals] | [For Changes To Security]\n\nCamp BX: OTP/Google Authenticator\nBitstamp: OTP/Google Authenticator\nBitcoin-24: OTP using Google Authenticator and for withdrawal SMS messaging\nBitcoin-otc: GPG authentication with gribble bot\nBitMarket.eu: OTP/Google Authenticator\nCoinbase - OTP/Authy or OTP/Google Authenticator\nFYB-SG (Singapore) - OTP/Google Authenticator\nVirWoX - OTP/Google Authenticator\nWeExchange.co - OTP/Google Authenticator\nBTC-E - OTP/Google Authenticator\nLocal Bitcoins - OTP/Google Authenticator\nbitcoin.de - OTP/Google Authenticator or Yubikey (but not Mt. Gox Yubikey)\n\nOther Exchanges:\n\nMPEx: GPG authentication\nICBit.se: OTP/Google Authenticator\nBTC Trading Corp (BTC-TC): OTP/Google Authenticator or YubiKey\nBitFunder: OTP/Google Authenticator\n\nOther Services:\n\nBitPay: OTP/Google Authenticator\n\nEWallets:\n\nBlockchain.info/wallet - Google Authenticator, e-mail verification, SMS, and YubiKey (but not Mt. Gox YubiKey).\nWalletBit - SecureCard (or perhaps OTP/Google Auth has been added now?)\nCoinbase - SMS text messaging-based two-factor, Authy (Android/iOS app similar to Google's)\nPaytunia - OTP/Google Authenticator or Yubikey (but not Mt. Gox Yubikey)\nbitZino - OTP/Google Authenticator\nJust-Dice - OTP/Google Authenticator\n\nMining Pools:\n\nMaxBTC - Yubikey and Google Authenticator\nEclipseMC - Supports Yubi/GA OTP\n\n", "client - How big is the blockchain on disk as of 5th July 2012?": "\nAt the moment, it's about 2.6GB, but it will be growing with time.\nYou can try looking into using an eWallet or some lightweight clients if you are tight on the disc space. Their space requirement is minimal in comparison, but the security model they offer is different. The lightweight clients are developed by other people than the core Bitcoin team, so you have to know that you can trust them (haven't yet heard about a case of the lightweight clients being malicious). With the eWallets you put the security of your money in the hands of the third party and their server. There have been incidents of people losing a lot of coins because of this (like MyBitcoin), but if ran well and by trustworthy people, your Bitcoins can be more secure than on your computer.\n", "client - Downloading of blockchain failed": "\nIf you sent a coin there, of course you need to keep the wallet itself or you won't be able to claim that coin.\nYou may delete and re-download the blockchain, though.\nOr you can try to open the wallet with another client.\n", "Custom validation logic for transactions/ custom script extensions": "\nIf you want the standard client to ignore a part of a script, you should add it in with OP_PUSH and remove with OP_DROP, essentially making it a comment. This schema is similar to how HTML and javascript work. As long as the rest of the transaction confirms to the Bitcoin Protocol, you can put whatever data you want between those two operations, allowing you to create custom scripts.\nHowever, such functionality is very non-standard. You would need to develop your own software for handling such scripts, and as far as I know, there isn't a program that allows you to encode messages in transaction comments easily (I've been looking for one for a long time and I wasn't able to find it).\nAlternatively, you could create your own version of Bitcoin and incorporate your non-standard scripts into it, similarly to how Namecoin operates. This would take more effort, but offer a lot more freedom.\n", "mining pools - How to run a litecoin miner behind a proxy server?": "\nI got it working for pool-x.eu connecting via port 80 (the proxy server name and port is just what my browser uses):\n@echo off\nset HTTP_PROXY=http://myproxyserver:myport\nSTART /LOW /B minerd.exe --algo scrypt --url http://mine.pool-x.eu:80/ --userpass myusername.1:mypassword --threads 4 -r -1 -s 5\n\nNot all pools allow connections through port 80, so it does limit which pools you can connect to.\n", "address - Pseudocode to verify a signed message": "\nEven better than pseudocode: here's some python code for message signing and verification, largely pilfered from the electrum client:\nhttps://github.com/nanotube/supybot-bitcoin-marketmonitor/blob/master/GPG/local/bitcoinsig.py\n", "Getting orphaned Blocks from the Blockchain": "\nOrphaned blocks are stored in blkxxxx.dat files forever, though each node will know about different orphaned blocks. Bitcoin will print a list of all known blocks, including orphans, to debug.log if you pass it -printblocktree.\n", "wallet - Importprivkey's \"label\" - is it the same as an account?": "\nThough the terminiology is unclear, in code \"label\" and \"account\" are the same thing:\nimportprivkey function (src/rpcdump.cpp):\npwalletMain->SetAddressBookName(vchAddress, strLabel);\n\nfrom getnewaddress function (src/rpcwallet.cpp):\npwalletMain->SetAddressBookName(keyID, strAccount);\n\n", "How can I verify a signed message?": "\nAccording to this bitcointalk thread, it can be done via the JSON-RPC API:\nCode:\nverifymessage [address] [signature] [message]\n\nThis feature has also been included in the GUI of the Armory client:\n\nTo Verify a Signature Block with Armory (works fine in offline mode):\nOpen Armory, go to the menu, \"Tools\"-->\"Message Signing\"\nClick on \"Import Signature Block\" at the bottom of the screen.\nPaste the signature block, and click \"Okay\"\nAddress will be checked against public key, public key checked against signature for the given message\n\nNone of this requires the blockchain, so if you are on a system that\n  couldn't normally run Armory, you only need to run with the\n  \"--noblockchain\" option.  This allows you to verify Armory signature\n  blocks without even having an Armory wallet!  If you're intrigued, try\n  this one:  (get Armory if necessary)\n\n", "Why does blockchain.info report \"Estimated Confirmation time\" not as 10 minutes?": "\nYou're correct; the expected confirmation time from any given point in time is always around 10 minutes (it may be a little more or less when the network hash rate has changed since the last difficulty adjustment). This question looked at that exact issue.\nNote that a retailer (or other transaction acceptor) doesn't necessarily need to wait for a block to be solved in order to accept a payment though. More info here:\n\nHow has the problem of waiting for confirmations been eradicated?\nHow do I safely accept bitcoins without waiting for confirmations?\n\n", "miner configuration - Does Bitcoin work better for one user if they always use the same IP?": "\nIf you are using the standard client alone in hopes of generating Bitcoins, you most likely won't solve a block in your lifetime, regardless of your IP.\nIf you are using some GPU-based mining software, it will still take a long time. In general your IP does not affect it, as long as your miner is set up correctly (say, to a mining pool).\nIF you are hosting your own bitcoind instance and mining on two different machines, yes, it can make the difference, but only if your bitcoind's IP is changing, thus not allowing the miner to connect to it.\nIf you are just running the standard client in hopes of generating Bitcoins without any extra configuration, you are out of luck - the client by default is not generating Bitcoins, as it would be highly inefficient at it.\nAll in all, unless you really know what you are doing, you ought to look into mining at a pool with a mining software such as GUI miner. But first you really ought to check if it is really worth it. You can do such calculations using my Bitcoin calculator and getting your hardware specs from here. Most likely you'll find the answer to be, that is it not profitable for you to mine Bitcoins, as your electricity costs will be greater than what you will earn.\nFor the future, be more clear about what you are trying to do and what is your setup, as it allows people to give more specific answers to your problems.\n", "blockchain - Can I regenerate blkindex.dat from blk0001.dat?": "\nThis is possible in git HEAD, and will be in 0.7.0. You can move the existing blk0001.dat elsewhere, delete blkindex.dat, and then start the client using ./bitcoind -loadblock=blk0001.dat.bak\n", "exchange rate - What's a good site to see bid/ask walls?": "\nbtccharts.com is a better version of mtgoxlive.com - it lets you zoom out to see more price range, and has a bunch of other features.\nSee its forum thread for discussion of it.\nNote: the site is currently down for maintenance but should be back soon.\nAlso, clarkmoody will show you a live updating view of the market, but the depth is shown numerically, not on a graph.\n", "bitcoin core - What to do about a \"stuck\" transaction?": "\nI believe your options are to:\n\nUpgrade to Bitcoin-Qt/bitcoind v0.9 or greater, which takes care of this situation.\nLive with it as-is (showing an 0/unconfirmed that will never confirm)\nTransfer funds elsewhere and abandon your wallet\nExport your keys and import them into another wallet, perhaps a new one\nPerform wallet surgery (pywallet to remove the private key used in the double spend, rescan, then import it back in.  Instructions).\n\n", "transactions - How to enable website users to transact with each other using bitcoins?": "\nYou need to set up bitcoind and look into accounts. If you want users to be able to pay each other in the system for anything, it is quite easy to move Bitcoins around without creating transactions simply by calling the move API. After that you just need to add the options for users to put money into their accounts and withdraw them, and you are set.\nCan't really help you with Ruby-specific things though, as I don't know the language.\n", "doublespend - My wallet won't load because it says it contained a duplicate transaction. Are my coins lost forever or can i load it some other way?": "\nThis was a bug that was fixed in v0.4.1 (26 June 2012) so I presume you are running an earlier version. If you download the latest version from multibit.org your wallet should load ok. \nSorry for the inconvenience.\n", "economic theory - Does bitcoin improve on \"hard\" currencies in any way?": "\nThere are huge differences between FIAT and Bitcoin.\nFiat is created out of thin air \"with fractional reserve banking\" and other mechanisms, there is no stop on how many will be created.\nAnother problem is that every country is FORCED to create more of it.\nSince otherwise the value of their money would increase to much, ending all export industry and tourism in that country. \nSo when the US prints an extreme amounts of FIAT they know that China must follow, which means that Japan must follow and the US must print more, and so it goes on.\nBitcoin can not be created out of thin air, and it takes an ever increasing energy cost to create one.\nAnd since no country base their economy on it, its free from having to be endlessly printed. (It can\u00b4t even if it would be.)\nAnother very important difference is that Bitcoin is the only digital money you can own yourself with no one else having any access, and thus keep on your own computer or in your own cellphone or store on a USB the key to your money.\nAll other digital money, is money that is stuck in a bank and thus they might play around with it and go bankrupt. \nBut a Bitcoin is a Bitcoin and not simply a promise in their system.\nThis also means that you can send them any time of the day instantly to anyone you like now even on Facebook or in emails.\nThe limited amount also gives it a longterm backing in that if it picks up in any market, it cant stay this low and will have to go much much higher, a value of something like $50-$5000 would not be strange in 10-20 years IMO.\n", "How can I find out if an e-wallet service uses a fractional reserve system?": "\nThere are two types of EWallets, hosted (shared) EWallets and hybrid EWallets.  \nWith hosted EWallets, all the coins are shared (all customers funds are combined) in the host's EWallet.  Examples of this are Paytunia.com, Instawallet.org, EasyWallet.org, WalletBit.com,  as well as the online wallets with the exchanges, such as MtGox.com, Bitfloor, etc.\nHybrid EWallets are those that operate locally either from the browser (using Javascript) such as how Blockchain.info/wallet and StrongCoin.com operate or from a client like how Electrum (Windows, Mac, Linux, Android) or BitcoinSpinner (Android) operate.\nWith a hybrid EWallet, the private keys are kept locally but transactions route through the EWallet provider.  To protect from loss, the browser-based hybrid wallets store an encrypted copy of the data from the wallet online with the EWallet provider.  The provider doesn't have the password to decrypt the wallet stored with them and thus has no potential to spend your coins stored with them.\nSo your risk of fractional reserve exists only with the hosted EWallet providers.\nOne method these providers could prove they are not a fractional reserve would be to submit to sporadic financial audits.  None do this today.\nAnother option would be for the EWallet provider to treat each account as if it were a standalone wallet.  That way the blockchain would verify that the coins received have not been spent.  No EWallets operate this way either.\nWhen multisignature becomes functional, this will likely be a security feature available from one or more EWallet providers.\n", "Are bitcoins really immune to inflation?": "\nSpecifically, bitcoins are immune to M0/MB inflation, meaning that the money supply itself does not inflate, except at the very beginning (which we're still in) while the original 21 million BTC get distributed via the mining process. Once 21 million coins exist, they become deflationary since no new coins are issued and, as naturally occurs, money falls out of circulation as wallets are lost.\nBitcoin could still suffer the kinds of inflation most currencies see in M1/M2/M3/MZM such as fractional-reserve banking, but the idea of a publicly published block chain is that at any moment it should be trivial to audit a bank and ensure their deposits are correctly recorded. Essentially, any institution practicing fractional reserve banking should be much easier to spot and those who dislike such practices can more easily walk away from them. There are complications to this model, but that's the ideal anyway.\n", "client - What is a good resource to help newbies choose their first wallet/s?": "\nEssentially it boils down to the tradeoffs between security and convenience.\nInstawallet is incredibly convenient, but not all that secure (as no password is required, and if you lose the URL, you lose the ability to spend the funds.)\nPaytunia was a great shared (hosted) EWallet for a beginner, and there is a mobile app (for Android). A new version of Paytunia is in the works for a 2014 release.\nBlockchain.info/wallet is a great hybrid (browser-based) wallet and also has a mobile app (for Android, and for Cydia / jailbroken iPhones). Configured properly, with backups sent to your e-mail inbox, this is probably the best combination of security and convenience.\nIf you only need a mobile wallet, the BitcoinSpinner works well also.\n\nhttp://en.bitcoin.it/wiki/EWallet\nhttp://en.bitcoin.it/wiki/Mobile_Payment_Apps\n\n", "exchanges - What are the options available to convert Bitcoin to Paypal USD?": "\nThe factors that matter for any cash-out decision are:\n\nWhere are you located (country)?\nHow much are you looking to trade?\nWhat type of cash are you looking to receive?\nHow soon do you need access to the proceeds?\nIs privacy important?\n\nSpecifically for cash-out to PayPal, options include:\n\nhttp://snapswap.us/#/paypal (You'ld need to do BTC -> XRP first though. http://Shapeshift.io lets you do that.)\nhttp://www.VirWoX.com  (BTC --> SLL, SLL --> USD)\n\nOther ones that are not as widely known -- proceed at your own risk:\n\nhttp://www.btctopp.com\nhttp://www.exchangemycoins.com/pages/sell-bitcoin-paypal\nhttp://order.payexchanger.com/index.php?a=add (You Give=\"Bitcoin\", You Want=\"PayPal\")\nhttp://24pay.me\n\nWhat might exist is a service that lets you pay for charges with Bitcoin and then the recipient gets to withdraw the proceeds of the sale using PayPal. So you would simply need to sell to yourself.\nFor example, I see that Fiverr accepts BItcoin for payment: http://blog.fiverr.com/fiverr-now-accepting-bitcoins and I believe they offer withdrawal via PayPal http://www.youtube.com/watch?v=px_eYHCgGZ4. So you simply would create two accounts, list a task, and transact with yourself. Obviously the account for buying (and paying with Bitcoin) would need to be something that you wouldn't want associated with your real identity. Additionally, you probably want to do the listing with one IP address and the buying on another just in case they check for that kind of stuff.\nMaybe when PayPal is a cash-out method for Amazon (coming, apparently http://recode.net/2015/04/09/paypals-big-change-it-can-work-with-amazon-after-ebay-split/ ) then maybe you can sell to yourself (buy Amazon gift cards to pay, then cash out to PayPal from the proceeds of the sale to yourself.)\nBitLanders is another service that lets you trade with yourself, paying with Bitcoin and withdrawing in PayPal. Also, apparently if your sales aren't enough to cover your withdrawal amount you can make up the difference with Bitcoin.\n", "security - How would the network respond to an ability to crack the private keys?": "\nThis would be a global issue, not just Bitcoin related\nIf someone discovered how to extract the private key from an arbitrary ECDSA public key in an economically viable timeframe, then there would be serious ramifications for many other economies that depend upon that branch of mathematics. For example, international banking, secure data transmission and many other users of cryptography would need to manage the change so it would not just lie on the Bitcoin community to save it.\nThat said, the response would depend on the nature of the attack. It may be that the attack could be easily mitigated by constantly changing private keys in which case a fairly minor update could be built into the various clients to support this. \nIf the problem was with the choice of cryptographic algorithm then work would have to take place to find an appropriate replacement that was not subject to the given attack vector, and then to apply that to protecting the integrity of the transactions taking place through the blockchain.\nFrom a community point of view, there is already a process in place to manage these kinds of responses (see BIP) which has had several successful uses when critical bugs or attacks have been uncovered. \n", "How do you get the balance of an address in your wallet using the rpc interface?": "\nIf you are only using Bitcoin through RPC commands, you might want to look into accounts. Using those you can just call getbalance and you will know how much Bitcoins are in each of the accounts.\nIf you are using only addresses, you can only see how many Bitcoins you received with it through listreceivedbyaddress, which can be not reliable if you spend any money from them.\nAll in all, you ought to just use accounts, as they can encompass many addresses and provide a lot of functionality for separating your coins into many parts in the same wallet.\n", "How to start pool mining in Linux": "\nBitMinter is an attempt at making just this sort of thing easier and a more pleasant experience.\n\nInstall Java if you don't have it, e.g. on Ubuntu sudo apt-get install openjdk-6-jre icedtea-netx (the icedtea-netx is for Java WebStart)\n\nIf you will mine in GPUs, install the latest drivers (e.g. from amd.com)\n\nIf you will mine on FPGA/ASIC, give yourself access to serial ports. On Ubuntu sudo usermod -a -G dialout USERNAME then log out and back in.\n\nStart the miner from bitminter.com website or commandline:\njavaws http://bitminter.com/client/bitminter.jnlp\n\n\n", "exchanges - What's a good resource explaining the best ways to buy Bitcoin (noob friendly)?": "\nA guide almost needs to be one that provides results dynamically based on responses to questions.\nThe factors that matter are:\n\nWhere are you (country)?\nHow much are you looking to buy?\nWhat payment methods can you use?\nHow soon do you need the bitcoins?\nIs privacy / near-anonymity important?\n\nOnly once those are known can recommendations be made.\nA fairly comprehensive list of methods exist on the Bitcoin wiki:\n\nhttp://en.bitcoin.it/wiki/Buying_bitcoins\n\n", "security - How can multifactor authentication be used when there needs to be two people with access?": "\nWith Google Authenticator, you scan a barcode into your phone and it generates a temporary 6-digit key every minute, regardless of whether the app is open or not. It is not limited to one person, just to one account. These codes rely on times being in sync so that when an authenticator code expires, it expires on the site as well. Most use two protocols - HOTP and TOTP.\nHighlights from this answer: https://security.stackexchange.com/a/35159\nHOTP = Client and server share a counter, when code generated, timer increments, producing a new one-time login code.\nTOTP = HOTP except the counter is replaced by the current time. So long as the system times are in sync, both the client and the server will be on the same page as far as what 2FA code is currently the correct one.\nIf multiple people scan this barcode, they will all generate the same keys. Thus, all you need to do is have both people present when setting up two-step authentication (or save the barcode if they have incompatible schedules, but be sure to shred it later), and they will both be able to access the account whenever they want.\nDue to best OpSec practices, it is best to have separate 2FA keys, or use an alternative method, such as key-pair authentication where each user has their own key to access the server. This is better for auditing purposes where you can determine more easily the difference between different users, especially if one user decides to do something malicious using a shared authentication code.\n", "wallet - How can I retrieve my bitcoins when the client crashes as soon as it begins synchronizing": "\nThe quickest way is probably to import the private key of the address to which you sent the bitcoins into blockchain.info's web wallet service.\n\nobtain the private key for the address which holds your bitcoins\nvisit https://blockchain.info/wallet/\nclick 'start a new wallet' in the top left\ntype a password twice, solve the captcha, and click 'continue'\ncopy/paste the long url (https://blockchain.info/wallet/random-stuff-...) and keep it safe\nvisit the url you just copied, and log in using the password you just chose\nclick the import/export tab, then click 'continue'\npaste your private key into the 'import private key' box and click 'add private key'\nnow you should see your balance, and can spend it from the blockchain.info web wallet\n\nAlternatively, if you want to keep using the satoshi client, you might find it useful to download a recent snapshot of the blockchain and let it update from there.\n", "banks - What are the advantages of sharing money in hosted e-wallet services?": "\n\nAs Chris mentioned, this is the default behavior of bitcoind which the eWallet uses - disassociating addresses from accounts.\nUsers expect the funds to be immediately available. If everyone has their own address, it means all the deposited funds must be in a hot wallet, which is dangerous since it can be hacked and stolen. A prudent eWallet will keep most of the deposits in a cold wallet, and only move funds out of it as necessary to allow smooth transactions. For this it will need to move bitcoins to an address other than the original deposit address.\nSome eWallets provide green address functionality - a sending address known to belong to the eWallet and assumed trusted. For this the eWallet will need to move funds to its green address in advance.\n\nSo the question really is why not to combine the funds. If it's to prove that it's not fractional reserve, that can be done in other ways.\neWallet such as blockchain.info's MyWallet provide the benefits of an eWallet without giving the provider control over the coins, and in the future there will be eWallets with more advanced features using multi-signature transactions.\n", "Is there any complete specification of the transactions?": "\n\nOr do I have to read the source code?\n\nThis is the only \"official specification\". The wiki pages have a lot of good info, but they sometimes contain inaccuracies or important omissions.\nThere's some info about the SIGHASH flags here:\nhttps://en.bitcoin.it/wiki/OP_CHECKSIG\n", "bitcoin core - How can I export the private key for an address from the satoshi client?": "\nTo export a private key from your Satoshi bitcoin-qt client:\n\nlaunch your bitcoin client as usual and wait for it to load the blockchain and start up\nclick on 'help' in the menu bar (top right) \nclick on 'debug window' \nselect the 'console' tab\ntype: walletpassphrase \"your walletpassphrase here\" 600\ntype: dumpprivkey [your Bitcoin address here] \nthis will return the private key, you can copy it now; ensure you clear your clipboard/history afterwards\ntype: walletlock\n\n", "receiving - Bitcoin wallet taking days to receive coins": "\nIntersango has been having a problem with their wallet recently, as described in this forum post.  Another post claims that:\n\nthis was triggered by someone spamming the wallet with a very larger\n  number of small transactions\n\nEncrypting your wallet won't make any difference to whether you receive the bitcoins or not.  You only need to \"unlock\" the wallet to spend coins (or to top out your pool of unused addresses).\nYou can check at http://blockchain.info/address/1youraddresshere to see whether the coins have been sent yet.  If they show up there but not in your wallet then it's an issue with your wallet.\n", "transactions - What is the point of SIGHASH_NONE?": "\nThe bitcoin wiki OP_CHECKSIG page describes the behaviour of SIGHASH_NONE like this:\n\nThe output of txCopy is set to a vector of zero size.\nAll other inputs aside from the current input in txCopy have their\n  nSequence index set to zero\nThink of this as \"sign none of the outputs-- I don't care where the\n  bitcoins go.\"\n\nThe contracts page also talks about SIGHASH_NONE:\n\nSIGHASH_NONE: The outputs are not signed and can be anything. Use this\n  to indicate \"I agree to put my money in, as long as everyone puts\n  their money in, but I don't care what's done with the output\". This\n  mode allows others to update the transaction by changing their inputs\n  sequence numbers.\n\nIf I sign a transaction where all the inputs are SIGHASH_NONE then a miner can change the outputs to whatever he likes.  If any of the inputs are SIGHASH_ALL then the miner can't change the outputs.  So a group of people can each sign their own SIGHASH_NONE input to a transaction, send them privately to the coordinator who signs his own SIGHASH_ALL input before publishing the transaction.  That way the individual contributors don't need to know the destination address so long as they trust the coordinator.\n", "What's the best Android wallet client for bitcoin?": "\nIf you want to keep your private keys secret (on your phone, that is), I'd recommend\nBitcoin Wallet for Android\nThe app also does not imply any trust in single servers, as it manages the block chain on-device.\n", "trading - Transfer between exchanges without fees": "\nThe best way to transfer between exchanges without fees is bitcoin.\nCoupons (like mtgoxusd) used to be very nice, but now it seems fees are often charged in addition to some of the coupons becoming unreliable.\nAn arrangement in #bitcoin-otc may work well at a low fee, but -otc isn't often quick.\nIn consideration of these two facts, I've come to the conclusion that it's typically quick and cheap enough to convert to BTC and transfer that.\n", "How to convert Litecoin difficulty of 6 to an expected time per block solved?": "\nI don't know much about Litecoin, but if its difficulty works the same as in Bitcoin, then on average it takes approximately difficulty * 2^32 hashes to solve each block.\nSince you're calculating 25000 hashes per second, it should take you around 6 * 2^32 / 25000 seconds to solve a block.  Or about 286 hours.\nDoes that sound about right?\n", "protocol - Why do some generation transactions use pubkey, instead of hash?": "\nPubkey transactions use a little less space in the block chain overall (if no pruning is used), so you might as well use them when you can.\nI think that Satoshi's main reasoning was as follows, though:\nSatoshi originally expected that most transactions would be pubkey transactions: the sender would contact the recipient directly and retrieve a public key to send funds to (the protocol has commands for getting this info from recipients, but it's almost never used nowadays). Bitcoin addresses were just a \"hack\" useful for sending BTC to offline recipients. You know your own public key for use in generation transactions, so addresses aren't necessary and Satoshi avoided using the \"hack\".\n", "How can you estimate the net amount of transactions? (deducting change)": "\nThe satoshi client always sends change to an address that has never been used before.\nOften the amount being sent has less significant decimal digits than the change.  If you see 2 outputs, one for 1.235 and one for 1.19403995 then the change is probably the 2nd one.\nThe satoshi client will try to minimise the change.  Usually the change will be relatively small, and is often smaller than any of the inputs.\n", "How to interpret mtgox chart?": "\nGreen means the price increased during the relevant period, so the lower value is the opening price and the higher value is the closing price. Red is the other way around.\nI think the 0% you see is a visual glitch. If you close the charts you'll see that right behind where you see this is the \"Volume Discount Display\" meter, which shows you how far along you are on the way to move up to the next discount tier. For some reason it is still displayed when the charts are open. (For me the value is different from 0%.)\nFor charts older than a month you can use for example http://bitcoincharts.com/charts/.\n", "gpu mining - Is there any way to install a GPU miner on ubuntu without using the proprietary drivers?": "\nNo there is not. The ATI Catalyst driver implements OpenCL, which is what GPU miners use to accelerate the SHA256 hashing used in mining. The open source driver does not implement OpenCL. There are experimental projects that aim to implement OpenCL in the open source driver (Clover is an example) - as a Gallium3D state tracker - but so far these only run on the CPU.\nGPU drivers are very complex pieces of software. Even if an open source implementation of OpenCL, that runs on the GPU, were to become available, it would likely be orders of magnitude slower than ATI's proprietary implementation, which basically undermines the whole purpose of using the GPU in the first place -- to gain speed.\n", "exchanges - Can bitcoins be bought wholesale?": "\nThe following offer sales of bitcoins in larger quantities:\n\nTangible Cryptography sells coins received for its bitcoin cash-out service FastCash4Bitcoins.com\nBit-Pay Merchant Services, a merchant processor (minimum $10K transaction)\n\n", "address - What exactly happens when a new wallet is created?": "\nYour wallet is a collection of private keys and a record of the transactions relating to them.  By default your wallet has a key pool of 100 keys.  So when your wallet is created, around 100 private keys are randomly generated and stored in your wallet.\nEach private key has a corresponding public key, and each public key has a corresponding address.  A public key isn't \"the same thing as\" an address, but there is an algorithm that can give you the address corresponding to any given public key.  The reverse isn't true.  There are many different public keys for each address, since public keys are 256 bits wide and addresses are only 160 bits wide.\nWhen you click 'new address' in the 'receive coins' tab of the client, it will show you an address you've not seen before.  It is taken from the 100 address keypool.  The keypool is topped up when possible to always contain 100 unseen addresses.  If your wallet is encrypted then it's not possible to top up the keypool until the wallet is unlocked with the passphrase.\nAlso, when you make a transaction out of your wallet, it's quite likely that the amount you are sending doesn't exactly match the sum of any of the inputs you currently have private keys for, and so some 'change' needs to be sent back to your wallet.  When this happens an address from your 100 address keypool is used to receive the change.  In this case the keypool will be immediately topped up, since your wallet will need to be unlocked since you're spending coins.\nThis all happens behind the scenes - you won't see any evidence of it happening unless you look at the blockchain.\n", "exchanges - Where can I buy bitcoins from Ireland without photo ID?": "\nI've been using Intersango's service lately, and am happy with it. You can deposit by SEPA bank transfer, no ID required.\n", "bitcoind - How do I run a headless testnet on OS X?": "\nReady to use distribution of bitcoind for Mac OS X doesn't exist, so you would have to build it from source code, here is the instructions for that: What are the steps in building bitcoind on Mac OS X 10.6?\n", "thin clients - What is \"the gap limit\" in Electrum?": "\nWith a deterministic wallet you create from an initial seed a sequence of bitcoin addresses. Imagine counting 1, 2, 3, 4, etc.\nYou can create as many addresses as you like, but not all of them will appear on the blockchain. For instance I might create one especially for you to give me 1,000,000 BTC. That is (alas!) probably not going to be used. \nWhen you are recreating a wallet from scratch you do not know which is the last address used. So you start at the beginning and see what is on the blockchain. Then you look for the next one in the sequence. The gap limit is how many 'misses' you accept before you give up and stop looking. \n", "miner configuration - Why does merely having Windows Media Player open double my GPU hashrate?": "\npoclbm has not been set to alter the clock rate of your GPU. Windows media player is doing this when open and adjusts the system to what it requires.\nIf you specify clock speeds for your GPU via parameters or a separate application you can overcome this. \nTheres a number of applications which effect clock rates on windows machines, flash player open within a browser reduces a single card of mine down from 400 m/hash to 350 m/hash.\ncgminer is very easy to specify clock speeds and mine with, it adjusts them when you start the application (not when closing though).\n", "economic theory - Could bitcoin be destroyed if an entity cornered the market?": "\nThe exchange rate at any one point in time is determined by supply and demand at the markets.\nThe value of all bitcoins at the current market price is $80 million because the current market price is the point where the demand for bitcoins at a certain price meets the supply.  You are describing introducing an artificial demand that would indeed cause incredible rallies in the exchange rate and cause tremendous exchange rate volatility\nWhile some people cash out in a rally, others are buying.  This government taking this action would be enriching speculators mostly -- certainly not the best use of the governed's tax dollars.\nEven in a hypothetical scenario where this party you describe were somehow able to acquire 9.49 of the 9.5 million coins issued today, there are just about 11 million more that will be issued, so this entity would need to continue buying.  But even with just 10,000 coins remember that Bitcoin is divisible down to a Satoshi (0.0000001 BTC).  That 10K BTC gives 1,000,000,000,000 Satoshi trading units.  That allows plenty enough time to get an update out that provides for even greater divisibility.\nOf course, the risk then is that those 9.49 million coins are not destroyed but find their way back onto the market, creating again huge volatility and price inflation.  That can technically be done, yes.\nI don't think too many speculators are losing even a wink of sleep over it though.\n", "alternatives - Does merged mining require clients to download both blockchains?": "\nThose running a miner against a pool don't.  The pool operator would need both.\nAs stated in the comments below, normal users of the alternate system will not need the bitcoin chain but will need the alternate chain, and normal users of bitcoin will need the bitcoin chain but not the alternate chain. Once the block is mined, nobody cares what other chains may have been involved.\n", "transaction fees - Alternative incentives for miners": "\nTransaction fees, just like in the bitcoin blockchain.\nThe level of mining would then adjust up and down with the amount of usage.  You might need to subsidize it to get any participation from the start.\nIf demand is too low where fees don't justify this, then demand is too low where fees don't justify this.\nPerhaps you can use Namecoin, which already exists, to solve your problem?  Namecoin can be used for namespaces other than just .bit domains.\n", "security - Can a miner remain anonymous?": "\nIt is trivial for solo miners to use tor to hide IP adresses. This defeats mentioned above frequency analysis attack.\n", "development - Monitor all transactions on bitcoin network - API": "\nThis can be done with some degree of effort using the Bitcoin API.\nv0.7 even has support for this for addresses that are not in your own wallet:\n\nhttp://en.bitcoin.it/wiki/Raw_Transactions\n\nThere are other tools that you can use to build this capability as well.\n\nlibBitcoin\nArmory (see Extras)\nBitcoin ABE \n\n", "Is there a crowdfunding site for Bitcoin?": "\nFor donation-based crowdfunding:\n\nhttp://www.BitcoinStarter.com\nhttp://www.CoinFunder.com\nhttp://www.nestorbooster.com\nhttp://ignitiondeck.com/id/bitcoin-crowdfunding\n\nThere's also:\n\nhttp://www.Propster.me\nhttp://www.PirateMyFilm.com\nhttp://www.Booster.io\n\nand some day coming back:\n\nhttp://www.BitcoinChipIn.com\n\nOf course, the \"equity\" markets for equity-based crowdfunding:\n\nhttp://www.BitFunder.com\nhttp://www.MPEX.co\nhttp://www.CryptoStocks.com\n\nAnd a forms of microlending from the crowd include:\n\nhttp://www.BTCJam.com\n\nand others.\n[Update: Thanks to others answering this question as well, I've updated this list with their input as well.]\n", "blockchain - bitcoins from the future": "\nYour future self could memorize some SatoshiDice secrets after they are revealed.  This would allow him to win every dice bet he placed after travelling back in time, since knowledge of a day's secret allows one to determine whether a bet will win or not before placing the bet.\nThere is a theory that this has already happened.\n\n", "transactions - Are there any miners that will always include microtransactions even when no fee is paid?": "\nYes.  All miners using the default Bitcoin Core settings will include some free transactions in their blocks based on priority.\nLet's say you have a microtransaction-sized 5,000 satoshi input (about $0.01 USD presently).  According to Bitcoin Core 0.10.0's estimatepriority RPC, you currently need 59985719 priority to get a zero-fee transaction mined within 25 blocks (~4 hours).  That means you'll only have to wait until your input is about 46 years old:\nsatoshis * blocks per year * years / tx size > priority\n5000     * 52596           * 46    / 200     > 59985719\n\nThat's because priority is computed by input amount in satoshis, times the number of blocks since it was received, divided by the number of bytes in the transaction.\nI haven't heard of any miners that have free transaction policies that are more generous than the Bitcoin Core defaults.\n", "exchange rate - Psychological price": "\nTechnology is helping with this.\nFor instance, I don't know what the fair price is for a GPS device that I see for sale at Best Buy, for instance.  I whip out my mobile and do Amazon price check to see what the price is elsewhere.\nThis app could just as easily display the price in BTCs.  So therefore, we already are getting in the habit of distancing from our memory the price of a good and using technology to provide the answer for us.\n", "Is there an easy way to purchase Bitcoins?": "\nDwolla imposed a 30-day probationary period for new accounts.  After your first funds have been added to Dwolla from your bank account, you then cannot trade those funds with a Bitcoin exchange for 30 days.\nDwolla did that to prevent hackers or other scammers from getting cash out of an innocent person's bank account before there is time for the individual to notice.\nThere are a lot of individuals who are not considered bitcoin exchanges who will gladly trade their Mt. Gox USD funds for your Dwolla USD funds:\n\nhttp://bitcointalk.org/index.php?topic=78512.0\n\nIf you want an alternate method, there are numerous.  Since you are using Dwolla, then presumably you are in the U.S.\nBitMe accepts cash deposited through Chase:\n\nhttp://www.BitMe.com\n\nThe next fastest and convenient method is BitInstant:\n\nhttp://www.BitInstant.com\n\nBut once you are through the 30-day Dwolla probationary period, then Dwolla works pretty well for moving funds to and from the exchanges.  Camp BX, Intersango, and Mt. Gox all accept Dwolla USDs for their market exhanges.   Bit-Instant accepts Dwolla for direct purchases of bitcoins.\n\nhttp://en.bitcoin.it/wiki/Buying_bitcoins\n\nIf none of those options work well for you, you can also try doing an in-person trade:\n\nhttp://www.LocalBitcoins.com\n\n", "blockchain - Can more than 1 block be solved per 10 mins on average (LONG TERM)?": "\nsomeone /could/ throw a lot of hash power into the system. and until such a time as the difficulty adjusts, they /could/ produce more blocks than one per 10 minutes on average. but difficulty will adjust after one or more 2016-block chunks (note that change in difficulty is capped at a factor of 4 for each 2016 block chunk), until once again even with the new hash power only one block per 10 minutes is produced on average.\nso \"in the short term\" it is possible for someone to produce more blocks than 1 per 10 minutes, but \"in the long term\" unless they continue adding hash power perpetually, the difficulty will catch up to them.\n", "protocol - What is an \"unspent output\"?": "\nAn unspent output is simply an output of a transaction which isn't yet an input of another transaction.\nTo take the example from ripper234's answer (in which generated coins are immediately spendable, and we don't have to wait 100 blocks for them to mature), where:\n\nThe first block contained 50 mined BTC in address A (A = 50)\nThe second block contained 50 mined BTC in address A, a transaction sending 20 BTC to address B, and putting the change in address C (A = 50, B = 20, C = 30)\nThe third block contained 50 mined BTC in address A, a transaction sending the 20 BTC from address B to address D (A = 50 + 50, C = 30, D = 20)\n\nSo, after three blocks, there are four unspent outputs:\n\nA has two unspent outputs worth 50 BTC each\nC has a single unspent output worth 30 BTC\nD has a single unspent output worth 20 BTC\n\nAnd there are two spent outputs:\n\nthe 50 BTC generated in the first block, spent in the 2nd block\nthe 20 BTC output created in the 2nd block and spent in the 3rd block\n\nNote that unspent outputs don't merge together.  The two unspent 50 BTC outputs at address A are separate, and will remain separate at least until they are spent in a transaction\n", "mining pools - How to setup pushpool?": "\nThis guide will set up everything you need on a single machine.\nLet's get started by setting up the environment:\nsudo apt-get update\nsudo apt-get install build-essential\nsudo apt-get install automake gcc\nsudo apt-get install libevent-dev libmemcached-dev libcurl4-openssl-dev zlib1g-dev libjansson-dev curl memcached\n\nDepending on your distro some of these may not be available (libjansson-dev for example is not available on Lucid), and you may have to download and compile the sources.\nPushpool requires a database to work so we have to install either SQLite3 or MySQL. MySQL probably is the better choice, but SQLite3 suffices to just test pushpool:\nsudo apt-get install libsqlite3-dev sqlite3\n\nTo get MySQL you'd instead install libmysql++-dev.\nNext we download the pushpool source and extract it to /tmp/:\ncd /tmp/\ncurl -s http://yyz.us/bitcoin/pushpool-0.5.1.tar.gz | tar -xvz\ncd pushpool-0.5.1\n\nNow let's get on with it by configuring, compiling and installing it into /opt/pushpool:\n./configure --prefix=/opt/pushpool/\nmake\nsudo make install\ncd /opt/pushpool/\n\nAt this point we can quickly check that everything worked:\n$ sbin/pushpoold -E -F\n[2013-01-04 16:00:40.682356] config file(server.json): No such file or directory\n\nAll we need to do now is to configure the pushpool server.\nsudo cp /tmp/pushpool-0.5.1/example-cfg.json /opt/pushpool/server.json\nsudo nano /opt/pushpool/server.json\n\nHere's mine for example:\n{\n        # network ports\n        \"listen\" : [\n                # binary protocol (default), port 8336\n                { \"port\" : 8336 },\n\n                # HTTP JSON-RPC protocol, port 8337\n                { \"port\" : 8337, \"protocol\" : \"http-json\" }\n\n        ],\n\n        # database settings\n        \"database\" : {\n                \"engine\" : \"sqlite3\",\n                \"name\" : \"/tmp/data.sqlite\",\n                \"stmt.pwdb\" :\n                  \"SELECT password FROM pool_worker WHERE username = ?\"\n\n        },\n\n        # cache settings\n        \"memcached\" : {\n                \"servers\" : [\n                        { \"host\" : \"127.0.0.1\", \"port\" : 11211 }\n                ]\n        },\n\n        \"pid\" : \"/tmp/pushpoold.pid\",\n\n        # overrides local hostname detection\n        \"forcehost\" : \"localhost.localdomain\",\n\n        \"log.requests\" : \"/tmp/request.log\",\n        \"log.shares\" : \"/tmp/shares.log\",\n\n        # the server assumes longpolling (w/ SIGUSR1 called for each blk)\n        \"longpoll.disable\" : false,\n\n        # length of time to cache username/password credentials, in seconds\n        \"auth.cred_cache.expire\" : 75,\n\n        # RPC settings\n        \"rpc.url\" : \"http://127.0.0.1:8332/\",\n        \"rpc.user\" : \"bitcoinrpc\",\n        \"rpc.pass\" : \"bitcoinpassword\",\n\n        # rewrite returned 'target' to difficulty-1?\n        \"rpc.target.rewrite\" : true,\n\n        # allow clients to update the ntime field of their work\n        \"roll.ntime.disable\" : false\n}\n\nAnd finally we get to the database setup:\nsqlite3 /tmp/data.sqlite \"CREATE TABLE pool_worker (username VARCHAR(32), password VARCHAR(32))\"\nsqlite3 /tmp/data.sqlite \"INSERT INTO pool_worker VALUES ('username', 'password');\n\nAt this point we have created the database and inserted a new user called username and password password. Running sbin/pushpoold -E -F again will start the daemon.\nPointing your miner to http://username:password@127.0.0.1:8336/ should get you mining.\n", "legal - Is performing a 51% attack / double spend on Bitcoin illegal?": "\nThe only way I could see a double spend attack being illegal in any part of the world would be if there was some kind of law that automatically recognises international alternative currencies in the first place.\nI'm no lawyer, but I've never heard any mention of such a law existing.\nProprietary systems that create currency, points or tokens often have some kind of contract or T&C's that promise to give you something in return for the units and they also have conditions that you must meet to use them. Bitcoin however has no such contract for users to agree to, and no central authority to form an agreement with. \nFurther to that, even if a law in one particular country somehow made a double spend attack illegal, the international nature of Bitcoin means the attack could be performed from elsewhere.\nNote that it may not be in your best interest to perform a double spend attack either. A successful, sizeable double spend would likely draw widespread attention and could shake the confidence in Bitcoin, maybe causing the price to plummet. Quietly mining 51% of the coins over a long period would likely earn you more profit.\n", "blockchain - Bitcoin Block Download frozen": "\nLets start with the version of the bitcoin wallet that you are running. Are you running the latest version 0.6.3?\nSecond, which OS are you using, It'll help us to tell you which files to delete in order to restart the chain download. \nDelete the blockchain data and reload the chain.  !!! Do not delete the files wallet.dat, addr.dat and bitcoin.conf. Except for those, stop the wallet, delete all other files, restart the wallet.\nThe files you'll see and that you can delete are, e.g. blk0001.dat, blk0002.dat, blkindex.dat, *.log, peers.dat, the whole subdirectory 'database'\n", "timestamp - how can I insert an arbitrary sha256 hash into the blockchain?": "\nYou can encode any arbitrary data using the Bitcoin script's OP_PUSH and OP_DROP commands. For this, however, you would need some custom Bitcoin client, as the standard one does not allow you to send messages like this.\nAlternatively, you could just use the hash as a part of the generation of a Bitcoin address and store it in the Block chain by destroying one satoshi on it.\nThere should be a topic covering encoding of any data into the Blockchain somewhere on this StackExchange, so you can also have a look at that.\n", "protocol - Why does Bitcoin use two rounds of SHA256?": "\nFrom Zooko's answer provided in Crypto StackExchange:\n\nSHA-256(SHA-256(x)) was proposed by Ferguson and Schneier in their\n  excellent book \"Practical Cryptography\" (later updated by Ferguson,\n  Schneier, and Kohno and renamed \"Cryptography Engineering\") as a way\n  to make SHA-256 invulnerable to \"length-extension\" attack. They called\n  it \"SHA-256d\".\n\n", "transactions - I am reinstall my btc but balance and address not oldone?": "\nWith the Bitcoin.org client, the balance is calculated based on data in the blockchain data files.  If those files haven't finished updating, the calculation will not be current.\nThe way to check on this depends on which version of the Bitcoin.org client you are using.  The most recent versions (v0.6.x) will show the status at the bottom.  If is says \"Synchronizing with network ...\" then your balance may not show correctly until it has completed successfully.  When it is completed then a green check-mark will show in the bottom right-hand corner of the client.\n", "alternatives - Is Proof of Stake a hard-fork?": "\nIt depends on what PoS system is considered (or not, since I think the answer is the same either way).\nCunicula's system is completely different from what we have now. There's no way to \"half\" switch to it since a block which is valid in the current system means nothing in his system, and vice versa.\nMy system uses a skeleton which resembles the current system, so in theory you could solicit signatures in parallel and let anyone use them or not as he pleases. As theymos says a fork will still occur once there's a disagreement between the two systems about which is valid; and anyway, I think the process of collecting signatures and embedding them in the blockchain requires enough rethinking of the network that it is meaningless to regard it as anything but a hard fork.\nOf course, even if you make an entirely new alt for it, you can always provide a built-in mechanism to allow bitcoin owners to import or copy their wealth, to make sure the early adopters of decentralized digital currencies at large don't suffer from the advent of a new and potentially better alternative to the original Bitcoin.\n", "transactions - Can I spend a coin sent to myself before it confirms?": "\nYes.  Unlike other transactions you don't need to wait for the confirmations.\nFrom the code which selects which coins to use to fund a transaction in src/wallet.cpp:\nbool CWallet::SelectCoins(int64 nTargetValue, [...])\n{\n    vector<COutput> vCoins;\n    AvailableCoins(vCoins);\n\n    return (SelectCoinsMinConf(nTargetValue, 1, 6, vCoins, setCoinsRet, nValueRet) ||\n            SelectCoinsMinConf(nTargetValue, 1, 1, vCoins, setCoinsRet, nValueRet) ||\n            SelectCoinsMinConf(nTargetValue, 0, 1, vCoins, setCoinsRet, nValueRet));\n}\n\nwhere SelectCoinsMinConf's 2nd and 3rd arguments are \"number of confirmations a coin needs if it's from me\" and \"number of confirmations a coin needs if it's from someone else\" respectively:\nbool CWallet::SelectCoinsMinConf(int64 nTargetValue, int nConfMine, int nConfTheirs, [...])\n{\n    [...]\n}\n\nSo what's happening is the code first tries to fund the transaction using only coins you sent to yourself which have at least 1 confirmation and coins from others with at least 6 confirmations.  If it can't find enough that way, it tries again but only requiring 1 confirmation on the coins no matter where they came from.  And if that also fails, it relaxes the requirement for confirmations on coins you sent to yourself.\n", "mtgox - Is there a website that shows historic price data?": "\nI think this should help:\nhttp://bitcoincharts.com/charts/\nHere you can view all the historical data:\nhttp://bitcoincharts.com/charts/mtgoxUSD#tgSzm1g10zm2g25zv\nAnd if you need any specific date you can hit \"Custom time\". :)\nHope this helps.\n", "bitcoin core - What is the formal code review process of the standard client?": "\nAccording to the bitcoin.it wiki, as Stephen Gornick linked to in a comment, this should be the code review process:\n\nPull requests are discussed on the forums and if there is consensus they're safe, tested, useful, well written, match coding style, etc. then they're merged into the 'master' branch.\n\nAssuming the bitcointalk.org forums, I can't really find any pull request discussion. On Github it seems pull requests do get discussed though, for example: Bloom filter pull request.\n", "asic - Has LargeCoin shipped any hardware yet?": "\nSome people pre-ordered Largecoin units, but they never took deposits from anyone.\n", "network - Would my ISP consider my Bitcoin client to be a server?": "\nGoogle refers to server as a business grade hosting with a very different usage profile then personal use. This is not intended to catch someone using home server, but if a small business tries to power their rack of servers, then there is grounds for termination.\n\nThe Fiber Services are intended for the personal use of you and others with whom you share your residence (including, within reason, guests who are visiting you). You agree not to resell or repackage the Services for use by people other than those with whom you share your residence. If you wish to use the Google Fiber Services to provide Internet service to others, you must enter a separate agreement with Google Fiber that specifically authorizes you to do so.\n\nGoogle Fiber Terms of Service\n\nHere are some common-sense rules that you should keep in mind when using services provided by Google Fiber:\n\nYour Google Fiber account is for your use and the reasonable use of your guests. Unless you have a written agreement with Google Fiber permitting you do so, you should not host any type of server using your Google Fiber connection, use your Google Fiber account to provide a large number of people with Internet access, or use your Google Fiber account to provide commercial services to third parties (including, but not limited to, selling Internet access to third parties).\n\n\nLearn about Google Fiber terms of service\n", "exchanges - Why would Mt. Gox's Open Transaction method still require six confirmations?": "\nI think it's as simple as MtGox waiting for 6 confirmations before accepting bitcoin deposits to your deposit address, no matter where they've come from.\nIf you want instant transfers, don't use \"open transactions\".\nWe can try to make up reasons to try to make this policy make sense, but ultimately they make the rules and we act accordingly.\n", "transactions - Giving bitcoins to people as gifts": "\nProbably the most appealing way to do that would be by using Physical Bitcoins - they look nice as coins, and since they can hold Bitcoins, it's another bonus. It's definitely better for casual people than giving them Bitcoins in a normal way - at least coins are something they can physically grasp, rather than trying to understand what a cryptocurrency is.\n", "private key - Easiest way to collect funds of big lists of bitcoin privatekeys": "\nI would import all the private keys into my wallet immediately after generating them with bitaddress.org.  There's no need to wait for them to be used.\nSee this answer for how to import the whole collection at once.\n", "mtgox - Does Mt. Gox's \"Redeem a wallet.dat\" feature require an unencrypted wallet?": "\nTo do this Mt.Gox must have unencrypted wallet.dat.  Technically, you will have to either unencrypt yourself, or provide passphrase to Mt.Gox.  Which depend how Mt.Gox manage feature.  Maybe both work. \nBe very careful how transmit wallet and passphrase.  Use some good encryption, https if doing via web, PGP (encrypt mode, not sign mode) if doing via mail.  Transmit unencrypted wallet, or encrypted wallet with unencrypted passphrase, must have first secure channel.\nAlso must trust Mt.Gox.  Mt.Gox has US$5M seized from accounts in last few days, and now under investigation American gov't.  Maybe difficulty paying you, specially if paying US$.  Maybe motivated give up customer secrets.  Maybe American gov't right.  Something to think about. \nCant say for you, but I would never use such service.  Suspicious bastard, me.  \n", "client - Are there any commercial nodes available so my transactions won't show my IP address?": "\nBitcoin will run over Tor. There an article on the Bitcoin wiki that explains the process.\nJust install Tor and let it set up a proxy on its default IP (127.0.0.1) and port (9050). \nFor bitcoind, use the flag --proxy=127.0.0.1:9050.\nFor the GUI client, under Options, check Connect through socks4 proxy. Set the proxy IP to 127.0.0.1 and the port to 9050.\n", "exchanges - Will MtGox accept a poor quality ID photo?": "\nNo, it will not. The information on the scanned image must be very clear and show a clear photograph.\nIt is best to scan the ID using a quality scanner. Even a picture taken on a smartphone and filtered with a \"scanning\" program was insufficient for their requirements.\nSource: I lazily tried everything, getting rejected each time, then finally going and scanning the ID.\n", "Why are some transactions larger (in bytes) than others?": "\nI give a formula that you can use to calculate the size of a transaction given the number of inputs and outputs here.\nThe most significant factor contributing to the size of a transaction is the number of inputs to transaction has.  Each input contributes 179 to 181 bytes to the size, and each output contributes 34 bytes to the size.\nYour large transaction has 4 inputs - that's why it's bigger than the other transaction, which has none.\nThe actual number of bitcoins spent by a transaction is completely irrelevant, except that there may be a tendency for transactions which spend more coins to require more inputs to make up the amount.\n", "marketing - What are good ideas to help promote Bitcoin?": "\nI carry around with me a Casascius physical bitcoin (and another one that has been peeled).  This gives a great visual aid in explaining it in terms another person is already familiar with.   \nYou can encourage people to visit the faucet, and then do a trial run spending it, as described here:\n\nhttp://www.bitcoinmoney.com/post/25967017874\n\nYou could print up some Bitcoin notes with a trivial amount of bitcoins (e.g., twenty cents worth) and hand them out to people.  Put an expiration on it and if the funds aren't redeemed within that time (e.g. a month) then you reclaim the funds and give them out again.  But at least every one that does get redeemed, you know that person (or whomever they gave the note to) now knows what a bitcoin is and how it can be transferred.\nBut the point to get across is that this is not just neat technology or some type of marketing of a new product.  This is how we defang the financial system that repeatedly harms us (or at least lessens our reliance on it). \nEvery time a bitcoin transaction replaces a PayPal transaction it is like placing a pea on \"our\" side of scale versus the bricks holding their side down.  The scale has a big plate though, and eventually all of our peas together will cause it to tip.\nBut that's how decentralizioin works -- one pea at a time.\n", "websites - Is there a Bitcoin exchange comparison site (fees, details) like distrowatch.com or http://cmsmatrix.org/?": "\nTry Exchange war:\nhttps://exchangewar.info/\nwhich shows even the most popular pairs for each exchange.\n", "blockchain - Will the transaction fee economy in Bitcoin follow the commission model?": "\nNot entirely. In a commission model you generally pay a percentage of what the transaction is, whereas in Bitcoin you just pay for the bytes the transaction requires. The setup is less like a commission model and more like a bank transfer fee model - banks generally don`t charge you for how much you transfer, but for the transfer itself.\n", "transactions - Why are balances not in the blockchain?": "\nThat would not work because the way the system is designed, accounts do not have a pile of coins to spend. Spendable coins exist in the form of transaction outputs that have not yet been used as the input of a subsequent transaction. To form a valid transaction, you must pull in coins from specific transaction outputs, not from specific accounts.\nOne could imagine a Bitcoin-like system where accounts have balances. In such a system, you could simply report the new balance of an account in any block that modified that account's balance. Then a transaction could pull in from accounts rather than specific transaction outputs. But that system would not be Bitcoin.\nEssentially, Bitcoin was not designed around accounts. Accounts are just a convenient way for human beings using Bitcoin to think about the set of transaction outputs that can be claimed with the same key. (Or to form transactions that we know can only be claimed by a particular person.)\n", "synchronization - Bitcoin qt won't update": "\nIt is going to be slow when you first install. I'd recommend downloading the bootstrap.dat file. If there is an X and two monitors, you're either not connected to the internet or something like your firewall are preventing you from updating it.\n", "client - Defense from Government Intervention": "\nThe scenario you name would be great for cryptocurrencies as it would make them mainstream. As soon as people got sick of govt intervention with Bitcoin in such a scenario, it would probably be relatively easy to get enormous numbers of people to switch over to a very similar (but independent) Altcoin. \nThe nature of the cryptocurrency technology is such that it is very difficult to stop people running the software, but a govt could have success in closing down businesses that accept unofficial versions such as the fictional Altcoin. If that happened, it could however still thrive outside of the region being regulated.\nPrevention would probably need to occur at a political level, but I'd hope market forces as I've just described will be sufficient prevention as long as no organisation gains too much power over international law. Agreements negotiated in secret like the TPPA are something to watch out for though.\n", "exchanges - Is there a service to withdraw dollars by wire transfer with small fees?": "\nTake out to Dwolla (FREE Account), then move to bank account for a flat fee of  $0.25.  I use to use them all the time like that.\nFee list from Dwolla:\nhttps://www.dwolla.com/fees\nMtGox doesn't charge anything to send to Dwolla, they just charge you to transfer from BTC to Dollar's. But it's cheaper than what it was for ACH transfer.\n", "synchronization - When downloading the blockchain for the first time using bitcoind, how do I know when it's done?": "\nRun bitcoind getinfo in your shell of choice and compare the block count, listed after \"blocks\", to the block count listed here. If the two numbers are the same, your client is up to date.\n", "exchanges - Where do the dollars go?": "\nWhen you buy a bottle of soda at the convenience store, where does the money go? \nThe money goes to the party that sold it to you -- that party owned the bottle before you owned it.  You might be able to trace ownership of that bottle all the way back through the supply chain, to the point at which it was manufactured.   It probably had several prior owners before you got it.\nBitcoins are like a commodity that works the same way.\nIf you purchase from a market exchange (like Mt. Gox), here's how that works.  Mt. Gox, like most market exchanges, operates using deposit accounts.\nTo buy $100 USD worth of bitcoins you must have deposited $100 to your account with the exchange.  To sell 10 bitcoins you must have deposited 10 BTC to your account with the exchange.\nSo when you trade your $100 USD for someone else's 10 BTC, your $100 goes to their account, and their 10 BTC goes to yours (if there were fees, the amounts would be adjusted appropriately to cover fees).\nThen when you withdraw your BTCs, the exchange will send that amount of bitcoins from the exchange's wallet to yours.  When the seller withdraws the USDs (or whatever currency the coins were sold for), the exchange will send those funds.  This generally occurs through the banking system, with the funds eventually arriving in the seller's bank account.\nThere are other types of bitcoin sellers -- direct sellers, who have an inventory of bitcoins that they purchased previously, or will make a trade behind the scenes to be able to deliver your order.  So the dollars from your purchase goes to them in exchange for the bitcoins they owned.\nThen there are other types of trades which involve risk.  These include financial derivatives where you may speculate on bitcoins using cash but until you actually withdraw those bitcoins to your own wallet, you only own a claim against those bitcoins (or against a financial position on bitcoins).  But that is an example where there is not a simple buying and selling of bitcions at a certain price.\nNow every bitcoin in existence originated from mining.  Mined coins arrive 50 at a time about once every ten minutes.  They are earned by a mining operator (or mining pool and distributed to the mining operators who were mining).  To mine, one must buy expensive hardware, expend the effort to build and operate the equipment, and purchase the electricity expended during mining.  The mining operators can then deposit their bitcoin proceeds to an exchange to sell them and receive cash in exchange.\n", "mtgox - Backing up bitcoins on Mt.Gox": "\nMt. Gox operates a hosted (shared) EWallet.   They claim to have cold storage and perform other backup practices, but there is nothing that you as a Mt. Gox accountholder can do to \"back up\" those funds.  And if there is a problem restricting you from accessing your Mt. Gox account, there is nothing you can do to recover those funds.\nIf you have your own wallet, perhaps running the Bitcoin.org client, you then do have the ability (and responsibility) to back it up.\n", "Implement website payment solution": "\nIf you want to create your own implementation using the Bitcoin Client, you ought to look into Accounts. This concept would allow you to have complete control over your users' payments, but it would also mean that you have to implement your own solution that would be communicating with Bitcoind.\nThere is also a more complete solution from StrongCoin in PHP, but I have no experience with it.\n", "payment - Write down bitcoins on a piece of paper": "\nHere's a simple way to do it:\n\nOn bitaddress.org, use the \"Paper Wallet\" tab and create 1 address\nUsing your Bitcoin client, send an amount of bitcoins to the Bitcoin Address on the paper wallet\nPrint the paper wallet and give it to your friend\nTell your friend to create a wallet at My Wallet. He can then use the \"import from paper wallet\" feature and simply scan the QR code to import the bitcoins.\n\nPlease note that when handing over a private key \"offline\" like this both you and the receiver will have access to the funds if you keep a copy of the private key. The receiver has to trust you to not take advantage of that before he has had the chance to move the funds.\nbitaddress.org by the way is a client side tool so you are not trusting them with your money, though you might want to read this: Should I trust bitaddress.org?\n", "security - Should I trust bitaddress.org?": "\nYou don't entirely have to trust the owner of the site. The site is client side Javascript based, which means you can probably save a copy of the code, then review it, and run it offline.\nIf you continue to use the website though, you're trusting the owner of the site to:\n\nNot change the code in any way that compromises the security of the private key\nMaintain adequate security so that no hacker can change the code in any way that compromises the security of the private key\n\n", "synchronization - Are there ready-to-use indexed bitcoind data files available somewhere?": "\nIf you're going to trust someone to give you a pre-indexed version of the blockchain, you are trusting them about the entire history of transactions. They can claim whatever they want (within certain bounds), and your client will accept it. If there is a mistake in the data (either deliberately or accidentally), it will result in the client rejecting the future valid chain at some point, potentially landing you in a side chain (which may be under control of the attacker). If many people would use the same source for their pre-indexed files, they would all end up on the same side chain, living in their own happy world. Both chains (the real one, and the side one) would allow every existing output to be spent once; if this happens on a large scale, it is a disaster for Bitcoin.\nOf course, the long waiting times are a real problem (the upcoming 0.8 version should be significantly faster, though) but if you can't spend the resources and time to maintain a fully validating node (like the reference client implements), consider using a lightweight client like Multibit. It does not offer the same security, but it is better than trusting a centralized instance to tell you history.\n", "mining pools - How much internet traffic does a 3.5GH/sec pooled miner use?": "\nThe internet traffic for any miner is generally minimal and in most cases the miner speed is irrelevant. The Getwork protocol would at most make a small request every second, but with extensions such as rollntime, one can make the request less frequently. You can roughly see how much data is being sent from the examples provided here. Generally, you shouldn't worry about the internet speed or bandwidth.\n", "Mining and Bitcoin Wallet": "\nIf you are solo mining against your own bitcoin server, then for each hash your miner tries it either solves the block (and earns 50BTC [plus transaction fees], provided it doesn't get orphaned), or doesn't (and earns nothing).\nIf you're mining with a pool, then payment depends on the pool's payment system. If for example it is PPLNS (Pay Per Last N Shares) with a value of 500,000 for N, then you don't get paid anything unless a block is solved within the 500,000 \"shares\" mined following each share that you submit. Let us know the pool you're using (or the payment mechanism), and we will be able to provide some more info.\nWith 97.3Mhash/s, I'd (roughly) estimate you'd earn around 0.04 to 0.05BTC per 24hrs with a difficulty of 2,100,000 (approx the current difficulty).\n", "address - Why don't addresses in an (unencrypted) wallet.dat file seem to match addresses that would be generated by the private keys in the wallet?": "\nPerhaps pywallet is misreporting the bitcoin address?\nDoes your wallet actually show a 1NpYUPpz2E4fhYfoJRfUApa5hSPcrpCGaT bitcoin address?\nHere's a method to manually determine the public address for the private key.\n\nhttp://en.bitcoin.it/wiki/Technical_background_of_Bitcoin_addresses\n\n", "blockchain - When will a block not be forwarded?": "\nBlockchain.info stores information in a database, it does not show only the information that is currently in it's Bitcoin. It is connected to many nodes, so it may see information your Bitcoin doesn't, and will store data after a normal Bitcoin client would discard it.\nBitcoin uses a basic rule \"I'm going to use the first block I receive as the current best block\". The duplicate numbered orphaned block was usually broadcast too late to everybody. If the \"unpopular\" later block is somehow the one that is next built upon, there will be many requests between clients for the correct blockchain up to the new block.\n", "blockchain - How do I open an Armory .wallet file in the MultiBit Client?": "\nIt is normal. Each Bitcoin client makes its own choices on how it stores its private keys and balance information. The main (Satoshi) client uses a BerkeleyDB database, BitcoinJ serializes its wallet object directly to file, and other clients do other things. While I'm not 100% certain how Armory or MultiBit store their wallets, chances are they've chosen different techniques which are not compatible. If you want to switch clients, I'd suggest generating a new wallet in your new client and using the old client to send all your coins there. If you have addresses that you'd like to keep from the old client, you'll need to find some way to export the private keys from the old and import them into the new via some standard they both support, like WIF (Wallet Import Format) private keys. Sadly, not every client will give you easy access to the private keys so it may not actually be possible - I'd refer to both clients' documentation for that answer.\n", "How do I calculate what the TOTAL Wallet fees are going to be with Bitcoin-Qt v0.6.3?": "\nThe fee will change with time, if it happened to be high due to the coins being recently received.\nThere is a fork of the client that doesn't require any fee to be paid.  Your transaction will just take a day or so to get any confirmations.\nYou can wait to let the coins in your wallet age and then at least the fee should be small and consistent.\n", "Is Blockchain.info Open Source?": "\nAll parts directly involved with the wallet service are open source. On the github project page the repositories My-Wallet, My-Wallet-Integrity-Checker and MyWallet-RPC-Communicator is BSD licensed. \nThe repositories My-Wallet-iPhone, My-Wallet-Android are GPLv3.\nHowever the database backend and some other parts of the site are not open source. This will change at some point in time, but there are some things I want to finish first.\n", "How to implement a green address in Bitcoind?": "\nGreen addresses are by convention, not by protocol.  You would need to publish an address and then sign a message with the corresponding private key that says, \"I promise never to double-spend any coins from this address.\"  Then you'd need to convince others to believe your promise.\n", "mining pools - What do all of the items in the output from p2pool mean?": "\nP2Pool: 17401 shares in chain (9127 verified/17405 total) Peers: 11 (0 incoming)\n\nThis means that P2Pool knows of 17405 shares, 9127 of which have been verified (indicating that you haven't been running p2pool for more than 24 hours), and 17401 of which are in the selected chain (meaning that there have been 4 orphaned shares globally in the past few minutes).\nLocal: 1689MH/s in last 10.0 minutes Local dead on arrival: ~3.8% (2-8%) Expected time to share: 29.8 minutes\n\nYou have 1689MH/s mining, with 3.8% of shares invalid due to latency between P2Pool and the miner. It's expected that you'll get your next share in half an hour.\nShares: 3 (1 orphan, 0 dead) Stale rate: ~33.3% (6-80%) Efficiency: ~73.5% (22-104%) Current payout: 0.0174 BTC\n\nYou found 3 shares, one of which was orphaned (33.3% of them), indicating that your normal stale rate if you continue falls between 6% and 80%, with 95% confidence. Your efficiency is 73.5%, meaning that you'll only get 73.5% of what you should, based on your stales, though in the future, the true value will fall between 22% and 104% with 95% confidence, so there's no evidence currently that something is wrong (since 100% is in that interval).\nPool: 415GH/s Stale rate: 9.3% Expected time to block: 6.3 hours\n\nThe pool has a total of 415GH/s of hashing power, and 9.3% of discovered shares aren't integrated into the sharechain. It's expected that we'll get a block in 6 hours.\n", "gpu - Over-reporting miner?": "\nI agree, that 15W card should calculate hashes slower than anything listed at  https://en.bitcoin.it/wiki/Mining_hardware_comparison - 20MH/s sounds about right.  You probably misread the units (1GH = 1000MH), or the software has a bug and miswrote them.\n", "Is there a blockchain.info for testnet?": "\nYes, blockchain.info has its own testnet service: https://testnet.blockchain.info/\n", "development - What's the easiest way to gather/collect statistics on the bitcoin network?": "\nBitcoinCharts doesn't show much from the bitcoin network.  The market data comes from the exchanges. \nBitcoin Charts shares freely their markets and trade history data:\n\nhttp://bitcoincharts.com/about/markets-api/\n\nThe original source for the data is accessed from the exchanges themselves.  Most exchanges do share their data but the API methods are not standard nor consistent between exchanges.\nAs far as statistics on the blockchain data, the method will vary on which statistic you are trying to get at as some are stored (confirmed transactions), and others are not (e.g., memory pool contents, double spend transaction attempts, etc.)\nIf you like python, then Armory provides access to the blockchain.  See the Sample Armory code in the extras::\n\nhttps://github.com/etotheipi/BitcoinArmory/tree/master/extras\n\n", "What is the fee charged by MtGox to receive a wire transfer in AUD?": "\nFrom the International Wire Transfers - Deposits section of MtGox's FAQ:\n\nOur bank charges a receiving fee of 1,000 Yen.  You can send wires in\n  any currency to our bank in Japan. Funds sent in non-USD will either\n  be added to your wallet in that currency if you have one, or converted\n  to USD with a 2.5% exchange fee. Any fee charged by your bank or an\n  intermediate bank will be deducted.\nIf you plan to invest more than 50000 USD or equivalent on the long\n  term in bitcoins, we need to know about you. In this case please use\n  our verification system to get your account verified first. Submission\n  of forged documents will result in declaration to the appropriate\n  authorities.\nNot following the instructions written below can result in your funds\n  being lost, or handed over to the local authorities while pending\n  investigation.\nAlso note that International deposits lower than 75 USD (or\n  equivalent) typically result in only a small amount of funds being\n  deposited into the receiving account or may be rejected because the\n  amount of fees went over the amount of sent funds. This is due to\n  intermediaries and banking fees.\n\nGoogle tells me that 1000JPY is worth about 12AUD.\nThere is a mention of another method \"Technocash\" having issues, which likely means it's no longer available. It also mentions that AurumXChange will soon accept Australian bank deposits (no mention of withdrawals, but you could hope!).\n", "bitcoind - How does SatoshiDice operate with 0 confirmations?": "\nThis is oversimplified, but here's one sequence showing a serie of payment transactions:\nMiner --> You -->  Me -->  SatoshiDice --> Me\nSo you send half a bitcoin to me and I use a client that lets me send it instantly to SatoshiDICE.   SatoshiDICE then includes at least part of that payment in their win or loss return payout.\nOnce your payment to me confirms, then mine to SatoshiDICE can confirm.  Once my payment to SatoshiDICE is confirmed, then their payout back to me can confirm.\nSo if you cheated me and your payment to me was a double spend it will then never confirm (reaching 6 confirmations).  And in turn, my transaction to SatoshiDICE will never confirm.  And in turn, the SatoshiDICE payout transaction back to me will never confirm.\nSo it doesn't matter that I saw a payout transaction from SatoshiDICE right away, I can't spend it anywhere until it confirms.\nBecause even a transaction with one or two transactions can get orphaned due to a block reorg and a double spend attack, even if you see a confirmation that doesn't mean the transaction will clear.  That is why, unless there is recourse, only six transactions is the recommended number of confirmations to require.\nHere's an example of the transactions for a losing 0.02041833 BTC bet:\n\nhttp://satoshidice.com/lookup.php?tx=0419fdcbc82add4b46b6fe11e362561d0a3d18329770b36a637a2b60a881cf1e\nhttp://blockchain.info/tx-index/16106266/0419fdcbc82add4b46b6fe11e362561d0a3d18329770b36a637a2b60a881cf1e\nhttp://blockchain.info/tx-index/16106269/e69d7d733d4de5eee6fae0d402fe0db0fdd2544e9ece0f169922d143a8eaf850\n\nYou can see the flow visually here:\n\nhttp://blockchain.info/tree/16104343  (click on the orange dot for the 0.01569037 BTC payment, which was one of the two inputs that paid for the bet.)\n\n", "transactions - Using the Bitcoin API, how can I see the sending address?": "\nIf you use gettransaction on the transaction ID, the keys used to claim the inputs are in the scriptSig fields. They're the string starting with 04. You'll have to hash them and then convert them to base58 get account IDs.\nNote that these account IDs may or may not actually mean anything. If you're being paid out of \"change\", then the account IDs are essentially random.\n", "json rpc - \"No more backup pools left. Using primary and starting over.\"": "\nPresumably, you have no backup pool configured. So if your server doesn't respond quickly enough, poclbm just fails over back to the primary pool. If these are only happening occasionally, I wouldn't worry about it. Anything that momentarily prevents the RPC call from getting a response can do this.\n", "How does the computing power of the Namecoin network compare to the Bitcoin network?": "\nSince Namecoin started using merged mining with Bitcoin, its effective processing power increased substantially. The current difficulty is 1063443.\nThis is very high considering the resale value of namecoins (1 namecoin is worth 0.002 of a bitcoin) and given that the difficulty is 49% of the Bitcoin difficulty.\nThe Bitcoin network currently is around 16TH/s, so you'd need around 8TH/s to successfully attack the Namecoin network. That would be pretty expensive!\n", "installation - Why is downloading blocks taking longer and longer?": "\nVery little of the time is spent downloading the blockchain data compared to how much time your computer is spending verifying each transaction.  Bitcoin does a ton of disk i/o for this.\nAs there are more transactions since April (thanks to SatoshiDICE, we now see 40K and more transactions a day) those blocks take longer to verify.\nIf you are on an encrypted filesystem, that will really be hurtful for perfomance.  If so, consider moving the blockchain and index to a filesystem that isn't encrypted and then symlink to them there.\nAlso, the latest release of the Bitcoin.org client (v0.6.3) has peformance improvements in this area over previous releases.\nEnd uses generally will not need to run the client and instead use SPV (Simplified Payment Verification).  So individuals and organizations that do want to run the full client should recognize that to do so requires a beefy CPU and quick storage (SSD maybe even).\nA future version (after 0.7) will include LevelDB which should make huge gains as far as performance.\nIn the meantime, you can always securely download a full set of blockchain data from   Sourceforge that is as-of a fairly recent point in time.\n", "Where on the web can I find out the current total blockchain size?": "\nBlockchain.info has many useful stats.\nhttp://blockchain.info/charts/blocks-size\n", "View market depth/ orders on mtgox?": "\nI can't seem to find it either, I'm pretty sure that they used to show it. The market depth is available in their API though and if you want something a bit more user friendly it is also available on Bitcoin Charts.\n", "Extract private keys from Bitcoin Wallet": "\nUse pywallet to extract the private keys and copy the output to blockchain.info's Import Backup page.\nTo use pywallet, you open a command prompt/terminal window at the folder where you saved it and type ./pywallet --dumpwallet --password=\"Whatever your passphrase is\". NOTE: this will output everything in plain text, so if you do this on a public computer or with somebody looking over your shoulder, some of your bitcoins may be stolen.\n", "exchanges - What benefit does bitcoin provide over using a credit card?": "\nI don't consider these to be competitors.\nCredit cards are a convenient way of doing payment processing on top of fiat currency. Bitcoin is a digital currency on itself.\nSure, Bitcoin today can function as a very rudimentary way of doing payments (just like cash-via-mail can be), but it's not particularly good at it - all it provides is storing and transferring value. What I hope is that in the future it will become a platform upon which payment processors can build. Since the currency is already inherently digital, building a payment platform on top of it should be significantly easier. Furthermore, since it is decentralized, everyone has the ability to become their own payment processor (or bank...).\n", "gpu - Bitcoin mining may reduce the lifespan of my video card?": "\nHeavy usage will certainly decrease the lifetime, but I think it's not incredibly much as long as it's not overclocked. You will probably even buy a new card (because the current becomes too outdated/slow) before the current one breaks down.\nKeep an eye on the temperature for a few hours (or as long as it's not stable/maxed out), it shouldn't exceed about 75-80 \u00b0C. Otherwise you may want to invest on cooling, regardless of bitcoin mining (games also make the card warm). If it's at an okay temperature, you should be good.\n", "raw - Can the same target address appear more than once on transaction output?": "\nThere is no protocol rule which forbids having multiple outputs with the same bitcoin address. Here is an example of such a transaction:\nhttps://blockchain.info/tx-index/16459554/3baf2227efd23449822e181372389af762c26a4567362ef174fa8659cf61eb20?show_adv=true\nIt is not common to see this as there is no point in having mutiple outputs when it can be done in one, it just makes the transaction larger and hence increases transaction fees.\n", "Getting balance/downloading blockhain with bitcoinj": "\nOK, now I get it.\nI can't.\nBitcoinj saves only the headers. And - what I did not know - you can't get the balance with just headers. \nFor more ingormation you can see the exact description what is in the headers here https://en.bitcoin.it/wiki/Block_hashing_algorithm\nWhat I can do, however, is saving the wallet right afterwards. Which I will do.\n\nprevious \"answer\"/thinking out loud:\nI am poking around in source code.\nIt seems like the important part is when sendTransactionsToWallet is called in BlockChain.java - but it gets only called during connectBlock and nothing else.\nconnectBlock is called only during add. And the only added blocks are the new blocks from the network, not the ones from BlockStore.\nBut I will look around the code a bit more.\n\nI am not sure, what terrible would happen, if I rewrote the constructor of BlockChain.java from:\n/**\n * Constructs a BlockChain connected to the given list of wallets and a store.\n */\npublic BlockChain(NetworkParameters params, List<Wallet> wallets,\n                  BlockStore blockStore) throws BlockStoreException {\n    this.blockStore = blockStore;\n    chainHead = blockStore.getChainHead();\n    log.info(\"chain head is at height {}:\\n{}\", chainHead.getHeight(), chainHead.getHeader());\n    this.params = params;\n    this.wallets = new ArrayList<Wallet>(wallets);\n}\n\nto (writing from my head, getters/setters might not be right, etc)\n/**\n * Constructs a BlockChain connected to the given list of wallets and a store.\n */\npublic BlockChain(NetworkParameters params, List<Wallet> wallets,\n                  BlockStore blockStore) throws BlockStoreException {\n    this.blockStore = blockStore;\n    chainHead = blockStore.getChainHead();\n    log.info(\"chain head is at height {}:\\n{}\", chainHead.getHeight(), chainHead.getHeader());\n    this.params = params;\n    this.wallets = new ArrayList<Wallet>(wallets);\n    StoredBlock sBlock = blockStore.getChainHead();\n    Sha256Hash prevHash = sBlock.header.prevBlockHash();\n    while (prevHash!=Sha256Hash.ZERO_HASH) {\n        for (Wallet wallet:wallets){\n            sendTransactionsToWallet(sBlock, NewBlockType.SIDE_CHAIN, wallet, sBlock.transactions); \n        }\n        sBlock = blockStore.get(hash);\n        prevHash = sBlock.header.prevBlockHash();\n    }\n}\n\nbut again, I don't want to reinvent the wheel or anything.\n", "cpu mining - How do I solo mine on a mac?": "\n\nFor Mac OSX users, you must have Snow Leopard (10.6) or newer\ninstalled. \nA fully-connected BitCoin wallet. see http://bitcoin.org/\nIf this is the first time you have launched BitCoin, it must\ndownload and verify all the existing blocks in the system.\n\n\n This can\n    take an hour or longer - just ignore it for a while.\n\nUpdate: since the time of this post the block chain has grown It can take several days on a slow connection to download and is currently pushing past 15GB  \n\n\nInstall DiabloMiner see\nhttps://github.com/Diablo-D3/DiabloMiner/wiki/Solo-Mining\n\n", "transactions - How important is the fee for speed of confirmation?": "\nIt seems like there is some policy against free transactions in official client.\nThere are some anti-spam protections, which my toy transactions exactly meet (low transactions, recently accepted coins, etc)\nhttps://bitcointalk.org/index.php?topic=63553.0\nhttps://en.bitcoin.it/wiki/Free_transaction_relay_policy\n", "Transaction with slightly changed script is never relayed": "\nThe standard client will not relay non-standard transactions. However, if you get them directly to a miner that accepts them, clients will process them correctly and the transaction will work.\nYou can send your transactions to 173.242.112.53. This is a server run by Eligius that will relay all valid transactions and they will include even non-standard transactions in the blocks they mine. Others who are willing to relay or include free and non-standard transactions also tend to link to this node, so it can get your transaction included in blocks mined by other pools as well.\n", "development - how to monitor +20,000 addresses for new received transactions?": "\nI am basically doing the same thing for bitcoinmonitor.net. I have a database of addresses to monitor and get notifications from bitcoind for any incoming transaction.\nI maintain a patchset for bitcoind which allows setting an url which will be called with any incoming unconfirmed transaction, including transaction details in a json object. Also for any new accepted block a (different) url can be set up to be called with details on the new block.\nSo you will get a notification for any incoming unconfirmed transaction, then you can match this with the monitored addresses in your database.\nIf you want to trigger actions after a certain number of confirmations you need to hook up to the new block event.\nCheck https://github.com/TripleSpeeder/bitcoin for my bitcoind fork. I try to keep it more or less in sync with the current stable official client. This is running stable with bitcoinmonitor.net for around 10 months now.\n", "linux - Is it possible to use OpenCL on a minimal OS without X? - Unix & Linux Stack Exchange": "\nYou can use xvfb. I used it to run a download client based on mono and some graphical stuff on a machine without graphics card and monitor.\n", "fpga - How is a Butterfly Labs Bitforce Single powered?": "\nIt uses ~70W @ 12V of external power. The stock power brick is cheaply made, giant, and inefficient (PF=.5,efficiency~.8). Fortunately, the power brick can run on 240V.  Many people make their own cables to use an ATX or bench PSU (with higher powerfactor and efficiency)\nsource: https://bitcointalk.org/index.php?topic=67819.msg796852#msg796852\n", "security - Setting up BAMT root access": "\nIn the absence of a reason, I'm going to assume it's specific to their distro, and they meant \"we only created (and always use) the root account, so our documentation assumes you are logged in as root. We haven't tested for odd corner cases that arise because of subtle differences in the way sudo works\".\nsudo is considered more secure than logging in as root for a number of reasons. It should always be used on mainstream distros.\nBut for a tiny USB stick distro (with no ability to login as root over the network), the security benefits of sudo may not be worth the complexity.\n", "Can I use a passphrase as a private key?": "\nThe simplest and most common way of doing this is to do SHA256(passphrase) and to use the result as your private key. You can e.g. use the \"Brain wallet\" tab on www.bitaddress.org which is all javascript so that you can download it and do everything offline for increased security.\nBe aware though that your pass phrase must be really long and truly unique since if someone would use the same pass phrase they would have access to your money. The comment from Pieter Wuille above is worth repeating:\n\nBe aware that when you do this, you expose your wallet to the entire\n  world to do a brute-force attack on your password. If many people\n  start doing this, it may become very profitable to try to find their\n  passwords. Software like Armory and Electrum have the ability to\n  generate a determinsitic wallet from a 'seed', but this seed is still\n  randomly generated, in order to be sure that it is hard to attack\n\n", "economic theory - BTC Days Destroyed, Lifo or Fifo?": "\nNeither.  The client chooses the best fit of coins for your spending.  This is known as the knapsack problem.\nThe coins chosen will be the ones that yield the lowest amount of change, with exceptions for very recent (unconfirmed or newly confirmed) coins.  Even when there are multiple solutions that yield the same amount of change, it will not necessarily choose an older coin versus a newer coin.\nHere's an answer to another question that gives more details on this:\n\nhttps://bitcoin.stackexchange.com/a/1078/153\n\n", "Is it possible to cancel an unconfirmed transaction?": "\nBitcoin-Qt doesn't support anything like that.\nTheoretically:\nA transaction is canceled by publishing a second transaction which double-spends some of the coins used in the first transaction (this can be a send-to-self). If the second transaction is included in a block before the first one, the first one becomes invalid and can be considered fully cancelled after the second transaction receives 6 confirmations. It's normally not easy to do this. Network nodes won't accept transactions which double-spend coins used in a transaction they already know about. However, nodes gradually forget about transactions if they don't get into blocks, so a transaction could be cancelled if it doesn't make it into a block after several days and both the sender and recipient stop rebroadcasting it.\nBitcoin used to have a feature called transaction replacement. A transaction could be marked as non-final, which prevented this transaction from getting into a block, but allowed the transaction to be cancelled at any time. Satoshi disabled this a while ago, though. Transactions can still be marked as non-final, but they can't be replaced.\n", "p2pool - Specific namecoin address in merged mining": "\nwith p2pool at least for the coins are 'merged' mining you cannot reconfigure them to go to any other account except for the default account of that wallet.  However  you may be able to work around this in one of the following ways depending on your coding ability.\nMonitor P2Pool logs and trigger script\nWatch the p2pool logs and when a block is found trigger a script.\nThis can be achieved using swatch (linux tool for watching logs files) and looking for merged blocks that appear in /path/to/p2pool/data/bitcoin/log  (cant find the example merged block right now will edit later to include)  so in this instance what you would do is use this command:  swatch -t /path/to/p2pool/data/bitcoin/log  and create a ~/.swatchrc in your home directory with something like this:\nwatchfor /SHARE|BLOCK/\n    exec echo \"P2Pool Event:\\n\\n$_\\n\" | python ~/pyPushBullet/pushbullet_cmd.py 6xxxxxxxxxxxxxxxxxxxxxxxx60993c note xxxxxx\"P2Pool Notification\" \"$_\"\n\nIm using push bullet to send notifications on share and block notifications.  however in your case you would want to craft a script to check the block itself for merged outputs.\nWallet Notify\nMost Crypto Clients now let you configure an action for\n  -blocknotify=<cmd>     Execute command when the best block changes (%s in cmd is replaced by block hash)\n  -walletnotify=<cmd>    Execute command when a wallet transaction changes (%s in cmd is replaced by TxID)\n  -alertnotify=<cmd>     Execute command when a relevant alert is received (%s in cmd is replaced by message)\n\nCourtesy Off The Bitcoin Wiki\nagain in the same vein as the first optin you could  create a script that is triggered on wallet notify for the Nnamecoin wallet and move the coins from the default addreaa to you chosen address.\n", "exchanges - Is there an API for price estimation?": "\n    while amount > 0:\n        amount_i = int(mtgox_depth['bids'][index]['amount_int'])\n        price_i = int(mtgox_depth['bids'][index]['price_int'])\n        if amount_i < amount:\n            total_value += amount_i * price_i\n            amount -= amount_i\n        elif amount_i >= amount:\n            total_value += amount * price_i\n            amount = 0\n        index -= 1\n    spot = int(total_value / float(total_amount))\n    return spot\n\nSomething like this, where mtgox_depth is a json object of https://mtgox.com/api/1/BTCUSD/depth?raw, should work for you.\n", "economic theory - Is using bitcoin for savings a risky choice?": "\nBuying bitcoins shouldn't be thought of as savings, it's a very high-risk speculative investment. It could go way up in value, or way down.\nLuckily, if you want Bitcoin's power of secure storage without exposure to the exchange rate, you can do that too, in theory at least. Use most of your funds to buy X bitcoins, and use the rest as collateral to short-sell X bitcoins. You'd have to pay a bit more for the exchange, pay an interest rate, and trust some of your money with the platform, and there aren't currently very good margin trading platforms, but it can be done and might be worth it if you're sufficiently averse to the traditional alternatives.\n", "transactions - Can OTC help lessen the cost of slippage and exchange rate risk?": "\nBitcoin is compatible with almost any financial contract or derivative that exists today.\nI think the scenario you are describing is this: \nBob must pay to Alice $1,000 USD worth of bitcoins.\nBob has $1,000 USD to send to Alice but has not yet bought the bitcoins.  What ways are available to Bob that allows him to send the funds to Alice without exposure to exchange rate risk.\nYou didn't mention a time component so there are two scenarios.  One is where there is immediate settlement -- Bob wants to pay Alice the funds now.  \nSince there is no \"official\" exchange rate, what is widely accepted as being an accurate or fair price at any point in time is whatever the \"last\" trade shows from the BTC/USD market on Mt. Gox.\nOther exchanges may have higher or lower spot market rates.  At an exchange with good liquidity, that relatively smaller amount can be purchased at the spot market in a single transaction (without slippage) and the bitcoins can then be delivered to Alice immediately.  Because there was essentially no time that elapsed after the bitcoins were purchased before delivery to Alice, there was then no exposure to exchange rate risk.\nPresumably you are inquiring about this for amounts that are larger where slippage would occur.\nThere are traders who perform arbitrage (automated with bots, or performed manually) and generally remove price inefficiencies between the markets.  This brings additional liquidity to the exchanges.\nEven if arbitrage were to keep the exchange rates between the exchange markets in exact synch, they only act after Bob has made purchases, thus he either loses to slippage when buying in bigger chunks or he exposes himself to exchange rate risk when buying over time.  If Bob's purchasing is detected, other traders might become aware of his buying and frontrun him, causing him to realize actual exchange rate risk.  And Bob also loses because the arbitrage providers are absorbing some of the value in the process.\nThere are few options to Bob to avoid both slippage and exchange rate risk, other than to contract that work out by using a trader or broker who can minimize these factors.\nNow if the amount owed to Alice is not until some future point in time, Bob could consider buying a CALL option, ensuring a supply of bitcoins at a future date at price known today (and thus protects hum from a price move to the upside).\nBob could instead buy the bitcoins today and then hedge against exchange rate risk by buying a PUT option (which allows him to gain should the exchange rate fall after he makes his purchase before he delivers the coins to Alice).\nNow obviously, if Bob deals solely in fiat, and Alice deals solely in fiat, then why even bring bitcoin in the middle?  A bank wire transfer works pretty well for this for immediate (e.g., same-day) settlement of larger amount, and other methods are less expensive for future delivery.\nThere is even the ability to use USD vouchers (redeemable codes) for this.  Bob does a bank transfer to his account at the same exchange that Alice uses.  He then sends Alice a redeemable code for 1,000.  Some exchanges allow this, but generally there are limits as the exchange offers these voucher codes presumng the customer overall is using those funds for trading bitcoins and not just withdrawing the fiat after redeeming the codes.\nSo to summarize, trades of larger transaction amounts cause slippage and there is not currently an efficient method that takes advantage of the supply from the over-the-counter markets to minimize the market inefficiency similar to wha other, more mature, financial trading ecosystems provide.  That may come, it just isn't available today.\n", "json rpc - What is the meaning of target-confirmation?": "\nIt's pretty much the same thing.  It probably should have been called 'minconf'.\n", "block - what are vin_sz and vout_sz in tx part?": "\nI believe it stands for vector input size and vector output size.\nvin_sz is the number of inputs and vout_sz is the number of outputs.\n", "transactions - Is the current number of confirmations visible somewhere in the raw block?": "\nThe number of confirmations is (height of most recent block - height of the block containing the transaction + 1). The contents of the specific block containing the transaction are fixed, while the number of confirmations keeps increasing, so the number of confirmations cannot be in the raw block data.\n", "How do I create a Namecoin address?": "\nYou can either install a client, or use some Namecoin-Bitcoin exchange (like BTC-E) to obtain an address. It`s generally the same as getting a Bitcoin address really, only a bit less popular.\n", "economic theory - Virtual currency used as alternative currency": "\nWhile there's no technical issue preventing the use of Bitcoin and its' associated engine for any number of alternate currency types, the problem you're likely to run into with your question is the addition of a central issuer. Bitcoin is explicitly designed for distributed issuance of funds according to a carefully designed algorithm that requires distributed proof-of-work. It would be non-trivial to chance the issuance mechanism.\nThat said, if you have a talented programmer, Bitcoin is open-source under the MIT license and you're welcome to modify it as you see fit, just know that it's probably not going to be as easy as your question seems to indicate it should be.\n", "exchanges - How do I buy bitcoins using a prepaid credit card? [Canada]": "\nYes, I am Canadian and I have used both these services:\nwww.cavirtex.com\nThey can be added as Online Bill Payee at RBC, BMO, Scotia, or TD Bank (takes 1 to 2 days)\nand/or \nwww.canadianbitcoins.com\nI never left my seat and Bitcoins were deposited with the hour!\nThey use TD Canada Trust, and you can add them as a Payee by calling your EasyLine banking, then make an Instant payment to them.\n", "Is the transaction database ever shortened?": "\nMeni's answer is probably correct, but describes a very far future, in my opinion.\nIn the more near future, I believe we'll see fully-validating nodes that do not keep the entire block chain around. The current reference client implementation uses blockchain + transaction database for validation, which cannot easily support pruning. I'm working on modifying the validation code to use a separate database of just the unspent outputs instead, which is much more efficient and only requires a few hundred MB of storage, in addition to the blocks it wants to keep around.\nI'm sure this will open possibilities, but somewhat further ahead, I believe this will lead to a separation between validation nodes and archive nodes. The former relay and can be queried for their memory pool, and check whether transactions are valid, but they cannot serve old transactions or blocks, and hence cannot be used to bootstrap a new node from. For these purposes, one will connect to an archive node (this could be via the P2P protocol, but may as well be HTTP or BitTorrent).\nDisclaimer: these are my views/opinions, and may not reflect those of other (core) developers.\n", "exchanges - Between which locations are transfers using Bitcoins cheaper than PayPal for 100$?": "\nIn the euro zone MtGox is not cheaper for small payments like $100. Depositing and withdrawing euros both include a fee of ~1.20 euro (10 PLN) + 0.60% for the transfer.\nI don't know what deposit/withdrawal fees are for US dollars, neither if there are exchanges that do not require this fee. I know Intersango does as well.\n", "backup - Backing up my Bitcoin wallet": "\nYes, as long as you close the Bitcoin program first, you can copy the wallet.dat file anywhere you want to back it up. Just remember to keep it safe and use a password, and your Bitcoins will be safe. If you lose the wallet, you will lose the bitcoins you have in it forever (there is no option of recovery of lost bitcoins, unless you are talking about recovering lost files from your hard drive).\n", "shared wallet - How to set up multiple client under the same address?": "\nYou can dump the private key from one and import it into the others \n", "client - How to import my wallet?": "\nI got it to work by simply copying the file over.\nAn important point to notice if you intend to follow this suggestion:\nMy mac wallet had 0 coins\nIf your mac wallet has coins, then don't follow this solution.\nFirst I shut down the bitcoin-qt client. Not sure if this step is necessary but I think it's safer.\nThen I copied the wallet.dat file over to \n~/Library/Application Support/Bitcoin/wallet.dat\n\nThen start the bitcoint-qt client again. It might take a bit longer to startup than usual. Don't panic and let it take its time.\nThen you will see your coins in the client!\n", "sending - How to reclaim unclaimed Bitcoins sent via Blockchain.info to Facebook/Email friends?": "\n\nUnder Receive Money, Archived, find the address in question (\"username (Sent Via XX\"). Click this button to bring it back to active addresses:\n\nUnder Send Money, Custom, send all the money from that address to another address in your wallet. You can now archive the address again.\n\n", "nodes - Can I addnode to blockchain.info?": "\nAs mentioned in Daniel's comment, if you are trying to connect to the Bitcoin-client that gathers the information for the Blockchain.info site this is not trivial as the IP does not match the one of the website.\nIf you are just interested in adding the same nodes the site is connected to, that's no problem. \nWith Linux or OS X you'd do something like this:\ncurl -s https://blockchain.info/connected-nodes | \\\ngrep -oE '([0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+)' | \\\nsort -u\n\nwhich gives you a sorted list of IPs to connect to. If you want a complete string to just append to your bitcoind client as options then try this:\ncurl -s https://blockchain.info/connected-nodes | \\\ngrep -oE '([0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+)' | \\\nsort -u | \\\nsed 's/.*/-addnode=&/g' | \\\ntr '\\n' ' '\n\nthis additionally adds the -addnode= prefix to each address and joins the line.\n", "Add a transaction generated offline to the official client": "\nIn version 0.7 you will be able to send it to bitcoind through a \"sendrawtransaction\" JSON API call.\n", "public key - Storage of Private Keys": "\nIf you only need receiving addresses, then you need only a table for those along with a column that flags to prevent it from from being used a second time.\nKeys can be generated in bulk:\n - http://bitcointalk.org/index.php?topic=101708.0\nNow just because you aren't saving the private key on the web host doesn't mean security can be lax.  If a host were compromised, the attacker could replace the Bitcoin addresses in the table with addresses under the control of the attacker.\nFor situations where the Bitcoin client needs to send transactions, a cold wallet / hot wallet method will help lessen the damage should  the system become compromised. \nHere's additional information for Securing online services:\n\nhttp://en.bitcoin.it/wiki/Securing_online_services\n\n", "transactions - After sending some bitcoins, why do I have zero available to spend when I clearly didn't send my entire balance?": "\nIn this scenario, neither address A nor address B had a sufficient balance to pay 0.5 BTC by itself. The two together did have enough. So, the clients are intelligent enough combine the amounts of two addresses together in order to meet the desired transaction amount. \nUnfortunately, the combination has the effect of sending bitcoins to yourself as \"change\" in the transaction. In this scenario, all of the available balance was split between address A and address B. In combining those in order to satisfy the payment to C, some was consolidated as \"change\" into address B.\nThink of it mathematically, as well. This shows the equilibrium, from the point of view of the accounts you control.\nbalance(A) + balance(B) = payment_to(B) + payment_to(C) + transaction_fee(0.0005)\n\nThis is the transaction.\nbalance(A) + balance(B) - payment_to(C) - transaction_fee(0.0005) = payment_to(B) \n\nThat payment_to(B) is the change.\nUnfortunately, because of the number of confirmations the clients wait before allowing one to spend incoming transactions, the balance is present but unavailable to spend for several minutes, or as much as hour or more.\nClients should handle this better by warning if transaction about to be sent will create this confusing situation.\n", "difficulty - Calculating average number of hashes tried before hitting a valid block": "\nWell, currently the difficulty is 2,440,643.  There will be (difficulty * 2^32) (roughly) hashes per block.  \nSo that means there are (2,440,643 * 2^32) hashes that must occur before one block is solved.  That's is across the entire network.\nA block is solved in ten minutes (on average) or 600 seconds.\nSo the network is hashing (2,440,643 * 2^32) / 600  ~= 17 Thash/s.  (This calculation is performed and the result is displayed on BitcoinWatch.com)\nLet's say your dual 5970 rig gets 1.4 Ghash/s.  That is 17,770 Ghash/s / 1.4 Ghash/s = 12,693.  That is the number of rigs, if all were exactly like yours, operating today.  \nSo if 12,693 rigs can do the work in 10 minutes, one solo rig will tka 12,693 * 10 minutes, or 126,930 minutes.    With 1,440 minutes in a day, that means it will be about 88 days before you will have a 50% chance of solving a block operating solo.\nNow that was the long way.\nThe short way:\n\nhttp://tpbitcalc.appspot.com/\n\nFor Hash Rate, plunk in 1400 (1.4 Ghash/s) and click Calculate.\nSo then, how many hashes is that?  There are 86,400 seconds in a day and you have to has for 88 days.  86,400 * 88 = 7,603,200 seconds.  At 1.4 Ghash/s X 7,603,200 seconds means you hashed 10,644 Thashes. \nThat is: 10,644,000,000,000,000 hashes.\n", "What is the \"best\" BitCoin alternative? Especially from the pov of mining": "\nProbably the best alternative to Bitcoin would be gold. It`s fairly popular, valuable and finding some small amounts for a beginning miner should be fairly easy in some parts. It would probably require you to move closer to some rivers though...\nAll joking aside, you should look into using some mining pool with an option of merged mining. If mining some AltCoin would be more profitable than Bitcoin, a lot of people would switch by now and drive the price down.\nYou could also look into using your mining power in alternative ways. I'm assuming you have a GPU mining rig. In that case, you can look into such things as mining vanity addresses for Bitcoins (for example using my Vanity Pool).\nAll in all, Bitcoin is probably the main way to go nowadays, so you should concentrate on that.\n", "protocol - What is the coinbase?": "\nThe term \"coinbase\" is used to mean many different things. But the two you're probably asking about are:\n\nThe \"coinbase transaction\" is the transaction inside a block that pays the miner his block reward.\nInside the coinbase transaction is a field that is called the \"coinbase\". It's the generation transaction's equivalent of a scriptsig. Since it doesn't claim any existing outputs, it needs no normal scriptsig. It's basically just a random value that the miner can use as an additional nonce. BIP 34 changes this a bit.\n\n", "block - What happens when a miner does not claim all fees/generated coins?": "\nThe block is accepted, and the coins are lost. Poor miner.\nHere is a link to the part of the 0.6.3 source which checks this: https://github.com/bitcoin/bitcoin/blob/v0.6.3/src/main.cpp#L1362\nAlso, this has effectively happened before; block #124724 claimed one satoshi less it than could have.\n", "How to force bitcoind to include a specific transaction as an input of another transaction?": "\nThis will be possible using the 'raw transaction interface' that was added recently and scheduled to be part of the 0.7.0 release.\nWith listunspent you can request a list of available coins sent to a particular (wallet) address, and with createrawtransaction you can build a transaction that consumes specified coins. Finally, sendrawtransaction can be used to broadcast a prepared raw transaction to the network.\n", "backup - If I've lost my wallet, but know my bitcoin receiving address, can I get my bitcoins back?": "\nYou can't get your bitcoins with just the receiving address (if that could be done, they could easily be stolen), so your only chances of retrieving them are:\n\nIf they're stored in the wallet file you have backed up, then you can use that\nSomehow recovering the original wallet file, which is a data recovery exercise. This might be possible in the case of a failure or deletion of a hard disk, or a deletion from an SD card/memory stick\n\n", "wallet.dat - Is there a limit to how long a wallet can be offline?": "\nAny unspent bitcoins against addresses in your old wallet should be retrievable.\nThe client won't show transactions that haven't been downloaded to your copy of the blockchain yet. There should be an icon in the lower right corner of the Bitcoin-QT client that indicates progress on downloading the blockchain. It can take a few hours (there's around 2.5GB to download, and it downloads them slower than you'd expect because the client verifies the blocks as it goes).\n", "trading - Is this a good time to enter mining?": "\nIf you want to calculate your farm's profitability, you can use various online calculators to do that, like mine for example. You should take into consideration such scenarios as the reward for blocks halving soon, difficulty increasing, price going down and so forth and see whether or not it's worth your investment.\nGenerally, GPU mining might not be the best choice at the moment, its profit margins are narrow. FPGA miners are more effective, but are generally pretty costly at the start. The new trend appears to be ASIC miners which can also be quite costly but are extremely good at mining.\n", "What is the easiest to operate/fastest solo bitcoin mining client for a cluster rig?": "\nIf you have a GPU rig cluster, you ought to look at standard miners. This question should help you get started:\nWhat open source miner applications are there?\nIn the end you ought to try a few of them out and see which ones give you the best performance on your hardware. You can also have a look at Mining hardware comparison Wiki page to see what performance you should expect from your hardware and what configuration was used to accomplish it.\n", "blockchain - Can the blk0001.dat and blk0002.dat files be deleted?": "\nYou can delete them just fine, as long as you delete blkindex.dat too. They will be downloaded and processed again. This will take a while, these days, though.\n", "development - How can I read information from the blockchain?": "\nThis can be done with some degree of effort using the Bitcoin API.\nv0.7 getrawtransaction gives you access to transactions even those not in your wallet.\n\nhttp://en.bitcoin.it/wiki/Raw_Transactions\n\nThere are other tools that you can use to build this capability as well.\n\nlibBitcoin\nArmory (see Extras)\nBitcoin ABE \nBitsOfProof supernode [pre-release]\n\n", "transactions - How to return Bitcoins to sender through Bitcoin API?": "\nIf the address is in your wallet, gettransaction includes the input addresses:\n\nhttp://en.bitcoin.it/wiki/Original_Bitcoin_client/API_calls_list\n\nIf this is done by an agent where the addresses might not be in the wallet, v0.7 getrawtransaction gives you access to those transactions.\n\nhttp://en.bitcoin.it/wiki/Raw_Transactions\n\nThere are other tools that you can use to build this capability as well.\n\nlibBitcoin\nArmory (see Extras)\nBitcoin ABE \n\n", "How do I read the time field from the json-rpc calls from bitcoind?": "\nIt's unix time, the number of seconds since January 1, 1970. Your programming language probably has an easy standard way of converting it to a date.\n", "services - How can a wager with SatoshiDICE be proven to be fair?": "\n[Going to answer this one myself.]\nUnlike games of chance where you need to trust a machine or a human, SatoshiDICE's results are verifiable, thanks to cryptography, once the secret is released (the next day).\nThis can be verified without needing any software installed.  Here's how:\nSo for your wagers from Jul 10, 2012 (UTC), get the secret from:\n\nhttp://satoshidice.com/secretlist.php\n\nThat has been released, and it is:\nctygmtZjw7xTnLou7u9cWVYiOd79xAMJK5aJJBBD3w2Su8vGMHPDwP1f4O1eBPek\nThen create the SHA-256 hash of that secret with: \n\nhttp://md5online.eu/3,sha-256\n\nWhich yields:\n\nd75e37bc91915af566276e34624e7477c2a6771fb7898bc4dd1b30ccc0022cfe\n\nThen verify that the resulting hash from that jives with the has from hash.keys for Jul 10, 2012:\n\nhttps://s3-eu-west-1.amazonaws.com/satoshidice/hash.keys\n\nSo next you grab the transaction ID for your transaction (from the Transactions tab of Bitcoin.org client, or using BlockChain.info).\nThen plunk those values in ... for Text to convert, paste the Transaction ID, and for Shared Secret Key use the secret for the day that you verified above.\n\nhttp://hash.online-convert.com/sha256-generator\n\nAfter you click Calculate hash, you'll get a hex string in the results.  The first four alphanumeric characters is the hex representation of your lucky number (from 0000 through ffff hex, or in decimal, 0 through 65,535 decimal).  You can convert those values to decimal here:\n\nhttp://www.binaryhexconverter.com/hex-to-decimal-converter\n\nSo if you had bet the \"less than 8,000\" wager and your lucky number was 8,000 or higher, ... that specific wager didn't win.\nAs long as the hashes to the secrets are known in advance (and they are, that hash.keys was published in April, a copy of which has been archived here) you can always verify if you should have gotten a winning payout or not: \n\nhttps://raw.github.com/sgornick/satoshidice/master/hash.keys\n\n", "divisibility - Can bitcoins be split up into greater than a billion parts?": "\nThe Bitcoin protocol doesn't allow you to easily have denominations lower than a satoshi (10^-8 bitcoins). But once there is a need and widespread agreement, it can be modified to allow it.\nDestroyed bitcoins however will not have any significance as a factor contributing to this need.\n", "speculation - What is going to happen when it is totally infeasible to download the entire bitcoin transaction history?": "\n\nThe default answer to scaling is SPV (lightweight) clients, which allow very good security and control of funds without the entire blockchain. Full nodes will still exist but the cost of running one will not be prohibitive.\nIn practice many people will use some sort of bank service. If the funds are in full control of the bank it has some disadvantages, but yes - in this case of course the banks will settle intra- and inter-bank transfers with internal records and reciprocity agreements, not with the blockchain.\nThere are some schemes which allow making a payment without it being recorded as a transaction in the blockchain, and without having to trust a bank with your money. This will greatly reduce the total size of the blockchain.\n\n", "exchanges - How can one be truly anonymous without mining?": "\nOnce you have bitcoins, there are tools such as mixing services to help increase your privacy. \nFor true anonymity in acquiring bitcoins, cash-in-the-mail provides a method that can be anonymous.  You send an envelope with cash and a bitcoin address.  Voila, bitcoins are acquired anonymously.\nCash-in-the-mail methods:\n\nGet-Bitcoins.com - U.S. address, accepts USD.\nQuickBitcoins.net - U.S. address, accepts USD, EUR\nBitcoinNordic.com - Danish address, accepts EUR, GBP, DKK, SEK, NOK, USD (others with prior approval as well)\nBitcoinsInBerlin.com - German address, accepts EUR\n\n", "How can a transaction have more than one recipient address?": "\nActually, most transactions you see will have two recipient addresses. One is for the actual transaction and the other one is change.\n\nWhen the output of a transaction is used as the input of another\n  transaction, it must be spent in its entirety. Sometimes the coin\n  value of the output is higher than what the user wishes to pay. In\n  this case, the client generates a new Bitcoin address, and sends the\n  difference back to this address. This is known as change.\n\nBut you can also add any number of recipients to a transaction so you'll find transactions with 20 or 50 receiving addresses too if you look around. In Bitcoin-Qt simply click \"Add Recipient\" on the \"Send coins\" tab.\n", "exchanges - Easiest way to convert bitcoins to usd": "\nI recommend using the services of a user on LocalBitcoins with a high rating and high number of transactions completed.\n", "bitcoind - Can I see all transactions not included in a block yet?": "\nThe upcoming release of the Bitcoin.org client, version 0.7, includes:\n\ngetrawmempool\n\n", "Does blockchain.info backup wallet include also the next addresses": "\nNo, it doesn't. At least not from what can be seen in the \"Export Unencrypted\" option and I doubt that it would be any different using the encrypted option.\n", "bitcoind - Does being connected to more peers relay transactions faster?": "\nAs Bitcoin broadcasts its knowledge of new transactions only to a few nodes at a time, statistically speaking, being connected to more nodes will make it more probable you will get information on new transactions. I'm not sure how this would perform in practice, however. Forcing so many connections would probably be a drain on your system and outweigh the benefits.\n", "client - How can I export all my private keys using bitcoind?": "\nYou could send the dumpprivkey JSON-RPC call to the client.  It takes a single parameter of BitcoinAddress to reveal the private key for that specific address.\nTo export all private keys for all addresses, you would have to call listreceivedbyaddress to list the addresses and then call dumpprivkey for each.\nSee:\nhttps://en.bitcoin.it/wiki/Original_Bitcoin_client/API_Calls_list\n", "cryptography - Bitcoin Research": "\nHere's the Research article on the Bitcoin wiki:\n\nhttp://en.bitcoin.it/wiki/Research\n\nYou might find some of the authors in the list have related research that is not directly related to Bitcoin so is absent from that list.\n", "Is mining faster with 2 GPUs in crossfire or with 2 PCs with one GPU each?": "\nThey do indeed perform exactly the same\nCrossfire is not encouraged as it gives no advantage and may impact your overall performance. The computation is done in parallel on each card so there is no need for them to communicate among each other.\n", "services - How much should I charge a client if they pay me in bitcoins?": "\nFor the scenario of a retail or ecommerce purchase, one approach is to have an expiration on the price quotes.  For example, when a merchant uses BitPay, the invoice is good for 15 minutes.  If the funds aren't received, then the payment is recalculated as-of the time it arrives and if it overpaid, the customer gets a refund and if it was underpaid the customer has to send more funds.\nAlso, you can pad the exchange rate to your favor a little so that while some transactions lose value because of a change in the exchange rate, others will be in your favor but when you net it (overall gains minus losses) it ends up about a wash or a small gain.\nComing up with the pad amount can be aided by using a calculation that looks at recent volatility.\nAs far as contractors, you would want to contract that in advance.  So if both parties agree to a contract at a certain rate quoted in BTCs, then that is the agreed upon rate that is paid.\nFor salaries, you probably want to establish that in terms of fiat, and only after withholding for taxes and other deductions only them convert the net check amount into bitcoins at the prevailing rate at the time.  \nA company that has BTC-denominated contracts may want to hedge against exchange rate risk by either acquiring sufficient coins in advance, or using derivatives (e.g., CALL options or futures contracts).\n", "terminology - What is an SPV client?": "\nSimplified Payment Verification:\n\nA Bitcoin implementation that does not verify everything, but instead\n  relies on either connecting to a trusted node, or puts its faith in\n  high difficulty as a proxy for proof of validity. BitCoinJ is an\n  implementation of this mode.\n\n\nhttp://en.bitcoin.it/wiki/Scalability#Simplified_payment_verification\n\nAlso read:\n\nhttps://en.bitnovosti.com/2018/07/06/jonas-schnelli-current-and-future-state-of-wallets/\nhttps://github.com/bisq-network/bisq/issues/1062\nhttp://en.bitcoin.it/wiki/Thin_Client_Security#Simplified_Payment_Verification_.28SPV.29\n\nMultiBit, Bitcoin Wallet for Android, and Electrum are examples of SPV clients.\n", "Upper limit on the blockchain file size with pruning?": "\nAssuming all remaining transaction outputs are 0.00000001 BTC (1 satoshi), with one single ouput per transaction left, and all assigned to standard pay-to-pubkey-hash addresses, I'd say the minimal upper bound on the pruned blockchain size is 21M * 10^8 * 54 bytes, or about 113 petabyte (100 pebibyte).\nThe 54 bytes per transaction, is calculated as 32 txid bytes, 1 info header byte, 1 byte to store the amount, 20 bytes to store the pubkey hash (address).\n", "Is there a way to parse raw transactions offline?": "\nYou can run bitcoind or bitcoinqt in offline mode (disconnected from the Internet). The client does not need to be synced. Then you can use the console to view transactions using the command. \ndecoderawtransaction <hex string>\nTo check if the signatures are correct, you need to do a \nsignrawtransaction <hex string> without any other arguments. It will output a {complete:true} result if the signature verifies. \nEdit: I should mention that the signatures cannot be verified if the inputs are not known to bitcoind. In that case you will have to supply the inputs as discussed here.\n", "privacy - How do I pay for something anonymously from the UK using bitcoins?": "\nBuying coins non-anonymously in the UK:\nTransferwise to Bitstamp's European account - \u00a31 transfer fee, then <0.5% commission to buy. \nSpending:\nI guess you would use a mixer service\n", "transactions - How to ask donors to send bitcoin if they are not bitcoin enthusiasts?": "\nCoinBase says that they hope to offer a method to purchase bitcoins using credit card.\nIn the meantime, that's not happening or at least not without going through some method like VirWoX (buy SLLs there and trade those SLLs for BTCs).\nThere are cash deposit methods.  Depositing cash at a bank or 7-11, Walmart, CVS is going to be the fastest and easiest way.\n\nhttp://www.BitInstant.com (Deposit at major banks, 7-11, Walmart, CVS, Moneygram, etc., or in Brazil using Boleto or Banco Recomendito, or in Russia, using Qiwi or Cyberplat.)\nhttp://www.CAVirtEx.com (Deposit cash at several banks)\nhttp://www.Spendbitcoins.com (Deposit cash at a bank in Australia)\nhttp://www.MrBitcoins.com (Deposit at a bank in U.S., India, Australia)\nhttp://BitcoinNordic.com (Purchase CashU or UKash in dozens of countries)\nhttp://www.MtGox.com (Deposit cash at any Barclay's in the UK)\n\nThere are also individual traders in 70 countries and hundreds of cities:\n\nhttp://www.localbitcoins.com\n\n", "blockchain - How do you import Block Chain from bitcoincharts?": "\nIf you are using the not-yet-released Bitcoin.org client v0.7, you can use the -loadblock=FILE to import the blockchain from the blk0001.dat file. [Update: actually need to do two of those inline, -loadblock=blk0001.dat -loadblock=blk0002.dat in order to get both to load.]\nThere is a blockchain with index through block 170,000 here:\n\nhttp://sourceforge.net/projects/bitcoin/files/Bitcoin/blockchain/\n\nThat is the most complete distribution of the blockchain that I know of where the blkindex.dat is included.\n", "Why does calling BlockExplorer's checkaddress JSON API do nothing?": "\nYou are trying to cross domains.\nLook into jsonp for that:\n\nhttps://github.com/jaubourg/jquery-jsonp\n\n", "hashpower - Does variability of block solution time change as difficulty increases?": "\nThe variability is exactly the same no matter the difficulty. It is always an exponentially distributed random variable with mean 10 minutes (the mean could be slightly off if hashrate mismatches difficulty).\nWhat we may see in the future however is a reduction in variance due to decrease of the block reward. As transaction fees become a more significant part of the reward, the profitability of mining will increase the more time has passed since the last block; just after a block is found, mining is unprofitable so the hardware may idle/switch to a different task. So the network hashrate will increase with time, meaning that few blocks will be solved quickly (hashrate is too low) and few will take a long time (the hashrate will be high so it won't last long), meaning less variance.\n", "protocol - Did P2SH (BIP 16) get accepted?": "\nYes it did, on April 1, 2012.\n[removed link to chain of orphaned blocks]\n", "Is there a Trading API that spans multiple independent sites, preferably from open source websites?": "\nThe Java XChange library could help\nIt might not be exactly what you're after, but the XChange project provides a demonstration of a general purpose API for communicating with multiple exchanges. \nYou could repurpose the code to create your own mock trading endpoints and run up a collection of virtual hosts. In this manner you can test against a reasonably well known set of APIs for the usual failure modes.\n", "What is a private key and a public key?": "\nBoth of the keys are a part of the Elliptic Curve Digital Signature Algorithm. A private key is just a random number, while the public key is a 2D point coordinate on an Elliptic Curve derived from it. The private key is used to sign messages (in case of Bitcoin - the transactions), and the public key is used to check whether the signature is correct. The public key can either be used raw in a transaction, or turned into a Bitcoin address by means of hashing and other operations.\nOne can use any library that supports the ECDSA curve used by Bitcoin (secp256k1) to generate the appropriate keypair. There are some online solutions for these tasks, for example my small testing suite website.\nHowever, most commonly one leaves key pair generation to the Bitcoin program. If needed be, the private key can be retrieved from the program by using dumpprivkey Bitcoin API call.\n", " In what cases would a bitcoin address not have a private key?": "\nIf an address merely 'looks like' an address and all other aspects of a transaction are ok then miners will include it in a block. \nThis has been (ab)used to embed ASCII art into the blockchain at the cost of permanently destroying some bitcoin.\nFor an example with explanation see https://bitcointalk.org/index.php?topic=33618.msg420597#msg420597\n", "blockchain - Do transactions and blocks get relayed even if a node believes them to be invalid?": "\nA block is valid only if it obeys all the protocol rules.  If it is invalid, it will not be relayed:\n\nhttp://en.bitcoin.it/wiki/Invalid_block\n\nNow the client does maintain side chains.  So if there is the main branch and a side branch, even though the node included a transaction in the main branch doesn't mean it will reject a block for the side branch just because it too contains the same transaction.  So for each branch it is determined if that block was valid or not.\nBut there is a rule that valid blocks are only relayed if they are added to the (new) main branch / best known chain (thanks to Pieter for the correction).\nAs far as a new transaction being relayed - if it is invalid for the main branch (e.g., double spend) then it will not be relayed by the node.\nSo a transaction is either already in a block in the main branch already (and thus would be rejected if it is a double spend) or it isn't in the main branch and will as a result always be relayed.\nThis will be relayed even if that transaction is already included in a block in the side chain.\n", "gpu - What is better for Bitcoin mining: More stream processors or faster clock?": "\nRealistically, it's a multiplier of the two. You can make up for a slower clock with more cores and vice versa, but the number of hashes per second is dependent on both.\nSadly, I'm not aware of any specific formula to approximate hashes per second for a given clock speed and number of cores.\nIt's important to note, by the way, that the one thing that won't buy you more hashes per second is the complexity of the cores. This is why Nvidia may make great cards for gaming purposes, but they suck for mining - games make better use of exotic new instructions than SHA256 does.\nUpdate: Thanks to the table David Schwartz linked to I've been able to estimate that a theoretical AMD GPU core running at 1 MHz can calculate approximately 300 hashes per second. Therefore we can estimate hashes/sec as Cores * Clock * 300. This isn't really all that exact and it seems to over-estimate some cards and under-estimate otheres, even within the same family so I'm guessing ambient temperature and other factors were interfering with test results, but it seems to be an ok estimate in most cases. YMMV. It also fails miserably with older cards, but those get such pathetic hash rates it probably doesn't matter anyway.\n", "bitcoin core - When is the version 0.7 of the standard client scheduled to be released?": "\nWhen it is ready.   There is no \"schedule\" and no set release date made in advance.\nOnce a release candidate is out, generally the only changes are \"showstopper\" bug fixes.\nEach release candidate needs to be tested.  Only if testing occurs and no showstoppers are identified does the last RC become tagged as the final release.\nHere's some steps that happen during building the release candidates:\n\nhttps://en.bitcoin.it/wiki/Release_process\n\n", "bitcoind - Can a scriptPubKey have multiple addresses?": "\nAny of the addresses in that array can spend that output. Multisig transactions will give you multiple addresses there.\n", "exchanges - Why has Intersango stopped accepting UK bank transfers?": "\nIn the UK, banks are free to discontinue providing a banking relationship with certain customers.  Metro Bank chose to do so with Intersango.  They now have no bank in the UK, and there is very little trading on their BTC/GBP market since the August 30th action as there are no methods for moving GBPs in or out..\nThere have been no mentions that I've seen of this being resolved anytime soon.\n\n\nhttp://bitcointalk.org/index.php?topic=63877.msg1122824#msg1122824\n\nFor updates, see Intersango's status page.\n", "blockchain - What is the standard deviation of block generation times?": "\nExcluding complications like difficulty changes and temporary blockchain splits, you can model the block generation time as an exponential distribution.\nAn exponential distribution has a standard deviation equal to the expectancy value. This predicts a 10 minute standard deviation for Bitcoin.\n\nMeasuring the actual distribution isn't that easy. While each block contains a timestamp, that timestamp isn't very accurate, and sometimes the time difference between blocks is even negative.\nThe timestamp doesn't change over the course of a single share, and some miners deliberately use timestamps deviating from the actual time\n", "How many Watts can I safely draw from a typical US home circuit for Bitcoin mining?": "\nThere isn't a single \"standard\" for residential circuits in the U.S. but there might be a typical circuit, such as 20 amps.\nAs far as plug connections, don't use light-duty extension cords; make sure they are rated for high amperage, say 20amps.  Generally if you are plugging directly into an outlet then the total power drawn can be done safely up to 80% (rule of thumb) of the level the wiring is rated for.\nIf the circuit breaker is 20 amps and the circuit is using the proper gauge wiring for that and was wired properly, then you should be able to draw 16 amps safely from it.\n16 amps * 120V = 1,920 watts.\nSo you could add a smaller capacity rig on the same circuit but you cannot have more than one of those 1.2 kWh rigs on what might be a \"typical\" residential circuit.\n[Disclaimer: I'm not an electrical engineer nor an electrician but I play one on Bitcoin stackexchange.]\n", "transactions - Is it possible to collect bitcoins? (as a collectors item)": "\nWell, first of all, there are the physical Bitcoins for one thing, which can be collected and traded neatly.\nIf you wanted to trade such historical Bitcoins, you'd probably need to follow some rules. For example, if you were interested in having pure Bitcoins and as close to the original transaction as possible:\n\nAny Bitcoin that is a part of a given transaction, or a specific input is 100% pure and 0 removed.\nAny Bitcoin coming from a transaction of purity p and removed status r is p% pure and r+1 removed.\nAny Bitcoin coming from a set of transactions, one with purity p and quantity q1 and any others of total purity 0 and quantity q2, would be p*q1/(q1+q2) pure and again, r+1 removed.\nYou also have to take into considerations blocks that collect transaction fees for all of this, but I'd consider them to be 0% pure.\n\nSo, in the end you would be collecting your beloved Bitcoins to one or more addresses you \nown and not spend them, you'd value transactions that are closer to the source and less diluted. If you'd want to flaunt your collection, you'd just show the unspent Tx list and sign some message with your private key. If you'd want to sell any collected Bitcoins, you'd just create a transaction from one of the unspent transactions, and hopefully not spend any coins on transaction fees, as that would make them more and more scarce.\nI hope that covers everything. It was an interesting food for thought.\n", "Is there a standard wallet format?": "\nThere is the Wallet Import Format, which should be a standard for Bitcoin wallets. As to how popular it is, I don't have any data on it. Alternatively, storing the raw private key should suffice, as it can be converted to any other fancy format whenever needed.\n", "mac - Why is my client saying \"A fatal error occured. Bitcoin can no longer continue safely and will quit. \"?": "\nThat alone doesn't provide enough information to know which database file the error is occurring with.   The debug.log might give a more precise indication.\nIf it is a problem with the blockchain, that is easily resolved.  If the problem occurred after your computer crashed, that is likely what happened. \nFirst though check to eliminate that the problem is that your hard drive partition is filled with no disk space remaining.  That probably isn't the case on your Mac, but just in case, check first.\nSo, after making yet another backup up your wallet.dat, then you can do this to get a new copy of the blockchain:\nThese instructions are for mac.  For Linux and Windows the directory names would be different.\n $ cd ~/Library/Application Support \n $ mv Bitcoin Bitcoin-bak\n $ mkdir Bitcoin\n $ cd Bitcoin\n $ cp ../Bitcoin-bak/wallet.dat .\n\nThen launch Bitcoin-Qt as normal.  It will re-download the blockchain.  This could take 24 hours or more, depending on a number of factors.\nYou might speed that up a bit by getting the blockchain as-of block 170,000 from here:\n\nhttp://sourceforge.net/projects/bitcoin/files/Bitcoin/blockchain\n\nAfter it downloads, extract those files into your new ~/.bitcoin directory.\nIf after Bitcoin-qt downloads the blockchain to the most recent block and everything works fine (shows your wallet balance and transactions properly), you can then remove the .bitcoin-bak directory:\n$ cd ~/Library/Application Support \n$ rm -rf Bitcoin-bak\n\nAlso, the blockchain download is faster if you are on the most recent release of Bitcoin-Qt, v0.6.3.\n", "Does a low profit margin on mining reduce the integrity of the blocks stored in the transaction history?": "\nAll that is needed is a number of miners sufficient so that a consensus of bad actors gains control to disrupt the blockchain doesn't happen.\nTransaction fees are a tiny fraction of the level of the block reward subsidy ( still not exceeding 1% ) but as bitcoin is more widely used, the fees will eventually make up for the lowered subsidy.  That's what is expected, and so far that appears to be what is actually happening:\n\nhttp://blockchain.info/charts/transaction-fees?timespan=180days&daysAverageString=7\n\n", "difficulty - Is there a chart that shows Mhps mint speed over time?": "\nYes, the total hash rate will correspond to the difficulty. After all, difficulty is adjusted based on how fast hashes are found.\nHere is a chart on sipa.be that shows hash rate on the left axis and difficulty on the right.\nHere is another hash rate chart from blockchain.info.\n", "blockchain.info - What method does My Wallet use to encode messages in the blockchain?": "\nMessages are stored in a database at blockchain.info (so that text should probably be changed). For a while it did use the blockchain for storing messages but this was changed after concerns from a few of the core developers.\nConcerns were expressed by Matt Corallo here\n\nOh god, thats awful...that is quite possibly the worst way to\n  implement messages in terms of network load...\n\nand by Gavin Andresen here.\n\nYes, please don't create lots of unspendable scriptPubKeys. There are\n  more prunable ways of embedding messages into transactions. And there\n  are even better ways of associating messages with transactions, so\n  only people involved with the transaction can read the message (if\n  that's desired).\n\nHere is the message that implementation was changed back to using a centralized database.\n\nSince a few developers have expressed concern I've changed the notes\n  back to the centralised database for now. I still think there are many\n  use cases where you might want to contact the owner of an address\n  without needing to know an email etc, a decentralised way to do this\n  would be great.\n\n", "Sharing a wallet with a friend": "\nIf you're looking for something technically straight-forward, I suggest using an \"e-wallet\" and giving your partner access to the wallet account.\nReview these links:\nhttps://en.bitcoin.it/wiki/Browser-based_wallet\nAnd here are several e-wallet's listed:\nhttps://en.bitcoin.it/wiki/Category:EWallets\n", "blockchain - Bitcoin core for Mac OS X stuck at the 95% mark for hours": "\nAs long as blocks continue to download, then all is well.\nThe Bitcoin client is doing a lot of disk i/o and CPU crunching when verifying each block, so hardware performance will matter.  If you have an encrypted filesystem performance issues are exacerbated.\nA slight improvement will come when the Bitcoin.org v0.7 client is released.   And large improvements will come with the version after when the LevelDB database is used, improving access speed to reading and writing the data and \"Ultraprune\" is implmented which lessens the amount of storage.\nOther solutions include using Simplified Payment Verification clients.  Electrum might be a choice for you to consider if your hardware is borderline for operating the full Bitcoin.org client node.\n", "miner configuration - How do I install Phoenix 2 on Mac OSX Mountain Lion?": "\nI found the following to install PyOpenCL.  It installed on my MBP 8,1 running ML:\ngit clone http://git.tiker.net/trees/pyopencl.git \ncd pyopencl\ngit submodule init\ngit submodule update\npython configure.py\npython setup.py build\nmake\nsudo python setup.py install\n\n", "protocol - What ways does a miner differ from a wallet?": "\nA wallet is a way of storing your private and public keypairs. It is used by various clients to check your balance and create new transactions. A client usually listens on port 8333, and has 8 other ports open for outgoing TCP/IP connections. It finds peers through various means - exchanging info with other peers, using fallback nodes, seed nodes and so forth. Its main purpose is to exchange information with its peers about new blocks, transactions and the like in a peer-to-peer fashion.\nA miner is an application connected to a mining pool. The mining pool runs its own client to get the latest information on blocks and transactions, as well as handling the creation of new blocks. The pools generally use port 8332 for communicating with their miners. It is a server that communicates with a lot of miners through the use of HTTP JSON RPC, and usually comes with a website of some sorts. The miners find the pool, and the pool doesn't care about peers (it has a client for that).\nA miner is an application that runs on local mining rigs (computers with high-end GPUs and other dedicated devices). It communicates with a mining pool through HTTP JSON RPC calls. The miner connects to (usually) one pool of a predetermined address, but the getwork protocol facilitates the use of backup pool addresses. The miner is responsible for getting \"work\" from a pool, processing it, and submitting shares back to the pool. A miner does not care about its peers, just the pool it is connected to.\nI hope that clears out all the problems you had. You might also be interested in checking out my master thesis on Bitcoin for more information on numerous subjects related to Bitcoin, mining pools and security.\n", "doublespend - Without being continuously connected to the network, how can I protect from Double Spend attacks?": "\nTo essentially eliminate any risk due to double spending, the recommended level of confirmations is six.\nFor most transactions such as those to a bricks and mortar merchant, payment might be accepted immediately (with 0 confirmations), but that exposes the merchant to a small degree of double-spending risk.\nA recommendation for merchants running their own node is to have the configuration where there are no incoming connection and to explicitly have an outgoing connection to a well-connected node.  \nThus, properly configured this way, the merchant is not much at risk of double spending because either the transaction was broadcast and it reached the well-connected node that the merchant connects to or it didn't and the merchant doesn't know about it until communications from the party attempting to pay can be re-established with the outside world.\nIn that scenario, bitcoin fares no worse than any other merchant payment system as those require authorization from connected sources as well.\nThe amount of data to receive blockchain data is relatively little -- under 100MB per day.  Thus even a single dialup modem connection is all that would be needed and that node could then serve all other nodes connected locally.\nAdditionally, if mobile communications are present, the merchant could simply use mobile notification from a hosted service and not run using a node at all. \nThere is a business solution not a technical one to the specific scenario requested.  Just as a hotel will accept a check from a guest even when it doesn't have a guarantee that the check won't bounce, a merchant can accept a bitcoin transaction even when there are no communications by adding a layer above (e.g., verifying identification, getting approval to charge against a backup payment method using a credit card, not selling anything of high value during the communications outage, etc.)\n", "transactions - How do I convert Bitcoin to cash at my bank via Mt. Gox?": "\nThe factors that matter for any cash-out decision are:\n\nWhere are you located (country)?\nHow much are you looking to trade?\nWhat type of cash are you looking to receive?\nHow soon do you need access to the proceeds?\nIs privacy important?\n\nYou are specifically asking about Mt. Gox but there are numerous methods for transferring value from bitcoins to your bank.  In some instances, Mt. Gox will be a good choice or the best choice, and in other instances it may not be.\nIn the U.S., for instance, Mt. Gox does not directly provide ACH withdrawal.  ACH transfers are a method for inexpensive bank transfers.  They do support withdrawing of funds to Dwolla and Dwolla can be connected (via ACH) to your bank account.\nHere's the article for Mt. Gox on the Bitcoin Wiki:\n\nhttp://en.bitcoin.it/wiki/Mtgox#Direct_Deposit_2\n\nAnd here's the article for describing most of the various cash-out / withdrawal methods:\n\nhttp://en.bitcoin.it/wiki/Selling_bitcoins\n\n", "blockchain - What is a transaction's step-by-step life cycle?": "\nThe lifetime of a transaction would be something like this:\n\nYou start with a client, a wallet that contains your keypairs, and some unspent transactions (you get those from other people or through mining).\nYou create a new transaction spending some of your unspent Bitcoins, sign it with your private keys. Your client will store a copy of it.\nYour client starts to broadcast the new transaction through the Bitcoin Network. As far as I remember it doesn't broadcast it to every peer, but to every 8th peer in order to protect your anonymity. Every minute the client will also broadcast all transactions it knows about to one of its peers, which would also include your new transaction.\nEvery client that receives your transaction scrutinizes it - they check whether the signature is okay, whether there are any errors, and whether you are trying to perform a double-spend. If your transaction fails any of the criteria, it is ignored by the client entirely. Otherwise the client keeps a note of the transaction in temporary memory.\nAll the clients that know about your transaction follow a similar route of broadcasting as you did - send it to 1/8 peers, and then to one peer every minute. They will also not broadcast your transaction if its fee is too small at a given time (which varies on the amount of transactions to be included in a block and so forth). Generally, if you don't pay fees, you get punished with slow transaction broadcast rate right here.\nEventually your transaction reaches some mining pools and the recipients of the transactions. The latter will see the new transaction in their wallets and store a copy of it indefinitely, but it will appear as 0 confirmations. The mining pools will see it as a new transaction and (most likely) will include it in every block they try to create. They will store a local copy of the temporary blocks and give out the corresponding work to solve to their miners.\nThe miners don't know anything about your transaction, other than with one or more transaction it hashes to a given merkle root. Their job is to crunch numbers, not to check for block validity, as that's a task for the pool.\nEventually your transaction is included in a block that gets solved. It gets broadcasted proudly through the Bitcoin network and everyone keeps a note of it from now on (to know if some new transaction conflicts with it in a double-spend attempt). Now your transaction has 1 confirmations.\nThe block creation process continues, and as more and more blocks build atop the block your transaction gets included, it gains more confirmations. Eventually reaching 6 and more confirmations, it is considered fully confirmed.\nThe transaction finishes its live cycle once it is spent by another transaction, meaning that its outputs can be forgotten from the \"unspent\" memory and disregarded for any other attempts to spend them. It will, however, remain in the blockchain for as long as people will keep track of the full chain.\n\nThere are a few complications during 51% attacks and so forth, but this is the main flow of a standard transaction.\n", "economic theory - If the computer calculation rate becomes 100x faster, would the value of bitcoin drop to 1% of the previous value?": "\nTL;DR: Change of computer calculation power doesn't affect the price at all.\nMarket Price of anything determined by supply and demand, bitcoin is not exception the only difference is that the supply side is constant, 50 BTC per ten minutes at the moment. Regardless of how much computer power used to generate bitcoins the rate of produced bitcoins will not change because Bitcoin network difficulty will adjust to make it harder or easier to find new bitcoins depending on total network computer power, bitcoin price change purely because of change of demand.\nAlso there is a controversy about certain aspects of Bitcoin, but there is no designing flaws that I know of.\n", "cryptography - Where and how is secp256k1 used within Bitcoin?": "\nAll of Bitcoin's public-key cryptography is done with secp256k1. Every sane transaction has at least one secp256k1 signature and at least one secp256k1 public key or public key hash (address). A complete overnight failure of ECDSA/secp256k1 is the only technical failure I can think of which could destroy Bitcoin. This is very unlikely, though.\n\nBitcoin is unique that is uses secp256k to secure it's transactions\n\nSecp256k1 is presumably used in other applications (though Bitcoin is certainly the largest). It's a standard curve published in 2000 by Certicom Research and included in OpenSSL and other crypto libraries. Satoshi didn't just make it up or anything.\n", "verification - How was the overflow bug of 2010 detected? Should UINT64_MAX value transactions be considered suspicious?": "\nYour first question is kind of a pointless retrospective question. Sure, now that we know that overflow can be a problem in this way, we should consider transactions that attempt to overflow to be suspicious.\nThe bug was detected by inspection of the blockchain. The bad transactions stood out. Had it not been detected by inspection, sooner or later it would have been detected by the presence of too many Bitcoins circulating.\nThere are no issues any more. Each individual output is now checked in a way that ensures that their sum cannot exceed the input to the transaction. Overflow is, so far as we know, no longer possible.\nYour question seems to be asking if there's some \"magic bullet\" that can solve similar future problems that are presently unknown. The thing is, if there was, we wouldn't know it because we don't know what the future problems are likely to be. Sure, in retrospect, there are many things that could have been differently that would have made this particular exploit impossile.\n", "blockchain - What is the key difference between the Proof of Activity proposal and Proof of Stake?": "\nFrom what I understand, Proof of Activity and Proof of Stake are methods of preventing a 51% attack.\nProof of Stake basically means that the people that hold the most coins sign the blocks that will be part of the block chain. This means that the people that have the most to lose from a 51% attack will do their best to prevent it and not risk losing their money. However, this also means that the rich users can control the network.\nProof of Activity from what I gather is a method of selecting a random peer from the entire network to sign a new block that would be temper-proof. This would mean that a 51% attack could not execute too well, as it couldn't predict who the signing peer be in the future.\nThe latter idea appears to be better for preventing attacks on the network, providing there are no logical problems in there. However, I have not studied either of the two methods in greater detail so I might be wrong.\n", "protocol - What are the specific interactions between a Wallet client/node and a Miner?": "\nA wallet is used by a client to store Bitcoin Addresses. The standard client can be ran in a server mode, which will allow it to take HTTP JSON RPC commands. One of them is \"getwork\" - a standard command used by miners to get data to hash. The standard client creates new blocks crediting one of the addresses in its wallet with the block reward. A miner can submit finished work to the client to help it solve it.\nThis solution is not ideal for most miners, as the use of pools as an intermediary between a client and a miner allow the block reward to be split between them.\n", "blockchain.info - How can I use multisig / split keys using My Wallet?": "\nThis is the latest info I have seen from Ben who runs blockchain.info.\n\nQuestion: The escrow function seems to be gone. Will it return?\n  https://blockchain.info/wallet/escrow?\nBen: The escrow feature was removed because not enough people were using it. I think maybe it was just too confusing/not well documented enough.\n\nI did not see any info on if/when it will return.\n", "multi signature - What GUI clients support multisig transactions?": "\nArmory is a client for advanced users that has support for multisignature \nhttps://bitcoinarmory.com/\n", "exchanges - Is there a way to buy or sell Bitcoins for Iceland Kronas?": "\nTrade with others who might be local:\n\nhttp://www.LocalBitcoins.com\n\nForum users might check in on a thread like this:\n\nhttp://bitcointalk.org/index.php?topic=109453.0\n\n", "development - How do I validate the correctness of a bitcoin multisig address?": "\nMultisig addresses are defined as follows:\nbase58(0x05 + [20-byte scripthash] + [4-byte checksum])\nFor testnet, it's 0xC4 instead of 0x05, indeed.\n", "wallet - How can one use multi signature transactions/addresses to improve the security of their services?": "\nWell, the theory is that you have a buyer, a seller, and an escrow holder. This is for transactions like Bitmit or OTC or Silk Road where the buyer and the seller do not trust one another enough to reliably complete the transaction. If you run the website and offer the goods, then you'd either need to just build a good enough rep that you don't need to offer escrow, or find a third party escrow provider to keep you honest. Once M-of-N gains traction in the client software, I could foresee business sprouting up just to handle Escrow.\nSo buyer pays Escrow his fee first, then buyer, seller, and escrow build a 2-of-3 multisig address and buyer dumps his funds in. Goods are transacted, and if buyer and seller are both happy then they sign a transaction together releasing the multisig funds to seller. Escrow agent doesn't need to lift a finger when there's no dispute.\nWhen there is a dispute, buyer and seller each craft and sign the transaction they think should happen (normally \"I get all the dough\", but more complicated spends are possible too) and submit those to Escrow agent along with their evidence as to how the transaction happened. Escrow judges between them and signs the transaction he thinks should succeed. 2/3 signatures makes the transaction valid.\nAs to \"how will the client software actually work\" and \"what will the GUI look like\", that's a fine question! It appears as though crafting the GUI is the final major obstacle towards this becoming a more widespread transaction type. :3\nI've been posting on /r/bitcoin and chatting with Ferroh and others, trying to work out just how to do it the hard way at the command line. :P\n", "satoshidice - \"State of the Coin 2012\" and the mention of Satoshi Dice": "\nThere was a very controversial and heated discussion among developers and on forum started by Matt Corallo: Huge increase in satoshidice spam over the past day. Essentially he proposed to police transactions priority for block inclusion to punish websites which doesn't take measures against overburdening Bitcoin Network.\nIt's worth to note that SatoshiDice by no means was trying to DDOS Bitcoin Network. The amount of transactions is the result of its successful business model and somewhat careless implementation.\nPersonally I think SatoshiDice is a very good thing, it pushed Bitcoin Network to its limits, but not to the point where it could become dysfunctional. SatoshiDice revealed that network's choke point was disk access time to verify transactions rather then ECDSA verification time. As far as I know LevelDB implementation to store transactions history to reduce disk access time was the direct result of SatoshiDice spam. It is also accelerated development of Ultra Prune method to reduce storage requirements.\n", "transactions - Transfering Money From My Bank Account To Bitcoin?": "\nIf you don't want to deal with the hassle of an exchange you could try our new service for UK users:\nhttps://blockchain.info/wallet/deposit-pingit\nThe fee is slightly higher at 3.49%\n", "transactions - Vouching for (or against) the reputation of a bitcoin user": "\nThere is already three rating systems in existence from different trading platforms: #bitcoin-otc , Bitmit and Silk Road. Bitcoin users actively using their rated OTC identity to make their words more trustworthy.\nI believe integration of rating system into Bitcoin Network won't be beneficial and developers will not ever try to implement that. It is possible that in future obfuscation will be enabled by default, at least it is feasible to do it : Automatic Coin Mixing Idea and P2P coin mixing.\n", "security - Must mining be profitable for Bitcoin to succeed? If no, what are the mitigations?": "\nIf there are to be people that only mine Bitcoins for living, mining has to be profitable. However, it needn't be only profitable through transaction fees and block rewards. People could subsidize the miners if needed be. Moreover, miners could be providing some paid services while mining - for example giving priority to certain transactions, embedding some messages in the block chain (advertising?), or the like.\nIt would also be possible for various companies that profit form other sources than mining to run their miners at a loss. This would be similar to say, Google providing free email, social networking and web hosting, as they are gaining enough money from ads to soak up the costs. Moreover, some people could run some charity miners that would for example include 0 fee transaction or some other ones that would be shunned by normal miners. However, if such for-loss mining would be too popular, regular miners would have a smaller profit margin (higher difficulty to reward ratio). This could cause them to stop their business and leave the whole burden on the other miners.\nIn the end, miners have a semi-regular source of new Bitcoins. They can hoard them and sell them only when they have a profit. If they have enough money to get by for awhile, they can just not sell the coins at too low a value and eventually drive the price up. I'm not sure, however, how well this would work.\n", "hash - What other purposes can I use my [obsolete] hashing hardware for?": "\nFPGAs and GPUs are reprogrammable, so you can use them for anything. FPGAs require some specialised programming, while GPUs just use OpenCL.\nASICs have specialised chips highly optimised for mining and only mining. I don't think they could ever be reprogrammed or reused to do anything else than mining blocks according to Bitcoin rules.\nAs for what to do with that hardware, have you considered such noble causes as Folding@home, or perhaps less noble split-key vanity mining, for example through my Vanity Pool website?\n", "address - Generating addresses starting with certain characters such as \"JoeAnonymousUserB7pMqyVa8JRcpZdCQLQ\"": "\nYes, the concept is known, and called \"vanity address\". The problem with it is that it takes a lot of computing power. However, there is also a \"split-key\" method of generating vanity addresses, which lets you commission other people for the computing work. And finally, I created a website called Vanity Pool that handles a sort of free market of vanity miners and buyers.\nAs for the legal issues, I have already included a so called \"illegal number\" in the block chain as a part of my master thesis. So far Bitcoin hasn't been banned;).\n", "block - What is the legal money range for a bitcoin transaction?": "\n0 to 21 million BTC. (Yes, 0-BTC transactions are allowed as long as they have a fee.)\n", "blockchain - What computations does Btcoin perform during mining?": "\nBitcoin hashes the block headers through SHA-256(SHA-256(header)) hashing. The result of that hash has to be smaller than the current target, which is commonly represented by difficulty.\nThose computations are performed many, many times during mining, so there are some slight optimisations for the process. Namely, the use of midstate. Generally, before the header can be hashed, it needs to be split in half due to the SHA-256 algorithm (which operates on data smaller than the header). Half of that data does not change with iterations over the nonce, so it is useful to calculate the midstate of that half of the hashing to use in the algorithm, saving you some computational time during each check.\nAsides from that, there is more complexity to it (ah, the damned endianness and so forth), but this should make things clearer for you.\n", "Cooling for an XPS 15 (L502x) laptop during Bitcoin Mining": "\nMining on a GPU, especially on less powerful ones like the ones found in laptops is highly inefficient. You can find out exactly how much you can potentially earn or lose from various Bitcoin calculators, like mine for example.\nIf you are worried about overheating your laptop and just want to test what mining is all about, you could also lower your hashrate, for example by introducing pauses in the miner. Most mining software should be supporting this feature, so you ought to look at the documentation.\nHardware specific question are probably best asked on different StackExchanges. You could just ask \"where is my GPU on my laptop and how best to cool it?\"\n, which isn't Bitcoin-specific.\nAnd if you want to ask about cooling of BitForce Jalapeno, why not post a separate question with that topic? The more specific question, the better.\n", "protocol - What are the internal details of GetWork() .. the foundation of Bitcoin mining?": "\nYou can find some examples of the GetWork protocol here.\nGenerally, the pool provides a block header that is to be hashed with various nonces, as well as some additional information, such as:\n\nhash1, which is always \"0000000000000000000000000000000000000000000000000000000000000000000000800000000 0000000000000000000000000000000000000000000010000\"\nmidstate (deprecated), a value calculated by hashing half of the block header, used to speed up the process. Midstate is deprecated, as it is redundant data that can be calculated by the miner.\ntarget - the target that is to be used to determine if the header is hashed correctly\nVarious other protocol extensions\n\nThe pool has to keep a track of the various block headers sent, as well as their corresponding blocks.\n\nGenerally, the transactions that are included in the block are all the transactions that the pool knows about (with some exceptions, for example some pools exclude 0 fee transactions altogether).\nThe order of the transactions can be random, but the coinbase transaction is most often the first transaction in the block.\nMost miners will work on different sets of transactions, but most often it will just differ by the coinbase transaction or their order.\nIf a transaction is included in a block that gets overwritten by a fork it will be be treated as a new transaction to be considered for inclusion in the block. Provided there was no double-spend attempt, it should be included in the future blocks.\n\n", "transactions - how http://blockchain.info/, http://blockexplorer.com/q or http://www.bitcoinmonitor.com/ works": "\nThey monitor the public blockchain from multiple Bitcoin servers. There's a very simple rule for which chain is valid -- whatever chain has the most work is the valid one.\n", "hashpower - (litecoin) High hashrate but low amount of submitted shares in solo": "\nThe system of shares on a pool is set by the pool owner. It is not exactly the same as mining litecoin solo, and in fact some pools will have much smaller shares (pool-x.eu) set up to encourage you to continue mining, even though you are not actually mining more litecoin. Other pools have larger shares which take longer to mine (ltc.kattare.com), but are actually less work for the server so (theoretically) you should get a bit more from the longer ones.  While solo mining you are A) getting all the shares yourself with no \"pool power\" and B)getting the normal share size for litecoin. Hope this helps, 5mil\n", "protocol - Could many large forks cause a DoS attack on the miner?": "\nIf you mean a miner as in a computer that only does mining, it should be generally as resistant to DOS attacks as any casual computer on the network - it doesn't open its ports.\nIf you are worried about a standard client being flooded with many blocks and having to store it - the developers did think of that and they put in the checkpoint system. Basically, making a lot of forks of the new blocks would require a lot of computational power and so forth, so it is highly unlikely. However, changing some of the earliest blocks in existence would be dirt cheap nowadays. However, the standard client will not accept any block chain forks that branch out from blocks older than the most recent checkpoint.\n", "Does blockchain.info show all transactions?": "\nBlockchain.info should have all the transaction information for any and all transaction that were included in blocks. It usually also has a lot of information about transactions that are not a part of the block yet, but due to the nature of message propagation in the Bitcoin network, it is possible that they might not see some of them before they are a part of the blockchain.\nSo, if your transactions are really fresh, blockchain.info should see them, but it's not a guarantee. If they are older, it should display them correctly. And as is always the case, some errors can occur on the software side of things.\n", "economic theory - What happens once the mining reward gets cut in half?": "\nAssuming blocks are solved at the targeted rate of one block every six minutes going forward from today, the date the block block reward subsidy drop will occur happens in late November.\n\nhttp://www.BitcoinClock.com\n\nCurrently the target rate is 7,200 BTC per day.  Starting with block 210,000, this will drop to a targeted rate of 3,600 BTC per day.\nThis event has been known (and anticipated) since Bitcoin was first released to the world in 2009.\nWhether this will cause the exchange rate to rise or fall or the amount of hashing power to rise or fall is mostly speculation.\nIf investors are counting on the price going up, maybe to $20 let's say, and instead it sticks at around $12, then maybe they sell as it didn't deliver the gains they were hoping for.  So the lowered new supply of coins doesn't necessarily guarantee a corresponding rise in the exchange rate.\nThe amount of hashing that occurs will roughly approximate miner's profitability.  As long as miners can mine profitably, they will continue to mine.  If their revenue drops by half but it still exceeds the cost of electricity and other operating costs, then they will leave the equipment operating, bringing in mined coins.\nThose miners whose costs put them among the least profitable will likely be forced to drop out.  These are those who currently mine with a GPU and pay avergage (e.g., $0.12 per kWh) or above average electric rates.   Unless the future exchange rate rises faster than difficulty from here, come block 210,000, possibly 50% or more of GPU miners will be dropping out -- either immediately if the have done the math, or within weeks when the total revenue calculation for the first month after the drop gets matched up against the monthly electric bill.\nFPGA miners operate 5X or more efficiently in terms of electrical consumption so they are still producing positive cash flows and thus most will continue mining even after the drop.\n", "api - Need authoritative source for historic Bitcoin conversion prices from all exchanges": "\nAll historical data from any exchange available at Bitcoin Charts: Markets API\n\nHistoric Trade Data\nTrade data is available as CSV, delayed by approx. 15 minutes. It will return the 2000 most recent trades.\n  Format:\nhttps://api.bitcoincharts.com/v1/trades.csv?symbol=SYMBOL[&start=UNIXTIME]\nReturns CSV with columns: unixtime,price,amount \nExample\nLatest Kraken EUR trades:\n  https://api.bitcoincharts.com/v1/trades.csv?symbol=krakenEUR\n\n", "services - Who to rent virtual private server from accepts bitcoin?": "\nYou can find a list of VPS hosts on the Bitcoin Wiki page for Trade. Some of them list what countries they come from. There is also a neat list of all the VPS servers. At the time of writing, only CINIPAC appears to be anywhere close to your desired locations, being from Romania.\n", "wallet - How does Blockviewer work? (tool to discover identities of \"anonymous\" bitcoin transactions)": "\nThe technique was first described in form of formal study by researchers with the Clique Research Cluster at University College Dublin, blog post: An Analysis of Anonymity in the Bitcoin System, the research paper is here.\nImagine transaction of 1 BTC from address:Alice to address:Bob, blockchain shows that there was transfer of 1 BTC\n\n1 BTC source:Alice, destination:Bob\n\nNow, if a person controlling address:Bob wants to spend the 1 BTC he or she has to construct transaction that shows in blockchain as \n\n1 BTC source:Bob, destination:Charlie\n\nLets say you see next three transactions in the blockchain:\n\n1 BTC source:Jessica, destination:Alan\n1 BTC source:Bill,   destination:Erik\n2 BTC source:Alan,Erik   destination:Manhattan\n\nTo construct the 2 BTC transaction he or she has to have control over both Alan and Eric addresses in another words the person knows the private keys of it, therefore it's the same person, this is not true for a Bitcoin exchange or web based wallet were many people have limited access to the same private key.\nNow if you know for sure, e.g. from forum signature, that address:Erik belongs to Gavin Anderson then you also know that address:Alan belongs to Gavin Anderson.\nSo far this technique didn't uncover any BTC theft and remains to be a toy. Also, there is many ways to block it, e.g. by using Bitcoin Anonymizer.\n", "wallet - What technology will supersede the BerkleyDB format? What are the current scalability limitations?": "\nIn the next major release (probably 0.8), the reference client will most likely switch to LevelDB instead of BDB for blockchain data. For wallets, a different solution is needed, but we'll most likely move away from BDB for those too.\nBDB has several problems - that's not to say it is bad software, but our use case simply doesn't match what it's designed for. BDB is intended to provide databases with extremely high reliability, in complex multi-proces environments, on high-end systems where database logs are backed up and where upgrades are performed manually by a database administrator. BDB doesn't even guarantee compatibility between its environment files between minor releases.\nLevelDB - an open-source rewrite of Google's own database system - was designed for efficiency and consistency on commodity hardware, and outperforms BDB by an order of magnitude in some settings. Preliminary tests with LevelDB show very good results.\nFor wallets, LevelDB would be overkill and a burden. LevelDB uses an entire directory per database (instead of a single file), and wallets are effectively a simple key-value store that's loaded entirely in memory anyway. I assume wallet.dat will be replaced by some simple but solid hand-rolled format.\n", "transactions - Balance still not available?": "\nWhen you create a Bitcoin transaction, your client will broadcast that information to peer nodes and generally within seconds every node that is connected will know of that transaction.  \nThat's likely why the recipient wallet's balance rose.\nThat transaction though must be included in a mined block before the client you are using will allow those funds to be spent.  Though technically the client could let you spend the funds before the transaction gets even one confirmation, that introduces more confusion and problems so the client has this restriction for these \"unconfirmed\" transaction.\nSo, the question remaining is why hasn't the transaction confirmed?  Whether or not to include a transaction is at the discretion of Bitcoin miners (solo miners) and mining pools.  If your transaction did not include a fee that is paid to the miners then sometimes it gets ignored for a while.  This delay can range from an hour or two to more than a day. \nKnowing the appropriate fee to pay will depend on how much data the transaction consumes.  If you are a miner getting tiny payouts from your pool, your fee to send payment will be more expensive than most because each of those tiny payouts consumes data.  Another egregious violator are the tiny payouts from the losing transactions on SatoshiDICE.   Most everyone else can get by paying the minimum 0.0005 fee in scenarios where a fee is required or no fee at all when none needs to be paid.\nSo, the reason you can't spend the funds is likely because either no fee was paid or the fee that was paid wasn't large enough.  In the future, if there is the need to spend the funds from a payment quickly, consider including a fee payment that will help ensure it is included in block in a timely manner.\n", "bitcoind - Zero to Bitcoin in sixty seconds - how to set up a Bitcoin client in case you need it fast?": "\nWell, I would run the bitcoind in a VM, and regularly snapshot it.  If it fails, rollback the snapshot and reboot. Back online in < 10 min, assuming frequent backups and you start working right away.  Not sure if this is the use case you're asking about, but that's what I'd do for max uptime.\n", "services - Testnet eWallet?": "\nI have recently created a Faucet and an eWallet for the TestNet. It is very basic, but serves its purpose.\n", "transactions - Receiving bitcoins without open client?": "\nTo accept a Bitcoin transaction, you only need to give out a hash of the public key also known as the Bitcoin address. That said, if you are a merchant then the recommended practice is to give out a new bitcoin address for every transaction to make it easier to distinguish between orders from different people.\nAssuming that whatever Bitcoin client you choose is honest, then it doesn't matter what client you use. Underneath it would be the same message broadcasted by the Bitcoin network. You don't need to have a client open at all times to send or receive payment, but if you use Bitcoin-Qt then you would need to have an up-to-date blockchain database in order for client to scan through the blockchain to show all received/sent transactions and display the correct balance.\n", "privacy - Can a Bitcoin server have a .onion ToR address?": "\nYes, since version 0.7 this is possible with the reference client.\nSee the documentation about tor: https://github.com/bitcoin/bitcoin/blob/master/doc/tor.md\nEDIT: also see https://en.bitcoin.it/wiki/Fallback_Nodes#Tor_nodes for a list of published onion nodes. The explanation on that site should be updated to reflected the built-in support for onion addresses since 0.7.0, though.\n", "security - Where can I store a Bitcoin Wallet Safely?": "\nHere is an in-depth article that explains the steps you should take to secure your wallet. https://en.bitcoin.it/wiki/Securing_your_wallet.\n", "legal - What laws apply to selling / buying bitcoins for USD in California?": "\nI am not a lawyer but I think this Bitcoin Magazine Article should be informative. As far as case-law goes I would check out the bitcoinica bankruptcy suit as well as the tradehill bankruptcy suit\n", "api - Javascript widget that shows the balance of a particular address": "\nHere's a third party service that creates an img:\nBalance:\n\nhttp://bitcoinbox.ru/display/graph.php?btcaddress=1PC9aZC4hNX2rmmrt7uHTfYAS3hRbph4UN&type=balance\n\nTotal received at the address:\n\nhttp://bitcoinbox.ru/display/graph.php?btcaddress=1PC9aZC4hNX2rmmrt7uHTfYAS3hRbph4UN\n\n", "currencies - MintChip and Bitcoin - how do they compare?": "\nNote: My information about MintChip is a bit limited and may be incorrect. Corrections are appreciated.\nAuthority: Bitcoin has no central authority. MintChip is run by a government agency.\nSecurity: Bitcoin is secured by cryptography. MintChip is secured by tamper-resistant hardware. (The Mint says they'll support other models, but I'm quite puzzled how they'll make that work with their framework.)\nAnonymity: Bitcoin is pseudonymous. You perform transactions through an account and transactions are public. You can have more than one account. MintChip transactions are only known to the participants and the system operator.\nCurrency: Bitcoin is a commodity that acts much like a currency. The supply of Bitcoins is fundamentally limited by the mathematics of the system. MintChip is a way to trade fiat currency that can be devalued by inflation and whose supply is limited only by politics.\n", "client - Has anyone ported the Bitcoin software to plain C or Objective C?": "\nThere is a pure C99 bitcoin implementation called cbitcoin by MatthewLM, forum threads:\n\ncbitcoin - Bitcoin implementation in C. Currently in development.\n[ANN] cbitcoin 1.0 Alpha 3 Released.\n\nbut it is currently in alpha stage. One of its features is weak library dependency, e.g. it possible to implement cryptography using something other than OpenSSL. As far as I know there is no Objective C Bitcoin implementation.\n", "exchange rate - How will the Bitcoin network look after BFL ASIC hardware shipments?": "\nThe number of bitcoins issued each day is targeted to at 7,200 BTC per day.  Beginning with block 210,000 that number will drop to 3,600 BTC per day.\nThe distribution as to which miners will be getting the newly issued coins will change once ASICs are out, but the actual quantities issued will not.  (Well, there could be a few thousand extra coins for a few days but then it will readjust back to the target).\nTherefore, there will be very little impact on the \"Bitcoin economy\" due to the introduction of massively greater hashing capacity that will come from ASIC designs entering Bitcoin mining production.\nAs far as the block reward subsidy drop from 50 BTC per block to 25, that is already known -- the date might vary a week or so earlier than the current target (November 30th, 2012), but generally it is known when and to what degree (50 to 25) it will happen so it is likely already priced in for the most part.\nThus again, the \"Bitcoin economy\" probably won't be impacted by speculators or miners rushing to buy.\n", "What does a Bitcoin transaction consist of?": "\n\nHere's an interactive diagram showing the indivdual steps through the diagram:\n\nhttp://staging.spectrum.ieee.org/static/how-a-bitcoin-transaction-works\n\nA typical transaction (simplified) looks like:\nSpend:\n \u00a0 20 BTC from a transaction using address:ABC123 \n\nTo:\n \u00a0 10 BTC to address XYZ111\n \u00a0 10 BTC to address JKL222\n\nHere XYZ111 is where you want to send your BTC to and JKL222 is your address for the change.\nWith transations like this you do not know (reliably) where your BTC are coming from. The next transaction will probably spend from JKL222 as ABC123 is all spent.\nThis in intentional in the Satoshi client so that it jumbles up the change and the sendee's addresses.\n", "economic theory - How many coins are needed to ensure stability i.e. neither inflation nor deflation?": "\nThis question would be better for Economics SE, if it was still around. But oh well.\nYou can't really prevent short-term inflation and deflation spikes, as anyone with substantial enough money supply could sway the economy until it balances itself out. Also, a similarly rich person could cause the Bitcoin to rise and fall in value in a pump-and-dump cycle by buying Bitcoins over a long period of time, and then spending them all at once for profit. Rinse, repeat.\nFor a long term, you'd need to generate Bitcoins at the same rate as the Bitcoin economy grows. As the value would be really hard to estimate, setting it in advance would be impossible.\nThe main way I can see Bitcoin having a stable-ish value while allowing for the economy to grow and shrink would be through the use of a system akin to Digital Coin. Generally, the idea is that everyone could be creating their own currency that would be exchangeable for Bitcoin at a varying rate. The rate would vary based on the supply and demand of the private currency. There are a few mechanics to encourage people to use the private currencies, which I won't go into detail here. In this scenario, Bitcoin will be used as a standard of value - meaning everything will be compared to Bitcoin, but actual Bitcoins wouldn't be spend under normal circumstances. This way, Bitcoin in most cases wouldn't undergo inflation, but the economy built around it could.\n", "privacy - Bitcoin mixing and transaction sizes": "\nThe mixing service could use various means to obfuscate the mixing - for example:\n\nIt can make you send coins to some off-line address, then send you your coins from its own supply of bitcoins before introducing your coins into the circulation again. This way it would appear that the transaction took place before you send the coins to the mixing service, and thus be harder to link\nThe service could split your Bitcoins into many smaller amounts and launder them each individually\nIt could deposit some of your money into some eWallets or similar services that use a shares pool of coins\nIt could use your money to purchase mining hardware and mint you fresh coins\nThe service could pay your money back to a few of your receiving addresses, making finding the final amount harder\n\nGenerally, there are many creative options of hiding things in the Bitcoin network, you just have to use your imagination.\n", "wallet - Is there a point to vanity addresses if a new destination address should be created per sender?": "\nVanity address' purpose is generally in its name - vanity. You mainly use it to show off, like say in forum's signatures or general donation address, not for business in most cases. Usually you won't want to use a vanity address when you want to remain anonymous, which is what you try to accomplish by using a new address for each transaction. You can use the vanity address to mark your brand as well. For example, SatoshiDice's addresses all start with \"1Dice\".\nGenerally, you would use a vanity address if you can spare the computational power where people could see it quite clearly, and use the other addresses when you don't want to make an effort.\n", "transactions - How can I assure my consumers they are actually paying the correct person? (prevent MITM attacks)": "\nThere is a lot of evidence that man in the middle attacks are common, and this is a good question for the Bitcoin community to review.\nWhen publishing the Bitcoin address on a web page, either you will be using a static address (one address for many senders) or generating a new address for that particular user.\nRegardless of the frequency of generating a new address, the bottom line is if you send your Bitcoin address over HTTP you need to secure the DNS infrastructure, SSL, and make sure your site is protected from HTTP based XSS, CSRF attacks.\nHere are some links to get you started with securing HTTP:\n\nSend all traffic over SSL, and set cookies to Secure and HTTP Only\nUse a well known Public Key vendor and ask visitors to run Convergence.IO to prevent a stolen/hacked key from being used.\nDisable compression on the webserver or load balancer and configure SSL correctly\nScan the client's machine for old plugins and ask them to upgrade\nHave a dedicated domain for purchases with only one \"dot\" in the name\n\nUltra-modern DNS Security\n\nUse DNSSec with a trusted root domain that supports DNSSEC at the root (.com, .org, etc)\nUse TLSA RFC6698 to self-publish SSL keys into DNS\n\nFor ToR clients\n\nHave a .onion address  (users at Exit nodes can modify your HTTP/S session)\nDetect that the user is using ToR and redirect them to your .onion address\n\n", "verification - How do I \"Verify my wallet\"": "\nDo you own the address specified by the seller (as in, did you provide them the address)? If so, the seller probably wants you to confirm \"yes, the address is correct\" or something like that. If you don't own the address, I think you should ask the seller what exactly does he mean by that.\nGenerally, you don't verify a wallet. All the Bitcoin addresses verify their integrity by themselves (they have a checksum). Someone might ask you to verify that you are an owner of an address by making you sign some message with it, but that is quite rare.\nI did a bit of search on the address you provided in part. Generally, unless you want to really hide that you own the address, there is no need to obscure any information about the addresses. In that case you wouldn't give any information. As it stands, I think you meant this address: 1Nf9iWh318w45Q1BY6cebPFp6YnYx4cPKB. From what I can see, you received a donation of 0.103BTC, so I'm guessing the seller sent you a bit of Bitcoins so you can check if the transaction went through and you received it correctly before sending you the full amount. If you can see the transaction in your wallet, you should go ahead and tell the seller that the address is correct and they can send the full amount.\n", "development - What is the Bitcoin Foundation?": "\nThe Bitcoin Foundation is a non-profit corporation started by some of the most respected members of the Bitcoin community created to accelerate the global growth of Bitcoin. They follow the model of open source bodies like the Linux Foundation, or the Tor Project.\nThe foundation at the moment consists of five board members. During the first term the board consisted of:\n\nGavin Andresen\nJon Matonis\nCharles Shrem\nMark Karpeles\nPeter Vessenes\n\nThe goals of the Foundation from their About page:\n\nTo standardize Bitcoin - \"As a non-political online money, Bitcoin is backed exclusively by code. This means that\u2014ultimately\u2014it is only as good as its software design. By funding the Bitcoin infrastructure, including a core development team, we can make Bitcoin more respected, trusted and useful to people worldwide.\"\nTo protect Bitcoin - \"Cryptography is the key to Bitcoin\u2019s success so far. It\u2019s the reason that no one can double spend, counterfeit or steal Bitcoins. If Bitcoin is to be a viable money for both current users and future adopters, we need to maintain, improve and legally protect the integrity of the protocol.\"\nTo promote Bitcoin - \"In the context of public misunderstandings, misinterpretations and misrepresentations, Bitcoin needs to be clearer about its purpose and technology. Allowing the community to speak through a single source will enable Bitcoin to improve its reputation.\"\n\nAny person or corporation can join the Bitcoin foundation. Asides providing their name and address, one needs to pay their fees. For individual level, those are (effective as of 2012 07 23):\n\n25 BTC for a lifetime membership\n2.5 BTC for an annual membership\n\nCompanies can also apply by paying the following fees:\n\n500 BTC for annual Silver Membership\n2500 BTC for annual Gold Membership\n10000 BTC for annual Premier Membership\n\nEach level of membership allows an individual or corporation one vote in each of their respective voting class.\n", "wallet - iPhone app for bitcoin": "\nBitcoin does not suggest anything, it is a currency and a project, not a person.\nGenerally, the choice of an iPhone app is limited by the factor that probably what you'd want to see the most, a wallet app, is not possible on iPhone due to Apple's restrictions.\n", "market - Where can I find a Bitcoin-related job?": "\nYou are describing, the new cottage industry -- that of The Bitcoin Specialist.\nThere are a lot of skills that can be combined to become self employed providing Bitcoin-related services.\nThere is profit that can be made when trading bitcoins in-person.  There are hundreds of individuals who are signed up with LocalBitcoins and offer this personal buying and/or selling service.  Adding a fee or offering an exchange rate in your favor from five to fifteen percent versus the market rate is not uncommon, though that is temporary as competition will bring the rates more in line with market prices over the long run.\n\nhttp://www.LocalBitcoins.com\n\nThere is the need for IT security assistance.  It could be as simple as helping a person understand two-factor authentication and setting up Google Authenticator to secure access to the user's exchange account.\nIndividuals who don't know what an \"air gap\" is might be willing to pay to be shown how to create an offline paper wallet using a LiveOS on a system that has no network connectivity -- purposely disabled for security purposes.  Or set up an Armory offline wallet and demonstrate how it is used:\n\nhttp://www.BitAddress.org\nhttp://bitcoinarmory.com/index.php/using-offline-wallets-in-armory\n\nMore and more Bitcoin-related services, including #bitcoin-otc marketplace, MPEx, and FastCash4Bitcoins.com for example, require GPG. Setting that up for people (and showing how to back up the GPG private key) is a needed support service.\nOnline there are people who simply want to move their funds from their own wallet to an EWallet and can't be bothered with updating the software and/or waiting for the blockchain to finish downloading.   But they might be willing to attach their wallet.dat (if encrypted) or upload it (via https) to someone offering wallet transfer services.\nThere are people locally who might be interested in speculative trading who would pay for the education -- not just market-timing trading on the exchanges but perhaps investing on MPEX, or ICBit.se (futures) as well.\nThere may be individuals who would love to play BitLotto, bitZino and SatoshiDICE but don't know what \"provably fair\" means.  So being able to demonstrate why these can be considered \"provably fair\" and explain how they can be used is a service that gamblers might pay for.\nBitcoin is just one of the components in the tool chest.  Just as knowing Bitcoin very well opens some doors, knowing other privacy-enhancing technologies can be valuable as well.   Tor and to a lesser extent mesh networking are two other skills a Bitcoin technology consultant will want to have expertise in.\nThere may be people willing to transact on the dark net but they don't already have the technical ability to do so.  Having someone local who is familiar with the steps (e.g., install Tor, install GPG, coin mixing, etc.) and can perform assistance in getting set up, in-person, is a valued service.  [Though be careful, and don't offer this service unless you really know your stuff.]  Consider joining or starting a CryptoParty:\n\nhttp://www.CryptoParty.org\n\nLocal escrow is another service.  A person might not trust an online escrow but if they already know who you are, in real life, they might be more willing to use you as escrow for a trade.  \nSomewhat related to escrow is to act as a buyer's agent.  For instance, someone is buying something from a seller in your town and wishes to ensure a good transaction.   So you accept the buyer's payment and then you meet the seller to inspect the goods before shipment. If the items are in working order you settle up (paying cash to the seller), and the shipment goes out.\nAdditionally, now that ASICs are just about to ship, a person can provide tech services to non-technical people.  The BFL equipment will still need a host, whether it is a Raspberry Pi or a desktop computer.  Unlike GPU and to a lesser extent FPGAs, the ASIC equipment does not require strong technical skills.  A miner can be set up in minutes, with only periodic maintenance.  Because there is not much heat produced nor any extraordinary connectivity requirements, ASIC mining is once again putting mining back in the range of capabilities of a typical slightly ambitious person.\nJust look at all the ways bitcoins are used and there are unmet needs all over the place.\n", "exchanges - Receiving dollars directly into bitcoin wallet?": "\nBitPay appears to have an all-in-one solution that allows you to set up a store checkout in a lot of different currencies that will be handled through the use of Bitcoins. As I don't have a hands-on experience with that, I can't vouch for how the system works.\nAnother convenient way of setting up a payment system would be to use BitInstant which allows a user to quickly convert cash into Bitcoins through a variety of ways. It does not appear to be as automated as BitPay though, and you would have to handle your own payments.\nLastly, you can encourage your users to get their Bitcoins through more traditional means, such as the use of Bitcoin Exchanges. This option also requires you to handle the payments by yourself.\n", "websites - Which Bitcoin-powered gambling sites are \"provably fair\"?": "\nBitLotto was likely the first blockchain-based \"provably fair\".  It uses the transaction ID as the \"ticket\", and the results of a large government-run lottery to determine the winning numbers.\n\nhttp://www.BitLotto.com\n\nSatoshiDICE became a blockbuster (pun intended) method for online gambling.  It uses the transaction ID to determine the \"lucky number\" (between 0 and 65,535).  The secret used for determining that lucky number is revealed after the end of the day.\n\nhttp://www.SatoshiDICE.com\n\nbitZino gets credit for coining the term \"provably fair\", and first launched an online blackjack game then followed it up first with video poker and then roulette as well.  The game allows the user to change the client seed used for each play.\n\nhttp://www.bitZino.com\n\nBitJack21 was possibly the first.  The game gives the ability for the player to change the seed used for each hand.\n\nhttp://bitjack21.com/\n\nBitDice.com, SatoshiRoulette.com and others claim to be provably fair, I believe.  But I haven't gone through the verification steps myself to confirm.\nBitLotto and SatoshiDICE wagers can be verified by anyone at any time after the results are published in BitLotto's instance, and after each day's secret is published for SatsoshiDICE's instance.  Proving that bitZino always computed the results correctly requires logging of the hash, the client seed, and also the way the hand was played -- so it is much more effort to verify unless there is automation but no automated solutions for verifying all wagers on bitZino have been made available.\nHere's an article on what provably fair means:\n\nhttp://www.forbes.com/sites/jonmatonis/2012/08/31/bitzino-and-the-dawn-of-provably-fair-casino-gaming\n\nHere is one explaining how it works:\n\nhttp://bitcoinreviewer.com/provably-fair/\n\n[*********\nAdditional sites in which claim to be provably fair but I've not gone to verify:\n\nhttp://www.satoshibet.com\nhttp://www.BitMillions.com  (Apparently uses as a seed a Twitter sequence?)\nhttp://www.KingCo.in \nhttp://www.BitcoinVideoCasino.com \nhttp://www.Playt.in\nhttp://www.bitino.com\nhttp://www.pinballcoin.com\nhttp://www.blockchainroulette.com\nhttp://www.diceoncrack.com   (Uses transaction hash just like SatoshiDICE, so should be easily to verify)\n\n*********]\n", "import - Will I need to keep track of my old private keys forever?": "\nI think the core of the problem is that we call base58-encoded public key hashes \"addresses\", no matter whether people are willing to accept payments to them.\nIn my opinion, they are just identifiers for a public key - something internal in Bitcoin's technology. Humans shouldn't ever see them, unless they are debugging.\nSatoshi originally didn't intend to use the current base58 addresses as \"payment destination\" - he thought pay-to-IP (where the public key was negotiated on the spot) would be the common way of doing transactions. The pay-to-pubkeyhash-via-P2P was only added later for cases where the receiver was offline. Pay-to-IP had several problems, and became obsolete, but it had a lot of advantages compared to what we have now. I think the solution is going back to something like that, like a pay-to-URI where again keys are negotiated at the time of the transaction. It means you're always sure the key used is still active, private keys don't need to be retained forever, no key is ever reused (better for Bitcoin's privacy model) and you instantly get support for attaching messages or refund information to transactions.\nOf course, people will probably keep the private keys anyway, for example in an archive wallet like mentioned in other answers to this questions. But in my opinion, it shouldn't be a disaster when people don't.\n", "payment - How can I find the sender's address from the transaction hash?": "\nYou can for example check the Block Explorer's info about a given transaction. For example, given transaction 1c480aad976c61b51ae47401a554b09f65efe6f95f644041f838d9129e09167c, you can see that the only input was associated with address 1HnjAo2nbHGFDto86smcFiF3uUwfvNJ4cS.\nHowever, generally you should avoid using transaction inputs for basically any purpose - they do not uniquely identify a user, sending Bitcoins back to the user might be problematic with just this information and so forth.\n", "hashpower - Tracking Hash/sec of major pools and individual (solo) miners": "\nSuch information is already listed on Blockchain.info.\nYou can track that information by tracking the created block amount through various means - some pools embed information about the block's origin into the coinbase transaction, others might use the same reward address each time. Alternatively, you could try tracking which pool relayed the block first if you are connected to all of them, or perhaps keep a track of each pool's statistics on blocks and shares to see which one claims ownership of the block.\n", "news coverage - What's the story behind the Mitt Romney's tax return information blackmail": "\nThere were 3 BTC paid on the \"release\" side, and 0.72 BTC paid on the \"don't release\" side.   \nSo it brought in under $50 USD worth.\nAnd the deadline passed with no tax returns.\n\nhttp://www.dailydot.com/news/blackmailers-50-dollars-bitcoin-romney-taxes/\n\n", "Which software can I use to setup an e-wallet site?": "\nMost eWallet services would probably be using the standard Bitcoin client running in the server mode. You would then control it through the use of the JSON RPC commands.\nBut for personal use, you probably want to just use existing eWallet solutions, or commission someone to help you set your wallet up taking into account such concerns as data security, proper wallet backup and so forth (shameless autopromotion - you can contact me;) ).\n", "Mining with low specs?": "\nNo, this would not be worth it. CPU mining is extremely slow and there is probably no OpenCL driver for your integrated graphics. You could however hook up FPGAs to that computer, or in the future, bitcoin ASICs.\nCurrently recommended hardware would be FPGAs and/or fast AMD graphics cards.\nIn the near future there are several ASIC-based mining devices scheduled for launch. These will drive up the difficulty, making today's FPGAs and AMD GPUs seem slow.\n", "address - Why is the phrase \"Received with\" used instead of \"Received to\"?": "\nI don't think \"received to\" is a correct phrase in itself. You can say that \"a transfer was made to my address\", \"I received money with my address\" but not \"I received money to my address\". Then again, you probably should ask this question on English SE.\n", "What is the most cost effective way to exchange USD for Litecoin?": "\nYou could try looking for someone to trade you USD for litecoins in your local area in person, through Bitcoin OTC Exchange, or perhaps BTC-E or some other online exchanges.\nIn the first case the risk should be fairly small, although it might take a long time to find someone, get in contact with them and so forth. Not to mention the exchange rate might not be in your favour.\nThe second option should give you better results, but you'd have to make sure you are dealing with someone reputable enough for your trade. However, finding an exchange rate in your favour might not be too easy.\nThird option is probably the safest and the exchange rate should be reasonable. The main problem you might face with established exchanges is possibly having to register on them with your documents to avoid your account and funds being suspended due to Anti-Money Laundering laws and regulations.\n", "standard - Bitcoin Best Practices by the Bitcoin Foundation": "\nI put together a Kindle book, Bitcoin Step by Step, that covers some best practices.  When I was writing I searched the web for what ever I could find trying to make sure what I suggested was indeed the current best practices.  You can find it on Kindle.\n", "mining theory - When did Litecoin become \"GPU-friendly\"?": "\nNothing in the litecoin protocol changed, only a tool to mine litecoins using GPU was independently developed: the Reaper and caused difficulty to improve to make CPU mining much less efficient (compared to electricity price). Still, the rise of diffculty is not so dramatic as was the case for bitcoin and scrypt algorithm has proved its worth. CPUs can still mine 1-3 LTC/day at the moment.\n", "mining hardware - Can a Butterfly Labs Mini Rig SC cause health concerns if stored in a bedroom?": "\nI don't know the actual design of the Butterfly Labs machines, but I assume that the health risks should be similar to a traditional mining rig. Probably the main concern would be the noise level of any fans installed in the machine, as well as potential electric shock should the machine be operated haphazardly and without proper grounding. You also might be worried about potential static build up, high-temperatures and overheating (should the machine gather dust over a period of time). One way or the either, the common sense would dictate that the machine should generally be safe under normal conditions, but I would keep it out of kids' reach.\nAgain, I have no practical experience with dealing with any Butterfly Labs hardware, and while I have a technical electronics diploma, I'm not an expert in safety or similar devices.\n", "mining profitability - Can Artificial Intelligence be used to mine BitCoins faster?": "\nIf you are talking about finding a better algorithm than SHA(SHA(block header)) - it might be possible to optimise the algorithm for some features, like being GPU resistant and so forth, but generally that would be a bit pointless. Changing that algorithm now would undermine the stability of Bitcoin and wouldn't benefit it much. Generally, the current algorithm does it job and does it well - it provides scalable difficulty, the mechanics are still unbroken, and so forth.\nAs for using AI to try solving the SHA(SHA(block header)) algorithm - it probably would be hard if not computationally impossible at the moment. The algorithm doesn't appear to be broken, meaning that the output of the calculation appears to be quite random, which is not faring good for trying to use AI to solve it.\n", "bitcoin core - Can wallets be shared by different machines?": "\nIt is a bad idea to have multiple copies of your wallet.dat running from multiple computers if both will be spending.  You risk getting double spend attempts that will never confirm and cannot be cleared without performing wallet surgery.\nBlockChain.info/wallet has a \"desktop sync\" feature that will let their hybrid EWallet sync with your Bitcoin.org client (through RPC), but since BlockChain.info/wallet can be used on multiple machines why not just use BlockChain.info/wallet from everywhere instead?  You get to use the mobile app with it as well.\n", "governance - How does bitcoin make profit?": "\nThere are no \"owners\" of bitcoin. It is like a protocol or algorithm, such as HTTP or SHA256. No one made money creating the program; it's free and open source!\nHowever, there are people who make money by \"mining\". From the bitcoin wikipedia page: \n\nBitcoins are awarded to Bitcoin \"miners\" for the solution to a difficult proof-of-work problem which confirms transactions and prevents double-spending.\n\nMiners can also get extra bitcoins from voluntary transaction fees. In every transaction, it is recommended to pay a tiny fee so that miners will have an incentive to actually compute your transactions in the next block. Without a miner to verify your transactions, there is no way you or your payee can ensure that the bitcoins transferred are valid.\n", "Any books about Bitcoin?": "\nA new book called Bitcoin Step by Step is out on Kindle.\n\n\nhttp://www.amazon.com/dp/B00A1CUQQU\n\nIt will get users started safe and secure in the Bitcoin market place.  It takes them screen by screen \n- on how to set up a wallet securely\n- Funding an account\n- sending / receiving BTC\n- Extracting BTC to currency\n- Where they can spend BTC\n- How they can earn BTC\n", "job - Freelancer.com-like website but based only on BC payments using some sort of escrow-like system to make sure that employer has enough money?": "\nSuch projects are possible with Bitcoins. Generally, what you can do with money, you can do with Bitcoins.\nEscrow services in Bitcoin were popping up every now and then in the earlier days of Bitcoin, but I don't recall any of them becoming too popular. However, setting up an escrow-like service should be fairly simple. If you need some help, you can drop me a line ;).\n", "private key - What would happen if you send bitcoins to a non-existent Bitcoin address?": "\nThere's no such thing as a \"non-existent\" address.  \nOther than valid addresses created by a client in which the private key is kept secret there are also are:\n\nInvalid addresses (which will fail the client's sanity checks and thus cannot be used when building a transaction) \nThere are also valid addresses in which no key exists.  The private key is required to spend the funds.  If the private key was lost or one was never generated (such as for 1BitcoinEaterAddressDontSendf59kuE) any amounts sent to that address are lost and can never be spent.  There is no way to know if a private key exists for 1BitcoinEaterAddressDontSendf59kuE or if it was a purposely created throw-away address.\nThere are also valid addresses in which no key can exist.  An answer to a related question provides an example.\n\nThere is no way to know for sure that a valid address has no private key.  What is known is that a program like VanityGen would not be able to create an address that includes many readable words like the address 1BitcoinEaterAddressDontSendf59kuE contains using the type of computational capacity that exists today.  So it can be assumed beyond any realm of possibility (but not absolutely, positively 100% guaranteed) that bitcoins sent to that address are gone for good.\nRelated:\n\nCan a bitcoin be destroyed?\nHow to generate a valid bitcoin address for destroying bitcoins?\n\n", "blockchain - My client stopped synchronizing, how can I access my wallet?": "\nI can help!\nYour money is \"yours\", it just isn't being listed in your wallet because as you say, your wallet is having trouble updating... That's OK! You can access it in other ways, such as an online e-wallet:\nFirst, we need to get your \"private key\":\n\nClose bitcoin completely, then\nOpen control panel, select \"large icons\" in the top right corner\nClick \"folder options\", or if you are opening it from the start menu, just click \"folder options\"\nClick the \"view\" tab\nunder \"hidden files and folders\", click \"show hidden files and folders and drives\"\nDeselect \"hide extensions of known file types\", this will allow you to see the bitcoin working folder\npress OK\nright click the start button and click \"open windows explorer\"\ndoubleclick \"local disk (c:)\" under \"my computer\"\ndoubleclick \"users\"\ndoubleclick \"yourusername\" eg \"john\"\ndoubleclick \"appdata\"\ndoubleclick \"roaming\"\ndoubleclick the \"bitcoin\" folder\n\n(this is for Windows 7, for XP the directory is C:\\Documents and Settings\\YourUserName\\Application data\\Bitcoin (XP))\n\nright click an empty area in the folder and select \"new\">\"text document\"\ndoubleclick the new text document\ntype the following 2 lines into the empty text document:\nrpcuser=someusername\nrpcpassword=somepassword\nreplace someusername and somepassword with anything (you don't have to remember it later) so button mashing udhf9w8dg98rgu will work (no spaces)\n\"file\">\"save as\" type \"bitcoin.conf\"\npress save\nRight click the start button and click \"open windows explorer\"\ndoubleclick \"local disk (c:)\" under \"my computer\"\ndoubleclick \"program files(x86)\"\ndoubleclick \"bitcoin\"\nhold shift and right click on \"daemon\"\nclick \"open command window here\"\ntype \"bitcoind\"\nleave that window open,\nWait 2 minutes for the daemon to load\nDon't close the window  \nGo back to the explorer window, and again,\nHold shift and right click on \"daemon\"\nClick \"open command window here\"\n\nIf your wallet is encrypted, go to A then proceed to B if not go straight to B\n\nA: type \"bitcoind walletpassphrase 600\" where walletpassphrase is your wallet password and press enter\nB: type \"bitcoind dumpprivkey 1YourBitcoinAddress1234567890\"\n\n\n\nreplace 1YourBitcoinAddress1234567890 with the address where you withdrew the money to. You will get a long string of numbers. Leave this window open...\n\nUpload the private key to a managed service \n\nGoto blockchain.info\nclick \"wallet\" at the top\nclick \"start a new wallet\"\nsign up for a new wallet\nonce your new wallet is created, log in to it.\ngo to the tab that says \"import/export\"\npress \"continue\" at the warning\nwhere it says \"import private key\", type the long string of numbers EXACTLY from the black window\npress \"add private key\"\n\nYour wallet is now managed online.\n", "bitcoind - How many addresses can be handled reliable in one wallet?": "\nThere isn't a problem with storage but there is a problem with the computation time necessary when constructing spend transactions which involve a large number of inputs from your wallet. \nThis is a problem that is evidenced by those who run Martingale betting bots against SatoshiDICE for instance.  After they get several thousand bitcoin addresses with transactions, their subsequent bet transactions that draw from those coins start to crawl.\nA future release of the Bitcoin.org client will address this by switching from BDB to LevelDB.  Additionally targeted for future release is \"ultraprune\" which will lessen the storage requirements as well.\nIn the meantime, InstaWallet is one service that was able to come up with a solution that mitigated the problem.  They might be able to offer some suggestions. \n", "wallet - Is it possible to earn BTC by processing transactions?": "\nIf you run an Escrow service, yes, you could get paid to process transactions. But that's probably not what you're asking about.\nIn normal cases, transaction fees go into the reward for a new block being mined and are earned by the miners that create the new block. This takes specialised hardware and software. If you want to get your feet wet in this area, you ought to look into mining at a pool.\n", "services - Are there any active Bitcoin leveraged trading platforms available?": "\nMPEx operates MPOE for options trading.  Though options are a financial derivative in what a smaller amount of funds is used to speculate on the price move in the valuation of a much larger amount.  For example, BTC/USD options contracts costing 0.1 BTC could triple in value should the BTC/USD exchange rate move by a couple dollars, for instance.  MPOE's options exercised are settled in cash (bitcoins). However, MPEx does offer margined trading (essentially a loan that can be used for trading).\n\nhttp://polimedia.us/bitcoin/mpex.php\n\nICBIT.se offers leveraged futures contract trading. It offers futures contracts for the BTC/USD exchange rate, for Gold and for Crude Oil (WTI).  These are cash-settlement (in bitcoins).  Leverage can be up to 10X.\n\nhttp://www.ICBit.se\n\nThere are various Forex shops which accept bitcoins as a method for adding funds and which also offer leverage.\n\nhttp://www.bit4x.com  (Leverage up to 1000X.)\nhttp://www.liteforex.com\n\n", "job - How can one earn some Bitcoins with minimal skill requirements?": "\nThe most popular way to earn a bit of Bitcoins without any much skill is mining. The amount of coins one could earn is pretty small even with higher-end graphic cards, but through the use of mining pools and alt-coin mining one could get a small start in the Bitcoin world.\nA website that offers small Bitcoin rewards for mechanical-turk-esque small tasks is CoinWorker. The skill requirement is minimal and the service provides value to people paying for the task.\n", "transactions - What is a Finney attack?": "\nThe Finney attack is named after Hal Finney, who suggested it in this comment. (Hal happens to be the first recipient of a Bitcoin transaction, and the first person to comment on the release of the Bitcoin source code.)\nIt is a double spending attack with the following features:\n\nIt only works if the merchant accepts unconfirmed transactions.\nIt still works, however, if the merchant waits a few seconds to\nverify that everyone in the network agrees he was paid.\nIt requires the attacker to be mining and controlling the content of\nhis blocks; however, he can in theory do this with any hashrate, in particular significantly less than 50% of the network hashrate.\n\nIt proceeds as follows:\n\nThe attacker mines blocks normally; in the block he is trying to find, he includes a transaction which sends some of his coins back to himself, without broadcasting this transaction.\nWhen he finds a block, he does not broadcast it; instead, he sends the same coins to a merchant for some goods or service.\nAfter the merchants accepts the payment and irreversibly provides the service, the attacker broadcasts his block; the transaction that sends the coins to himself, included in this block, will override the unconfirmed payment to the merchant.\n\nIf the time from finding the block until the attacker sends payment and the merchant accepts it is t, and the average time to find a block is T, there is a probability of t/T that another block will be found on the network in this time; in this case the attack will fail, and the attacker will lose the block reward of B.\nThis means that the average cost of attempting the attack is about (t/T) * B; as a rule of thumb the merchant should wait at least t=V*T/B (V is the value of the transaction), to make sure that trying to carry out this attack against him isn't profitable; this may not be sufficient though, as a nimble attacker can use the same block for multiple attacks, potentially gaining the total of their value.\nClearly, the lower the attacker's hashrate, the less opportunities he has to carry out the attack. If the attack is for obtaining some illiquid good, it is difficult to make the need for this good coincide with finding a block. If the attack is for obtaining something liquid (e.g. exchanging bitcoins for other money), an opportunity is ever-present but the merchant is likely to require a few confirmations. This makes the attack difficult to use in practice.\n", "security - What is a block withholding attack?": "\nThere are two types of block withholding attacks.  One, known as the Finney Attack, aims for financial gain when a double spend occurs.  The second is to cause financial harm to a pool operator.  A miner that solves a block can withhold a valid hash after finding one.  The cost to the miner is trivial (from not being awarded the share) but the cost to the pool is large as the pool loses a chance to earn the 50 BTC block award subsidy.\n", "security - How do mining pool payout methods affect the cost of executing a block withholding attack?": "\nGenerally, the higher the variance for the miners of a reward method, the higher the cost of sabotage attacks (and I think also the potential profit of lie-in-wait).\nIn PPS there is no variance; and the cost for sabotage is negligible, it is merely the reward of 1 share.\nIn a typical method with no risk absorption and moderate variance, withholding a block means you lose your portion of its reward, which is h/H, your portion of the pool hashrate.\nIf you take an extremely high-variance reward method such as \"pay per last 10 shares\", withholding blocks means losing 10% of the reward, since if you submit a block then by definition you have a share in the last 10 shares, no matter your hashrate.\nAnd of course, when solo mining, block withholding means losing all of your mining reward.\nA block finder bonus is added multiplicatively to the other costs. For example in PPL10S with 20% finder bonus, when withholding you lose both the 20% bonus and 10% of the distributed 80%, for a total cost of 28%. However, finder bonus is a poor way to combat block withholding because it creates a lot of variance.\n", "history - What is the store that sells the famous alpaca socks for Bitcoin?": "\nThat would be Grass Hill Alpacas at http://www.grasshillalpacas.com/\nFrom their website:\n\nGrass Hill Alpacas is located on 115 acres that has been in the family for over 125 years. The farm is located at the foot of Grass Hill in the Haydenville section of the town of Williamsburg, just 10 minutes from the center of Northampton. The last time the land was actively farmed was in the 70's, when the last of Stanley \"Stubby\" Nash\u2019s oxen were sold. Currently our operations are based on 5 acres of old pasture land that we have reclaimed and fenced in. With more than 40 acres of fields, we have plenty of room for expansion as needed.\nWe brought our first 6 alpacas onto the farm in the summer of 2006. It has been an exciting, rewarding time for our family and our farm. We have learned alot, had some great experiences and built wonderful new friendships that will last a lifetime. But the best part of it all is that we did it together as a family...side-by-side... working the same land that great-great-grampie worked.\n\nAlso, don't forget this song about the famous alpaca socks:\nMax Min - Alpaca Socks (Official Music Video)\n", "blockchain - How will a massive increase in hashpower affect orphan rates?": "\nIf the average time to find a block is T, and the typical time for a found block to propagate in the network is t, then the proportion of orphans among all blocks will be roughly 1/(1+T/t). As long as T>t there's not much risk for the network; however it could be a challenge for orphan-paying pools, for example If T=9t then 10% of the block rewards will need to be paid out of pocket.\nIf a PPS pool pays B/D per share, it is in fact using an artificially low difficulty - the difficulty metric measures how hard it is to find a block (orphan or not), when in fact what is relevant for calculating the due reward is how difficult it is to find a valid block.\nIf the network hashrate increases by a factor of X, then until difficulty catches up the average time for finding a block is (10 min)/X. I doubt the transition to ASIC will cause a discrepancy by a factor of over 10; this would give T = 1 min. With a conservative value of t=5 sec you will get about 7.7% loss for paying orphans. The actual numbers for both X and t will likely be much less (especially since concentrated hashrate lowers t), so I don't think the loss during the transition period will be prohibitive.\n", "cryptography - What mathematical property links the Armory chain to the public/private keys?": "\nECDSA can be thought of as a special form of mathematics where division is, for all practical purposes, impossible. Public keys are formed from private keys by multiplication -- the public key is multiplied by the generator G. Because of the properties of multiplication, new public keys can be generated by an entity that doesn't know the corresponding private key.\nFirst, a master public/private keypair is generated (master, G(master)). The master private key, master, is stored securely. The master public key, G(master)) is used to generate new public keys as follows:\n\nA new public/private key pair is generated. X, G(X)\nThe public key is added to the master public key. G(X) + G(master)\nThis new public key can now be used.\n\nTo generate the corresponding private key, the private key generated in step 1 is added to the master private key to form X + master. This works as the private key becauseG(X + Master) = G(X) + G(master) (distributive property of multiplication). Thus the public key corresponding to the sum of the two private keys is the same as the sum of the two public keys.\nYou can pretty easily show that producing X + master without knowing master or forging a signature of G(X + master) with only X and G(master) is as difficult as breaking ECDSA itself. So this scheme is as secure as any other method of using ECDSA.\n", "client - What happens if I force quit a bitcoin wallet application before it finishes synchronizing?": "\nThe QT client at least should gracefully resume from where it left off.\nI have done this many times with no issue (running a reasonably recent copy of the client in Windows 7).\nI'm not sure whether the MultiBit or Armory clients work the same way though; can anyone vouch for them?\n", "trading - Does the U.S. Securities and Exchange Commission govern Bitcoin?": "\nIs a Bitcoin a security?   The SEC hasn't said that it believes it is and not communicated with or taken action, formal or informal, asserting that a miner is issuing securities or that exchanges are engaging as brokers of a security, which is a regulated activity.\nIs a Bitcoin an asset or commodity?   Does your grocery store need SEC approval to sell bananas?   Or, more similarly, does a coin dealer need SEC approval to sell gold and silver bullion?\nNow a broker where gold bullion is speculated on is regulated in the U.S., just not by the SEC.  The Commodity Futures Trading Commission (CFTC) is the regulatory body that addresses that.  To-date, there are no bitcoin-related services offering futures contracts, options, or anything similar which operate from the U.S. \nNow issuing shares in a company is exactly the activity the SEC addresses.  There are no bitcoin-related services issuing company securities or operating a secondary market for shares that operates from within the U.S.  The regulators may still assert jurisdiction though if securities are offered to investors from the U.S.\nNow there may be registration requirements for an organization that holds deposits or where an exchange interacts with the banking system they may need to register as a money transmitter, but that is not something under the SEC's purview.\n", "terminology - What does the poclbm output mean?": "\nFrom the poclbm source code, Switch.py line 219:\nsay_quiet('%s[%.03f MH/s (~%d MH/s)] [Rej: %d/%d (%.02f%%)]', (if_else(verbose, miner.id()+' ', '') , rate, round(estimated_rate), rejected_shares, total_shares, float(rejected_shares) * 100 / total_shares_estimator))\n\nIt's estimated_rate.  \nAnd how estimated_rate that found, you ask?\nI tried looking at the source, but that didn't really clear things up.\nself.estimated_rate = Decimal(new_accept) * (targetQ) / min(int(now - self.start_time), self.options.estimate) / 1000\nself.estimated_rate = Decimal(self.estimated_rate) / 1000\n\nI eventually found this discussion on bitcointalk. It states that the estimated rate is based on how many shares are submitted to the pool. I don't know what it's supposed to display if you're not using a pool.\n", "merchants - Ideal prompt to show to the customer": "\nDo you offer both Bitcoin and PayPal/other on your website? If so, offer them some discount, say 10% off, if they use Bitcoin. Tell them that it is due to lower processing fees. With some monetary incentive, you will convert some of your customers over.\nIf you offer only Bitcoin, put some link in a visible page stating something like \"why only Bitcoin?\", then bring them to a page in your FAQ where you explain your reasoning to use Bitcoin - lower development cost, lower processing cost, no charge-backs, freedom from third party companies, etc. etc.\nBe sure to link to some accessable material for newcomers - for example, We Use Coins, or some materials from Bitcoin Wiki on Introduction.\n", "transactions - What is a double spend?": "\nA double spend is an attack where the given set of coins is spent in more than one transaction. There are a couple main ways to perform a double spend:\n\nSend two conflicting transactions in rapid succession into the Bitcoin network. This is called a race attack.\nPre-mine one transaction into a block and spend the same coins before releasing the block to invalidate that transaction. This is called a Finney attack.\nOwn 51+% of the total computing power of the Bitcoin network to reverse any transaction you feel like, as well as have total control of which transactions appear in blocks. This is called a 51% attack.\n\nTo prevent damages from the first attack - wait for one confirmation to appear on a given transaction. To prevent damage from the second attack - wait for 6 confirmations to appear on a transaction, or less if the transaction is small (but still require at least 1). Damage from the third attack can cripple the entire Bitcoin network, so don't worry about it - your business most likely won't be the main target (it's unlikely to happen without really big money getting involved).\nFor more information about all those attacks, you can check out my master thesis on Bitcoin security.\n", "encryption - Does the public key associated with an address become part of the public record after it has been used to spend?": "\nYou're right that public keys are generally unknown until coins are spent from their address, and that until coins are spent only a hash of the public key is published.\nWhile it's technically possible to use bitcoin public keys for the kind of encryption you're imagining, you're the first person I've seen talking about doing so.  The satoshi client has an interface to allow users to sign messages using their private key which others can verify using the associated bitcoin address, but using public keys to encrypt messages which only the holder of the private key can decrypt is something I've never seen.\nNotice that signing a message with your private key in the satoshi client includes the corresponding public key in the output signature.  This allows the recipient to verify the message.  It's possible that otherwise they wouldn't know the public key, having only the corresponding bitcoin address.\n", "services - Why did GLBSE close?": "\nIt appears that Nefario, the person operating GLBSE, decided to go against all bylaws and terms of service and just close GLBSE. That part of the story was explained by theymos. It it still unclear, however, why he did it.\n", "client - Bitcoin URL scheme": "\nThe Bitcoin Improvement Proposal that defines the Bitcoin URI scheme is  BIP21.\nThe simple syntax is:\nbitcoin:<address>[?amount=<amount>][?label=<label>][?message=<message>]\n\nOn the desktop all of Armory, Electrum and MultiBit respond to Bitcoin URI clicks in a browser and I believe Bitcoin-QT V0.7 does as well.\nOn mobiles Android Bitcoin Wallet does. On the iPhone the blockchain.info app does.\n", "exchanges - How can Bitcoin be adopted as tradeable currency pairs on Forex?": "\nWell, the Bitcoin exchanges are a form of a forex clearing house. At the moment, however, Bitcoin is not really ready to be traded alongside all world's currencies at some more major exchanges - the big players could sway its value up and down at a whim with a fraction of what money they have. Before that happens Bitcoin still needs to grow and become more noticeable. However, there isn't much stopping someone from incorporating Bitcoin into a new forex.\n", "What is the format of coinbase input scripts?": "\nA coinbase transaction is characterised by \"previous_output\" field of the transaction being 32 bytes of zeros and 4 bytes of 0xFF. It should be the first transaction of the block, but I'm not sure whether all the clients enforce this rule. The signature script of the coinbase transaction need not obey the Script protocol, but as far as I remember the first block's script pushes data onto the stack and then pops it off. The data encoded in the Genesis Block represents the famous headline of Times:\n\nThe Times 03/Jan/2009 Chancellor on brink of second bailout for banks\n\nAnd was used as a way to prove that the block was created no sooner than on 2009 01 03, but can also be speculated that it relates to Satoshi's intent when creating Bitcoin - to counter debt-driven currencies.\n", "private key - What is the status of hierarchical deterministic wallets (BIP32)": "\nI started implementing BIP32 for the reference client myself, but as there were more urgent matters to deal with, I have temporarily stopped working on it. I certainly plan to complete this, but I can't give any target date or version right now.\nAs far as I know from Alan Reiner (Armory's developer), he plans to switch to BIP32 as soon as the reference client implements them as well.\n", "attack - How much would it cost for a government to undermine Bitcoins?": "\nAs I suggested in my Bitcoin master thesis, a 51% attack would cost in a bulk part of about 7 million dollars to execute. The figure will change depending on the technology used, the current difficulty and so forth. This option would make Bitcoin or any other Bitcoin-like currency useless.\nHowever, if the USA goverment was to crack down on Bitcoin as a terrorist activity, it could detain any Bitcoin developer in the country indefinitely, which would probably be cheaper. This option would most likely generate a lot of backlash from the community, and could encourage other programmers to take over the project.\n", "transactions - What is the structure of blk001.dat and blkindex.dat?": "\nWhile reading the blockchain data directly is possible, you can only do so against stale data files -- as you can't reliably read the files while the client is running.\nPyWallet and BitcoinTools are two such methods to do this.\nInstead, the Bitcoin.org client (v0.7 and above) provides Raw Transactions support, in which you can decode a transaction to learn of its inputs, outputs and other attributes.  This, along with the rest of the API provides the ability to pull all the data from the blockchain that is needed, against a live instance:\n\nhttp://en.bitcoin.it/wiki/Raw_Transactions\nhttp://en.bitcoin.it/wiki/Raw_Transactions#decoderawtransaction_.3Chex_string.3E\n\n", "Which exchanges still accept USD wire transfers? (Oct 2012)": "\nDwolla is only for this in the U.S. and the type of bank transfer they do is ACH, which is specific to banks in the U.S. \nAs far as exchanges that accept wire transfers directly, there are many, including:\n\nMt. Gox (Japan)\nBitStamp (EU)\nBitFloor (U.S.)\nBTC-E (Russia)\nBitcoins Direct (U.S.) (bulk sales, minimum $500)\n\nMany various methods here:\n\nhttp://en.bitcoin.it/wiki/Buying_bitcoins\n\n", "exchanges - How can I buy bitcoins using Western Union (October 2012)?": "\nWestern Union is a hassle and is expensive.   Bitcoins Direct was accepting WU payments until just a couple days ago.  In the U.S., about the last exchange to accept WU (USD) for bitcoins is:\n\nhttp://www.QuickBitcoins.net\n\nIn the EU there is an exchange that accepts WU (EUR):\n\nhttp://bitcoinsinberlin.com\n\nThere are also some others.  For instance:\n\nhttp://www.ecurrencyzone.net/buy.php\nhttp://www.coinmama.com\n\nAs far as other options, the factors relevant to providing the right advice include:\n\nWhere are you located (country)?\nHow much are you looking to buy?\nWhat payment methods do you have available?\nHow soon do you need access to the proceeds?\nIs privacy important?\n\nQuite simply, depositing cash at a bank or 7-11, Walmart, CVS is going to be the fastest and easiest way.\nOptions:\n\nhttp://www.BitInstant.com (Deposit at major banks, 7-11, Walmart, CVS, Moneygram, etc.,)\nhttp://www.BitMe.com (Deposit cash at Chase)\nhttp://www.BitFloor.com (Deposit cash at Chase or Wells Fargo)\nhttp://www.bitinnovate.com (Deposit cash at a bank in Australia & New Zealand)\nhttp://www.CAVirtEx.com (Deposit cash at several banks)\nhttp://www.Spendbitcoins.com (Deposit cash at a bank in Australia)\nhttp://BitcoinNordic.com (Purchase CashU or UKash in dozens of countries)\nhttp://www.BTC-E.com (Deposit cash (USD) at bank locations in Russia)\nhttp://www.BitNZ.om (Deposit cash (NZD) at back locations in New Zealand)\nhttp://www.BitInstant.com (In Brazil using Boleto or Banco Recomendito, or in Russia, using Qiwi or Cyberplat.)\n\nAlso, Bitcoins Direct will accept cash, but they have a $500 minimum order size:\n\nhttp://bitcointalk.org/index.php?topic=87094.0 (Deposit cash at Bank of America, Wells Fargo or PNC, minimum $500)\n\nOr you might find a local trade (paying cash):\n\nhttp://www.localbitcoins.com\n\nThe fees aren't trivial but you can use a credit card to purchase by using VirWoX where you can buy SLL using your credit card, then trade SLL for BTC:\n\nhttp://www.VirWoX.com\n\nOr if you are considering a bank transfer, there all kinds of options are available:\n\nhttp://en.bitcoin.it/wiki/Buying_bitcoins\n\nThere is also #bitcoin-otc where you can connect with sellers via IRC:\n\nhttp://bitcoin-otc.com/\n\nBuying  bitcoin with western union westernuniontobitcoins.com  is very easy, being one of the few that allows you to transfer money online directly to  bank account or to a person authorized to raise money from an office W.U\n\nhttp://westernuniontobitcoins.com\n\n", "speculation - Should the current value of 1 BTC really be $2.50 USD?": "\nAs famous as it is, I believe Silk Road isn't the reason for Bitcoin's existence or its success. \nThere are plenty of private individuals who value Bitcoin for international money exchange,  its low cost trading capability, its irreversability, its lack of a central authority and its upper limit on the number of bitcoins.\nIf you analysed the transactions over time and experimented with deposits to various exchanges and traders, you would be able to build a partial picture of who is holding the existing bitcoins. You might be able to determine an upper limit on how many bitcoins are being held by speculators.\nHowever, the value of Bitcoin as a system is dependent on its popularity, so current events can have a strong effect on the value. \nRealistically, the best way to value a bitcoin is to look at the market price over time on a major exchange.\n", "buy bitcoins - Who accepts Moneybookers/NETELLER?": "\nAccording to the Wiki:\n\nVirVox accepts NETELLER and Moneybookers\nBitcoin.de accepts Moneybookers\n\nYou could always approach high-rep users and ask them to do exchange with you at some rate favourable to them, and also letting them send you Bitcoins only after some time after which chargeback would be impossible. This way you risk little (high-rep users can generally be trusted), and you will get your positive reputation started.\n", "transactions - What is the reputation of bitfloor?": "\nI am still unable to withdraw my bitcoins that were deposited before their September 2012 security breach.  Therefore BitFloor is technically insolvent.\nThey are registered with FinCEN as a money-service business in the U.S.  Thus I assume they are not immune to U.S. courts and U.S. bankruptcy laws.\nThey are one judgement away from having their bank funds frozen by a creditor, likely forcing BitFloor to declare bankruptcy.  If that happens, your funds might be used for paying out to legal costs, paying for the receiver, and then whatever is left for payment to all remaining unsecured creditors such as yourself, proportionate to the amount owed (i.e., \"pennies on the dollar\").\n\nhttp://bitcointalk.org/index.php?topic=112069.msg1218947#msg1218947\n\nI like BitFloor and I'ld like to see them succeed, but continuing to operate an exchange while insolvent is a move that is irresponsible and shows disrespect to its customers, current and prior.\n", "script - How do you get the OP_HASH160 value from a bitcoin address?": "\nCheck the Wiki. I think what you are looking for is point 3:\n\nHow to create Bitcoin Address\n0 - Having a private ECDSA key\n18E14A7B6A307F426A94F8114701E7C8E774E7F9A47E2C2035DB29A206321725\n1 - Take the corresponding public key generated with it (65 bytes, 1\n  byte 0x04, 32 bytes corresponding to X coordinate, 32 bytes\n  corresponding to Y coordinate)\n0450863AD64A87AE8A2FE83C1AF1A8403CB53F53E486D8511DAD8A04887E5B23522CD470243453A299FA9E77237716103ABC11A1DF38855ED6F2EE187E9C582BA6\n2 - Perform SHA-256 hashing on the public key\n600FFE422B4E00731A59557A5CCA46CC183944191006324A447BDB2D98D4B408\n3 - Perform RIPEMD-160 hashing on the result of SHA-256\n010966776006953D5567439E5E39F86A0D273BEE\n4 - Add version byte in front of RIPEMD-160 hash (0x00 for Main\n  Network)\n00010966776006953D5567439E5E39F86A0D273BEE\n5 - Perform SHA-256 hash on the extended RIPEMD-160 result\n445C7A8007A93D8733188288BB320A8FE2DEBD2AE1B47F0F50BC10BAE845C094\n6 - Perform SHA-256 hash on the result of the previous SHA-256 hash\nD61967F63C7DD183914A4AE452C9F6AD5D462CE3D277798075B107615C1A8A30\n7 - Take the first 4 bytes of the second SHA-256 hash. This is the\n  address checksum\nD61967F6\n8 - Add the 4 checksum bytes from point 7 at the end of extended\n  RIPEMD-160 hash from point 4. This is the 25-byte binary Bitcoin\n  Address.\n00010966776006953D5567439E5E39F86A0D273BEED61967F6\n9 - Convert the result from a byte string into a base58 string using\n  Base58Check encoding. This is the most commonly used Bitcoin Address\n  format\n16UwLL9Risc3QfPqBUvKofHmBQ7wMtjvM\n\nYou can check your calculations against my testing suite.\n", "endianness - How is the endian conversion done?": "\nIn general, converting between big and little endian values depends on exactly how you're storing those values, so both of your examples could be correct in different implementations. To this end, techniques are likely to vary even within the same application since it's more dependent on how your input data is formatted.\nIt's also dependent on how your particular use case defines endianness - there's no one-size-fits-all definition - endianness can refer to the order of 8-bit bytes within a 16, 32 or 64 bit word or it could refer to the order of individual bits or even the order of entire words within a larger context. If you're encoding the 16-bit word \"07F3\" for example and your definition of endian refers to bytes within a word then big-endian would be \"07F3\" and little-endian would be \"F307\" - working with a 4-bit byte you would end up with \"07F3\" and \"3F70\" and working with individual bits big-endian would be \"0111 1111 0011\" (07F3) and little-endian would be \"1100 1111 1110\" (0CFE).\nOne excellent example, however, is the EncodeBase58() function in Bitcoin's base58.h which uses a char vector and C++'s built-in reverse_copy function to reverse the elements' order in the vector:\n// Convert big endian data to little endian\n// Extra zero at the end make sure bignum will interpret as a positive number\nstd::vector<unsigned char> vchTmp(pend-pbegin+1, 0);\nreverse_copy(pbegin, pend, vchTmp.begin());\n\nNow I'm not 100% sure but I believe that what's being passed in to the encode functions is a UTF-8 encoded string representation of the value, so in your own words it would seem that Bitcoin's endianness conversion - at least where Base58 conversion is concerned - is a simple string reversal as long as the input is UTF-8 encoded.\n", "Does solo mining with multiple computers require different generation transaction addresses?": "\nBitcoind will of course give different data to each of the miners connecting to it. Otherwise using multiple miners would be pointless.\nIt needn't necessarily give a different address (though normally it does) - it's enough to change the extraNonce field.\n", "exchanges - Time series data for issues listed on the (now defunct) GLBSE": "\nA forum user captured the transaction and dividend history from the @GLBSE Twitter feed which can be used to determine daily pricing and dividends.  This is from v2 (April, 2012).\n\nhttp://bitcointalk.org/index.php?topic=117491.0\n\n", "api - What are midstate and hash1 used for in mining?": "\n1) Yes, it is correct.\n2) It is deprecated. Generally, it is used to write the result of the mining over to be sent to the pool. This is to ensure the result is of correct length and adheres to some rules. In practice, it is always the same trailing string of numbers.\n", "blockchain - I cannot send bitcoins from my block chain wallet because I don't have the private key. Where is it located?": "\nIn order to properly create a Bitcoin address, you need to create it from a private key. If you just start from the middle of address generation - say a public key or a result of a hash, you are not guaranteed to have a private key that can be associated with that address. In order to recover a private key that was never used to create an address would require you to brute force all the private keys, which at the moment is computationally impossible (might be more possible in 50+ years). This is in place to ensure that nobody can steal your coins.\nIf you are using Bitcoin honestly, however, you should find your private keys stored it wallet.dat in the Bitcoin data directory, or in case of using eWallets - online.\n", "mining profitability - Can casual people still mine for bitcoins, now that the difficulty is much higher than it was?": "\nWell, you can TRY mining. To see how much coins you can expect, check your computer's GPU on the Wiki page, get its hash rate, and plug that into a profitability calculator, such as mine. This can give you an idea of how many coins can you expect to mine and whether you would get any profit from that.\nUnfortunately, most likely you won't be able to mine at a profit using a PC. Bitcoin's difficulty is quite high, the reward will be dropping by half soon, and with the introduction of ASIC miners, GPU mining will be outclassed. However, if you are willing to invest some money into custom hardware, you can still start your career as a full-time Bitcoin miner. But again, you ought to check if it calculates for you.\nHowever, if you want to try your luck at a newly emerging trend of using your GPUs to \"mine\" for split-key vanity addresses, you can check out my Vanity Pool, or its topic on BitcoinTalk. The process is quite similar, but the profit margin can be better.\n", "getwork - What is the extraNonce?": "\nextraNonce gets put into the input of the generation transaction. getwork clients can't see transactions, so they can't update extraNonce. Some miners instead modify nTime slightly to give them more nonce space.\nextraNonce is used by bitcoind, but it's not part of the protocol. There is no extraNonce field in blocks or transactions.\n", "transactions - Blockchain.info Receive Payments API problem": "\nIt is working now! Issue closed. Great service provided by BlockChain.\n", "Effects of mining pools paying for stale shares/work": "\nStale shares have no chance of being a valid block credited to the pool, thus submitting one contributes nothing to the pool. The default behavior, then, should be not to pay for invalid shares. (A comparison with matching the difficulty target is illustrative. A miner has no influence on how many of his shares match the target, and hence it is fair to be rewarded for failed shares; however, he does have an influence on how many of his shares are stale, as these can be a result of latency on his end.)\nIf a pool decides to pay for stale shares anyway, this must come at the expense of someone else (as the total average reward of a pool with a given number of non-stale shares is fixed). The identity of \"someone else\" depends on the reward method of the pool.\nMethods like PPLNS do not absorb any variance, and the operator can never lose or gain any money (beyond a fixed fee); 100% of any block reward is distributed among miners. If stale shares are counted for the purpose of dispersing rewards, it means the non-stale shares are rewarded less on average. If all miners have the same stale rate, this has no effect whatsoever on their average reward; there's the same total reward to go around, so what they gain in rewards for stale shares they lose in rewards for non-stale shares. If different miners have different stale rates, this benefits miners with many stales at the expense of miners with few, removing any incentive for the miners to minimize their stale rate.\nSome methods absorb variance, the most extreme case being PPS; any statistical deviations manifest as a profit or loss for the operator. If the pool offers payment for stale shares, it comes out of the pocket of the operator. If the stale rate is assumed fixed, this amounts to an effective fee slightly below the nominal fee (e.g. if the nominal fee is 3% but the pool pays for 0.5% of stales, the effective fee is ~2.5%). If the stale rate is not fixed, then the pool becomes more attractive for high-stale miners, and relieves them of the need to worry about their stale rate. This is detrimental to economic efficiency, but can be easier psychologically. To maintain a profitable business, the operator will need to carefully balance his nominal fee with the stale rate of his target audience.\n", "Limits to the number of accounts?": "\nThere most likely isn't any hard limit - you might only be limited by your computer's memory (and even then, that would require tons of addresses).\n", "Bitcoin-qt falls behind on blockchain, how to replace?": "\nI know that there is a torrent where you can download the blockchain to jumpstart your fresh installation. This should also help to update your local wallet. In order to download and import the blockchain manually have a look at the instructions and the download link in this bitcointalk thread:\nhttps://bitcointalk.org/index.php?topic=145386.0\n", "What would happen to the Bitcoin network if all miners simultaneously stopped their mining efforts?": "\nTransactions would never acquire any confirmations and the network would be essentially useless. In principle, people could still accept transactions if there were no conflicting transactions, but anyone could perform a transaction and then undo it if they wished to do so.\n", "banks - What is the cheapest Cash-to-Bitcoin Service?": "\nThat would probably be either Bitcoin OTC or Local Bitcoins, as you are trading directly between people. This way you can barter for better rates and you don't have to pay a fee.\n", "How do I create a new address in the Bitcoin-Qt client?": "\nThe address field is unused and disabled - you can't put anything in even if you wanted. It is probably an artifact of reusing the dialog for adding a new sending address.\nSo you can't use Instawallet to create an address and import it; and even if such a strange procedure was possible, it would not be safe because then Instawallet would have your private key, which should be kept secret.\nSince the address is generated locally using pseudorandom data, it is inconceivably improbable that 2 people will share an address (it is less likely that it will ever happen to anyone than that I will be struck by lightning while writing this answer). In this highly unlikely event, funds in this address can be spent by either of them, whoever gets to first.\nEvery address has an associated private key, which must be kept secret and is what allows the owner to claim funds in that address. Bitcoin-qt stores private keys in the wallet.dat file in the application data directory.\nWhen sending bitcoins to someone (whether to sell them, donate them or to pay with them), the software internally uses the private key to prove prior ownership of them and announce to the network that they shall now belong to the owner of address X. You don't give your own private key to anyone; the new owner will use his own key to send them from his address.\n", "mining profitability - What is pool hopping?": "\nSome mining pools have a reward method for which some times are better to mine than others; normally, miners contribute to the pool equally through good and bad times, and their reward averages out to what is statistically expected.\nPool-hopping is the practice of mining in a pool only during the good times, and leaving during the bad times; by so doing, a pool-hopper can get more out of the pool than the value they contribute to it, increasing their rewards at the expense of other miners. Pool-hopping gets its name from the act of constantly hopping into and out of the pool (to either other pools or solo mining).\nThe most well-known form of pool-hopping is with pools using the proportional method, which is among the oldest, simplest, most widely used and most prone to hopping. By all accounts hopping in this context was first discussed in a paper from January 2011 by Nakamoto Ryo; a more accurate analysis was given shortly after in Optimal pool abuse strategy by Raulo; these results were extended in Analysis of Bitcoin Pooled Mining Reward Systems by myself.\nIn the proportional method, a block's reward is distributed between miners in proportion to the number of shares each of them submitted since the previous block; the reward per share is the block reward divided by the number of shares in the round. Because of this, the reward of a share submitted at any given time is affected by the number of shares already submitted since the last block; a share submitted early in the round will have a higher reward on average than a share submitted later.\nIt can be shown that until the number of shares in the round is 43.5% of the difficulty, a submitted share will have higher than normal reward on average; the optimal way to exploit a single proportional pool is to mine in it until this point is reached, hop to a different pool, and return when a block is found. The gain that can be achieved by following this strategy is up to 28.1%, depending on the ratio between the hashrates of hoppers and continuous miners in this pool (the more hoppers, the less they will gain). The gain can be higher if more than one proportional pool is taken advantage of (for example, 51.6% can be achieved with 2 pools).\nThe extra profits of hoppers come at the expense of the continuous miners. The exact loss depends on the ratio between hoppers and continuous miners; when they are equal the loss is about 17.1%, and the theoretical limit when there are only hoppers is 43.5%.\nSlush's method, which scores shares based on the time they are submitted, was designed to combat pool-hopping, but is only an incomplete solution. SMPPS which strives to converge to the full value of each share in the long run can only be hopped to minimize the time until being paid in full, not to increase the expected reward.\nModern methods make sure that the reward per share depends only on the future of the pool, not its past. This way, without being able to divine future random events, any time is as good as any other to mine, so there can never be any gain or loss from hopping (with the exception of block-withholding attacks). The most popular such methods are PPS, PPLNS and DGM.\nAdvanced forms of pool-hopping, possible in some naive reward method implementations, include difficulty retarget hopping, tx fee hopping and hashrate fluctuation hopping.\n", "attack - What stops miners/nodes lying about what time a block was mined?": "\n\nA timestamp is accepted as valid if it is greater than the median timestamp of previous 11 blocks, and less than the network-adjusted time + 2 hours. \"Network-adjusted time\" is the median of the timestamps returned by all nodes connected to you.\nWhenever a node connects to another node, it gets a UTC timestamp from it, and stores its offset from node-local UTC. The network-adjusted time is then the node-local UTC plus the median offset from all connected nodes. Network time is never adjusted more than 70 minutes from local system time, however.\n\n\nhttp://en.bitcoin.it/wiki/Block_timestamp\n\nSo, if you want your block accepted by other nodes, you won't mess with anything close to deviating from the current time by two hours.\nBut the protocol doesn't care how many blocks are being mined, it only will use those durations of the past 2,016 blocks to adjust difficulty when that periodic event occurs.\n", "transactions - when I send money from my wallet, which address shows up as \"sender\"?": "\nBitcoin doesn't really have sender addresses.\nEvery transaction consumes some of your coins, and creates one or more new coins, potentially assigned to a different address. What the receiver can see is the transaction, and he can trace which coins it spent, and which addresses those coins were previously assigned to. Some programs/sites use the first such address as sender, but this is not recommended. It doesn't say who sent the money - only who previously controlled it (which may for example be a shared webwallet).\nThe reference client always considers its entire pool of (confirmed) coins as source for creating transactions. The recently (0.7.0) introduced raw transaction API allows fine-grained control over which coins are used as input, but does not have a GUI (yet).\n", "Why Do Compact Signatures Need To Start With a Byte 27-35?": "\nFrankly, I just picked a range of numbers whose binary representation wouldn't easily collide with those of addresses (0, 111), secret keys (128, 239), public keys (2-7) or signatures (48). At the time, I didn't really expect it to end up in the message signing feature eventually.\n", "blockchain - Is it possible for a decentralized currency to have untraceable transactions?": "\nYou are quite right that there are some drawbacks to reusing a bitcoin address, while at the same time it can be inconvenient to generate a new address each time. \nI think you'll find its not possible to make an untraceable payment system where the money supply is limited. If money creation is controlled (as with bitcoin), nodes need a way to trace the money back to a valid origin.\nAs for the limitations of bitcoin, read on.\nYou might be interested in BIP 21 (Bitcoin Improvement Proposal 21), which is an official URI extension which bitcoin clients or wallets can use to make payments easier. Basically a seller can present a bitcoin URI (i.e. a link) to the buyer, and if the buyer's bitcoin client is compatible, the bitcoin client shows a payment screen saying e.g., \"Would you like to send Bob 20 bitcoins?\". What you should note is the seller can put any bitcoin address in the URI, meaning if most bitcoin clients + sellers supported this scheme, many transactions could easily use one-off bitcoin addresses, which helps achieve the privacy you're after. \nNote there is still the problem that in can be tricky to send bitcoins to e.g. a friend, and that like you said, being able to 'discover' someones bitcoin address by using e.g. their email address would be handy. I have a side project Bitcoin Payment Service which attempts to solve that problem. Basically its an open-source web app that allows anyone to initiate a bitcoin payment to the web site's owner. You can check out a demo of BPS.\n", "bitcoind - What did getmemorypool do?": "\ngetmemorypool gave you the data needed to construct your own mining work and make a valid block. It was/is frequently used by mining pools for generating work for miners. It could look like this:\n> bitcoind getmemorypool\n{\n  \"version\" : 1,\n  \"previousblockhash\" : \"00000000097f17d16fee37a160d300e27ce13632bb4468f0f31ae816e6186a18\",\n  \"transactions\" : [\n  ],\n  \"coinbasevalue\" : 5000000000,\n  \"coinbaseflags\" : \"062f503253482f\",\n  \"time\" : 1350541369,\n  \"mintime\" : 1350537485,\n  \"curtime\" : 1350541369,\n  \"bits\" : \"1c2f36c0\"\n}\n\nNormally transactions would be a long list of transaction data.\ngetmemorypool is no longer supported in bitcoind since version 0.7 which has getblocktemplate instead. getblocktemplate is more flexible and suitable for pool mining. It is now in use both for getting data from bitcoind and for miners to get work from pools.\n", "Bitcoin API - How can I identify new incoming payments?": "\nIf you want to identify incoming payments, the recommended way is creating a new receive address for every request. When the confirmations of a transaction to a given address get high enough, you can consider the payment confirmed.\nUsing the 'sender address' does not give you reliable information - it can only identify (one of the) addresses that were previously in control of the coins. There is no guarantee that these correspond to the sender of the payment (it may be a webwallet with shared coins, for example).\nNot reusing addresses also has other benefits, like making bitcoins as a whole less easily traceable.\n", "development - How can I work with multiple testnets?": "\nIf you are using Bitcoin version 0.7, you are on testnet 3. Updating to that version will put you in the newest testnet. Blockexplorer and Testnet Faucet use that version.\n", "development - How do I run my own testnet? What's testnet-in-a-box?": "\nCheckout the updated Testnet in a box.  You will need bitcoind already installed in your system.\nThe \"Testnet in a box\" linked above is just like the world-wide bitcoin network except the only members are the 2 running on your computer. There should be no difference except that it's easier to generate coins.\n", "wallet - Mac OS 10.7.5 compatible with Bitcoin-Qt.app?": "\nApple 10.7 hides the Users Library folder (where bitcoins saves its stuff), it's there, just not visible. Open terminal and enter\nchflags nohidden ~/Library\nto make it visible. \n", "energy consumption - How do I protect my mining rig from brownouts and electrical surges?": "\nYou need whats called a Power Filter.\nThere are varying levels of filters, some cut the tops off of AC signals, others take dirty input current and consume it, then create a completely new AC signal for device use.\nThe C2 is a good intro, but if you want superior protection, look for something called a Power Conditioner.\nHere are links to the current leading brand:\nhttp://www.google.com/search?hl=en&tbm=shop&q=apc+power+filter\nhttp://www.apc.com/products/category.cfm?id=15&subid=85\n", "hash - How does a miner perform hashing?": "\nThis question is a complicated one, but I'll see what I can do to answer it. Also, I won't try tackling the issue of endianness, as in the case of Bitcoin it gives me a headache...\nFirst, lets see what we have in a block header given to us by getwork. Lets take the Genesis Block for an example.\n01000000 - version\n0000000000000000000000000000000000000000000000000000000000000000 - prev block\n3BA3EDFD7A7B12B27AC72C3E67768F617FC81BC3888A51323A9FB8AA4B1E5E4A - merkle root\n29AB5F49 - timestamp\nFFFF001D - bits\n00000000 - nonce (it will be set to 1DAC2B7C later)\n00 - number of transactions (always 0, this is the block header)\n0000800000000000000000000000000000000000000000000000000000000000000000000000000000000080020000 - padding\n\nIn order to calculate the midstate, we split the header into two parts that are accepted by SHA algorithm (64 bytes each):\n0100000000000000000000000000000000000000000000000000000000000000000000003BA3EDFD7A7B12B27AC72C3E67768F617FC81BC3888A51323A9FB8AA\n4B1E5E4A29AB5F49FFFF001D00000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000080020000\n\nWe load the first part into the SHA algorithm. We take save this state for later use (midstate) (sorry for lack of examples, but I don't have my hashing algorithms on hand). Then we load the second part into the SHA algorithm. We read the output, this is the first hash. We take that output, plug it back to a new input, and get its result. That is the second hash. Assuming we got the correct nonce (in our case - 1DAC2B7C), our result should look something like this:\n000000000019d6689c085ae165831e934ff763ae46a2a6c172b3f1b60a8ce26f\n\nand compare it to our target:\n00000000ffff0000000000000000000000000000000000000000000000000000\n\nTaken as a number, which is bigger? The target. This means that we have the correct nonce, and we can submit our full header as the result. Profit!\nFrom what I understand, you tried to break up the resulting numbers too much, instead of operating on really big numbers like Bitcoin appears to be doing. Then again, endianness is also a big problem with the protocol and what not...\nI hope this answers your problem.\n", "private key - What to save in a wallet?": "\nIf you want to save your keys as a proper wallet.dat file, you would need to comply with its format.\nIf you want to store your keys for some other purposes, you only need to save the private keys (public ones can be recreated, you can check out my testing suite for that). You can save them in any format, but Wallet Import Format might be the best choice - it is compact and includes a checksum.\n", "wallet - Is there a way to access my BItcoins before Bitcoin qt syncs?": "\nYou can either import the keys into an eWallet that allows for that, or try taking your wallet to someone else who has a fully synchronised Bitcoin client. If you replace their wallet with yours (remember to make a backup!), the client should synchronise your wallet with the network and you will see your transactions. You can take the updated wallet.dat file back with you and use it until your Bitcoin synchronises.\nBoth of those options carry risk - in the first case you entrust the safety of your Bitcoins to a third party, and in the second case - to your friend. The risk could be mitigated (for example, encrypting your wallet will still let it be synchronised, but the private keys will be safer), but should always be kept in mind.\n", "Can I reuse blockchain/index files with multiple wallets?": "\nYou can swap wallets around and synchronise them up with the same block chain data files - you would just need to replace the wallet.dat files in the Bitcoin's data directory. The client would only synchronise once with the network and later be able to synchronise your wallet files independently. Keeping up with which wallet is synchronised and which isn't might be a bit of a hassle though. I don't know of a client that can operate multiple wallet.dat files simultaneously.\n", "marketplace - Do forum or website exist where can buy things not usually sold with bitcoin?": "\nThe Marketplace on BitcoinTalk can be used.  Simply prefix your post's title with \"[WTB]\" which means \"Want To Buy\".\nDiscussion:\n\nhttp://bitcointalk.org/index.php?topic=64607.0\n\nMarketplace board:\n\nhttp://bitcointalk.org/index.php?board=5.0\n\nAlso, the Bitcoin-otc marketplace can be used to place requests, if you are looking to buy.\n\nhttp://bitcoin-otc.com/vieworderbook.php\n\n", "what's the principle of sending money and receiving money? who do the work to put money into account\uff1f": "\nAn individual or merchant requesting payment will generally want to obtain a bitcoin address specific for that transaction.  When done manually, this is obtained from the Bitcoin-Qt client by clicking \"Receive\".  A merchant would have software that would query the Bitcoin.org client to obtain the address. An EWallet provider will provide for you this address.\nThe concept you possibly are misunderstanding is like how with a bank account, the account is assigned to an individual or organization before payment is transferred.\nWith Bitcoin, the client uses math to create the private key (and from that determine the Bitcoin address).  So there doesn't need to be some master registry where Bitcoin addresses are stored.  The person's client simply holds the keys necessary to spend any funds received by an address.\nSo that answers your second question -- bitcoin never really exist \"in your account\" but instead if you have the private key for an address, you can spend any funds received by that address.  Every node performs verification of your transaction and won't accept a transaction in which you try to spend funds that aren't yours.   Nodes that are mining will make these transactions permanent by including them in a sequence of data blocks -- which is named the blockchain.\nSo there are no people doing work, and instead there is simply an electronic communications protocol that is being employed.\n", "transactions - How can an online system detect coins sent to its offline (cold) wallet?": "\nSince version 0.10.0 bitcoind has support for watch-only addresses.\nHere is the text from the release notes:\n\nWatch-only wallet support\nThe wallet can now track transactions to and from wallets for which\n  you know all addresses (or scripts), even without the private keys.\nThis can be used to track payments without needing the private keys\n  online on a possibly vulnerable system. In addition, it can help for\n  (manual) construction of multisig transactions where you are only one\n  of the signers.\nOne new RPC, importaddress, is added which functions similarly to\n  importprivkey, but instead takes an address or script (in\n  hexadecimal) as argument.  After using it, outputs credited to this\n  address or script are considered to be received, and transactions\n  consuming these outputs will be considered to be sent.\nThe following RPCs have optional support for watch-only: getbalance,\n  listreceivedbyaddress, listreceivedbyaccount, listtransactions,\n  listaccounts, listsinceblock, gettransaction. See the RPC\n  documentation for those methods for more information.\nCompared to using getrawtransaction, this mechanism does not require\n  -txindex, scales better, integrates better with the wallet, and is\n  compatible with future block chain pruning functionality. It does mean\n  that all relevant addresses need to added to the wallet before the\n  payment, though.\n\nTry bitcoin-cli help importaddress (and the help texts for the other relevant commands listed above) for the details.\n", "security - Best practices for service/merchant handling bitcoins": "\nThis is probably best conveyed using the wiki:\n\nhttp://en.bitcoin.it/wiki/Securing_online_services\n\n", "website integration - How should I integrate Bitcoin payments in an online service?": "\nSurvey order:\n\nYou ought to have a system that uniquely identifies the survey and assigned it some string of characters. This can be just a simple number, or something more complex.\nYou need to use that unique id to request a Bitcoin address form bitcoind with a unique account name derived from that id. I would also advise hashing the account name, so in case your wallet gets compromised your customers' information won't get leaked.\nYou will present that Bitcoin address to the survey owner to send their Bitcoins to.\nYou should periodically check bitcoind for new transactions. In order to avoid double-spends, you should wait until you get at least 1 confirmation (preferably 6) on the transaction before letting the survey go live.\n\nSurvey is live:\n\nYou need to have a system that uniquely identifies the users filling out the survey, so they won't do the same survey twice.\nEach user will need to provide their withdraw address (and you should check whether it is okay)\nYou should track who fills out a particular survey and keep a log of their addresses. This way you would be able to make a single payment to all of them at the end of the day, rather than make an individual payment to each person. This would save you money on transaction fees.\nYou can either make payments from the account unique to the survey, or move all the money into a single payout account and send payments from there. The latter would make the user receive only one payment, rather than be spammed with many. And again, this would lower your transaction fees.\nYou need to keep track of how much money is left for each survey and when to switch it off. You can either do that internally, or through appropriate balances in bitcoind (moving money from the account each time someone completes the survey).\n\nThese should be the basics. As always, keep your wallet secure, password protected and backed up. In case you have any more questions, you can always ask them on this StackExchange. If you need consulting, you can contact me (ThePiachu-gmail-com).\n", "services - How to find partners for a Bitcoin business?": "\nI think posting your ambitions here would return quite some feedback/interest:\nhttps://bitcointalk.org/index.php?board=12.0\n", "What is the difference between a market and limit property in the MTGox API?": "\nA limit order is an order to buy or sell at a specific price or better. As in \"sell these coins if I can get at least X USD per bitcoin.\"\nA market order is an order to buy or sell at the best available price. As in \"sell these coins for whatever people are willing to pay right now.\"\nNot 100% sure about this, but I believe mixed_currency means the buyer and seller are using different currencies. If you buy bitcoins using EUR from someone selling for USD then MtGox will do a conversion.\nAnd yes, the best view of the market would be with all trades included.\n", "websites - What is the Bitcoin Friday?": "\nBitcoin Friday is an event coordinated by some of the biggest Bitcoin sites, including MtGox, BitInstant and SatoshiDice to bring big discounts to Bitcoin users on their sites. The event will take place on Friday, 2012 11 09.\n", "legal - What are the consequences of donating bitcoins to WikiLeaks?": "\nHaving been in the Army and understanding the stance that the US government has taken, I'm sure t will be up to the commanders.  Many of whom will not look kindly on the gesture.  The official stance will be known when they take action.\nAs you know the transactions are public and there are a number of efforts to build visualization and data mining tool sets.  This article address the anonymity of transactions and describes nicely why there is no real anonymity if someone wants to dig.\nhttp://anonymity-in-bitcoin.blogspot.com/2011/07/bitcoin-is-not-anonymous.html\nYou'll also notice two other important things about the article.  One is that it focuses on WikiLeaks and that they are using Visualization tool sets.  this tells me someone is already looking to make connections.\n", "legal - Accountability with Bitcoin transactions": "\nI am no lawyer, but as far as I know there is no specific precedent for this, or none that I could find anyway. Due to this, if you could reasonably prove that you had no intent in supporting that illegal organisation or group I don't see a strong case for any prosecution. Obviously there is a huge amount of grey area here, so what is \"reasonable\" would be up to interpretation. Also each country would have its own individual laws, which makes this even harder to give a specific answer.\nIf you are worried, I would recommend that you do two things. 1) Cover your ass by keeping all emails or any correspondence relating to your BTC transactions in a secure place. 2) You can also use tools like PGP, Hushmail, Cryptocat, Zfone, TrueCrypt and Tor to help protect your online anonymity.\n", "privacy - Is there an application or a site grouping addresses by user graphically?": "\nThe tool is called Blockviewer.  The website, blockviewer.com, no longer exists.  However, the source code is available on Github: https://github.com/thallium205/BitcoinVisualizer.  Thus, you might be able to download the source code, compile it, and run it on your own machine.\nYou can also read the original blog post introducing some of the ideas behind it.\n", "How can I split my bitcoin wallet?": "\n\nGo to your Bitcoin data directory\nBackup your wallet.dat to a safe location\nMove your wallet.dat away from the data directory\nStart Bitcoin. It will create new wallet.dat\nGet an address from the new wallet, save it in notepad\nEncrypt the wallet with some passphrase you will remember for a long time\nTurn Bitcoin off\nGo back to your Bitcoin data directory\nTake the new wallet.dat and store it somewhere safe\nMove your old wallet.dat file back into the data directory\nRun Bitcoin again.\nSend 8 Bitcoins to the address you saved in notepad\n\nNow you have two wallet files - one with 2 bitcoins for your normal use, one with 8 bitcoins for keeping them safe. Just make sure not to lose either of the two wallets, or you'll lose your coins.\nKeep your wallet.dats backed up and don't run duplicates at the same time.\n", "client - How do you determine how much money an address has?": "\nBitcoin's ledger system is publicly visible, but these are pseudonymous payments thus the level of privacy you wish to maintain is up to you.\nA charitable organization, for instance, may want the transparency that using a static Bitcoin address provides (this is a concept affiliated with triple-entry accounting).\nBut an individual might not. Therefore, the default manner that bitcoin operates is to provide a obtain Bitcoin address for each transaction.\nAlso, if an individual is using a hosted (shared) EWallet, the Bitcoin address is simply used solely by the EWallet provider to know how much to credit an EWallet account -- so the balance shown by the blockchain has no relevance with the balance that shows for the user's EWallet account.\nThere are methods to try to make conclusions from looking at the flow of funds, but that is an imprecise tactic.  It might yield some info though and efforts are underway to share this information.\n", "How can I use the blockchain API?": "\nActually, the BlochChain API is pretty good and Ben Reeves has done a nice work implementing it. And for the most part, for free. You only have to know how to send HTTP requests from your code, and parse the Json your app receives. If you think his API is not complete or unworking, do it yourself and make him competition ;-)\nAn API is designed for programmers, not simple users. What do you want to do exactly?\n", "How is all this bitcoin theft happening?": "\nThere are many ways theft can occur.\nEven though the cases where hackers have stolen from exchanges or from individuals, in terms of the number of bitcoins lost that amount is chump change compared to the amount of coins lost to scammers such as PirateAt40 and other scams, including loans not being repaid or currency trades that go bad.\nBut as far as bitcoins lost to hackings, yes -- the thefts have been due to poor security practices being implemented by exchange operators and other businesses where an attacker takes advantage of that to steal funds.\nThe list of the top thefts in which these hackings includes some of the details for various incidents.\nSecurity is difficult and expensive, and Bitcoin startups generally don't have the revenue and profits sufficient to attract the capital that would allow top-notch security to be implemented.  As a result, they become juicy targets for the attackers.\nEven following the recommendations for securing online services does not ensure that there is no risk of theft, but most losses from theft thus far were because those recommendations weren't followed.\nAs far as the term \"cracking\" ... that generally refers to discovering passwords.  In June 2011 when an attacker obtained the list of accounts and password hashes from Mt. Gox, cracking was able to discover passwords for many accounts due to there having been poor security on the password hashing method implemented by Mt. Gox at the time.  Most Bitcoin-related service operators are smarter than that but that incident has helped any that weren't to become a little more aware of proper password security methods (e.g., BCrypt).\nPassword cracking might also be used by an attacker to gain access to a system which which may hold coins in an unecrypted wallet, or that breach may lead to credential that provide access to additional systems which hold coins in an unencrypted wallet.\nThe reason hackers are successful when compromising these server systems used by exchanges and other bitcoin businesses is because if software needs the ability to send outgoing payments then the attacker who has compromised the system then gains that same capability.  Even if the wallet is encrypted, the software would use the passphrase to unencrypt it so either the Bitcoin client is responding to requests after the passphrase has already been provided or the passphrase is avaialble to the software to make such requests.  And thus if that system is compromised there is no protection possible for those coins in the wallet on that system.\nFor this reason, any exchange or bitcoin business using hosting for their systems where the hosting service has any access to the hosted service whatsoever, those coins are at risk.  But most Bitcoin businesses are not at the scale necessary to justify proper security at data centers (e.g., using their own hardware colocated in locked cages in highly secure facilities). \nEven with that, that is just the security for the hot wallet containing a fraction of the service's bitcoins needed for daily operations.  Security for the offline wallet might involve using paper wallets stored in bank vaults, or access protected with Shamir's Secret Sharing method even.\nMuch more common than breaches of security at Bitcoin exchanges and services are compromises of individual EWallet accounts at these online services.   This often happens when an individual shares a username and password for their exchange account with another service.  For instance, after the Mt. Gox passwords were leaked, other exchanges went on lockdown because so many accountholders had common login credentials on both services.  A protection against that is for the exchange to offer multi-factor authentication.\nIndividual users of the Bitcoin.org client can protect their wallets with passphrase encryption.  This still leaves them vulnerable to a replay attack should their system be compromised with a keylogger or similar malware.  For this reason, offline/cold wallet and \"air gap\" systems are recommended when the amount of bitcoins held are significant.  A similar recommendation exists for online banking, so compromised systems aren't specific to Bitcoin users.\n", "blockchain - Synchronising official bitcoin wallet for the first time; at 95% started going backwards": "\nLooks like you were just unlucky in choosing your peers.\nWhen connecting to a peer your client and the peer exchange a handshake message. Part of this handshake message is the height of the longest chain the peer has locally stored. Your client will then starting to download blocks until it catches up to the top of the longest chain. If the peers you connect to happen to be also catching up with the chain you will only see the length of their chains and will be unaware about the real length of the longest chain in the entire network.\nNothing to worry about, you will eventually have an accurate estimate of the real length: as soon as you connect to a peer with the longest chain, or one of your peers has caught up to the longest chain, your client will update its estimate.\nReconnecting also works as new peers are chosen. When you wrote your question, on October 24th, the longest chain was 204'663 blocks long, so the ~10'000 blocks or so were quite a long way off. Hopefully by now you caught up to the head of the Blockchain.\n", "import - Can we use a Paper Private Key that has been loaded in the Bitcoin client?": "\n1.) The web page at BitAddress.org can be loaded from a file on a thumb drive or other storage.   Most browsers let you save the web page using a View Source (right click maybe), and then Save File to a thumb drive. \nThen from the offline computer you open the file from the browser and the BitAddress page will load.\n2.) The private keys don't expire or invalidate after they've been imported into the client. You correctly identified the problem with that is how if you spent any of the incoming funds, the client creates a new address for \"change\" and thus the wallet may show a balance that includes funds not in any of the addresses from the imported private keys.  So wallet backups are still important.\n", "Where can I sell Amazon.com Gift Code for Bitcoins?": "\nbitmit.net has quite a few gift cards already listed for sale, therefore with the right price you will be able to sell yours with no problem.\n", "firewall - What Pools operate on port 80 or 443?": "\nIm not sure but you can find a complete list of pools here which should help https://en.bitcoin.it/wiki/Category:Pool_Operators\n", "private key - Missing key on blockchain": "\nYour Bitcoin address and your private key are not the same.\nThe private key is a random number. You keep that number a secret, and only having it allows you to spend Bitcoins. It is used to sign transactions.\nFrom the private key you derive a public key. It is used to show that you are using the correct private key. It is used to verify transaction signatures.\nFrom the public key you can derive the Bitcoin address, which is a convenient way of encoding the public key. It is more compact, comes with error detection, and so forth. It is used to let people know where to send their Bitcoins to when sending you money.\nFrom a private key you can derive the public key. From the public key - the Bitcoin address, but in neither of those cases can you do it in reverse. If you have lost your private key, your money is lost forever.\nHowever, from what I can see your address has been successfully used for withdrawals, and its balance is currently zero. If you have gotten it from blockchain.info eWallet, you probably should contact the owner of the site with your issues. In Bitcoin world, it is very hard to prove that you own an address without having a private key.\n", "exchanges - Can the sender of a MtGox code see which account the code is redeemed to?": "\nNope.  Or, at least, unless you are law enforcement and have a subpoena.\nOr, unless you redeemed it yourself (which would list in your deposit history).\nYou can tell if it has been redeemed by redeeming it yourself and seeing if it had funds, but that's about it.\n", "exchanges - Bitcoin price drop in the past few days (25/10/12 to 27/10/12)": "\nAll you'll ever get is speculation. Nobody knows why prices change.\nIt's just like when you listen to the news and they tell you that stocks dropped because of \"profit taking\". Clearly, people were selling if stock prices dropped. But nobody really knows if people were taking profits, cutting losses, or something else entirely.\nThese are emergent behaviors of complex systems and only in rare cases can you explain price movements. The most popular theory I've heard is that at least one significant factor is BitInstant downtime.\n", "Bitcoin charts for websites": "\nhttp://www.highcharts.com is pretty good (Blockchain.info uses it). Charts can be rendered both client and server side which is useful for png previews.\n", "economic theory - Why was Bitcoin designed with a decreasing production rate?": "\nThe main issue with Bitcoin is not attracting late developers, but early developers. At its infancy, Bitcoin was an interesting curiosity - people would play around with it but not necessarily use it as money. But due to its scarcity and many benefits, Bitcoin came to be recognised as a digital currency.\nAt that point people could either wait and see if it gets bigger, or start using it. If Bitcoin's reward wasn't decreasing, probably a lot of people would put off getting into Bitcoin until it is more stable. If everyone decided to wait, Bitcoin would be going nowhere and fade into obscurity. Nobody would then care for late adopter's benefit. This is why getting early adopters on is so crucial - with them comes incentive for late adopters anyway.\n", "buy bitcoins - Is quickbitcoins.net reputable?": "\nI used quickbitcoins.net successfully 4 times. They are gone now. The 800 number is disconnected and their e-mail address returns nothing. Try to find the http: website on Explorer or on tor and neither can find it! Site no longer exists! If you send coins to them without checking you will loose your money!\n", "vanity address - For a non-technical person, how do I generate a ECDSA key pair easily?": "\nInstall OpenSSL. When the executable in your path, enter this command to generate a private key:\nopenssl ecparam -genkey -name secp256k1 -noout -out myprivatekey.pem\n\nTo create the corresponding public key, do this:\nopenssl ec -in myprivatekey.pem -pubout -out mypubkey.pem\n\nThis will give you both keys in PEM format. I'm not sure what format the web page wants, but it shouldn't be difficult to convert. You can use variants of the last command to output other formats. Remove -pubout if you want the private key, leave it if you want the public key. And you can use -outform DER to get DER format. You can use -text to get hexadecimal.\nDo not give any form of your private key to anyone else.\n", "mining profitability - Can you mine more bitcoins on amazon aws than it would cost to operate the servers?": "\nAWS is rental of server instances.  Servers without GPUs. Bitcoin is not cost effective when mining using CPUs, so nobody has done that analysis for nearly two years because its an obvious money loser and becomes a worse option with each passing day of rising difficulty.\nNow EC2 (compute cluster) does use GPUs but NVidia GPUs which don't perform at a fraction of the level of AMD GPUs for the specific purpose of Bitcoin mining. Although it was not analyzed recently, a calculation from a while ago provides numbers in the right ballpark, if not better than they would be today.  In that study costs you more than twenty dollars of EC2 charges to earn one dollar of bitcoins.\nOnce ASICs ship that difference will increase possibly by an order of magnitude.\n", "How to make free transactions?": "\nThose types of transactions are not desirable on the bitcoin network.   Each transaction takes up bandwidth and storage on each of the tens of thousands of nodes that exist.\nIf there were no fee, people that would like to harm Bitcoin would send those \"spammy\" types of transactions nonstop and the system would not be sustainable.  \nSo the Bitcoin.org client takes a look at the transaction and if it is \"spammy\", it requires a minimum fee of 0.0005 BTC.\nYou can take the Bitcoin.org source and modify it so that no fee is ever required (or build from the branch that does this already), however your transaction will be rejected by most nodes and mining pools, and thus will likely not ever make it into a block.\nYou can, however, include many payment addresses in a single transaction. That way one small-ish fee will cover lost of small transactions, though as the amount of data the transaction consumes increases the fee may need to increase proportionally (0.0005 BTC per KB of data).\nBe realistic though ... 0.0010 BTC is worth about a U.S. penny.  You are asking to send 0.00001 BTC -- an amount worth 1/100th of a penny.   There are very few reasons to ever need to send a payment to someone for a fraction of a penny.\nIn instances where earnings occur a fraction of a penny at a time (e.g., for each ad impression, or for each mining share earned), an EWallet account with that service where they are earned (e.g., mining pool) can be used to accumulate those earnings until a payout threshold (e.g., 0.1 BTC) is reached.  Then the payout can be sent without paying any fee.\n", "development - How malleable is the Bitcoin protocol?": "\n\nThe number of Bitcoins in circulation\n\nThat would be almost impossible to change and would drastically undermine confidence in the Bitcoin system. I think we're stuck with this forever, or until Bitcoin becomes obsolete.\n\nThe rate of Bitcoin production\n\nAgain, almost impossible to change.\n\nOr the number of confirmations before a transaction is confirmed?\n\nAnyone is welcome to consider a transaction confirmed after as many or as few confirmations as they like. There is no reason this requires any kind of agreement.\n", "services - Where is a comprehensive list of websites for getting free bitcoins?": "\nConstantly updated list: https://bitcointalk.org/index.php?topic=90718.0\n\nFree Bitcoin sites:\n\nThe Bitcoin faucet.\nOne time payout per Google account. Explanation available at the site.\nDaily Bitcoins.\nCan be used once an hour now, and not just once a day.\nCoinAd.com.\nCan be used once an hour with registration.\nBitcoin Addict\nBitcoiner\nBunny Run.\nSee here for more info.\nFree bitcoins - netlookup.se\nNakabot's Bitcoin Faucet\n(Tor hidden service) NakaBot pays out a portion of its winnings in 0.001 increments.\nFree BitCoin Daily Scratchcard\nkickme.to/goxkeygen\nMtGox account needed to redeem the code one receives.\nbitcoinpixels.com\n0.01 BTC free when signing up to betfair. See here for more info.\nmemorydealers\nLearn how here.\nOmnicoins\nLearn how here.\ncointicket.org\nBitCrate *\nbitcoins.so *\nRoll dice : same numbers - win 0.01\nPaperco.in faucet *\nScan a QR code to reveal a MtGox code for 0.0007 BTC.\n\nGambling sites that give out free bitcoins ( freerolls etc. ) after you join\nDragon's Tale\nA casino site, but gives out small amounts for free that you can use to gamble with or withdraw to your own Bitcoin wallet.\nSeals with Clubs\nSeals has a free poker tournament every hour with a .05BTC prize. There are larger free tournaments from time to time.\nSee here for more info.\nStrike Sapphire\nSee here for more info.\n\nNot exactly Free but popular \"earn\" Bitcoin sites\nBitVisitor\nEarn Bitcoins for visiting websites\nCoinTube.TV\nEarn Bitcoins for watching TV\n", "Is Bitcoin mining profitable yet?": "\nMining profitability for any piece of hardware will depend on the future exchange rate and the future difficulty rate.\nThose are not known and thus your question cannot be answered.  Mining is a form of speculation.\nThe hardware cost is known and the operating costs (electricity) are known.  Also the block subsidy amount is known (50 BTC per block currently, 25 BTC beginning block 210,000).\nNobody knows how much ASIC capacity will be shipping, nor when.  So there is no way to know with certainty the future difficulty.\nAnd, of course, nobody can say what the future exchange rate will be. \nWhat is a safe projection is that ASICs will be coming, possibly in a matter of weeks, but several months from for sure.\nSo making today an investment in GPUs or FGPAs is not likely going to \"pay for itself\" anytime soon, unless the acquisition cost is really really cheap.\nBut a $1,000 investment in ASICs could very easily return $1,000 or more worth of bitcoins over the next year or two.  But that is just an educated guess, or speculation.  Nobody can honestly say.\n", "government - What is a brief summary of the ECB's report on virtual currency?": "\nIn the ECB's view,  (Bitcoin) can be used by business (criminals), customers (fraudsters) and savers (money launderers) to perform legal (illegal) activities, but lets ignore it until volume reaches a level where comparison with sovereign currencies reflects negatively on our reputation. The public will then expect us to regulate such digital (rogue) systems (schemes).  \n", "peercoin - How does the graph of money supply of PPCoin look like?": "\nHere it is:\n\nNote that this chart goes only up to March 2014. In the future, when proof of stake dominates, there will be a steady 1% inflation every year, but also 0.01 PPC will be destroyed every transaction. It is not known exactly what will happen, i.e. whether the 1% inflation or the destruction of coins every transaction will be a more significant factor.\n", "Which is the reliability of a transaction timestamp?": "\nThe timestamp is not a part of the standard transaction as per Bitcoin Protocol Specification. It is most likely generated by the standard client during the api call. The standard client might use its internal time (that might differ from the machine time), which is vulnerable to timejacking. I might be wrong, however.\nAs long as your client is running properly, it should be okay to use its timestamps for various notifications. They might represent the time the client received the transaction however, which may differ from the time the transaction was broadcast the first time.\n", "mtgox max bid higher than min ask": "\nI would say that the depth feed you are reading is of the orders coming in, before they are matched.\nThose orders would feed into the matching engine which would make fair trades off those orders. \nIt is not possible to or desirable to make an optimal trade at any given instant. this can be due to network latency (etc)  and because someone might think it would be better to make a trade, that was slightly less than optimal, than to miss out on making a trade (but still not too much up or down);\nFor example:\nWhat you will probably find is that if you put in an order to buy 10 btc at $100 but someone else has put in a sell order for 10 at  $99 you order will convert to a trade of $99. The buyer and the seller both get what they wanted. \nLike wise if one seller was willing to sell 5 btc at $95 and someone else was willing 5 btc at $100 you would end up with 2 partial fills to complete the trade.\nBack in the day on stock markets (i.e., not btc) the exchange (or broker) would just pocket the difference. However this doesn't really happen much now (in my understanding) as the markets are more efficient (fast traded data feeds & order placement + high liquidity) \nAt the end of the day both buyers and sellers get what they want, and because there is reasonable liquidity, speed and fast access to market information, people will not be making trades which are too different from what would be optimal.\n", "transactions - Is there a reason SatoshiDice & BitLotto use 0.00543210 BTC, and not 1 satoshi, to customize pay-to addresses?": "\nWell, what that is called is a hack.  It is a hack to make the system work in a way that is wasn't meant to work.\nBy definition, hacks aren't thought out very well and often aren't the optimum method -- if not outright flawed.  But they do in many instances, fix the immediate need.\nIn most every bet to BitLotto and SatoshiDICE there is an output address for change.  These services can't know if that change was meant to be the alternate pay-to address or if it was just the change.   One Satoshi would be a bad choice for this \"special indicator\" as that happens naturally quite often.  An amount that doesn't occur very often would be an amount like \"0.00543210\".  The frequency of change being 0.00543210 is much, much lower than it being 0.00000001 BTC.\nBut the chance is not zero.  If I have a coin with 0.25543210 BTC on it and I sent a 0.25 wager, I'll get back 0.00543210 as change.  Since that change is for an address in my own wallet, then even though SatoshiDICE might send the winnings to that change address I'll still receive them.  But the normal mode for these services is to always pay back to a sending (input) address, so returning to the change address frequently becomes a service issue as it is harder to understand how it works.   So ideally, this special number is one that wouldn't normally get be used for change.\nBut if instead I had actually made both a payment of 0.00543210 to someone and a bet to SatoshiDICE in the exact same transaction, then the winnings would go to that someone and not back to me.  If I know that 0.00543210 is of special significance with SatoshiDICE I'll know to never make a transaction with that amount in it when I'm also including a SatoshiDICE bet.  If the number were something else, like 0.00814271, that also would be infrequently used naturally, but it also wouldn't be one that I would recognize and might accidentally be an amount I would pay in this hypothetical bet statement that I combine with real-world payments.\nSo I'm going to come to the conclusion that to eliminate even the extremely rare chance that the payout goes to the wrong party, these services chose an easily recognizable amount so that it might save a person from making that mistake.  This amount would also preferable be a low value so that it doesn't suck too much betting capacity from the bettor's wallet with each use.\nWhat is an amount that serves both those aims?  0.00543210.\n", "wallet - How secure is blockchain.info?": "\nAs the operator of the site I will try and answer the first question.\nServer Side\n\nThe site currently runs on 4 dedicated servers, hosted in a locked cabinet. All servers run  behind a dedicated cisco security appliance with intrusion detection. On the servers themselves various \"booby traps\" are set to alert the webmaster if an intrusion is detected. \nThe java code deployed to the Site is deployed in a single war (zip) file. Each server monitors the checksum of this file to detect any unauthorised changes to the code. In order to make reverse engineering our encryption schemes more difficult the the java class files are obfuscated using proguard. \nA copy of every wallet is stored all our servers. Additionally the latest 50 versions of a wallet are stored on Amazon S3 and can be restored from the [Import / Export] section.\nThe server side code that handles wallets is open source.\nThe site is not vulnerable to CSRF requests as no login details or sensitive data is ever saved in session cookies.\nIn the time the Site has been running there has been handful of XSS vulnerabilities reported. None of these were on a wallet page and could not have resulted in any direct loss of funds.\n\nClient Side\n\nThe Site uses javascript the encrypt and decrypt wallet client side in the user's browser. The encryption is done using AES-256 which is likely to be secure for the foreseeable future. \nWallets are simply json files containing private keys. The entire json file is encrypted by the users browser before being uploaded to us. So when a wallet reaches our server is appears as random Base64 string. This means we cannot view your balance, see your transactions or addresses and cannot make transactions on your behalf. \nThe encryption is only as strong as the users password. The minimum password length is 10 characters however if the a weak password is chosen e.g. \"1234567890\" using a dictionary attack the wallet would likely be broken quickly. Rainbow tables will not work as each wallet is prepended with a unique salt combined with the users password using PBKDF2 to derive the actual encryption key.\nAs everything is done using javascript in the site is particularly vulnerable to browser exploits including malicious browser extensions. Modern web browsers are much more secure than the internet explorer 6 generation. \nThe private keys in a wallet can be \"double encrypted\" using a second password. One password is then required to login and another password is required to send funds. This makes wallets significantly harder to brute force and also makes key logging more difficult.\nIf our servers were compromised the attacker could theoretically alter the javascript files to intercept the users password next time they login. For this to be effective the attack would have to go unnoticed for an extended period of time. In addition to the server side checks we perform there is also the My Wallet verifier browser extension which can be optionally installed for added security. Before login it will transparently verify all the javascript files running on the page match those hosted on github. If any errors are found the extension will prevent the user from logging in.\nYou can backup a wallet via Email, Dropbox, Google Drive and Download. With a backup funds can be accessed without blockchain.info using the multibit desktop client.\nThe Site supports a variety of two factor authentication methods and the ability to lock down a wallet to a specific ip address. We will not give out your wallet to anyone who cannot authenticate themselves fully, however we cannot prevent someone from using your wallet if they gain access to it another way. For example if you keep a wallet backup in your email account and that is compromised.\n\n\nThis has got a little technical but it isn't an easy answer. There are many factors involved including the security of your own computer. The site has been running for over a year and currently hosts nearly 40,000 wallets. There have been reports of some individual wallets being compromised (reusing passwords) but no major security incidents.\nFinally a couple of recommendations for using our service:\n\nUpon sign up print a \"Paper Wallet\", store it somewhere safe and hidden.\nNever reuse the same password on another site. Or if using double encryption it is acceptable to use a slightly weaker main password but ensure the second password is unique.\nIf storing large amounts generate a private key offline (bitaddress.org is great for this). Print it on a paper wallet, then import the address as \"Watch Only\" address. When you attempt to spend the funds you can scan the private key off the paper wallet using a webcam.\n\nIn future multisig will be available for even greater security but this isn't quite ready yet.\n-Ben\n", "transactions - How does the wallet work, online and offline?": "\nAlthough wallets indeed contain your \"coins\", the ability to spend them is tracked by the network. Every fully validating node keeps a list of available coins on the network. They do not know who has which, only which (Bitcoin, not IP) address (or addresses) they are associated to. In case you try to spend the same coin twice - for example because you copied your wallet to another computer, and then tried to send a transaction from each - you may temporarily confuse the network. Some nodes may first see the one transactions and some others will see the others first. However, the strength of the system is that this disagreement cannot exist for long and only one of them will be accepted after some time.\nThe essential thing in your wallet is not the transactions, but the keys. Each address has an associated public and private key. These private keys never leave your wallet file and are necessary to spend the coins assigned to your addresses.\nBecause the transactions are tracked by the network, you indeed don't need to be online to receive transactions. The next time you connect, your client will ask the network for up-to-date information. During the synchronization that follows, your incoming transaction will be fetched, and the client will detect this as an incoming payment.\n", "bitcoin core - What is the minimum transaction fee used for?": "\nUnder Options of the most recent release, v0.7.1, reads:\n\nOptional transaction fee per kB that helps make sure your transactions\n  are processed quickly. Most transactions are 1kB.  Fee 0.01\n  recommended.\nPay transaction fee: 0.00000000 BTC\n\nWhat that field does is always add at least N BTC fee to every transaction.  \nWhen sending a transaction, the Bitcoin.org client will do a computation and insist on a fee to be paid if it determines the transaction will not be processed promptly unless a fee is paid.  \nNot all transactions require a fee.  If the amount of the payment is not small or the coins are not newly received (or both), then you can likely send a transaction using the Bitcoin-Qt client without paying a fee.  \nBut there's always a chance that without paying a fee that your transaction will not be processed in a timely manner, as it is up to the miner or pool operator whether or not to include your transaction when mining.\nSo some people will use this optional fee field to make it so that every transaction goes out with a fee and thus no transactions sent will be delayed for the reason that no fee had been paid.\nSo do you have to pay a fee?   The Bitcoin.org client will generally tell you when you do need to pay a fee and when it does, then yes -- you must pay it or use some other client that doesn't perform this check.   But if it doesn't tell you to pay a fee, then you don't need to pay a fee but your transaction could still end up being delayed as a result.\n", "Why won't bitcoind work correctly on windows 7?": "\nWhat are you expecting it to do?  It is a daemon (server) that is waiting for RPC connections on port 8333.\nYour bitcoin.conf needs to have configured the rpcuser and rpcpassword.  Then you can access the bitcoin API.\nWith Bitcoin-Qt version 0.7 and higher, the Debug window gives you access to run a console, so you don't need to run bitcoind if you are just trying to execute some commands interactively.\n", "wallet - Losing bitcoins": "\nA wallet holds the private keys necessary to spend bitcoins.  If you are running the Bitcoin.org client and lose access to your wallet.dat then a backup copy of the wallet is the only way you can be able to spend the funds.\nIf you have no backup or can't access the backup then the funds are gone.\nPeople that prefer not to have the responsibility for keeping a backup of their wallet might like to use an EWallet, such as Coinbase and Paytunia, which are hosted (shared) EWallets, or Blockchain.info/wallet which is a hybrid wallet.\nAs far as mining to recover coins, there is no recovery ever for the funds from the lost wallet.  They are gone forever.\n", "cgminer - Better or worse to mine multiple workers on one machine?": "\nYou ought to test the setup on the machine you will be using. Generally the mining software should efficiently use the entire GPU, but it might happen that it will not and actually running two instances at the same time will allow you to tap into more computing power. But again, check your speed while running one or more instances and see which one gives you more total speed.\n", "bitcoind - What is rpcuser?": "\nYou can set any values you want for rpcuser and rpcpassword in bitcoin.conf. Those values will be your username and password when you will be connecting to your bitcoind through HTTP JSON RPC. Also be sure to set other important values in .conf file, like server, rpcallowip and a few others to ensure your server is running correctly and securely.\n", "Is it useful to have miners work on the same block instead of parallel solo mining?": "\nIt doesn't really matter all that much. A set of workers working for the same block or each working for an individual block yields you the same profit on average. The only downside is that in order to mine for blocks you either need to have bitcoind running, or join a pool. If you want to mine a few blocks at once, you will need to be running a couple bitcoind instances. The easier setup is to just have one bitcoind running and have all your miners connect to it.\nWell, that's the ideal situation anyway. Realistically, you won't ever mine a block this way. You can check out my mining calculator and plug in your numbers. How long is your time to generate one block? Can you wait 5 times that? Probably not. You ought to join a mining pool to get smaller rewards more often. But do it fast, as soon ASIC miners will go in and make your profits really small.\nWhen you'll be joining a pool, logically you'd have all your workers connected to the same pool. Connecting to multiple pools wouldn't change your profits, perhaps it would smooth out your earnings a bit, but the change would be insignificant if you are using big pools.\n", "payment - Can I sell items on Etsy using Bitcoin?": "\nEtsy merchants that accept bitcoin have been tagging their shop items with 'bitcoin' so that a simple search shows what is available:\nhttp://www.etsy.com/search?q=bitcoin\nAn email to support@etsy.com got this response about being allowed to use bitcoin:\n\"If you would like and are able to support a third party payment system, you are welcome to use another payment service.\"\nThey also included instructions for how to setup your cart so that people can easily pay:\n\"To do that, click Your Shop > Shipping & Payment > Payment Methods. Select 'Other' as a method. Then, indicate which service you use in your Shop Announcement, listings and/or Policy Page. After the buyer has purchased an item using 'Other,' you can contact them with instructions and/or an invoice so they can pay through your preferred method.\"\nEnable the 3rd party 'Other' checkout option, and when someone orders an item you can send them your bitcoin payment address.\nYou can also join the Etsy Team Bitcoin page, and there is Discussion threads for you to ask questions. The team page has information on the different bitcoin wallets you can use such as coinbase.com or downloading the reference bitcoin client from bitcoin.org.\nhttp://www.etsy.com/teams/10366/bitcoin\n", "transactions - Bitcoin C# .NET API": "\nThis is implemented in the GetTransactionSenderAddress() method of BitcoinLib\n", "What will happen to mining after the 20 999 999th Bitcoin?": "\nAssuming Bitcoin is still active at that point in time, mining will continue, because transaction fees will make it worthwhile to do so.\nThis topic has been discussed heavily in other answers, including:\n\nWhat happens once the mining reward gets cut in half?\nHow many bitcoins will there eventually be?\nHow much will transaction fees eventually be?\n\nThe last link has suggestions that the fee mechanism of Bitcoin may need changing, though that's yet to be proven whether or not it will be a real problem.\n", "How big can a wallet get?": "\nThe bitcoinj private keys are 32 bytes long. You would also want some sort of indexing around them so that you could access them efficiently.\nIf you used a deterministic wallet you would only need one seed and a chain code per customer and generate the addresses as required. I think they are typically 32 or 64 bytes long. \n", "How are popular bitcoin wallets implemented?": "\nAccuracy not guaranteed\nBlockchain.info\n\nWallets are json files. The json file is encrypted using AES (crypto-js) before the browsers asks that it be stored on the server.\nThe wallet file is embedded in the login page as a html data attribute, the browser decrypts the file with the provided password and extracts a list of private keys and addresses.\nThe browser then asks blockchain info the balance and list of recent transactions for the decrypted addresses.\nUpon sending the browsers asks blockchain.info for a list of unspent outputs. Then selects the outputs constructs and signs the transaction itself (bitcoin-js). When ready the transaction is serialised and sent to bloackchain for broadcasting to the bitcoin network.\nAuthentication is done using a unique \"Shared Key\" contained within the wallet file rather than the users password.\nServer side we use 4 servers running MySQL cluster and java. A modified bitcoind client is used to populate the database.\n\nSee How It Works\nStrongcoin\n\nSimilar to blockchain.info with client side encryption.\nPrivate keys are stored individually on the server as a database entry rather than in a single wallet file. \nAuthentication is done server side using traditional Sessions.  \nTransaction construction and signing is all done in javascript.\nUses blockchain.info or blockexplorer.com to query balances of addresses. Uses blockchain.info to broadcast transactions.\nServer side uses Ruby on Rails and Heroku \n\nCoinbase\n\nServer side uses Ruby on Rails and Heroku\nCustom MongoDB database to query balance of addresses.\nServer selects outputs, constructs and broadcasts transactions.\nAuthentication is done server side using traditional Sessions.  \nThe web app directly connects to the bitcoin network using Bitcoin-Ruby to populate the database.\n\nWhat are they not open source?\nThey are commercial enterprises with a large amount of development time invested. The code being open source would a) increase competition b) cause identical phishing sites to popup c) clones maybe be hacked or run by scammers damaging the reputation of the main site.\nParts of blockchain.info are open source. I personally hope the rest of the site will be fully open sourced one day but there is much to plan. If the code is just dumped it will not benefit anyone.\n", "blockchain - My sync wont start, what can I do?": "\nDo you have the exact same configuration on your other rig? If you do, copy the configuration exactly. Sometimes if you don't have long-polling turned on and using the correct port, in some rare cases you will keep going if you are using the wrong protocol for a said port. \nIn general, if you are doing Bitcoin mining on a Phenom of your type, and you are doing SHA256D hashes, you should wait around 5 minutes.  \nIf it doesn't immediately say long-polling activated, you've got a problem and need to configure your mining application to do so. \nFrom the time you get the Long-Polling started message, anywhere from 30 seconds to 5 minutes is normal.\nI have my scan time set for 1 second, by default it's set for 5 seconds but depending on your hardware and the pool you're in they might tell you to set it for 10 to 30 seconds.\nAre you using Slush's Mining Proxy too? I know that can stall out if you're not using the correct configuration for that too.\n", "protocol - Testvectors for dedicated hardware miner": "\nThe block headers in the blockchain are your test vectors, they already contain the appropriate nonce. Midstate can be computed from these headers, mining software does such a midstate computation (so crib this bit from their source code).\n", "I'm trying to run Bitcoin on a weak computer, which client consumes the least resources?": "\nThere is a very useful comparison of the Bitcoin desktop clients here:\nhttp://dre.redmartian.org/compare.htm\nIn order 'lighter' to 'heavier' there are:\nelectrum\nmultibit\nbitcoind\narmory + bitcoind\nIf you need the full bitcoind RPC API then only bitcoind will do however. In that case trying/ waiting for v0.8 is probably your best option. \n", "adoption - A \"Bitcoin for dummies\" guide?": "\nI have created a page on the Wiki called \"First time buyers guide\". It is only a rough version at the time of writing, but hopefully it will be revised into a go-to guide for anyone wanting to make a payment with Bitcoin with as little unnecessary information as possible.\n", "What is the correct algorithm to calculate worker & pool hashrate": "\nhashesPerSecond = math.pow(2, 32) * proofsOfWork / secondsElapsed\nwhere proofsOfWork is the number of difficulty 1 proofs of work (aka shares) that the user or pool has found during secondsElapsed seconds.\nIf you use variable difficulty, then you can count a proof of work from someone mining at difficulty X the same as X proofs of work at difficulty 1.\nFor mhps divide by 1e6. For ghps divide by 1e9. And so on..\nmath.pow(2, 32) == 4294967296\n", "withdrawal - How to transfer funds from Bitstamp to a personal wallet?": "\nAre you asking what option lets you withdraw from BitSTAMP?\nAcross the top menu is Withdraw, and from there pick Bitcoin as the withdrawal method, which gives this link:\n\nhttps://www.bitstamp.net/account/withdraw/bitcoin/\n\nNow if you are asking where to withdraw your coins to, then that's a different question.  There is not just one answer because various options regarding security will determine the best way to proceed.\nIf you are looking to store them for a long time, then a paper wallet, generated from an offline computer using a LiveOS might be the right recommendation.\nArmory is another client that can be used offline and be very secure for storing bitcoins.\nOr perhaps storing the funds using a hyrbrid EWallet, like the one from Blockchain.info/wallet is a good method because it provides a good tradeoff between convenience and security.\nOthers feel their coins are safe in a hosted (shared) EWallet provider like Coinbase, Paytunia or prefer to leave funds at an exchange even.  If the exchange has two-factor authentication (done properly) that will help prevent the situation where even if your computer is compromised you EWallet account is not at risk of a replay attack.\nOthers want to run a full Bitcoin.org client themselves.  This is an undertaking as initial startup can take a day or longer to download the blockchain.  A future release of the Bitcoin.org client will make this initial and ongoing performance issue be much less of a burden.  Other clients, Simplified Payment Verification (SPV) clients, such as Multibit.\n\nhttp://bitcoinmagazine.net/bitcoin-wallet-options\nhttp://en.bitcoin.it/wiki/Mobile_Payment_Apps\n\n", "Does Bitcoin-QT use more CPU when its idle than during synchronization?": "\nNo, according to the information on small and micro instances at this link.\nhttp://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts_micro_instances.html\nBitcoin.conf ( the Bitcoin Configuration file ) may have an option set to 1 to activate mining within the client software.  If you have it set as ' gen=1 ' it will try and ' generate ' coins ( mine on it's own ) and that drives CPU usage up.  Also, according to the graphs on that link, it should not ' jump ' to 100 percent use, each instance should drop down to a low usage level for small and micro Amazon EC2 instances.  There may be other programs running on your Amazon EC2 instance that can also drive up CPU usage so I recommend checking your files starting with looking for any instance of Minerd ( cpu miner ) and removing it. \n", "Alternative clients and the Bitcoin API": "\nThe Blockchain.info API includes Bitcoind as a JSON webservice. It's pretty cool.\n", "What is the email of Satoshi Nakamoto?": "\nThe email he used was satoshin@gmx.com.\n", "What is the average bandwidth used by the default client?": "\n100 MB per day, or less.\n(i.e., a dial-up modem could handle it.)\n", "How do I import private keys from Bitcoin-qt to Multibit client?": "\nManual Steps\n\nCopy your public receiving addresses from Bitcoin-Qt.\nGo to the Bitcoin-Qt console: click Help/Debug Window and then select the Console tab.\nRun walletpassphrase [your password] [timeout in seconds] to unlock your password protected wallet.\nRun dumpprivkey [Receiving Bitcoin Address] for each receiving address to be migrated to MultiBit. There may be hidden private change addresses in Bitcoin-Qt which don't show up in the receive tab. Run listaddressgroupings.\nCopy the results of dumprivkey for each address (which are the corresponding private keys).\nStart the Multibit client and create a new wallet.\nClick Tools/Export Private Key after selecting the Do not password protect export file option.\nOpen the exported file in a text editor.\nBelow the private key generated by MultiBit, paste the private keys you have copied above. Remember to paste them before the End of private keys line.\nAfter each private key, add a date that is prior to when you created the corresponding wallet. (You can check this date in the Bitcoin-Qt Transactions tab and scrolling to the very bottom.)\nRepeat for all addresses you want to move to Multibit Client.\nSave the key file and import it to the Multibit client using Tools > Import Private Keys.\nIn MultiBit, you may not see your total until you click Tools > Reset Blockchain and Transactions\nIn order to protect yourself from theft, delete the private key files.\nDone!\n\n", "When will FPGAs and ASICs 'replace' GPUs for mining?": "\nCurrently the hash rate is around 25 TH/sec.  It is expected that when the ASIC hit the market in Dec 2012, the new hash rate will be about 250 TH/sec.  The difficulty is directly proportional to the hash rate, so it should also increase 10x.  This would reduce the profitability of existing GPU miners by 10x.  Plus about the same time the block reward will be halved from 50 BTC to 25 BTC, again halving the profitability.  \nThe expectation is that once ASIC takes hold most of the GPU and FPGA mining will bleed out of the network.  You should expect to see an initial influx of ASIC and then a steady growth as mininers reach for their larger share of the market.  \n", "synchronization - Is wallet.dat linked to the blockchain file?": "\nFrom what I know, yes. The wallet and the blockchain data exist independently from one another. The wallet file keeps track of all transactions relevant to itself that appeared in the blockchain, as well as information about the latest block it has seen. If you use an old wallet on a newer blockchain, the client should scan any blocks that came after the waller's last synchronisation and update the information accordingly.\nIf you need Bitcoins urgently, you might want to use an eWallet until your client synchronises. Those are ready to run in seconds.\n", "How do I send a transaction directly to a miner or pool for processing?": "\nFirst, you will need to find out an IP adresses of pools e.g. from this list, but most likely it has inaccuracies. Another option is to connect to Hub Nodes.\n\nHub Nodes\nShows the nodes who have relayed the most transactions first to blockchain.info. The nodes on this page are well connected often hub nodes for merchants or miners.\n\n\nBitcoind\nCreate bitcoin.conf file in required directory with rpc connection commands\nrpcuser=youruser\nrpcpassword=yourpw\n\nand addnode commands e.g.\naddnode=69.164.218.197\naddnode=10.0.0.2:8333\n\nand then run bitcoind. To verify that bitcoind is connected to specified nodes open command prompt or terminal, navigate to bicoind's folder and then run the command:\nbitcoind getpeerinfo\n\nSending bitcoin transaction by using bitcoind server will send transactions directly to the specified nodes.\nBitcoin-qt\nWhen opened will use the same bitcoin.conf file. To verify that it's connected to specified nodes click\nHelp -> Debug Window -> Console and type getpeerinfo\n", "Can a Miner or Mining pool have exclusive access to a transaction and its fees?": "\nA non-standard client could choose to send his transactions only to a specific miner. One example might be for a client to negotiate a \"monthly package\" (off the blockchain), and then send all his tx directly to the pool, without any specific tx fees.\nThere is nothing in the protocol that prohibits or enables it - it is a possible extension that is outside of the protocol. To my knowledge, no such schemes have been reported in the real world.\n", "security - Is DNSSec needed / Possible with namecoin?": "\nNo DNSSec is not needed with Namecoin.  The mapping from name to IP cannot be forged.\nHowever, DNSSec requires changes to resolver libraries so the domains are actually cryptographically verified.\nNamecoin, to be secure, requires similar changes to resolver libraries because nothing in the current resolver libraries actually checks the integrity of the results.\nAnyone can run software to verify that a traditional (insecure, no cryptography) nameserver that resolves .bit addresses actually return addresses corresponding to the blockchain.\nThus namecoin name servers can be ensured to not \"fool all the people all the time\" by having some servers that continuously check the integrity of the results produced by the insecure but backwards compatible nameserver.\n", "How many different destinations can a single transaction have?": "\nThere isn't a maximum number of outputs but instead a maximum size of data in a block.  So if there was just one transaction with a lot of outputs, the combined size would need to be below the block maximum of 500K.  \nI don't know the size of each transaction but you are talking thousands or tens of thousands of outputs before hitting these per-block limits.\n", "client - Has anyone ported the Bitcoin software to \"pure\" Clojure?": "\nThere are several Bitcoin Clojure projects, but none of them appear to have a full rewrite of Bitcoin as a goal.\nOf particular interest is https://github.com/johnwalker/bitcoin-protocol , which is an implementation of the Bitcoin networking protocol. It can be used to communicate with peers within Bitcoin networks. \nRewriting Bitcoin core in another language is doable, as the btcd developers have done porting it to the Go language - https://github.com/btcsuite/btcd , however it took almost a year of development time between several developers to become fully functional. \n", "Best way to safely host a high volume online transactional wallet?": "\nIt seems to be a good approach. The fundamental is keep a little bit \"hot\" to high liquidity and keep the rest into USB stickers + papers and if possible keep it safe in a vault or bank. Also, keep the anonymity and security of who has the access to the Bitcoins. Remember: Bitcoin is real money, and if you are working with a lot of money, it can be dangerous, someone can try to extort you to reveal all secret.\nDon't forget too that USB stickers are volatile in long term by definition, and are not 100% safe. CD and DVD can scratch or can degrade over time. So, the paper is fundamental; keep it in a clean and dry place. Remember also to generate the wallet keys in a offline computer (installed from zero if possible). Read this article: How to set up a secure offline savings wallet.\n\nThere is a nice article about it here: Coinbase now storing 87% of customer funds offline \n", "fpga - BFL Single averages 800 Mhps on BitMinter Client. Advertised rate is 832. What explains the difference?": "\nAccording to Butterfly Labs' customer service department, their chief operating officer, and their vice president of product development, the speeds they claim for their BitForce products are all nominal speeds and a variance of +/-10% is permitted. As of this writing, they say speed claims are based on a combination of synthetic benchmarks and averaged real-world data, with real-world figures tending to be slightly lower. The hashrate you see may be affected by high network traffic, speed at which your pool provides work, whether other people's equipment has supplied enough confirmations that your unit's current work is no longer relevant, and luck.\nYou can compare results with different mining programs--such as bfgminer, cgminer, and Ufasoft Miner--to what you're getting with BitMinter to check for software inefficiencies.\nIf the front LED is flashing slowly, the device has overheated and has disabled its processors until they cool down. This is called throttling; the unit does no work while this is happening. Their FPGA units can be loaded with different firmware to select an operating speed that will work without throttling. Butterfly Labs provides software called EasyMiner (on their Drivers page) for loading firmware manually, or through a process they call autotuning.\nTheir FPGA-based units are highly sensitive to temperature at the air inlets  which, depending on arrangement of nearby items and and other heat sources, can be significantly warmer than the ambient temperature of the room. A core temperature of 51.2 degrees Celsius is a little high, but not inherently bad as long as the unit isn't throttling. Their FPGA units also exhibit significant variation in contact of the heatspreader to the MPU cores, heat tolerance of the MPU cores, and application of thermal interface material (TIM). Some of their fans have been shown to operate at lower or higher speeds, as well. Examination of some early units has shown partial or complete separation of the primary heatsink, possibly during shipping. In the case of partial separation, the primary heatsink normally reseats itself (due to spring loading) but this can cause air cavities to form in the TIM. Air cavities will prevent proper contact and cause premature overheating. Later units use nylon bolts instead of spring-loaded pins to secure the main heatsink.\n(Note that one of the webpage screenshots provided above shows a claimed speed of 832 MH/s, NOT the \"850\" originally mentioned in the question's title. I don't remember whether I saw any ads that claimed higher speeds.)\n", "synchronization - Why is my Bitcoin wallet always out of sync?": "\nNew blocks are continuously being created (about once every 10 minutes).  \nSo if you don't leave your client continuously connected, or when you're connecting for the first time, then when you do connect it will be out of sync and need to download and verify new blocks.\nThere are SPV (Simplified Payment Verification) clients (e.g., MultiBit and Bitcoin Wallet for Android), client-server clients (e.g., Electrum), and hosted (shared) EWallet web services (e.g., CoinBase, Paytunia, and others) -- each of which either lessen or eliminate the need to sync.\nOne method that brings the convenience of an EWallet but keeps the private keys local and not stored with the provider is Blockchain.info/wallet.\n\nhttp://www.Blockchain.info/wallet\n\nThat might be a better client if keeping your client connected continuously is a problem for you.\n", "safety - There is at least one totally \"offline\" backup of blockchain?": "\nThis question in Skeptics SE asks \"Will the Sun's magnetic activity disrupt electronics on Earth?\"\nAs I understand it, the disruption has a limited geographical area of effect, and protection for a device can be achieved by simply disconnecting the power and network cables to disconnect it from long-distance grids (which amplify the effect). \nI'm sure there would be some offline backups available even if every PC that was plugged in was fried. I would assume servers in data centres would mostly have adequate protection already. For the vast majority of people with an interest in Bitcoin, the other effects that might come with widespread power and network outages would almost certainly be a bigger worry than any issues with bitcoin.\nAll that said, I recommend keeping multiple backups of your wallet in a variety of locations. Maybe you should keep a reasonable amount of cash handy in case of emergency too, if you're worried about geomagnetic storms...\n", "fraud - Which payment processors do not allow for chargeback?": "\nIt's a short list.\n\nCash \nLiberty Reserve (though they did freeze some customer funds recently until they became verified)\nBank Wire (though see comment below)\nWebmoney (supposedly)\n\nHere's the payment methods hardness list:\n\nhttp://en.bitcoin.it/wiki/Payment_methods\n\n", "Which Bitcoin exchanges allow anyone to fund your account by a bank transfer?": "\nIn the U.S. there is the ACH bank network. \nCoinbase is currently the only service allowing bitcoin purchases to be paid for with a transfer from a bank using the ACH network directly.\nMt. Gox and Camp BX use Dwolla which is an intermediary which allows funds to be drawn from a bank account through the ACH network.\nI'm unaware of any exchanges whose policy is that it will accept a domestic or international bank wire without that coming from your own account.\n", "What is more effective than ASIC mining?": "\nWell, the ASICs machines would probably be more and more refined over the years (like processors), they can get bigger and so forth. So that will probably be the progress for a long while.\nAsides that, we have the quantum computers that might be the next big leap forward for all fields of computer science, but for now they can only do really small calculations (3x5=15... on 5 atoms, or something like that). However, there is no telling if and when quantum computers might become viable enough to do anything Bitcoin-related with them, or even whether they might be used to destroy Bitcoin's algorithms altogether.\n", "energy consumption - Bitcoin - Green mining": "\nOne attempt, .... Diablo Mining Company didn't go so well.\n\nhttp://bitcointalk.org/index.php?topic=77469\n\nSo far, the most profitable mining has been in nations whose taxpayers provide subsidized electricity.  Essentially, it is like a form of welfare for Bitcoin mining entrepreneurs.\nASICs have removed that advantage though so it never got to be that big of a deal.\n", "Are there any revenue sharing blog websites that pay out in Bitcoin?": "\nYou can use https://anonymousads.com/ on a blog site. They pay in Bitcoin but don't host anything themselves as far as I know\n", "What GPU-APU configuration should I buy for mining Bitcoins?": "\nIt's essentially too late to be worthwhile GPU mining because FPGA's are much more energy efficient, and cheaper to buy per unit of output. This has meant the difficulty has risen high enough that you won't cover the cost of your electricity (or your hardware) with GPUs. ASICs are likely to be shipped soon, which will largely make FPGA's obsolete. You can pre order ASICs from multiple manufacturers; Butterfly Labs is one.\n", "wallet - How can I delete an address (private key) in the list of received Bitcoins?": "\nI don't think it's possible to delete addresses from just the UI.\nYou can delete addresses completely using Pywallet. However, unless you back up the key first, this means that you will not have access to any coins sent to these addresses (either future coins or existing coins which have not moved elsewhere).\nThe many addresses will be more manageable if you label them. You can even simply label each as \"Z\" to put them at the end of the list when sorted by label.\n", "client - Why isn't Bitcoin-QT or any other Bitcoin related app on the App Store for Mac?": "\nAs far as I know, there have been no submissions of Bitcoin apps to the Mac App Store.\nA Bitcoin app for iOS was submitted to the App Store in May 2011 by Ehud Ben-Reiven. He reported that it was rejected because \"...it involves intermediate currency...\". He subsequently open-sourced the code, bitcoinApp, but, as of this writing, it hasn't been updated in years.\nBlockchain.info had some success in submitting an Blockchain app which uses the site's API to do all the heavy work. However, it was removed without reason in May 2012 and later restored in August 2012. This app relies on Blockchain.info as a hosted wallet, though, and is not a fat client.\nTL;DR Apple disallows Bitcoin clients because it considers Bitcoin to be an \"intermediate currency\".\nSpeculative TL;DR Apple disallows Bitcoin clients directly because it's a payments system that circumvents Apple's desire to take a cut of all money that flows within its app ecosystem. It's not known how Venmo and other payment networks are allowed to circumvent that, if they even do.\n", "client - Synchronizing with network \u2013 What does it mean?": "\nIt's most likely you're using the client from bitcoin.org.\nSynchronizing with the network refers to the download and verification of the blocks in the block chain, which is the transaction history of Bitcoin. The block chain is the record of who spent what and when they spent it, and who owns what now.\nCurrently, the bitcoin.org client downloads the entire block chain on installation, which is somewhere around 3GB of data. As it downloads each block, it confirms each transaction, which is a disk-intensive activity. Unless you have high spec hardware, expect it to take many hours, possibly even days.\nVersion 0.8 of the bitcoin.org client alters the synchronization process, which heavily reduces the time required to get the client functional. The process is faster through being less disk intensive.\nAlternative clients are also available, such as Armory or Electrum, which don't use the same synchronization process. Electrum doesn't download the block chain, and the features list for Armory says it doesn't need the block chain.\n", "alternatives - Will an approved Bitcoin-like system replace Bitcoin?": "\nIt's near certain that other Bitcoin-like currencies will continue to be introduced from time to time. Some of them will likely gain some traction.\nOver time, more and more deficiencies of Bitcoin will become apparent and newly-designed competitors will be able to fix them. While Bitcoin can certainly make some changes, it will always have a trade-off because significant changes risk shaking to confidence of current users. At some point, Bitcoin's accumulated deficiencies will be too much and it will lose significant share to some competitor.\nOf course whether that will be next year or next century, I don't think anybody knows.\nSome such systems will likely coexist with Bitcoin without much interaction. Others may design in interaction with Bitcoins directly into their fundamental design. Nobody has a crystal ball though.\nSome have imagined high-speed, high-volume systems that would move Bitcoins outside the regular blockchain with the existing Bitcoin system used only to \"settle up\" large transfers between smaller, faster systems. Will that be what happens? Who knows?\n", "value - Are there time-series of Bitcoins in circulation?": "\nHistorical time-series of exchange rate:\n\nhttps://docs.google.com/spreadsheet/ccc?key=0AmcTCtjBoRWUdHJuUE1mUkFxa3A0eHBDQkxZLVVFZmc\n\nSource of the data is the \"Raw Data\" from BitcoinCharts.com.\nThe raw data of daily \"market cap\" is available in json\n\nhttp://blockchain.info/charts/market-cap?timespan=all\nhttp://blockchain.info/charts/market-cap?timespan=all&format=json <-- Thanks to Ben's comment below.\n\n", "difficulty - Bitcoin inflation in 9/12 doesn't seem to have been corrected. Why not and will it be fixed?": "\nA short term increase in the gradient on the graph can be caused by a large and fast relative increase in hashing speed of the total network. Within a short time, the difficulty adjusts and prevents it having a substantial long term impact. The steep gradient on this difficulty graph between 13GH/s and around 20GH/s is an increase of around 50% in hashpower in a very short time.\nIt won't be fixed, because it's not broken; it's working as originally intended. It does mean that the date the reward adjustment is halved comes slightly earlier than if the network hash rate remained constant. It also means that as the value of bitcoins grows higher, more hardware will be purchased and added to the network, and blocks will be produced slightly faster than the 10 minute average.\nThe final date of \"new bitcoin mining\" is of little consequence. Well before that date, miners will be earning more from transaction fees than from the block reward.\nWe can expect more of this when ASIC mining hardware comes online.\n", "Can any Bitcoin client do local peer discovery and blockchain synchronization?": "\nThe Bitcoin.org client can be launched with the -connect= parameter.\nSimply have it connect to another local node and no outside connectivity occurs.\nBut once it is caught up to the latest block, the amount of bandwidth is relatively trivial.  There's no reason to do this to save bandwidth once a node has been brought current.\n", "Is the current network difficulty algorithm appropriate for \"Peak transaction-only mining\"?": "\nInteresting thought.\nYears from now we may get to a point where transaction fees are the majority of mining income and profits are so marginalized that electricity expense is a major factor. What makes sense for a miner may be to have a low-power computer with ASICs sitting idle and waiting until there are some transactions with big juicy fees, then actually start mining. Once someone mined a block with those transactions the fees are no longer up for grabs, so your equipment goes dormant again to conserve electricity.\nSo far not a big issue I think, because the busy and slow periods are hard to predict. The problem is if we have certain times of day when a large portion of bitcoin users are asleep, resulting in very little value available from transaction fees. Or if you could artificially create a slow period by somehow hindering the propagation of transactions.\nIf you know beforehand that 50% of the hashpower will switch off for a certain time period then you don't need the infamous 51% hashpower majority to pull off a double-spend - the equivalent would now be 26% of global hashpower.\nSo yes, if a large portion of the hashpower switches off systematically at the same time, I think that could become a weakness. But I don't see it happening until we get to a point where most, if not all, of the income from mining comes from transaction fees.\n", "mining pools - How to get the general population to pay more in transaction fees?": "\nI don't think that it is definitely a good idea to increase the transaction fee.  One of bitcoins biggest selling points is the ability for micro-payments and very low transaction fees.  While I do agree with others that micro-transactions will eventually move off the blockchain.  For now even with the block-reward halving, transactions fees still won't benefit miners financially much for a very long time.  As again as I said the ability to make bitcoin transactions much cheaper than traditional means is one of bitcoins main selling points and will be for a long time.  Until such a date that the majority of bitcoin transactions are made off the blockchain.  Instead in house by larger bitcoin payment and services provider outlets. \n", "historical trade data - What is the early history of the BTC exchange rate?": "\nAccording to https://en.bitcoin.it/wiki/History:\n\n2009\n  October 5 Exchange rates published by New Liberty Standard. $1 = 1,309.03 BTC (and theymos thought NLS was overcharging[3])\n\nIt cites http://newlibertystandard.wetpaint.com/page/2009+Exchange+Rate\nand\nhttps://en.bitcoin.it/wiki/History#cite_note-2\nThat first citation seems to have a decent list of pre-May 2010 exchange rates.\n", "transactions - Alternative uses for last five decimal places of an individual Bitcoin (0.000xxxxx)": "\nMPEx uses the last 7 decimals to identify individual deposits made to their publicly known deposit address. Here is a sample of how they do it:\n-----BEGIN PGP SIGNED MESSAGE-----\nHash: SHA1\n\nIn order to make this deposit please send to the exchange address ( 1Fx3N5iFPDQxUKhhmDJqCMmi3U8Y7gSncx ) the sum of 10.03878878 BTC exactly. Your transaction will be manually approved, so please allow up to 48 hours for funds to show up in your account.\n\nIf your funds don't show up within 48 hours please contact mircea_popescu in #bitcoin-assets. Thank you.\n-----BEGIN PGP SIGNATURE-----\nVersion: GnuPG v1.4.5 (GNU/Linux)\n\niD8DBQFQrFKnkhT8a/G2mSERAu4cAKCSkXszTDUquQT83nhzpXTlqxDd1ACgiBiO\ngq0FBE+XYRV+AJrUHXuWC0E=\n=2Azr\n-----END PGP SIGNATURE-----\n\n", "Passing a JSON argument to bitcoind in Windows command prompt": "\nThe important part is that strings should be enclosed in triple double-quotation marks. For example:\nbitcoind sendmany \"\" {\"\"\"1ELvnrA6PhUyDBS6iR25K1Xx4xXL6VMfJX\"\"\":0.001,\"\"\"1NX3R5Le4c1y9E316NPMze7aEmCXjpCY58\"\"\":0.001}\n\n", "wallet - How can I create an eWallet in PHP?": "\n1 - If you don't want to use third party systems, you will need a server to host bitcoind.\n2 - Install Bitcoin-QT. In your data directory, create bitcoin.conf with the following attributes (you will need more if you are trying to connect to bitcoind from outside of localhost):\n\nserver=1\nrpcuser=username\nrpcpassword=password\n\n\n3 - Use the Bitcoin API to access any data you need. You will most likely need to use accounts in order to ensure proper money handling.\nIf you need further assistance, feel free to ask here, or contact me for more direct help at a reasonable price ;).\n", "investing - How to invest bitcoins?": "\nA list of Bitcoin-related financial investment services:\n\nhttp://en.bitcoin.it/wiki/Trade#Financial\n\n", "script - Bitcoin contracts. Are there good examples in the blockchain?": "\nAdvanced contracts are hardly used currently, if at all - simply because the software to construct the necessary transactions has not been written yet. I doubt you will find examples on the blockchain.\n", "legal - What Bitcoin profitability calculators account for taxation on miner income?": "\nNone do now and none likely will anytime soon.\nThis will vary per-tax jurisdiction and per individual circumstances because income taxes are based on profit not on revenue. \nThis is the very first inquiry I've seen where this feature has been requested, incidentally.\n", "legal - If miners pay income tax, could a change in tax laws affect network security?": "\nTaxes are paid on profits, not revenues. If their mining operation was profitable before, it will remain so even after the tax increase. Also, depending on the kind of tax it could increase equally to any alternative occupation they might have, so there would be no reason it should make any miner operation go out of business; definitely not enough to warrant concerns about the network security.\n", "legal - Is there a website that tracks Bitcoin taxes paid to local government?": "\nI think it would be fantastic if my tax jurisdiction were to accept payment in bitcoins.  Every additional way bitcoins can be used adds to bitcoin's value -- it accelerates the network effect.\nWhen they do begin accepting bitcoins, each jurisdiction could be asked to supply the totals (via FOIA request, at a minimum).  Some organization or individual could then take that data and compile a report.\nBut expect this to occur long, long after bitcoin is \"legitimized\", as you describe it, and not before.\n", "transactions - How to use Bitcoin software": "\nBitcoin transaction has three important parts:\n\nfrom address A\nto address B\namount of bitcoins\n\nIf Bitcoin client broadcasts correctly formed transaction then the network knows that certain amount of bitcoins were sent from address A to address B.\nIf the owner of address B wants to send bitcoins to someone else he formes transaction that looks like this:\n\nfrom address B\nto address C\namount of bitcoins\n\n\nYou can have as many addresses as you want, but newly created address has zero bitcoins. You can buy bitcoins from someone e.g. Bitinstant or MtGox, and ask to send them to the newly created address. Once you have the bitcoins you can sell them or exchange for goods and services.\nLabel is just a description of an address that you can enter to help you remember, it won't be broadcasted to the network. For example, if you plan to receive bitcoins from MtGox and created a new address for that, then in label field you can enter \"Bitcoins from MtGox\".\n", "development - Are there any C# wrappers for the Bitcoin REST API?": "\nTake a look at this c# bitcoin rpc api wrapper: https://github.com/GeorgeKimionis/BitcoinLib that, unlike bitnet, is up-to-date.\n", "Shares mostly rejected mining with an FPGA": "\nGive me the make of the FPGA and the name of FPGA binary you are using.\nIt could well be that you are over-clocking the FPGA too far, due to the way that many of these cores are designed, there is a race condition, where the  \"success\" flag, gets out of sync with the \"nonce\".\nBasically the FPGA flags the \"hit\", but by the time it gets to copying the \"nonce\", it has changed......\nand so fails.\n", "payment - Why shouldn't I accept PayPal when trading bitcoin?": "\nFirst of all, it is likely a violation of PayPal's Acceptable Use Policy as of Oct 2011:\n\n3(h) involve currency exchanges or check cashing businesses\n\nGiven this, it's unlikely that PayPal would be amenable to helping at best, and may close your account (and freeze the funds it had for six months) at worst.\nAnother chief problem is the high likelihood of chargebacks. PayPal has generally sided with the buyer when any dispute is brought against the seller for any reason. For this reason alone, it's best to accept Bitcoin only when you trust the buyer and have some influence on their reputation.\nFurthermore, Paypal has high fees (current 2.9% + $0.30 USD).\n", "bitcoind - Would it be possible to provide a downloadable blockchain that is updated and verified by a mass of people?": "\nThere already are downloadable versions of the blockchain. There's no problem in principle in having them GPG-signed by several trusted people. However:\n\nIt somewhat weakens security. With the software itself you can trust the signatures and you can inspect the code. With blockchain data inspecting it is infeasible.\nFuture versions will use a different DB format which allows for much faster verification, so there will not be much advantage for a system where verification is obviated but downloading the data is still needed.\nIn the long-term, end users will not use a full client, but rather (at best) an SPV client which does not need to download or verify the entire blockchain.\n\n", "bitcoind - What is the benefit of upgrading the wallet file?": "\nThe latest wallet.dat version is 0.6.0; wallet.dat didn't change with the 0.7 releases.\nWallet.dat version 0.4.0 introduced the wallet encryption feature.\nWallet.dat version 0.6.0 introduced 'compressed public keys', which make transactions you send smaller. Right now, that is the only reason you might want to run -upgradewallet, although even if you upgrade, you won't start using compressed public keys until you use up the 100 uncompressed keys in the wallet's keypool. You can force bitcoind to use up the old keys by running the 'getnewaddress' RPC command repeatedly.\nNote that when you encrypt a previously unencrypted wallet bitcoind/Bitcoin-Qt will automatically upgrade to the latest wallet.dat version, because it has to re-write the entire wallet.dat file anyway.\n", "Should an end-user download the whole blockchain? Or is a \u201clightweight\u201d client sufficient?": "\nFor the MultiBit client:\n(disclaimer: I am the lead dev)\n1) as you are not running a full node, you are not helping relay transactions nor mining nor verifying blocks.\n2) if an attacker can surround your network they can feed you spurious transactions and a fake but well formed alternate fork. (I guess this is true for bitcoind too).\n3) MultiBit does not keep a database of unspent transaction outputs so importing an arbitrary key is slow. \n4) you ARE downloading the full blocks and parsing them (though not storing the full blocks) so you can keep up to date with blockchain reorgs and such like. \n5) an unconfirmed transaction cannot be verified by checking all the inputs are unspent and thus you cannot rely on it until it is confirmed. A full node can check everything about the transaction. Only when it appears in a block (on the main chain) can you have any confidence in it. \n6) not actually related to architecture but important for security: only the beta MultiBit code has encrypted wallets.\n7) compared to bitcoind, the lightweight clients have less manpower working on them. If you want to use bitcoin in, say, a company environment then bitcoind would be the safer option. \nIn summary: there are a few limitations caused by not having access to the full block chain locally but for everyday use they should not hinder you too much. Factors more to do with what the devs have managed to implement (or not) probably make a bigger difference.\n", "miner configuration - how to start mining with FPGA": "\n\nSo is there a nice tutorial which explains how to start mining using FPGA.\n\nNot really, not a \"starting from scratch\" one.\n\nOr this is so complicated?\n\nYes, it is quite complicated - in order to work with FPGAs, some additional skills on top of software are required.  You need to understand logic design and some (fairly basic) electronics in order to make a successful FPGA.\nHowever, as a learning project, if it's something that interests you, I'd say it's worth a go - you'll learn a lot, but it won't be a quick-and-easy learning experience :)\nBut start small - first off, write an FPGA which just flashes an LED on and off slowly - that enables you to learn lots of the low-level details without a complex logic design going on.  The FPGA equivalent of \"Hello World\"!\n\nEDIT:\nIf you've already done some FPGA work, then \"all\" you need to do is build a SHA implementation, some method of getting data to and from it and a little control logic.  I haven't done it myself, but I got about that far along a \"thought-design\" before deciding I wasn't sufficiently interested to pursue it further.\n", "Why does Armory enforce a minimum transaction fee?": "\nIf the coins it is using have a lot of confirmations, the less likely a fee is going to be needed.\nIn the instance reported here, when the payment was sent using the Bitcoin.org client the funds had many confirmations and no fee was required. \nWhen a payment for that same amount was then created using Armory, the funds did not have many confirmations and thus the client insisted on there being a fee.\nThis is not a difference between Armory and the Bitcoin-Qt client.  This is a difference between sending coins which had lots of confirmations versus sending coins which had fewer confirmations.   The same thing would have happened regardless of which of the two clients was being used.\n", "client - Is it possible to exhance bitcoins to real money?": "\nThere are many, many methods:\n\nhttp://en.bitcoin.it/wiki/Selling_bitcoins\n\n", "address - Once a wallet file is initially created, does the reference client generate additional private keys?": "\nWhen a wallet is created, it contains 100 keys in its \"key pool\". Only one of them is made visible, but when you create a new address, it actually just takes one key from the pool. The reason for this is so you don't need to backup your wallet.dat file after every transaction or new address,\nNew keys are generated every time one is pulled from the key pool, if possible, to keep the key pool at size 100. In an encrypted wallet, the passphrase is required to store new keys, so the key pool is only filled when the wallet gets unlocked.\n", "Is there any way to get the block number of generation from coinbase?": "\nBlocks with a version of 2 or greater are required to put their block height in the coinbase. Your example doesn't. (At some point in the future, version 1 blocks will probably be discouraged and then banned.)\nHere's an example of one that does:\n038232030650b25c7d0f8bfabe6d6d0ebaccab777b7b5f4745bc81a22654d2fde018c3e8f06823670f5e790cbde3b6010000000000000000454d432055533300\n\nThe block height is the first thing in the coinbase. 03 is how many bytes the number has. So the number is 0x823203 in Bitcoin's little endian byte ordering, or 0x033282 in the big-endian byte ordering that humans usually use. Convert this into decimal and you can see that this is block #209538.\n", "banks - How does bitcoin manage the money supply?": "\nThe number of bitcoins in existence is limited to 21 million. This is the equivalent of M0, the monetary base. Whatever institutions do with it, creating M2, M3 etc. is not something that Bitcoin can or will control.\nHere is some more info on the Bitcoin wiki: Controlled Currency Supply\n", "mining pools - How to structure a Bitcoin charity miner?": "\nYou can give someone the necessary credentials to mine on your behalf without them gaining access to the bitcoins. Pools don't use the worker passwords sent with getwork for logging into the website and controlling where coins are sent. They are used only for fetching work and delivering the results.\nAs you say, basic auth over unencrypted HTTP is already unsafe handling of the worker passwords. You have to assume that those passwords are compromised anyway.\nI think the most damage someone can do is to overload a pool server using your worker credentials. I suppose this could get your account temporarily banned, but I'm sure a pool operator would be understanding in this case. I've never heard of anything like that happening either.\n", "security - What's the risk of publicizing a Bitcoin address?": "\nFor privacy, Bitcoin relies on \"pseudonymity\", which means that the only way people can choose not to disclose their identity, is by making it hard to link addresses to people/businesses/....\nPublishing an address publicly obviously makes you give up that privacy, but that's not a problem. everyone is free to choose so of course. The problem is that it also makes it easier to trace the identity of others, by linking addresses after following transactions in the block chain. Publishing addresses may in this way decrease the privacy of many people using the system, including people who are unrelated to you.\nEven just reusing the same address for multiple receiving transactions is already bad for the network in this sense, as it increases the ability to link transactions and addresses.\nThe general advice is to use each receiving address just once. This also makes it easier to distinguish incoming transactions, for example.\n", "development - Manually creating transactions": "\nI am assuming you want to accomplish something akin to what SatoshiDice does. Here is how it can be done, using API calls with the Bitcoin-Qt/bitcoind client:\n\nlistunspent - you get the list of all unspent transactions\nYou determine which ones you want to spend\nYou use createrawtransaction to create your inputs / outputs, taking txid and vout from the list of transactions that you have that are playing, as well as a list of transactions that constitute a \"money supply\" for you.\nUse signrawtransaction to sign the created transaction\nUse sendrawtransaction to send the signed transaction\n\nThat should be pretty much it. I have implemented some of that code myself and it is pretty easy once you get a hang of it all.\n", "script - Password-based bitcoin transactions": "\nWhat if somebody sees the password as the transaction is being relayed around, and makes a new version that transfers your bitcoins to them? If they have better network integration/a higher bandwidth connection, then their version might be able to overtake yours.\n", "How much is a mining pool share worth on average?": "\nIf the global network difficulty is D and the difficulty of shares in the pool is d, then the probability that a share will lead to a valid block is d/D. The reward in this case is B, so the average reward per share is B*(d/D). If the operator's average fee is f (so for example f=0.01 means 1% fee), the average reward miners get per share submitted is (1-f) * B * (d/D).\n", "How do I access information on blockexplorer.com or blockchain.info without issuing requests to those websites?": "\nbitcoind doesn't give you a way to query this, but by looking at the files it writes to disk, we can build our own tools that let us look at this. One such tool is Abe, and this is how you use it:\nInstallation (Ubuntu)\nI'm assuming you have the standard bitcoin client running already.\nDownload Abe. Unpack it, and run python setup.py install\nGo into abe.conf and add these lines:\n# SQLite3 example:\ndbtype = sqlite3\nconnect-args = abe.sqlite\n# Specify port and/or host to serve HTTP instead of FastCGI:\nport 2750\nhost localhost\n\nA note about firstbits\nIf you want to do firstbits lookups, you need to add one more line to the config.\nuse-firstbits\n\nNote that you need to do this before you run abe, or else you'll need to run Abe.reconfigure too.\nBack to the normal installation\nRun python -m Abe.abe --config /path/to/abe.conf\nYou should see the screen get spammed with \nblock_tx 38944 39254\ncommit\n\nAt time of writing, this will need to count up to 220,000. This took me about 8 hours. After the first startup, it will load in about a second.\nTry opening http://localhost:2750/. If it shows no data, then there was an error. The output that the abe command produced immediately before saying that it was listening should give you some sort of insight.\nNow your application can issue http requests to find out about the blockchain! There is a link to some documentation (http://localhost:2750/q), but you'll mostly be interested in \n\ngetreceivedbyaddress (http://localhost:2750/chain/Bitcoin/q/getreceivedbyaddress/ADDRESS)\ngetsentbyaddress (http://localhost:2750/chain/Bitcoin/q/getsentbyaddress/ADDRESS)\nfb (http://localhost:2750/q/fb/ADDRESS)\n\n", "How does bitcoin handle unspent outputs from fresh transactions?": "\nBitcoin protocol doesn't care how many confirmations a transaction has. A user can choose any number of blocks that has to be mined on top of the transaction before considering it confirmed, or in case of Satoshidice it simply doesn't care.\nBitcoin protocol does care that source addresses of a transaction has all required coins to transfer to destination addresses, in other words a transaction has to have all it's inputs to be valid and the number of coins those inputs have must be greater or equal to number of coins in outputs. Therefore if an attacker successfully double spends his transaction to Satoshidice it will also invalidate winning transaction from Sathoshidice, because one of the inputs of winning transaction is the original transaction from the attacker to Sathoshidice.\nTo answer the question why bitcoin protocol allows it, consider two transactions \n\nFrom address A to address B\nFrom address B to address C\n\nTo think about second transaction as confirmed you need to wait a certain number of block to be mined on top of it and it doesn't matter how many block were mined on top of the first transaction because it doesn't make second transaction any more secure. Therefore both transactions can appear in the same block and that's completely fine. \n", "value - What can be done with a bitcoin besides exchanging it for goods or services?": "\n\nA Bitcoin can be used to permanently trace the association between different public keys.  For example a user can send a transaction to a second user and publicly and permanently link the accounts.  This may have utility in Web Of Trust scenarios.\nThe low value bits of an individual bitcoin can cheaply store metadata.\nSaving them as a collectors item\nSharing (p2p style) a small amount of data\n\n", "blockchain - When was block 210000 generated and who solved it?": "\nAccording to blockchain.info, the block 210000 was solved on 2012-11-28 15:24:38 GMT, and was relayed by Slush's Pool. The pool's Stats page also claims to have solved that block. It has also been stated that the block was solved by pool's user by the nickname of laughingbear.\n", "legal - Are there mixing services or online wallets that are explicitly compliant with anti-laundering laws?": "\n\"AML-compliant\" bitcoins are not anonymous/anonymizable by definition since most AML laws require the origin of funds to be traceable to real person, at least for bigger transactions. The \"tainted\" bitcoins are completely different thing, you should be completely fine accepting them in good faith if you have sender's real life ID. Law does know nothing about \"taint\", that's completely bitcoin-related invention, since cash nor goods usually have it. It's yet to be proven how it would be considered by jury.\nIANAL, you should do some own research on this.\n", "blockchain - What does the term \"Longest chain\" mean?": "\nBitcoin's block chain system is really two quite separate systems, and they are easily confused. The first one is the block tree and the second is the active chain.\nThe block tree consists of all valid blocks whose entire ancestry is known, up to the genesis block. The rules for validness include no double spending, valid signatures, no introduction of more currency than allowed, ... These are the network rules, and every full Bitcoin node verifies them.\nThe active chain is one path from genesis block at the top to some leaf node at the bottom of the block tree. Every such path is a valid choice, but nodes are expected to pick the one with the most \"work\" in it they know about (where work is loosely defined as the sum of the difficulties). Relativity and technological constraints prevent us from doing instant communication across the globe, so two nodes can not be expected to pick the same chain as the active one. This is no problem: the mining mechanism makes sure that the chance two nodes disagree about blocks in the past decreases exponentially as they are older.\nSo no, there is not one \"right chain\", there are many. Nodes choose for themselves, but the system is designed to make sure consensus arises quickly.\nThe rules in practice are this: when a new block arrives, and it extends the previous active chain, we just append it to the active chain. If not, it depends on whether the branch it extends now has more work than the currently active branch. If not, we store the block and stop. If it does have more work, we do a so called \"reorganisation\": deactivating blocks from the old branch, and activating blocks from the new branch.\n", "bitcoin core - How does the network apply credit for created blocks?": "\nMiner has to supply the Bitcoin address for block reward. Then, when the block is mined, the special \"credit\" transaction is permanently stored in found block, creating given amount (25 BTC, was 50 BTC) to given address.\nSome pools (Eligius or P2Pool) use this feature and create a lot of credit transactions, so that when block is found, all participants will receive their respective share.\n", "mining reward - How many Halving Days will there be?": "\nThere will be 32 more if the precision doesn't increase. If Bitcoin lasts this long (very unlikely), precision probably will be increased.\n", "blockchain - How many Bitcoins existed when block 209,999 was mined?": "\nI suppose this is the culprit. If we add the duplicate 50BTC that is missing and the first reward from block 21,000,000, we would have 10,500,000BTC in total.\nHowever, my calculations would be: 21000000 blocks (ranging from Genesis Block 0, to block 20,999,999) multiplied by 50 BTC, that would give us 10,500,000\nWith the duplicate transaction, that would be 10,499,950 BTC total.\n", "blockchain - Is it possible to view others' transactions in bitcoin client?": "\n\nIs it possible to view others' transactions\n\nYes.\n\nin bitcoin client?\n\nNo.\n\nIt's not terribly useful to look up the balance of somebody else's address, except maybe so they can prove they have a certain amount of funds.  \nThese lookups would be slow, because it needs to work through millions of transactions. Creating the indexes that would allow you to do fast lookups on any bitcoin address would take a sizable amount of disk space.\nAll of them are there - it's a central part of the bitcoin protocol. What if somebody moves all of their money out of their account within a transaction you don't know about? Therefore, you have to know about all transactions, unless you want to be surprised when their payment \"bounces.\"\nThere's already a website called Bitcoin Block Explorer that pretty clearly establishes that transactions are public. Even if there wasn't, you could still build your own.\n\n", "Relationship between Hash-Rate and Difficulty": "\nShort answer:\n  difficulty = hashrate / (2^256 / max_target / intended_time_per_block)\n             = hashrate / (2^256 / (2^208*65535) / 600)\n             = hashrate / (2^48 / 65535 / 600)\n             = hashrate / 7158388.055\n\n(where hashrate is expressed in hashes/s)\nLonger answer: there is no direct relation between the actual network hashrate and the difficulty, because the actual hashrate cannot be observed. What happens is that every 2016 blocks, the average hashrate during that period is measured, and the difficulty is adjusted based on that.\n", "How many transactions have been included into the blockchain?": "\nAs of block 210000, the total number of transactions in the chain is 9344662.\nVersion 0.8 of the reference client keeps track of this number, and reports it for every connected block in debug.log. I just copied the number from the debug.log of a node running pre-release code.\n", "Does it make sense to \"collect\" smaller transactions balances into a single account during low activity?": "\nIn satoshi client, the \"accounts\" therein are only a convenience for labeling of receiving addresses. They don't matter for sending at all.\nIf you receive bitcoins, the balance is not added as in bank, but the amount is saved as \"unspent output\". Client only shows all these outputs together as one available balance. It doesn't matter whether one address has n unspent outputs, or these are on more addresses. When you send bitcoin, the fee is based on number of these outputs used and it is higher if they are very recent. So trying to consolidate them won't help much, only that you pay the fee sooner. And it isn't done \"while you sleep\", it's done by simply sending your whole balance minus fees to yourself.\nIn other clients, the fee algorithm can be completely different.\n", "bitcoin core - Why does the age of the coin in my wallet matter?": "\nThe Bitcoin.org client only cares about age when a coin is real recent (like in the last day).  Any coins older than about a day are all treated equally.\nThe reason recent coins matter is because the client wants to lessen the chance that legitimate spending would be considered as being spam or a denial of service attack.\nIf coins were recently received and then are being spent fairly quickly right after the network can't know if that is someone trying to grief the network or if that is a legitimate transaction.   But a transaction made with older coins is almost certainly not being used for the purpose of griefing the Bitcoin network.\nSo then by requiring fees for \"spam-like\" transactions, if an attacker is griefing the Bitcoin network it is going to have a cost.\nThat's the extent of it -- a way to make attacking bitcoin expensive while allowing normal, legitimate use to remain low cost or free.\n", "Are there any combination of letters that a namecoin address cannot start with?": "\nNamecoin addresses, like Bitcoin addresses, are Base58 encodings of a public key hash. The encoded data starts with a version byte, and the value of this byte affects the first characters of the result.\nNamecoin addresses specifically use a version byte of 52, which dictates a certain range of initials. The prefixes you listed are simply too high - they correspond to a version byte of 53 or even 54. Likewise, some prefixes starting with M are impossible because they correspond to a version byte of 49, 50 or 51. You could give a more precise \"lowest\" and \"highest\" addresses, in lexicographic ordering - the address must be between MvaNCeVyvP6ZXYFWGpKaDX9ujEQ418F7sm and NKuyBkoGdZZSLyPbJEetheRhMjezbtjJCf.\nA full list of version bytes and first characters is available here, and the possible 2nd character ranges can be interpolated from it. For version bytes 0-2 and 144-255 the address length can be different from 34 so it makes the ranges less intuitive. But for 3-143 it's fairly straightforward: You have about 58^2 possibilities for first 2 characters to go between 141 version bytes, so each is only allocated a range of about 23 combinations. For Namecoin addresses that would be Mv to NK.\n", "client - Are transaction fees required now? Is there any way to avoid them?": "\nUse Send Custom for full control over fees.\nClick Send Money tab, then on the left menu under Transaction Type click Custom.\nThis URL might get you there.\n\nhttps://blockchain.info/wallet/login#send-custom\n\n", "bitcoin core - How can I combine all the tiny amounts I've received to minimise transaction fees, and do I need to?": "\nI have not actually done this, but here is how I understand it. With many tiny amounts, you probably want to consolidate them because the fees for transactions with lots of inputs will be high. Now you ask, by consolidating, won't I just be paying the fees in advance? The answer is that by planning ahead and consolidating them, you can use the low-fee mining pool Eligius to do it.\nTo estimate the cost of the transaction, I'm going to use only the transaction size (for large transactions, the fee is dominated by or entirely consists of the cost per KB). This is based on the number of inputs and outputs. If all your balances are the same (0.01 BTC), then it doesn't matter how much you spend at at a time, the fee grows linearly with the total BTC amount.\nAssuming 180 bytes per input, 1000 inputs comes to 175KB, which I'm going to round up to 200KB for a safety margin. With the official client, at the default 0.01 BTC / KB fee [1], that would cost 2 BTC.\nEligius will mine transactions for a fee of 0.2 TBC (0.00008192 BTC) per KB [2]. So Eligius's fee would be 0.016384 BTC. Might as well round that up to 0.02 BTC or higher just to be sure.\nIf your coins are old enough (say, 3 months for 10 BTC and a 200KB transaction size) [3], then the official client might not enforce the minimum fee on your transaction. Otherwise you may need to use a modified client that doesn't enforce a minimum fee.\nIn any case you will need to point your client to Lightfoot Hosting's free transaction relay, which will relay any transaction to the network [2], so it can be picked up by Eligius.\nIt may take longer than usual, but Eligius should eventually mine it.\nAs for combining the \"dust\" while leaving larger balances alone -- you would have to find a client that allows you to choose the inputs to your transaction. I don't know which clients can do that.\n[1] https://en.bitcoin.it/wiki/Transaction_fees (The fee calculations on this page are as of client 0.3, so they may be outdated.)\n[2] https://en.bitcoin.it/wiki/Free_transaction_relay_policy\n[3] Wiki link [1] above says that transactions with priority over 57,600,000 aren't subject to the minimum fee calculation. If this is true, then 10 BTC with an average age of 3 months in a 200KB transaction would have a priority of (1000000000 * 144 * 90) / (200 * 1024) = 63,281,250\n", "reward schedule - Why is the supply of Bitcoin not pegged to its demand?": "\nGDP (and most other stats you would think to use for this) can't be accurately determined by the network without trusting someone. The network can only see the movement of BTC; it has no information about non-BTC currencies, goods, or services. For GDP, some centralized organization would need to figure out the the real amount of spending in the BTC economy. The network can't just look at the total BTC transaction volume to figure this out, since someone could send BTC to himself in an undetectable way in order to inflate the volume stat.\nOne of Bitcoin's primary goals is to be decentralized, so it can't rely on a central authority. Therefore, the money supply needs to be set according to some algorithm that looks only at raw Bitcoin transactions and blocks. Satoshi chose to make the supply asymptotic because he thought that this was basically how gold worked, and gold has thousands of years of history as good money.\nBy the way, GDP would be a poor statistic to use for determining the demand for BTC. You'd want to use the price of BTC relative to a currency or good. If it could be done without changing any of Bitcoin's other excellent properties, I think that Bitcoin would be better if 1 BTC was guaranteed to buy you 1 oz of silver. But this is probably impossible for any decentralized currency that's even remotely similar to Bitcoin.\n", "blockchain - How to calculate bitcoin days destroyed percentage": "\nThe graph is a histogram showing the percentage of total Days Destroyed from the measured period for each block. Thus it is a distribution of dormancy over the period, since block numbers are ascending forward in time.\nTo arrive at the percentage in your example, you need to divide the Days Destroyed for that example block by the total of the Days Destroyed for the period being graphed.\n", "How to determine valid vanity address prefixes for any starting net byte?": "\nCasascius' Bitcoin Address Utility includes a Base58 calculator. You can input into it the lowest and highest values to encode to obtain the lowest and highest strings.\nFor example, to get the lowest Namecoin address, start with the hex representation of its network byte 52, which is 34, and add 40 zeroes (representing the 160 bits of the public key hash in hex). The result is MvaNCeVyvP6ZXYFWGpKaDX9ujEQ418F7sm. Likewise, to get the highest string use 34 followed by 40 f's, giving NKuyBkoGdZZSLyPbJEetheRhMjezbtjJCf.\nOnly 34-character strings which are between these two, in lexicographic ordering, can be valid Namecoin addresses. The ordering of the characters is compatible with ASCII, 123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz, and thus most programming environments should be able to check the address with the built-in string comparison functions.\nSpecifically, the first 2 characters can only be one of the combinations between Mv and NK, which are Mv, Mw, Mx, My, Mz, N1, N2, N3, N4, N5, N6, N7, N8, N9, NA, NB, NC, ND, NE, NF, NG, NH, NJ and NK.\nA more general approach is to decode the address into a number, and verify that the result is composed of the required version byte followed by any n bits (where n is the bit length of the encoded data, 160 in the case of a receiving address).\n", "mining profitability - Difficulty based derivatives and insurance": "\nWhen miners invest in mining hardware, they get a device that generates hashes at a rate of X, essentially forever. What they will get from it is X times the integral from now to infinity of a*B*P/D, where P is the value of a bitcoin, D is the difficulty, B is the block reward and a is a proportionality constant. The future values of P and D are unknown, and so what they will get out of mining is unknown.\nThis can be abstracted by saying they have a speculative mining position of X, and they want to hedge their position by investing in instruments that negatively correlate with the future income of mining.\nThe more aligned the speculative instrument is with actual mining, the more efficient the hedging will be. The most efficient instrument, then, is a mining bond - an asset which pays the expected output of mining with a given hashrate, deterministically and perpetually. By issuing such an asset themselves, or selling on margin such assets in dedicated markets, the miner can neutralize his position, making sure changes in the future values of P and D have no effect on his earnings (as any decrease in the ratio depreciates his obligation by exactly the same amount, and vice versa).\nA few such mining bonds were offered on GLBSE when it existed, and it is expected that now the void will be filled with assets issued on OpenTransactions, Colored Coins and so on.\n", "theft - After being scammed, has anyone ever actually managed to recover their BTC?": "\nThere have been many instances of coins being sent to the wrong address and then clues from the blockchain used to discover the recipient and thus recover the funds.  Goat's 400 BTC loss and subsequent recovery is the largest of these that I'm aware of.\nThere have been hints from the blockchain that have allegedly associated sockpuppet accounts to a repeat offending scammer.\n", "protocol - What makes difficulty more difficult?": "\nHashes are 256-bit integers, meaning they are whole numbers between 0 and 115792089237316195423570985008687907853269984665640564039457584007913129639935. There are no infinitely many different hashes. In particular, the number of hashes smaller than the target is exactly equal to the target.\nIn any case, Cantor's diagonal has nothing to do with it - if hashes were real numbers, there would be infinitely many of them even without any reference to their particular cardinality.\nWhat makes mining difficult is that calculating a hash takes time, and that each hash only has a small probability to be less than the target. For practical purposes, each hash is a uniform random number between 0 and 2^256-1, so if the target is X it has a probability of (X/2^256) to be smaller than the target. This means that, on average, 2^256/X hash calculations will be needed in order to find a valid block. The lower X is, the more calculations will be needed.\n", "How does one calculate the profitability of GPU mining?": "\nUsing the Bitcoinx calculator, I found that a $1,000 rig with a 300 W power draw would need to have 750 MHash/s just to break even on power at $0.20/kWh at the current difficulty (3,438,909), exchange rate (13.13), and block reward (25). \nYou'd never break even on the rig itself. Thus why GPU mining is on its way out.\nFor a more absurd example, I priced out a reasonable rig for ~$1,405 with three Radeon HD 7970s, the best mining card combo - 2050 MHash/s - on the market at the time of this writing according to the Mining Hardware Comparison chart. Its power draw would be around 850 W, according the MHC and a quick review of the parts. This rig would never be profitable at $0.20/kWh. Hell, at my electric rate of $0.07/kWh, it'd take nearly three years just for a return on investment. Prior to the recent halving, this same rig would make a return after just ~260 days.\nMore proof that GPU mining is on its way out.\n", "wallet - Using dumpprivkey to make a paper backup": "\nI recommend to check out \u201cbitaddress.org\u201d.\nYou can grab the whole page (all the java-script it needs is in it) via GitHub and run the brain wallet tab offline.\nType in a damn good pass-phrase and record it. The pass-phrase. Send your bitcoins to the public key that results and re-create the private key with the same pass phrase when you want them. \n", "blockchain - Why are Bitcoin calculation \"useless\"?": "\nI can see that you are talking about the mining process and the SHA hashing algorithm. From what I understand that function needs to be:\n\nScalable - one needs to be able to precisely adjust how much work needs to be put in for a desired amount. This is done through the use of Target/Difficulty and uniformity of the output of the SHA function (it produces more or less a smooth distribution of random numbers).\nThe function needs to be quick to verify and always verify the same way. Moreover, the function needs to be always verifiable and not rely on third party - generally, you need to process a lot of blocks in order to catch up to the network, so there is no point in it taking too long. Also, there is no ambiguity in determining whether a given hash fulfils the preconditions as would happen with some functions (\"is this protean optimally folded?\"). Morever, floating point calculations are not too good as different computers could have different rounding errors. As for being always verifiable and not relying on third party - Bitcoin is a decentralised currency and thus it cannot remain that way should it be dependant on some company or website operating it. Every peer needs to be able to independently verify the solution with minimal amount of software and hardware. Scientific simulations can rarely fulfil this goal.\nThe function needs to work one way and have no cryptographic weaknesses - generally, you don't want people to reach the result quicker than is fair. Hashing functions are the types of functions where one needs to perform the calculations in order to receive the results and can't get anywhere knowing the solution. SHA-256 is secure and for now doesn't have any weaknesses.\nThe output of the function should depend on every part of the input. Moreover, changing even one byte in the input should change the output completely. - Generally, the function needs to be very sensitive to tempering. Any change on the input must change the output so as to prevent malicious manipulation of data. Similarly to ensure that the function is scalable and nobody can \"tinker\" with the data a bit to produce another valid result from a previous solution, the output must appear to be pseudo random and any change of the input must change the entire output.\n\n", "Forgot wallet encryption password, are any brute force tools available?": "\nThere is a script provided by a forum user Revalin which can be used to attempt variations.  There is a forum user Rix who may be available for hire to provide assistance with this type of problem.\nYou can also try out this script:\nhttps://bitcointalk.org/index.php?topic=170694.0\n", "litecoin - What is needed to create a pool with merged mining?": "\nYou will need to be running the standard client with some special configuration - server=1 along with rpcuser and rpcpassword set. After that, you need to build your pool server to communicate with it through Bitcoin API and handle everything else. Last part is not too Bitcoin-specific and will consume a lot of your development time (I would know, I tried it ;) ).\n", "development - Who are the key developers, and where can I follow their progress and decision making?": "\nThe core developers are listed on the main Bitcoin page, while everyone that contributed code are listed on the About page. Probably the most up-to-date info on what is happening with the code would be on the GitHub repo.\n", "How can I create smaller transactions? Can a vanity address make things smaller?": "\nTake a look at the specification for transaction messages, particularly the sample transaction: https://en.bitcoin.it/wiki/Protocol_specification#tx\nThe best way to minimize transaction size is to minimize the number of inputs. Avoid accumulating \"dust\" balances of very tiny amounts. This is why mining pools have minimum payouts.\nVanity addresses are still the full 20 bytes. Even if you use a firstbits address, you have to look up the full address before using it.\n[Moved the answer from the comment below to here:\nYou don't get a transaction size saving from using firstbits, because it is not legal in the protocol and you will have to use the full address anyway.]\n", "development - What are \"discouraged blocks\" in the blockchain? (examples and explanation please)": "\nThe wiki article you describe has been updated since by a skilled developer who is part of the Bitcoin team and the key change now reads:\n\nBitcoin does not currently implement block discouraging in any form.\n\nSo this appears to be a concept that has not been implemented by any clients.\n", "charts - What is the math behind popular Bitcoin graphs? I want to graph Namecoin (or similar *coin) technologies?": "\nThe math behind those graphs is pretty simple, the main problem is crawling through the data and creating readable images automatically.\nDifficulty (red line) can always be read from the generated Blocks, no problem there.\n1/3/7/14/whatever-window estimates I assume are calculated by counting how many Blocks were generated in a given time period and at what difficulty. In general I guess it should be:\nEstimate = (Difficulty * MeasurementTime) / (10 minutes * BlockCount)\n", "bitcoind - How does the 'move' command work?": "\nAccounts are an internal bookkeeping mechanism of the Bitcoin client. They are not the same thing as addresses. When you move from one account to another, the coins remain in the same address, and if you need to spend them they will be spent from the same address. The only thing moving does is subtract a number from one account and adding to another - both of which are just things the client displays and nobody else on the network has any knowledge of. An account balance can also be negative.\nAccounts are good if you run a shared eWallet and want to track users' balances (and \"move\" can be used to make an intra-bank transfer), or if you want to keep track of different purposes of savings (so you can direct all incoming coins to an account called \"unallocated\" and then move 100 BTC to the account \"college fund\"; if you make sure to designate all outgoing transfers as coming from \"unallocated\", you will not accidentally dip into the college funds, no matter in which addresses your bitcoins physically sit).\n", "client - How does blockchaininfo find out the difficulty?": "\nBlockchain.info definitely has a client installed on their servers, that's where they get all the block data from. I heard they're using a fork of BitcoinJ.\nIn the Bitcoin-qt daemon, you can get the difficulty of the latest block with the getdifficulty command, and you can get complete information about every block, including the difficulty, with getblock.\n", "mining pools - Does the getwork id value do anything?": "\nIf you are talking about the Bitcoin API, getwork only requires data field, which is a place to put your solution.\nHowever, I do believe that you are talking about the id field of a JSON RPC command. It is used to identify a response to a given request. Generally, it might not be the best place to put extra information. There are already a few extensions to the getwork protocol that you might want to use instead.\n", "services - Is Quickbitcoins.net gone with all money?": "\nThe site was shut down in November and the former operator claims to no longer be involved with the service.\nThat operator is now attempting to raise funds for a new venture, Ziggap.\nQuickBitcoins didn't take deposits.  They were a service used to buy coins for immediate delivery or for selling coins with immediate cash-out.\nIf you are owed bitcoins or funds from a cash-out transaction, the operator at the time would still be responsible for that liability, regardless of whatever disclaimer is provided about now \"no longer having any relationship\" with the service.\n", "scalability - what is the motivation behind one-cpu-one-vote rule?": "\nThe motivation for this rule is simple - there is a requirement to have some voting mechanism , and this 1-CPU-1-vote mechanism is fair, in the sense that everyone can buy more CPU (or GPUs or ASICs) and mine. The rewards are proportional to the invested effort - better harder costs more, it doesn't matter if it's CPUs, GPUs or ASICs.\nSo, the protocol rewards miners in proportion to the amount of money they invest in buying mining gear. It's certainly better than rewarding per IP address, which is controlled by various organizations and ultimately centrally managed.\nAlso, I believe satoshi did foresee the evolution in mining gear, although it seems that it's not mentioned in the original whitepaper.\n", "development - How is a BIP accepted?": "\nThe process is not formalized precisely because only really non-controversial changes are supposed to make it in at all.\nThis hasn't always been the case, but is becoming more true in the last year.\nRight now the process goes like this:\n\nStart by thinking of some feature/improvement.\nConvince the dev team(s) of the relevant parts (core consensus, wallets, other layers) that this is a good idea in the abstract, and it needs to be standardized.\nWrite a draft.\nGet gmaxwell to assign a BIP number for reference.\nMake everyone happy with the detailled draft.\nAt some point, the status of the draft changes to Accepted (based on actual agreement of all/most devs).\n\nYou can follow https://github.com/bitcoin/bips to see when changes are made.\n", "security - How to redeem a private key in case it is compromised": "\nIf you want to redeem all funds from a private key and never use it again - you can for example create a new wallet file, run a bitcoin client, import the private key, let the client fully synchronise, and then send all your available funds to another address you own. After that, you can move your old wallet back where it belongs and use the new funds transferred. The redeemed key will not interfere with your normal wallet and you will have your funds.\n", "bitcoind - Running a store through Tor - what are the setup options available?": "\nTry using bitwasp. It seems to provide a lot of features you need. Try it and let us know if it works. \nhttps://github.com/Bit-Wasp/BitWasp\nhttps://bitcointalk.org/index.php?topic=109223.0\n", "bitcoin core - How do I test that blockchain p2p replication is properly, securely exposed to the internet?": "\nIf you already have bitcoin up and running for some time, just open terminal/commandline window and run:\nnetstat -b (Windows)\nnetstat -tnp (Linux)\nIn the Local address column output, note whether there is port 8333 used with any bitcoind connection. If yes, you know that your node is reachable from internet and thus you are fully participating. Otherwise you need to allow connections to port 8333 from outside in your firewall, so that you don't have to depend on other nodes accepting connections. Also, healthy and up to date node is sending/receiving transactions quickly.\nOther concerns, like security, are handled by bitcoind automatically, as it verifies all received data. The bitcoin-qt GUI is working in exactly the same way, I just presume you'd prefer running bitcoind as a background service. \n", "exchanges - Is there an open source bot I can get for BTC-E?": "\nYou can write your own bot in any modern programming language using the BTC-e API. Also MtGox, Bitstamp, Bitcoin-24 and probably more popular exchanges support this.\nThese API's mostly give you the possibility to track the price, the market depth and place orders, making easy for you to implement your own trading bot.\n", "Why is your Bitcoin balance displayed on paper wallets?": "\nThe balance of an address only changes if you send bitcoins into or from it. Paper wallets are usually intended to be swiped only once, so you should not have outgoing transactions while the paper wallet is still valid. You could add coins to it, as a sort of piggy bank, but there are also use cases where the amount will be fixed.\nSo, if the paper wallet is intended to be used with a fixed balance, it can be printed on it for convenience; if not and an amount is printed anyway, it can simply be ignored.\n", "payment - I'm in the uk, I wish to purchase bitcoins, but the process seems to be very convoluted. There has to be an easy way?": "\nProvided there is someone near you who advertises on LocalBitcoins, it's probably the most effortless solution available at the moment.\n", "marketplace - Is there a bitcoin market for CPU time / memory space / disk space?": "\nMaybe not exactly what you are asking for but CoinLab have a mining pool that intends to use the computing power of their members for jobs other than hashing.\nFrom the Bitcoin talk forum topic:\n\nWe\u2019ve identified a number of opportunities to monetize our growing GPU cluster at a higher rate than Bitcoin mining, particularly for NVIDIA cards:  Protein Folding, Computational Finance, and Big Data Analysis, just to name a few.\n\n", "satoshidice - Does Satoshi Dice owe its customers money? How come?": "\nSatoshiDice pays most bets instantly, but for whatever reason sometimes bets get 'stuck'.\nThe issue you're referring to in your question happened during an exceptionally high volume period for SatoshiDice.  They received over 70,000 BTC worth of bets in a 24 hour period, which is much higher than usual.  The high turnover apparently causes issues with paying out in a timely fashion.  This was compounded by a bug which caused too much of SatoshiDice's BTC holdings to be transferred into cold storage.\nAs of this morning there is only one bet that hasn't been paid out.  It was a bet for 0.35 BTC, and it lost.  So to answer your question \"No, they don't currently owe their customers money.  But sometimes they do fall behind for a few days\".\n", "script - Will general non-standard transactions ever be allowed?": "\nThe current development direction (January 2013) is to tighten up the IsStandard() checks even more. For example, we would like all signatures to conform to a very strict, canonical encoding to make life more difficult for potential attackers. \nAllowing more opcodes or opcode patterns (or all opcodes/patterns) to be considered IsStandard() is certainly possible; before doing that I'd like to see a thorough analysis of the possibility for mischief using the current set of opcodes  and a lot of prototyping on the test network (where the IsStandard() check already allows all enabled opcodes).\n", "Electrum exchange rates. Where do they come from and why are they incorrect?": "\nAs of this writing, Electrum retrieves its exchange rate from Intersango. The last sale there must have been abnormally low for the current exchange rate.\n", "hash - How do you perform double-SHA-256 encoding?": "\nYou're hashing the hexadecimal representation of the first hash. You need to hash the actual hash -- the binary data that the hex represents.\nTry this:\n$ echo -n hello |openssl dgst -sha256 -binary |openssl dgst -sha256\n\n", "bitcoind - Digging into debug message: \"socket recv flood control disconnect (x bytes) \"": "\nIn the Bitcoin protocol each message is prefixed with a message header that, among other things, contains the message length (more precisely the payload length). The length field is an unsigned integer 4 byte (or 32 bit) in length. Therefore it is perfectly ok to specify payloads of length 2^32 bytes = 4 GB.\nSince you wouldn't want to download 4 GB just to find out that it was an error in the other sides implementation or the peer was trying to feed you junk on purpose the mainline client added an arbitrary limit to the size of messages it accepts.\nAccording to net.h this limit is 5'000'000 byte or a bit less than 5 megabyte. The message that caused the error and subsequent disconnect is just a little bit over that limit. Maybe you could look up which peer, or even better which client version, caused the error so we can inform the developers about it.\n", "development - Debug.log : How do I analyze an orphaned transaction?": "\nAn orphan transaction is a transaction that consumes a coin whose creating transaction is not known to your client. This has nothing to do with orphan blocks (which are blocks whose parent block is not known, or according to another definition, blocks that are no longer part of the best chain).\nOrphan transactions are not part of a block (they cannot be verified until their parents are known, and only valid transactions are allowed in blocks), and are kept in memory in the client. When their parents become known, and they are found valid, they are moved to the memory pool (which is - as the name suggests - also kept in memory only). From there, they are considered to be included in new blocks (if you're mining). \nThis piece of debug.log tells you that there are 3 transactions received (separate transactions, not part of a block) that reference some inputs that aren't known. Because of this, they are stored in the orphan pool, which grows as a result of that. \"mapsz\" stands for \"map size\" (as the orphans are stored in a map) - the number is just the number of remembered orphans.\n", "development - How can I run bitcoind on test and production networks, at the same time, on the same computer?": "\nYou can run a mainnet and testnet bitcoind next to eachother without problems. They do not share the same database (one will use the testnet3/ subdirectory).\nWhat will conflict is the RPC port, as they will both try to bind to port 8332 for receiving RPC connections. Use -rpcport=N on one of them to use a different port.\n", "How do I properly shut down bitcoind on Windows? I get error: EnvShutdown exception: DB_RUNRECOVERY: Fatal error, run database recovery (-30974)": "\nSend the RPC Stop command:\ncd \"C:\\Program Files (x86)\\Bitcoin\\daemon\"\nbitcoind stop\n\nOutput\nThreadRPCServer method=stop\nFlush(false)\nblkindex.dat refcount=0\nblkindex.dat checkpoint\nThreadSocketHandler exited\nblkindex.dat detach\nThreadMessageHandler exited\nconnection timeout\nThreadOpenConnections exited\nThreadDumpAddress exited\n\nblkindex.dat closed\nDBFlush(false) ended          219780ms\nStopNode()\nFlushed 12513 addresses to peers.dat  280ms\nFlush(true)\nDBFlush(true) ended               0ms\nBitcoin exited\n\n", "tor - How do I register a .bit domain name with Namecoin?": "\nThe algorithm of registering .bit domain is described, for example, on dot-bit wiki.\nIn short:\n\nCreate new domain name with name_new command: ./namecoind name_new d/<name>\nWait 12 or more blocks\nActually register the domain with name_firstupdate, where <rand> is the second (shorter) hexadecimal string returned by name_new, and <json-value> is the domain configuration (similar to DNS record): \n\n./namecoind name_firstupdate d/<name> <rand> '<json-value>'\nThe basic json-string, mapping the domain to the some IP looks like that:\n'{\"ip\":\"1.2.3.4\", \"tor\":\"123456.onion\"}'\n\nMore on domain configuration\n", "wallet - How do I list all of my addresses in namecoind?": "\nnamecoind listreceivedbyaddress 0 true\n\n0 means to include even transactions with no confirmations, true means to show even \"empty\" addresses\n", "Wallet balance zero after restoring wallet.dat": "\nThe balance will return as soon as the client catches up with the network.\n", "terminology - What are colored coins?": "\nColored coins are a method to track the origin of bitcoins, so that a certain set of coins can be set aside and conserved, allowing a party to acknowledge them in various ways. Such coins can be used to represent arbitrary digital tokens, such as stocks, bonds, smart property and so on.\nThe colored coins protocol is decentralized just like Bitcoin, but the current effort to develop an implementation is done under the BitcoinX project (tentative name), which also aims to provide some related services.\nAs this is still under development, you will not find any existing examples.\nYou can read more about it in Overview of colored coins (work in progress).\n", "transactions - How many bitcoins have been sent to Base58-invalid addresses?": "\nThe characters excluded in Base58 are 0OIl. oiL are allowed, making these two valid addresses.\nIt is impossible to send to an invalid address, as Bitcoin transaction scripts actually include raw 160-bit hashes (which by definition have a one-to-one correspondence with valid addresses), not addresses. Bitcoin clients will simply refuse to do anything if an invalid address is given.\nThere is probably no problem with 1Boxo846yTDLHgKM94aYseHBnCjJ4eYbzb. The problem with 1BitcoinEaterAddressDontSendf59kuE is that, given an English dictionary, it has very low Kolmogorov complexity, making it extremely unlikely that anyone has a private key (or even a public key) for it.\nLikewise, 1111111111111111111114oLvT2 is known to correspond to the public key hash 0, which is so simple it is again extremely unlikely anyone has the keys for it.\n", "development - OSX Vanitygen error: pattern.c:32:10: fatal error: 'pcre.h' file not found": "\nI would recommend using Homebrew or MacPorts to manage this dependency. \nThe Homebrew package is simply pcre or pcre++.\nbrew install pcre pcre++\n\nThe MacPorts packages are pcre and pcrexx.\nsudo port install pcre pcrexx\n\n", "Do vanity addresses lower the security of my key? (reduced complexity)": "\nNo they do not.\nA vanity adress is only trying to pattern match a specific part of an address. The complexity remains the same. \nTo generate the vanity address it usually takes millions of attempts per second to find a public key which matches your pattern. This is done by cycling through private keys and and checking the corresponding public key.\nIf an attacked was to do the same thing then they would still need to cycle through every combination of your pattern aswell, which is just as extensive.\n", "development - How can I test and verify a vanity key before I send coins to it?": "\nIf you don't want to do it online, you can try to import the private key into Bitcoin-Qt then see if the matching public key is the one you expected. \n", "transactions - Verifying transation inputs": "\nActually, that is exactly what happens, and it is the reason why synchronizing the block chain is so slow: we download all blocks, with all transaction history in it, and build and maintain an index that states which transaction output was spent or not, and even where it was spent.\nAs of 0.8, the reference client will switch to a new model where no such index is maintained anymore. Instead, it will maintain a copy of the set of transactions, but only with their not-yet-spent outputs, which is much smaller than the full data (around 150 MiB as of writing, december 10, 2012).\n", "blockchain - How can I tell if someone is trying to hack port 8333?": "\nYou are looking for ways to improve the client's protections against flaws? \nHere's a list of its current protections:\n\nhttp://en.bitcoin.it/wiki/Weaknesses#Denial_of_Service_.28DoS.29_attacks\n\n", "Need a random seed for vanitygen; where can I obtain one?": "\nIt uses RAND_load_file function from OpenSSL, which accepts any binary input - random bytes. Under Linux and OSX the /dev/random file can be used, I don't know  equivalent under Windows. However, OpenSSL uses /dev/random by default, so there is no improvement using it explicitly. \nOnly scenario might be when you need faster random numbers generator, as /dev/random is quite slow and you start vanitygen very often. Then you can for example use /dev/urandom (but in this case you expose yourself to small but perhaps exploitable possibility that the seeds for generated addresses will be related). Certified hardware random numbers generators would be preferred in this case (some recent Intel and VIA CPUs have one).\n", "How is it possible that transactions can be added to a block currently being mined?": "\nYou're thinking that mining a block is a single long computing process, like computing the trillionth digit of pi or something like that. This is wrong. Each attempt at solving a block takes almost no time at all, and each attempt is independent of the others. Miners make many attempts every second. Each attempt has a very small chance of solving the block. It's a lottery, not a race. Modifying the block between attempts isn't a problem.\nAnother common misconception related to this is that everyone is working on the same block. This is also false. Every miner works on a different block.\n", "mtgox - How to withdraw dollars to Dwolla from Mt Gox": "\nApparently there is no way to know if a person has a pending Dwolla transfer for funds exiting Mt Gox.  The most confusing part about this is the pending status remains pending in Mt Gox for at least a day after Dwolla shows the transaction as having completed.\nSo I recommend waiting an extra day after Dwolla says the funds have transferred.  Otherwise the transfer will be canceled with no notification from Mt Gox or anyone else, and no reason is given for the transfer cancellation.  In fact, the only indication that the transfer is canceled when this happens is that the balance returns to the pre-transfer balance, and the funds never show up in Dwolla.\nTo Mt Gox's credit, Mt Gox did respond to my support requests.  However, getting a satisfactory response took almost two weeks of asking combined with plenty of trial and error with the Mt Gox withdraw system.\n", "bitcoin core accounts - Are \"move\" operations logged?": "\nYes, all move operations add an accounting entry to the wallet. If listtransactions doesn't show the move, this is most likely to be a problem with listtransactions.\n", "bitcoind - Is my p2p server set up correctly? When will I see inbound connections on 8333?": "\nQuickly checking with telnet says you're all set up:\n$ telnet 23.23.246.5 8333\nTrying 23.23.246.5...\nConnected to 23.23.246.5.\nEscape character is '^]'.\n^]\ntelnet> quit\nConnection closed.\n\nNext checking if you appear in sipa's DNS Seed:\n$ curl -s http://bitcoin.sipa.be/seeds.txt | grep 23.23.246.5\n23.23.246.5:8333        100.00% 100.00% 100.00% 94.46%  51.36%  215073  60002 \"/Satoshi:0.7.1/\"\n\nSince Sipa checks the version you can be sure that your node responds correctly to handshake requests, i.e., connections can be established. The same goes for bitcoin testnet.\nBitcoind is not listening on port 80. That's the HTTP port, and from the banner it appears that it is an IIS7 web server running on that port:\nServer: Microsoft-IIS/7.5\nX-Powered-By: ASP.NET\n\nAs for 92.243.23.21, that is indeed an IRC server (part of LFnet) which is used by bitcoind to bootstrap its contact with the P2P network. bitcoind will connect to the server and join the channel #bitcoin. The usernames of participants in that channel are encoded IP addresses that bitcoind will then attempt to contact. So nothing to bother.\nFinally the connections all seem to check out. They are all outgoing connections to the P2P network. They boil down to:\n\n2 6667 outgoing to the IRC bootstrapping servers (giraffe.heliacal.net and irc.lfnet.org)\n8 8333 outgoing to other bitcoin nodes\n8 8334 outgoing to other namecoin nodes\n6 18333 outgoing to bitcoin (testnet)\n\nCurrently I am unable to connect to port 8334 which would indicate that your namecoin is not running.\n", "exchanges - How do I withdraw my bitcoins and spend them?": "\nTrade them for USD, GBP or EUR on a trading site such as https://mtgox.com and transfer it to your bank account.\nOr you can spend them directly at any other business that accepts bitcoins as payment.\n", "wallet - How to remove an address used for signing from the key pool?": "\nI am not a developer, but I believe that once you assign or create the address in a new account (you can name the account \"Signing Key\"), and then don't touch the account, this address will never be reused. Except only after there are some bitcoins sent to it.\n", "Accesing bitcoind through terminal on mac": "\nPer Gavin Andresen's answer on the first post to which you linked, Bitcoin-Qt for Mac does not ship with bitcoind. However, you can still access it with curl or wget, or using the provided Python wrapper. See the post for more.\nIf you are adamant about using bitcoind itself, your best bet is to compile your own bitcoind using my instructions or using the instructions provided in the source distribution of bitcoin.\n", "exchanges - Can I use bitcoin as a means of bypassing Argentine Dollar restrictions?": "\nPut up an ad on LocalBitcoins.com.  You possibly might find a tourist arriving with bitcoins who is looking for Argentine pesos.  Or perhaps you'll find a local Bitcoin miner who is simply looking to cash out some bitcoins for your pesos.\nAre there any goods that you could pay for with your pesos and then have the goods shipped to a buyer who pays using bitcoins?\nYou might laugh, but you might find buyers for Argentine pesos sent via the mail.  If there's a market for the Zimbabwe 100 trillion dollar note, there's probably buyers wanting a set of your paper banknotes (for novelty, or maybe even speculation -- who knows.\nAgain, travelers are a resource for you.  For instance, even while visiting a foreign country a traveler might have family or friend back home that would be able to deposit cash for the purpose of buying bitcoins.  The typical traveler might not need this, but if for instance, the traveler wants to buy a larger valued item and the seller only accepts cash then the traveler is in a bind.  You are simply helping the traveler convert paper money (e.g., USDs) in one country for a different paper money (ARS) in another.\nYou might also follow the Spanish board on BitcoinTalk forum to find others who might wish to trade by selling bitcoins to you.  Or find some Argentine merchants who accept bitcoin (like this, this or this) and see if they have coins and are looking to trade.   Or find a merchant that does a lot of export and convince that merchant to begin accepting bitcoins.  When they do, you've found your supply of coins.\n", "What's the probability of vanity pools causing RIPEMD-160 (public key hash) collisions?": "\nBitcoin addresses are 160-bit numbers. Hence, randomly finding a private key corresponding to an address takes on average 2^160 attempts.\nIf 4 billion computers work on cracking a key doing 1 billion calculations per second for 15 billion years, they will find a total of 1.8*10^36 keys, so their chance to hit a right one is\n(1.8*10^36)/(2^160) = 1.23 * 10^(-12)\nwhich is one in a trillion. And this is only if they intentionally try to crack keys. If they just run normal vanity calculations, it doesn't matter how many keys they go over, as they'll eventually report just one key.\nIn the future (when the above figures may be slightly less ridicuolous), we might move on to longer key hashes.\nSo no, there's no risk.\n", "security - What happened to my coins, hacked?": "\nDon't worry, you've not been hacked. This is just one of your wallet's change addresses:\nhttps://en.bitcoin.it/wiki/Change\nHow does change work in a bitcoin transaction?\nWhy does Bitcoin send the \"change\" to a different address?\n", "development - What OpenCL video cards (or FPGAs) are best for multiplication?": "\nThe simple answer is to compare the results of 2 sites for an answer.  Both are coin mining hardware comparison pages, one for script, the other is for sha256.  Unfortunately, there is little information for the older Nvidia cards on the scrypt mining.\n\nSHA-256: https://en.bitcoin.it/wiki/Mining_hardware_comparison\nScrypt: http://litecoin.info/Mining_Hardware_Comparison\n\nthey also include a few other CPUs and Arm processors as well as FPGAs.  With FPGA multiplication and parallel addition, the more core segments, the more likely it can do it and do it fast with out having to buffer a sum then use the sum as input back in to the equation.  Spartan 6 FPGAs are a good example of fast units, and depending which one, possibly able to do multiplication as a low level logic function rather than use a math processor due to the logic cells available.\nAs far as GPU features go, the newer, faster and the more shader cores ( or equivalent ) the better at math the card will be.\n", "What would happen if two public keys had the same Base58 hash?": "\nThen both of the people could spend the same coins if they were sent to their Address, rather than public key. If they instead received the money to the public keys, they couldn't spend eachother's coins.\nAll in all, the most important thing that would happen is that they would show RIPEMD-160 collision, which would most likely be the first one ever. A pretty improbable sight.\n", "How do I post in BitcoinTalk?": "\nI think rules have changed. Below is the latest rules from(https://bitcointalk.org/index.php?topic=15958.0):\n\nDue to a mass of trolling, only established posters are able to post\n  in non-newbie sections. You are considered \"established\" if you have\n  made one post and then waited 4 hours. This post must be substantial:\n  at least several sentences.\nIf you have really good posts, you can post a request for preemptive\n  whitelisting in the appropriate topic.\nAlso:\n  - Newbies cannot upload their own avatars.\n  - You must have made one post in order to send PMs.\n  - You need 10 posts to put a link in your signature.\nNote that it may take up to 10 minutes for your PM or posting\n  permissions to be granted. (The system automatically checks every 10\n  minutes and promotes people as appropriate.)\n\n", "security - What happens if my wallet gets \"hacked\" and my BTC is stolen?": "\nAll BTC transfers are final. If a hacker moved your BTC elsewhere, you can't get it back.\nYou have to keep your funds safe. See https://en.bitcoin.it/wiki/Securing_your_wallet.\n", "transactions - Tracking payments sent to scammers, and what they do with the money": "\nThere was a project that seems to no longer be active called BlockViewer.\nThe problem, of course, is Bitcoin's pseudonymous nature.  Beginning with the first transfer the trail can be essentially be blurred and the coins re-enter circulation through legitimate transactions with innocent parties.  Just like what happens when scammers use cash as well.\n", "bitcoind - What is the difference between the rpc port 8332 and port 8333?": "\nThe Bitcoin.org client will try to communicate to other nodes via port 8333 and those communications follow the Bitcoin protocol.   If an explicit connection is given (IP address and port) the port setting can be overridden to use any port.\nThe bitcoin.org client can be configured to accept JSON-RPC communications, and when that is enabled will, by default, be on port 8332.  Earlier versions of Bitcoin Core permitted this to be secured with SSL communications using the same port or a different port, however that capability has since been removed.  \n", "vanity address - How do I optimize my usage of oclvanitygen?": "\n1) Make sure the Vanitygen you use has the AMD patch (if you have an AMD GPU, Vanitygen Plus has it)\n2) Update your GPU drivers (can't be done on Mac)\n3) Play with each of these constants. Their effect is different among the GPUs and drivers, and you may never know if they can have a (relatively) significant positive effect performance.\n-w <worksize> Set work items per thread in a work unit\n-t <threads>  Set target thread count per multiprocessor\n-g <x>x<y>    Set grid size\n-b <invsize>  Set modular inverse ops per thread\n\n", "transactions - Can I buy or sell with bitcoins offline?": "\nTake a look at Bitcoin apps available for your mobile phone. Several are recommended in answers to question Can I send bitcoins with my mobile phone?. Look for apps that offer some kind of offline mode.\nFor instance, the highly recommended Bitcoin Wallet app for Android mentions in its feature list, \"Enter transactions while offline, will be executed when online\".\n", "client - What is main.cpp for in bitcoind?": "\nIt just contains an apparently random collection of functions used by the program. It also declares some global structures such as the main lock, the transaction pool, orphan block tracking, and so on. It contains high-level block and transaction functions. Ironically, it does not contain the actual main function -- that's in init.cpp.\n", "development - How do I generate coins on testnet? CPU, GPU, FPGA? Are there pools?": "\nTestnet is designed to test Bitcoin software - including parts that have to do with finding blocks. As such, it should be easy for developers to generate testnet coins.\nBecause of this, it will be easy to solo mine on a CPU to generate them, and you should not use anything heavier than that because you would ruin it for everyone else.\nIt is also not designed to test pools, by the way. If you need a pool for whatever you're doing you can do that (but don't bring too much hashpower to it), but if it's the pool itself you're testing, do it on the main net.\n", "development - Does FIPS 140-2 crypto certification matter for Bitcoin?": "\nYou should basically never choose FIPS-140 unless you have no choice. FIPS-140 compliance is provided primarily for people who must comply with FIPS-140 for regulatory or policy reasons.\nNote that that's not to say FIPS-140 validation is bad. It's great. If it finds bugs or problems, that's a pure win. If you have a choice between an implementation that has been FIPS validated and one that has not, the former is the better choice. But that has nothing to do with whether you enable FIPS-140 modes.\nYour implementation has been FIPS validated. Don't brain damage it.\n", "private key - How are fractions of bitcoin implemented and spent?": "\nThe analogy of \"coins\" as individual objects that can be handled is misleading. The atomic unit in Bitcoin is a satoshi, but satoshis are not handled individually, rather in each transaction it is specified how many satoshis (as an integer variable) move from where to where. The total number of satoshis in the input must be at least as great as in the output, and all the inputs must be digitally signed by the owners.\nThe private key is what allows you to prove ownership of given outputs. The way it is used for signatures doesn't really depend on how many different outputs you have and what is the value of each.\nThere isn't even a meaningful concept of \"a bitcoin\" in the software, a bitcoin is just shorthand for 100,000,000 satoshis.\n", "When does Blockchain.info show 127.0.0.1 as \"first relayed by\" for a transaction?": "\nYes, It means blockchain.info broadcast the transaction itself. So it was either created using My Wallet, the merchant API or submitted through /pushtx. A live list can be seen here http://blockchain.info/ip-address/127.0.0.1\nMixer transactions are broadcast through separate nodes.\n", "bitcoin core - What does the debug output look like when a new block is found?": "\nI got the following output when I set gen=1 on test net:\nBitcoinMiner:\nproof-of-work found  \n  hash: 00000000502cfb2fe549f1d672ff60cab179b8c91c95fe6d4d9dce490a8e00e8  \ntarget: 00000000ffff0000000000000000000000000000000000000000000000000000\nCBlock(hash=00000000502cfb2fe549, ver=2, hashPrevBlock=000000008efd2a2075c9, hashMerkleRoot=cae3a8d5d1, nTime=1355478291, nBits=1d00ffff, nNonce=119890730, vtx=1)\n  CTransaction(hash=cae3a8d5d1, ver=1, vin.size=1, vout.size=1, nLockTime=0)\n    CTxIn(COutPoint(0000000000, 4294967295), coinbase 03b39b00010e062f503253482f)\n    CTxOut(nValue=50.00000000, scriptPubKey=031e72826fe94305e81a34e34ea316)\n  vMerkleTree: cae3a8d5d1 \ngenerated 50.00\nkeypool keep 6\nAddToWallet cae3a8d5d1  new\nNotifyTransactionChanged cae3a8d5d1feb8e058ddf4a30d021a9f1f85775b474456f4d6b595ffd832b7f3 status=0\nupdateWallet cae3a8d5d1feb8e058ddf4a30d021a9f1f85775b474456f4d6b595ffd832b7f3 0\n   inWallet=1 inModel=0 Index=0-0 showTransaction=0 derivedStatus=0\nSetBestChain: new best=00000000502cfb2fe549  height=39859  work=4384611213659391  date=12/14/2012 09:44:51\n\nProcessBlock: ACCEPTED\nCreateNewBlock(): total size 1000\nRunning BitcoinMiner with 1 transactions in block (189 bytes)\nCreateNewBlock(): total size 1000\nRunning BitcoinMiner with 1 transactions in block (189 bytes)\nCreateNewBlock(): total size 1000\nRunning BitcoinMiner with 1 transactions in block (189 bytes)\nCreateNewBlock(): total size 1000\nRunning BitcoinMiner with 1 transactions in block (189 bytes)\nkeypool added key 110, size=101\nconnection timeout\nkeypool reserve 10\nCreateNewBlock(): total size 1000\nRunning BitcoinMiner with 1 transactions in block (189 bytes)\nCreateNewBlock(): total size 1000\nRunning BitcoinMiner with 1 transactions in block (189 bytes)\nCreateNewBlock(): total size 1000\nRunning BitcoinMiner with 1 transactions in block (189 bytes)\nCreateNewBlock(): total size 1000\nRunning BitcoinMiner with 1 transactions in block (189 bytes)\nreceived getdata for: block 00000000502cfb2fe549\nreceived getdata for: block 00000000502cfb2fe549\nreceived getdata for: block 00000000502cfb2fe549\nreceived getdata for: block 00000000502cfb2fe549\nreceived getdata for: block 00000000502cfb2fe549\nreceived getdata for: block 00000000502cfb2fe549\nreceived getdata for: block 00000000502cfb2fe549\nreceived getdata for: block 00000000502cfb2fe549\nreceived getdata for: block 00000000502cfb2fe549\nreceived getdata for: block 00000000502cfb2fe549\n\n", "blockchain - Transactions with a wait time (using nLockTime)": "\nSolved. You can prepare transactions with a wait time and the standard client will accept them. \nYou can check some details in:\nhttps://bitcointalk.org/index.php?topic=131443.0\nEssentially, I have been able to create a raw transaction https://en.bitcoin.it/wiki/Raw_Transactions using bitcoind. Then, before signing, I could manually replace the bytes for the sequence number and the locktime. I had some hard time with locktime. First you set the UNIX timestamp you want, then convert to hex, reverse the bytes (little endian) and replace the the last bytes of the hex transaction. https://en.bitcoin.it/wiki/Protocol_specification#tx tells you which are the relevant bytes. You can later sign the new transaction and send it.  \nI've been using the guide in:\nhttps://people.xiph.org/~greg/signdemo.txt\nI did all in the testnet. In my first attempts I wasn't careful with my change and ended up spending all my wallet in fees. You should be careful if you try this with real bitcoins.\n", "terminology - Is there a proposed name for 1e-4 bitcoins?": "\nThere is a prefix for 10000, myria, though it is not part of the SI standard and has effectively been deprecated.  But this means that it is ripe for reuse.  So a myriasatoshi (myria or myrisat for short, I guess) would be 10-4 bitcoins.\n", "vanity address - Why does vanitygen ban certain letters on testnet?": "\nThe rules are the same, but the available range is different. In the testnet the address prefix is 111 (https://en.bitcoin.it/wiki/List_of_address_prefixes).\nTo deduce the address you write in base58 the prefix concatenated with a 160 bit (20 bytes) hash of the public address and a checksum of 4 bytes (https://en.bitcoin.it/wiki/Technical_background_of_Bitcoin_addresses). This makes a total of 25 bytes. \nWith a 111 prefix you have all the numbers between 111*2^(24*8) and 112*2^(24*8)-1. In binary form you have values from\n1101111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\nto\n1101111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111\nwhich is 111 (in binary 1101111) and all the possible combinations of the hash and checksum values. \nIf you write the numbers from 111*2^(24*8) to 112*2^(24*8)-1 in base58 encoding (https://en.bitcoin.it/wiki/Base58Check_encoding) you have the range from:\nmfWxJ45yp2SFn7UciZyNpvDKrzbhuzkU7H \nto\nn4rZHAPGXCu8bYchjzJhK3V7VVredELJRc\nAll your proposed addresses are below the first possible one.\n", "security - How does Bitcoin protect itself from invalid peers from being broadcasted?": "\nThe client connects to peers in its database randomly (?) so even if given a set of IPs of peers in which all IPs are invalid (connection fails), the client will only be slightly disrupted by this.\nA node with a lot of invalid IPs in its list of peers may take longer to find a peer that it can connect to, but at the same time that lack of connectivity prevents it from receiving any new transactions from the network as well.  So there's no increased risk of accepting a transaction that ends up being a double spnd.\nThis receipt of non-usable IPs can cause this specific node to not get a new block in a timely manner, but because nodes remain connected most of the time there isn't a system-wide issue just because some of the nodes remain disconnected longer than they should when switching to a new node.\nWhen the node does come across a peer IP that it cannot connect to it will ban the node and not attempt to connect to it again for at least 24 hours.\n", "What is the difference (or relation) between a Bitcoin \"Block\" and a GPU workunit called a \"Block\"": "\nNo, these two terms are completely unrelated.\nBitcoin block is a record of some or all of the most recent Bitcoin transactions that have not yet been recorded in any prior blocks.\nGPU block is just an unit of organization of threads running in parallel. The threads running on GPU are organized in blocks, and threads belonging to same block have effective means of interacting with each other. The size of single block and number of blocks affect application performance, and optimal parameters differ between different hardware. Surprisingly, while most GPU miners are written in OpenCL and not in CUDA, the 'block' term comes from CUDA and OpenCL specs use 'workitem' to refer to this concept.\n", "mining pools - Example accepted getwork function input and output?": "\nOn testnet I get the following dump:\nMiner -> bitcoind\nPOST / HTTP/1.1\nAuthorization: Basic Y2RlY2tlcjphYmMxMjM=\nHost: localhost:18332\nAccept: */*\nAccept-Encoding: deflate, gzip\nContent-type: application/json\nX-Mining-Extensions: longpoll midstate rollntime submitold\nX-Mining-Hashrate: 583000000\nContent-Length: 45\nUser-Agent: cgminer 2.8.1\n\n{\"method\": \"getwork\", \"params\": [], \"id\":0}\n\nResponse\nHTTP/1.1 200 OK\nDate: Fri, 01 Feb 2013 20:40:06 +0000\nConnection: keep-alive\nContent-Length: 592\nContent-Type: application/json\nServer: bitcoin-json-rpc/v0.7.2.0-g32a928e-beta\n\n{\"result\":{\"midstate\":\"d330cdcb6296c8befe66dc38ca10589aa54cb364bf2f174aea7c9329263841f9\",\"data\":\"00000002b15704f4ecae05d077e54f6ec36da7f20189ef73b77603225ae56d2b00000000bcf59695a4e35a2f7535e1a86b306a3b08c212bf0b833764018fe39f01919381510c28111c0e8a3700000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000080020000\",\"hash1\":\"00000000000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000010000\",\"target\":\"00000000000000000000000000000000000000000000000000378a0e00000000\"},\"error\":null,\"id\":0}\n\nReporting successful blockwith diff 18:\nPOST / HTTP/1.1\nAuthorization: Basic Y2RlY2tlcjphYmMxMjM=\nHost: localhost:18332\nAccept: */*\nAccept-Encoding: deflate, gzip\nContent-type: application/json\nX-Mining-Extensions: longpoll midstate rollntime submitold\nX-Mining-Hashrate: 661000000\nContent-Length: 305\nUser-Agent: cgminer 2.8.1\n\n{\"method\": \"getwork\", \"params\": [ \"00000002b15704f4ecae05d077e54f6ec36da7f20189ef73b77603225ae56d2b00000000b052cbbdeed2489ccb13a526b77fadceef4caf7d3bb82a9eb0b69ebb90f9f5a7510c27fd1c0e8a37fa531338000000800000000000000000000000000000000000000000000000000000000000000000000000000000000080020000\" ], \"id\":1}\n\nI hope I didn't mix the requests.\n", "development - In ListReceivedByAddress, what is the meaning of Confirmations if the address is reused?": "\n\nIf the address is reused for more than one transaction, what is the expected value of \"confirmations\"?\n\nQuote from bitcoin wiki:\n\"confirmations\" : number of confirmations of the most recent transaction included\n\nAlso, I think you might want to change the value of minconf that you pass to listrecievedbyaddress if you're concerned about knowing how many confirmations a transaction has.\n\nShould there be an entry listing how many transactions were sent to that address?\n\nWhy would you use that though?\n", "security - Should a JSON-RPC user be required to use a password when backing up the wallet?": "\nThe JSON-RPC was never intended to be open to the public, hence the required rpcuser and rpcpassword. For added security it should also be configured to either listen only to the loopback interface or the allowed IPs limited to a few trusted sources.\nThe wallet password is used to access the encrypted private keys, that's the reason everything involving either adding new private keys or signing with the private keys requires the wallet to be unlocked.\nbackupwallet exports the keys in their encrypted form and therefore does not require the passphrase.\nIf you have to allow JSON-RPC access to untrusted users, put a filter in front of it.\n", "bitcoind - How does an encrypted wallet persist used keys from \"getnewaddress\" and the keypool after a restart?": "\nYou can't call it an infinite number of times. In fact, with default settings, the 101st call will fail.\nWhile the private keys that control the bitcoins are encrypted, the addresses corresponding to those keys are not.\n", "development - ListAccounts JSON array data isn't consistently formatted (compared to ListReceivedByAccount)": "\nJSON data structure supports lists (arrays).\n\nhttp://en.wikipedia.org/wiki/JSON\n\nIn the first API command (ListAccounts) the result contents is an object which contains a string.  Inside this string is a set of data records, each of which is a key/value item.  \nIn the second (ListReceivedByAccount) the result contents is an array of objects, each of which holds account data.\nThat does appear inconsistent, where perhaps the first call should have returned an array as well.\nHowever a rule of thumb is that existing APIs should not change.  They can be deprecated and replaced but a call is expected to behave in a consistent manner.  \nThe Bitcoin client is an open source project and thus an issue ticket for this inconsistency can be opened and a pull request with the source for a new API call submitted.  Whether such an issue is merged into the client depends on a number of factors, including severity of problem.\n", "blockchain - Is there a place or tool to monitor all addresses for unmoved coins?": "\nIn aggregate, this is shown in BitcoinDays Destroyed (e.g., unspent for one year or more).\nThis can be done with some degree of effort using the Bitcoin API.\nv0.7 getrawtransaction gives you access to transactions even those not in your wallet.\n\nhttp://en.bitcoin.it/wiki/Raw_Transactions\n\nThere are other tools that you can use to build this capability as well.\n\nlibBitcoin\nArmory (see Extras)\nBitcoin ABE \n\n", "mtgox - What happens if you create and lose an Mt. Gox redeemable code?": "\nThe code appears in your account history.  If it hasn't been redeemed, it also appears here:\nFunding Options -> Redeem Codes\nIt also has a Cancel if you don't wish to use it (it simply redeems it to your own account).\n", "development - How do I call JSON RPC API using C#?": "\nI use the Newtonsoft.Json.Linq library as shown below to get the data.  Soon, I'll be posting Strongly typed C# client libraries at http://www.coinapi.net \nThe main trick to getting the JSON error code is to call GetWebResponse() again in the catch method.  Then return and parse the data.  I've debated about including the WebException itself in the return code, but that may require too many changes. If anyone has ideas I'll be glad to take them.\n        var ret = InvokeMethod(\"getblockhash\", index);\n\nHere is the definition of InvokeMethod\n    public JObject InvokeMethod(string a_sMethod, params object[] a_params)\n    {\n        HttpWebRequest webRequest = (HttpWebRequest)WebRequest.Create(Url);\n        webRequest.Credentials = Credentials;\n\n        webRequest.ContentType = \"application/json-rpc\";\n        webRequest.Method = \"POST\";\n\n        JObject joe = new JObject();\n        joe[\"jsonrpc\"] = \"1.0\";\n        joe[\"id\"] = \"1\";\n        joe[\"method\"] = a_sMethod;\n\n        if (a_params != null)\n        {\n            if (a_params.Length > 0)\n            {\n                JArray props = new JArray();\n                foreach (var p in a_params)\n                {\n                    props.Add(p);\n                }\n                joe.Add(new JProperty(\"params\", props));\n            }\n        }\n\n        string s = JsonConvert.SerializeObject(joe);\n        // serialize json for the request\n        byte[] byteArray = Encoding.UTF8.GetBytes(s);\n        webRequest.ContentLength = byteArray.Length;\n\n        try\n        {\n            using (Stream dataStream = webRequest.GetRequestStream())\n            {\n                dataStream.Write(byteArray, 0, byteArray.Length);\n            }\n        }\n        catch (WebException we)\n        {\n            //inner exception is socket\n            //{\"A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond 23.23.246.5:8332\"}\n            throw;\n        }\n        WebResponse webResponse = null;\n        try\n        {\n            using (webResponse = webRequest.GetResponse())\n            {\n                using (Stream str = webResponse.GetResponseStream())\n                {\n                    using (StreamReader sr = new StreamReader(str))\n                    {\n                        return JsonConvert.DeserializeObject<JObject>(sr.ReadToEnd());\n                    }\n                }\n            }\n        }\n        catch (WebException webex)\n        {\n\n            using (Stream str = webex.Response.GetResponseStream())\n            {\n                using (StreamReader sr = new StreamReader(str))\n                {\n                    var tempRet =  JsonConvert.DeserializeObject<JObject>(sr.ReadToEnd());\n                    return tempRet;\n                }\n            }\n\n        } \n        catch (Exception)\n        {\n\n            throw;\n        }\n    }\n\n", "development - How do we prevent the Test network from being misrepresented as production?": "\nThe main precaution against such practices should be the main client clearly stating that it is operating on testnet and perhaps with addition \"for testing purposes only. Get free testing bitcoins at testnet faucet\". This would protect some buyers, but not all (those that would be perhaps scammed into using a testnet eWallet or something).\nAs for why one shouldn't assign any value to testnet bitcoins, I would argue that the main reason is that the testnet has a tendency of being reset from the very beginning. Currently we are at testnet 3 as far as I remember, and there is nothing stopping the development team from starting a new testnet without much warning.\nAll in all, if people can be convinced to buy testnet bitcoins, there is little one can do.\n", "development - How does ImportPrivateKey get the Address if I don't explicitly send it?": "\nYou ought to ask this question on CryptoSE, as the problem is not Bitcoin-specific. I've even done that for you.\nIn short:\n\nThe public key is QA=dAG where G is the base point on the curve defined in the publicly agreed upon parameters.\n\nAnd you can find the Bitcoin curve (secp256k1) parameters in the wiki.\n", "Bitcoin QT wallet doesn't sync": "\nDid you include the transaction fee? If you don't, most miners won't accept it. The same thing happened to me. \nAlso, you need to wait until it syncs. You can check if it's been included by going to blockchain.info/address/*the address to which you sent it*. If it worked, the transaction should be listed there.\n", "protocol - I'm developing on the Test network. Are there any \"rules\" or communication methods I should adopt?": "\nTestnet code has been modified to lessen the impact of fluctuations of hashing power mining against testnet:\n\nhttp://github.com/bitcoin/bitcoin/pull/686\n\nIf you wish to test against your own testnet, or think you might interfere with others needlessly, then Testnet-In-A-Box is for you.\nNow this doesn't mean you shouldn't use Testnet -- especially if you find something you think might be disruptive to bitcoin.  Feel free to verify your suspicions on Testnet even if it slams it hard.  That's why it exists.\n", "development - Paying for testnet coins?": "\nI have recently created a TestNet Faucet. It is available on\nhttp://tpfaucet.appspot.com/\nI hope this remedies the situation\nTo answer your question - while there is nothing stopping people from charging for TestNet coins, I think they should be freely available to anyone for testing. It lets newcomers get a feel for what Bitcoin is without risking their money. I hope that a few Bitcoin developers (or even the Bitcoin Foundation) will provide TestNet Bitcoins for free as long as the Bitcoin project is used.\n", "development - How do I Base58 Checked encode / decode an address in C#? What does \"normalize leading zeros\" mean?": "\nTo normalize leading zeros is documented in this link, namely this text at the bottom:\n\nIn a standard base conversion, the 0x00 byte on the left would be\n  irrelevant (like writing 052 instead of 52) but in the BTC network the\n  left most zero chars are carried through the conversion. So for every\n  0x00 byte on the left end of the binary address, we will attach one\n  '1' character to the Base58 address.  This is why the main-network\n  addresses all start with 1.\n\nThe following code will address the GC issue with over-allocation and discarding of the String type, however it  does not properly handle the leading zero bytes.  I either need to find a list of expected lengths per type or some other approach.\n    public static String sBase58Alphabet = \"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\";\n    public static String EncodeBase58(BigInteger numberToShorten)\n    {\n        // WARNING: Beware of bignumber implementations that clip leading 0x00 bytes, or prepend extra 0x00 \n        // bytes to indicate sign - your code must handle these cases properly or else you may generate valid-looking\n        // addresses which can be sent to, but cannot be spent from - which would lead to the permanent loss of coins.)\n\n\n        // Base58Check encoding is also used for encoding private keys in the Wallet Import Format. This is formed exactly\n        // the same as a Bitcoin address, except that 0x80 is used for the version/application byte, and the payload is 32 bytes\n        // instead of 20 (a private key in Bitcoin is a single 32-byte unsigned big-endian integer). Such encodings will always\n        // yield a 51-character string that starts with '5', or more specifically, either '5H', '5J', or '5K'.   https://en.bitcoin.it/wiki/Base58Check_encoding\n        const int sizeWalletImportFormat = 51;\n\n        char[] result = new char[33];\n\n        Int32 iAlphabetLength = sBase58Alphabet.Length;\n        BigInteger iAlphabetLength2 = BigInteger.Parse(iAlphabetLength.ToString());\n\n        int i = 0;\n        while (numberToShorten >= 0 && result.Length > i)\n        {\n            var lNumberRemainder = BigInteger.Remainder(numberToShorten, iAlphabetLength2);\n            numberToShorten = numberToShorten / iAlphabetLength;\n           result[result.Length - 1- i] = sBase58Alphabet[(int)lNumberRemainder] ;\n           i++;\n        }\n\n        return new string(result);\n    }\n\n", "passphrase - Unlocking wallet, recovering password": "\nIf you forgot your encrypted wallet's password, there is nothing you can do.\nKeep it anyway, just in case you remember it someday.\nOf course, if you have a backup, you can use that one.\n", "blockchain - Is the Testnet stable?": "\nPosting my comment as an answer\nMake sure your client is up to date... it's possible your wallet in the old testnet got coins that is separate than the more modern testnet3.\nEach version of bitcoind has the possibility of being associated with a different test network.  It would be interesting to see if there was a matrix listing releases against test networks (and why the new network was created).\nI assume that it's possible to launch older versions of bitcoind and see each testnet independently of each other, but that independence means that there is no way to transfer coins from one network to the other.  (It is test after all, and hopefully one didn't pay for those coins)\n", "How is difficulty calculated?": "\nThe Bitcoin difficulty started at 1 (and can never go below that). Then for every 2016 blocks that are found, the timestamps of the blocks are compared to find out how much time it took to find 2016 blocks, call it T. We want 2016 blocks to take 2 weeks, so if T is different, we multiply the difficulty by (2 weeks / T) - this way, if the hashrate continues the way it was, it will now take 2 weeks to find 2016 blocks.\nFor example, if it took only 10 days it means difficulty is too low and thus will be increased by 40%.\nThe difficulty can increase or decrease depending on whether it took less or more than 2 weeks to find 2016 blocks. Generally, the difficulty will decrease after the network hashrate drops.\nIf the correction factor is greater than 4 (or less than 1/4), then 4 or 1/4 are used instead, to prevent the change to be too abrupt.\nThere is a bug in the implementation, due to which the calculation is based on the time to find the last 2015 blocks rather than 2016. Fixing it would require a hard fork and is thus deferred for now.\nIt is possible to give a rough estimate for the next difficulty change, based on the time to find the recent blocks. Nobody can make longer-term predictions for the future difficulty reliably, but anyone is free to speculate based on exchange rate trends, Moore's law and other hardware advances.\n", "hash - bitcoind getmininginfo says hashespersec is 0": "\nThe hashespersec field reports the speed of the built-in miner. It does not (and can't accurately) report the hashing power connected to it via the getwork or getblocktemplate interfaces.\n", "Are there any C# Bitcoin libraries and/or mining pool software packages?": "\nWelcome\n1) Here's an old project to start from\n2) Here is the Bitcoin.it wiki entry on pool servers, including the derelict PoolServerJ\nMining is changing radically right now, with new hardware technology (ASICs) soon to be delivered which will likely increase the network hashrate by some orders of magnitude in the coming months. As a result, the protocols are changing to accommodate this increase, namely to stratum and getblocktemplate, if I recall correctly. \nGood luck!\n", "block - Does the synced blockchain always grow in size?": "\nThe Bitcoin.org client v0.7 and lower will continuously increase in size about once every ten minutes, on average.\nBlockchain.info provides a chart showing the size of the data (actual disk consumption will be slightly larger even.)\nThe Bitcoin.org client v0.8, being developed now, dramatically changes how it stores and accesses data that will reduce the amount of disk storage space to some degree but also will provide a dramatic increase in performance.\n", "How to deal with the wallets with very small amount of Bitcoins?": "\nTwo ways:\n\nCreate a transaction with no fee and wait as long as it takes for it to confirm.\nAggregate several such accounts into a single wallet so you can combine them in a single transaction.\n\nNeither way is likely to be worth the effort though, unless you have a large number of such accounts.\n", "mining pools - Eloipool only public Server avaiable": "\nEloipool & Stratum (Slush) seem to be the only active devs that will support the new ASIC chips and move away from the Getwork method. \nGoing to port an IronPython Version of Stratum :D\nUse this as an educational process & maybe one day get a C# version to support the large body of .NET programmers out there \nThanks to Slush & Luke Jr \n", "signature - ECDSA transaction signing on a smartcard?": "\nYes, there is Smart Card Wallet project, though there seems to be no clear indication on what stage the project currently is.\nThere is also hardware wallet by Slush. It's not smart card based, but works pretty much the same way. Also still in development.\n", "wallet - How can i effectively split large outputs into smaller ones?": "\nThe protocol and the standard client allow you to spend your own unconfirmed change. Multibit didn't allow this, but I believe it's a recently/soon added feature.\nWhen constructing your transaction manually there is little advantage to choosing confirmed outputs.\nIf you do want to split your outputs, you can do it with a sendmany transaction. The Bitcoin-qt GUI allows you to do this (\"Add Recipient\"), which can scale to several outputs. For a larger number of outputs you can generate the command programmatically and issue it with the command line.\nBitcoin-qt does not allow you to pay an address multiple times in the same transaction. There seems to be little justification for that, and it may be possible with the raw transaction API. Alternatively, you can generate several addresses and split the amount between them.\n", "terminology - What are orphaned and stale blocks?": "\nStale blocks:\n\nAt any second, a block may be \"solved.\"  This means that everyone else\n  in the world working on that block must stop, and restart their work. \n  Continuing to work after that point is known as working on a \"stale\n  block\" because it is old data, and old transactions.\n\nMy understanding is the term stale is much more commonly applied to shares when mining in a pool, so you're more likely to hear about stale shares than stale blocks. In this case, the pool probably wouldn't even bother checking whether the share actually solved a block or not.\nOrphaned blocks:\n\nDetached or Orphaned blocks are valid blocks which are not part of the\n  main chain. They can occur naturally when two miners produce blocks at\n  similar times or they can be caused by an attacker (with enough\n  hashing power) attempting to reverse transactions.\n\nMy own understanding is that orphaned blocks are initially accepted by the majority of the network, but are later rejected when proof of a longer blockchain is received that doesn't include that particular block. \nThis means that a user could see a transaction as having one confirmation and then, if a longer blockchain was received that didn't include the transaction, it could change back to 0 confirmations. \n", "development - Is this the proper way to use Bouncy Castle to generate a Bitcoin compatible key?": "\nBelow extract should answer your question.\n\npublic class ECKeyPair implements Key\n{\n    private static final SecureRandom secureRandom = new SecureRandom ();\n    private static final X9ECParameters curve = SECNamedCurves.getByName (\"secp256k1\");\n    private static final ECDomainParameters domain = new ECDomainParameters (curve.getCurve (), curve.getG (), curve.getN (), curve.getH ());\n\n    private BigInteger priv;\n    private byte[] pub;\n    private boolean compressed;\n\n\n    public static ECKeyPair createNew (boolean compressed)\n    {\n        ECKeyPairGenerator generator = new ECKeyPairGenerator ();\n        ECKeyGenerationParameters keygenParams = new ECKeyGenerationParameters (domain, secureRandom);\n        generator.init (keygenParams);\n        AsymmetricCipherKeyPair keypair = generator.generateKeyPair ();\n        ECPrivateKeyParameters privParams = (ECPrivateKeyParameters) keypair.getPrivate ();\n        ECPublicKeyParameters pubParams = (ECPublicKeyParameters) keypair.getPublic ();\n        ECKeyPair k = new ECKeyPair ();\n        k.priv = privParams.getD ();\n        k.compressed = compressed;\n        if ( compressed )\n        {\n            ECPoint q = pubParams.getQ ();\n            k.pub = new ECPoint.Fp (domain.getCurve (), q.getX (), q.getY (), true).getEncoded ();\n        }\n        else\n        {\n            k.pub = pubParams.getQ ().getEncoded ();\n        }\n        return k;\n    }\n\n}\n\nCheck out https://github.com/bitsofproof/supernode for more details.\n", "base58check - What development tests should I do when creating a Base58Checked parser?": "\nI'm using BigInteger in .NET so these tests are unique to this scenario but may be adapted to Java or other languages.\nThe tests I've found helpful is when translating to or from hexadecimal at any intermediate step make sure the data is correct when:\n\nThe first or last byte of the checksum is one or more 0's\nThe first or last byte of the address is one or more 0's\n\nOften times this may cause two's compliment errors depending on the implementation of BigInteger that is being used.  \nI'll run my own version of vanity gen to generate addresses that have these errors and will post them here.\n", "blockchain - Is it possible for a valid block to be added to an invalid one, and have it accepted by another client?": "\nAs every Client verifies each block they receive and reject every Block that is invalid, this situation is rather unlikely to happen. However, if by chance some invalid Block would propagate (such as in case of value overflow bug, or perhaps by being spread by some alternative Clients that don't follow the Protocol to the letter), it would eventually be wiped out of the Block history and orphan all Blocks attached to it. Alternatively, the Protocol could change to accommodate the Block, but that is a lot less likely to happen.\nWhen part of the Block Chain would become invalid, all Transactions contained in it would be re-evaluated - coin generation Transactions would be discarded, all Transactions that spend their outputs would also be invalidated, and all other Transactions that are still valid would be added back to the pool of Transactions to be added to future Blocks. Same thing would happen in case of some Blocks being overwritten with a longer Chain of Blocks.\nAll in all, an invalid Block being accepted as valid and having valid Blocks appended to the Chain after it is a bug. Such cases have happened in the past at least once, and the result has been to fix the bug and erase the invalid Block along with all other Blocks attached to it. All normal Transactions from those Blocks would have to be added again to newly created Blocks and any coin generation Transactions would be invalidated.\n", "block - How can I recover from a corrupted blkindex.dat on Ubuntu 12.10?": "\nOn Linux, the Bitcoin client data is kept in the .bitcoin directory in your home directory. Go to ~/.bitcoin/ and you'll see the files in there. You may need to toggle Show Hidden Files in your file manager in order to see the directory.\nIf you remove blkindex.dat, the client will have to redownload the blockchain. I just tested this locally by moving my copy of the file to another file name temporarily - the client resync'd.\nSince your copy of the index is corrupted apparently, it sounds like you need to delete it and resync.\nA note: be careful to do not erase your wallet.dat. I recommend you back it up before. Your wallet.dat is your private keys.\n", "doublespend - In a given contract, should the \"LockTime\" timestamp include an extra hour for confirmations to prevent a double spend?": "\nThe nLockTime is the earliest time that a miner can include that transaction in a block.  It does not mean the exact time that both parties can assume final settlement has occurred.\nYou are correct to conclude that there is the potential for another transaction (with nLockTime = 0) to be broadcast and be in competition at the same time as the \noriginal nLockTime > 0) transaction.\nBut it wouldn't necessarily be a double spend, as the transaction seen later with the nLockTime = 0 would have had to have been signed by both parties.\nIf a \"double spend\" scenario occurs, it wouldn't be a surprise to either party.\nThe situation can occur where the two parties believe the nLockTime = 0 transaction will be the one confirmed and for whatever reason it doesn't get confirmed fast enough.  Instead then at the original transaction's nLockTime (roughly, as there is a couple hour leeway available to the miner as far as timestamp goes) that transaction confirms and thus the transaction submitted later (where nLockTime = 0) will never confirm.\nSo the normal confirmation level threshold (e.g., six confirmations) still applies to these transactions as far as final settlement goes.\n", "transactions - Can a new wallet receive money that was sent to it before the wallet was created?": "\nYes, it will.\nTo \"receive\" money one should have a private key corresponding to bitcoin address, nothing more. The keys do not bear any information related to their creation date.\nIntrinsically, bitcoin protocol does not have such thing as \"balance\". Blockchain contains only the list of transactions. If you have correct keypair (with public key hashing to destination address) and the transaction output has not already been spent, then you can send this money somewhere. Your \"balance\" is just a sum of all transaction outputs you can spend. When importing new private key in original bitcoin client, it performs blockchain rescan to find out whether this new address has received any coins previously.\n", "Is there a listing of strange or unusual scripts found in transactions?": "\nBlockchain Info has a list of strange transactions that its nodes received but were unable to verify.\n", "development - Are all the *coin networks consistent in which script actions are permitted and disabled?": "\nShort version\nYes.\nLong version\nBitcoin\nThe bitcoin implementation of banned opcodes is in script.cpp:\n        if (opcode == OP_CAT ||\n            opcode == OP_SUBSTR ||\n            opcode == OP_LEFT ||\n            opcode == OP_RIGHT ||\n            opcode == OP_INVERT ||\n            opcode == OP_AND ||\n            opcode == OP_OR ||\n            opcode == OP_XOR ||\n            opcode == OP_2MUL ||\n            opcode == OP_2DIV ||\n            opcode == OP_MUL ||\n            opcode == OP_DIV ||\n            opcode == OP_MOD ||\n            opcode == OP_LSHIFT ||\n            opcode == OP_RSHIFT)\n            return false;\n\nNote that this is not a complete list - OP_NOTEQUAL is also disabled. This code struck me oddly because it appears to create a fork with transactions that use OP_NOTEQUAL. (Perhaps it wasn't being used.)\n                // OP_NOTEQUAL is disabled because it would be too easy to say\n                // something like n != 1 and have some wiseguy pass in 1 with extra\n                // zero bytes after it (numerically, 0x01 == 0x0001 == 0x000001)\n                //if (opcode == OP_NOTEQUAL)\n                //    fEqual = !fEqual;\n\nSource.\nNamecoin\nSame.\nLiteCoin\nSame.\nSolidCoin\nYou didn't ask about it, but it's also the same.\n"}